{
  "version": 3,
  "sources": ["../../../node_modules/unenv/dist/runtime/_internal/utils.mjs", "../../../node_modules/unenv/dist/runtime/node/internal/perf_hooks/performance.mjs", "../../../node_modules/unenv/dist/runtime/node/perf_hooks.mjs", "../../../node_modules/@cloudflare/unenv-preset/dist/runtime/polyfill/performance.mjs", "../../../node_modules/unenv/dist/runtime/mock/noop.mjs", "../../../node_modules/unenv/dist/runtime/node/console.mjs", "../../../node_modules/@cloudflare/unenv-preset/dist/runtime/node/console.mjs", "../../../node_modules/wrangler/_virtual_unenv_global_polyfill-@cloudflare-unenv-preset-node-console", "../../../node_modules/unenv/dist/runtime/node/internal/process/hrtime.mjs", "../../../node_modules/unenv/dist/runtime/node/internal/tty/read-stream.mjs", "../../../node_modules/unenv/dist/runtime/node/internal/tty/write-stream.mjs", "../../../node_modules/unenv/dist/runtime/node/tty.mjs", "../../../node_modules/unenv/dist/runtime/node/internal/process/node-version.mjs", "../../../node_modules/unenv/dist/runtime/node/internal/process/process.mjs", "../../../node_modules/@cloudflare/unenv-preset/dist/runtime/node/process.mjs", "../../../node_modules/wrangler/_virtual_unenv_global_polyfill-@cloudflare-unenv-preset-node-process", "wrangler-modules-watch:wrangler:modules-watch", "../../../node_modules/wrangler/templates/modules-watch-stub.js", "../../../node_modules/dayjs/dayjs.min.js", "../bundle-pQo35v/middleware-loader.entry.ts", "../bundle-pQo35v/middleware-insertion-facade.js", "../../../src/index.ts", "../../../node_modules/hono/dist/index.js", "../../../node_modules/hono/dist/hono.js", "../../../node_modules/hono/dist/hono-base.js", "../../../node_modules/hono/dist/compose.js", "../../../node_modules/hono/dist/context.js", "../../../node_modules/hono/dist/request.js", "../../../node_modules/hono/dist/request/constants.js", "../../../node_modules/hono/dist/utils/body.js", "../../../node_modules/hono/dist/utils/url.js", "../../../node_modules/hono/dist/utils/html.js", "../../../node_modules/hono/dist/router.js", "../../../node_modules/hono/dist/utils/constants.js", "../../../node_modules/hono/dist/router/reg-exp-router/index.js", "../../../node_modules/hono/dist/router/reg-exp-router/router.js", "../../../node_modules/hono/dist/router/reg-exp-router/node.js", "../../../node_modules/hono/dist/router/reg-exp-router/trie.js", "../../../node_modules/hono/dist/router/smart-router/index.js", "../../../node_modules/hono/dist/router/smart-router/router.js", "../../../node_modules/hono/dist/router/trie-router/index.js", "../../../node_modules/hono/dist/router/trie-router/router.js", "../../../node_modules/hono/dist/router/trie-router/node.js", "../../../node_modules/hono/dist/middleware/cors/index.js", "../../../src/lib/db.ts", "../../../src/db/client.ts", "../../../node_modules/src/neon-http/driver.ts", "../../../node_modules/@neondatabase/serverless/index.mjs", "../../../node_modules/src/entity.ts", "../../../node_modules/src/logger.ts", "../../../node_modules/src/pg-core/db.ts", "../../../node_modules/src/pg-core/query-builders/delete.ts", "../../../node_modules/src/query-promise.ts", "../../../node_modules/src/selection-proxy.ts", "../../../node_modules/src/alias.ts", "../../../node_modules/src/column.ts", "../../../node_modules/src/sql/sql.ts", "../../../node_modules/src/pg-core/columns/enum.ts", "../../../node_modules/src/pg-core/columns/common.ts", "../../../node_modules/src/column-builder.ts", "../../../node_modules/src/pg-core/foreign-keys.ts", "../../../node_modules/src/table.utils.ts", "../../../node_modules/src/tracing-utils.ts", "../../../node_modules/src/pg-core/unique-constraint.ts", "../../../node_modules/src/pg-core/utils/array.ts", "../../../node_modules/src/subquery.ts", "../../../node_modules/src/tracing.ts", "../../../node_modules/drizzle-orm/version.js", "../../../node_modules/src/view-common.ts", "../../../node_modules/src/table.ts", "../../../node_modules/src/utils.ts", "../../../node_modules/src/pg-core/utils.ts", "../../../node_modules/src/pg-core/table.ts", "../../../node_modules/src/pg-core/columns/all.ts", "../../../node_modules/src/pg-core/columns/bigint.ts", "../../../node_modules/src/pg-core/columns/int.common.ts", "../../../node_modules/src/pg-core/columns/bigserial.ts", "../../../node_modules/src/pg-core/columns/boolean.ts", "../../../node_modules/src/pg-core/columns/char.ts", "../../../node_modules/src/pg-core/columns/cidr.ts", "../../../node_modules/src/pg-core/columns/custom.ts", "../../../node_modules/src/pg-core/columns/date.ts", "../../../node_modules/src/pg-core/columns/date.common.ts", "../../../node_modules/src/pg-core/columns/double-precision.ts", "../../../node_modules/src/pg-core/columns/inet.ts", "../../../node_modules/src/pg-core/columns/integer.ts", "../../../node_modules/src/pg-core/columns/interval.ts", "../../../node_modules/src/pg-core/columns/json.ts", "../../../node_modules/src/pg-core/columns/jsonb.ts", "../../../node_modules/src/pg-core/columns/line.ts", "../../../node_modules/src/pg-core/columns/macaddr.ts", "../../../node_modules/src/pg-core/columns/macaddr8.ts", "../../../node_modules/src/pg-core/columns/numeric.ts", "../../../node_modules/src/pg-core/columns/point.ts", "../../../node_modules/src/pg-core/columns/postgis_extension/geometry.ts", "../../../node_modules/src/pg-core/columns/postgis_extension/utils.ts", "../../../node_modules/src/pg-core/columns/real.ts", "../../../node_modules/src/pg-core/columns/serial.ts", "../../../node_modules/src/pg-core/columns/smallint.ts", "../../../node_modules/src/pg-core/columns/smallserial.ts", "../../../node_modules/src/pg-core/columns/text.ts", "../../../node_modules/src/pg-core/columns/time.ts", "../../../node_modules/src/pg-core/columns/timestamp.ts", "../../../node_modules/src/pg-core/columns/uuid.ts", "../../../node_modules/src/pg-core/columns/varchar.ts", "../../../node_modules/src/pg-core/columns/vector_extension/bit.ts", "../../../node_modules/src/pg-core/columns/vector_extension/halfvec.ts", "../../../node_modules/src/pg-core/columns/vector_extension/sparsevec.ts", "../../../node_modules/src/pg-core/columns/vector_extension/vector.ts", "../../../node_modules/src/pg-core/indexes.ts", "../../../node_modules/src/pg-core/primary-keys.ts", "../../../node_modules/src/pg-core/query-builders/query-builder.ts", "../../../node_modules/src/pg-core/dialect.ts", "../../../node_modules/src/casing.ts", "../../../node_modules/src/errors.ts", "../../../node_modules/src/relations.ts", "../../../node_modules/src/sql/expressions/conditions.ts", "../../../node_modules/src/sql/expressions/select.ts", "../../../node_modules/src/pg-core/view-base.ts", "../../../node_modules/src/pg-core/query-builders/select.ts", "../../../node_modules/src/query-builders/query-builder.ts", "../../../node_modules/src/pg-core/query-builders/insert.ts", "../../../node_modules/src/pg-core/query-builders/refresh-materialized-view.ts", "../../../node_modules/src/pg-core/query-builders/update.ts", "../../../node_modules/src/pg-core/query-builders/count.ts", "../../../node_modules/src/pg-core/query-builders/query.ts", "../../../node_modules/src/pg-core/query-builders/raw.ts", "../../../node_modules/src/neon-http/session.ts", "../../../node_modules/src/cache/core/cache.ts", "../../../node_modules/src/pg-core/session.ts", "../../../src/routes/auth.ts", "../../../node_modules/bcryptjs/index.js", "../../../node_modules/zod/index.js", "../../../node_modules/zod/v4/classic/external.js", "../../../node_modules/zod/v4/core/index.js", "../../../node_modules/zod/v4/core/core.js", "../../../node_modules/zod/v4/core/parse.js", "../../../node_modules/zod/v4/core/errors.js", "../../../node_modules/zod/v4/core/util.js", "../../../node_modules/zod/v4/core/schemas.js", "../../../node_modules/zod/v4/core/checks.js", "../../../node_modules/zod/v4/core/regexes.js", "../../../node_modules/zod/v4/core/doc.js", "../../../node_modules/zod/v4/core/versions.js", "../../../node_modules/zod/v4/locales/index.js", "../../../node_modules/zod/v4/locales/ar.js", "../../../node_modules/zod/v4/locales/az.js", "../../../node_modules/zod/v4/locales/be.js", "../../../node_modules/zod/v4/locales/ca.js", "../../../node_modules/zod/v4/locales/cs.js", "../../../node_modules/zod/v4/locales/da.js", "../../../node_modules/zod/v4/locales/de.js", "../../../node_modules/zod/v4/locales/en.js", "../../../node_modules/zod/v4/locales/eo.js", "../../../node_modules/zod/v4/locales/es.js", "../../../node_modules/zod/v4/locales/fa.js", "../../../node_modules/zod/v4/locales/fi.js", "../../../node_modules/zod/v4/locales/fr.js", "../../../node_modules/zod/v4/locales/fr-CA.js", "../../../node_modules/zod/v4/locales/he.js", "../../../node_modules/zod/v4/locales/hu.js", "../../../node_modules/zod/v4/locales/id.js", "../../../node_modules/zod/v4/locales/is.js", "../../../node_modules/zod/v4/locales/it.js", "../../../node_modules/zod/v4/locales/ja.js", "../../../node_modules/zod/v4/locales/ka.js", "../../../node_modules/zod/v4/locales/kh.js", "../../../node_modules/zod/v4/locales/km.js", "../../../node_modules/zod/v4/locales/ko.js", "../../../node_modules/zod/v4/locales/lt.js", "../../../node_modules/zod/v4/locales/mk.js", "../../../node_modules/zod/v4/locales/ms.js", "../../../node_modules/zod/v4/locales/nl.js", "../../../node_modules/zod/v4/locales/no.js", "../../../node_modules/zod/v4/locales/ota.js", "../../../node_modules/zod/v4/locales/ps.js", "../../../node_modules/zod/v4/locales/pl.js", "../../../node_modules/zod/v4/locales/pt.js", "../../../node_modules/zod/v4/locales/ru.js", "../../../node_modules/zod/v4/locales/sl.js", "../../../node_modules/zod/v4/locales/sv.js", "../../../node_modules/zod/v4/locales/ta.js", "../../../node_modules/zod/v4/locales/th.js", "../../../node_modules/zod/v4/locales/tr.js", "../../../node_modules/zod/v4/locales/ua.js", "../../../node_modules/zod/v4/locales/uk.js", "../../../node_modules/zod/v4/locales/ur.js", "../../../node_modules/zod/v4/locales/vi.js", "../../../node_modules/zod/v4/locales/zh-CN.js", "../../../node_modules/zod/v4/locales/zh-TW.js", "../../../node_modules/zod/v4/locales/yo.js", "../../../node_modules/zod/v4/core/registries.js", "../../../node_modules/zod/v4/core/api.js", "../../../node_modules/zod/v4/core/to-json-schema.js", "../../../node_modules/zod/v4/core/json-schema.js", "../../../node_modules/zod/v4/classic/schemas.js", "../../../node_modules/zod/v4/classic/checks.js", "../../../node_modules/zod/v4/classic/iso.js", "../../../node_modules/zod/v4/classic/parse.js", "../../../node_modules/zod/v4/classic/errors.js", "../../../node_modules/zod/v4/classic/compat.js", "../../../node_modules/zod/v4/classic/coerce.js", "../../../src/db/tables/users.ts", "../../../src/db/tables/roles.ts", "../../../src/db/tables/userRoles.ts", "../../../src/db/tables/passwordResetTokens.ts", "../../../src/lib/mail.ts", "../../../src/lib/jwt.ts", "../../../node_modules/jose/dist/webapi/index.js", "../../../node_modules/jose/dist/webapi/util/base64url.js", "../../../node_modules/jose/dist/webapi/lib/buffer_utils.js", "../../../node_modules/jose/dist/webapi/lib/base64.js", "../../../node_modules/jose/dist/webapi/util/errors.js", "../../../node_modules/jose/dist/webapi/lib/crypto_key.js", "../../../node_modules/jose/dist/webapi/lib/invalid_key_input.js", "../../../node_modules/jose/dist/webapi/lib/is_key_like.js", "../../../node_modules/jose/dist/webapi/lib/is_disjoint.js", "../../../node_modules/jose/dist/webapi/lib/is_object.js", "../../../node_modules/jose/dist/webapi/lib/check_key_length.js", "../../../node_modules/jose/dist/webapi/lib/jwk_to_key.js", "../../../node_modules/jose/dist/webapi/lib/validate_crit.js", "../../../node_modules/jose/dist/webapi/lib/validate_algorithms.js", "../../../node_modules/jose/dist/webapi/lib/normalize_key.js", "../../../node_modules/jose/dist/webapi/lib/is_jwk.js", "../../../node_modules/jose/dist/webapi/lib/check_key_type.js", "../../../node_modules/jose/dist/webapi/jws/compact/verify.js", "../../../node_modules/jose/dist/webapi/jws/flattened/verify.js", "../../../node_modules/jose/dist/webapi/lib/verify.js", "../../../node_modules/jose/dist/webapi/lib/subtle_dsa.js", "../../../node_modules/jose/dist/webapi/lib/get_sign_verify_key.js", "../../../node_modules/jose/dist/webapi/jwt/verify.js", "../../../node_modules/jose/dist/webapi/lib/jwt_claims_set.js", "../../../node_modules/jose/dist/webapi/lib/epoch.js", "../../../node_modules/jose/dist/webapi/lib/secs.js", "../../../node_modules/jose/dist/webapi/jws/compact/sign.js", "../../../node_modules/jose/dist/webapi/jws/flattened/sign.js", "../../../node_modules/jose/dist/webapi/lib/sign.js", "../../../node_modules/jose/dist/webapi/jwt/sign.js", "../../../src/mw/requireAuth.ts", "../../../src/routes/users.ts", "../../../src/lib/auth.ts", "../../../src/routes/passwordReset.ts", "../../../src/services/passwordReset.ts", "../../../src/db/index.ts", "../../../src/db/tables/empresas.ts", "../../../src/routes/dbping.ts", "../../../node_modules/wrangler/templates/middleware/middleware-ensure-req-body-drained.ts", "../../../node_modules/wrangler/templates/middleware/middleware-miniflare3-json-error.ts", "../../../node_modules/wrangler/templates/middleware/common.ts"],
  "sourceRoot": "C:\\Projetos\\CursoDoSistema\\CursoBackend\\.wrangler\\tmp\\dev-p2maGS",
  "sourcesContent": ["/* @__NO_SIDE_EFFECTS__ */\r\nexport function rawHeaders(headers) {\r\n\tconst rawHeaders = [];\r\n\tfor (const key in headers) {\r\n\t\tif (Array.isArray(headers[key])) {\r\n\t\t\tfor (const h of headers[key]) {\r\n\t\t\t\trawHeaders.push(key, h);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\trawHeaders.push(key, headers[key]);\r\n\t\t}\r\n\t}\r\n\treturn rawHeaders;\r\n}\r\n/* @__NO_SIDE_EFFECTS__ */\r\nexport function mergeFns(...functions) {\r\n\treturn function(...args) {\r\n\t\tfor (const fn of functions) {\r\n\t\t\tfn(...args);\r\n\t\t}\r\n\t};\r\n}\r\n/* @__NO_SIDE_EFFECTS__ */\r\nexport function createNotImplementedError(name) {\r\n\treturn new Error(`[unenv] ${name} is not implemented yet!`);\r\n}\r\n/* @__NO_SIDE_EFFECTS__ */\r\nexport function notImplemented(name) {\r\n\tconst fn = () => {\r\n\t\tthrow createNotImplementedError(name);\r\n\t};\r\n\treturn Object.assign(fn, { __unenv__: true });\r\n}\r\n/* @__NO_SIDE_EFFECTS__ */\r\nexport function notImplementedAsync(name) {\r\n\tconst fn = notImplemented(name);\r\n\tfn.__promisify__ = () => notImplemented(name + \".__promisify__\");\r\n\tfn.native = fn;\r\n\treturn fn;\r\n}\r\n/* @__NO_SIDE_EFFECTS__ */\r\nexport function notImplementedClass(name) {\r\n\treturn class {\r\n\t\t__unenv__ = true;\r\n\t\tconstructor() {\r\n\t\t\tthrow new Error(`[unenv] ${name} is not implemented yet!`);\r\n\t\t}\r\n\t};\r\n}\r\n", "import { createNotImplementedError } from \"../../../_internal/utils.mjs\";\r\nconst _timeOrigin = globalThis.performance?.timeOrigin ?? Date.now();\r\nconst _performanceNow = globalThis.performance?.now ? globalThis.performance.now.bind(globalThis.performance) : () => Date.now() - _timeOrigin;\r\nconst nodeTiming = {\r\n\tname: \"node\",\r\n\tentryType: \"node\",\r\n\tstartTime: 0,\r\n\tduration: 0,\r\n\tnodeStart: 0,\r\n\tv8Start: 0,\r\n\tbootstrapComplete: 0,\r\n\tenvironment: 0,\r\n\tloopStart: 0,\r\n\tloopExit: 0,\r\n\tidleTime: 0,\r\n\tuvMetricsInfo: {\r\n\t\tloopCount: 0,\r\n\t\tevents: 0,\r\n\t\teventsWaiting: 0\r\n\t},\r\n\tdetail: undefined,\r\n\ttoJSON() {\r\n\t\treturn this;\r\n\t}\r\n};\r\n// PerformanceEntry\r\nexport class PerformanceEntry {\r\n\t__unenv__ = true;\r\n\tdetail;\r\n\tentryType = \"event\";\r\n\tname;\r\n\tstartTime;\r\n\tconstructor(name, options) {\r\n\t\tthis.name = name;\r\n\t\tthis.startTime = options?.startTime || _performanceNow();\r\n\t\tthis.detail = options?.detail;\r\n\t}\r\n\tget duration() {\r\n\t\treturn _performanceNow() - this.startTime;\r\n\t}\r\n\ttoJSON() {\r\n\t\treturn {\r\n\t\t\tname: this.name,\r\n\t\t\tentryType: this.entryType,\r\n\t\t\tstartTime: this.startTime,\r\n\t\t\tduration: this.duration,\r\n\t\t\tdetail: this.detail\r\n\t\t};\r\n\t}\r\n}\r\n// PerformanceMark\r\nexport const PerformanceMark = class PerformanceMark extends PerformanceEntry {\r\n\tentryType = \"mark\";\r\n\tconstructor() {\r\n\t\t// @ts-ignore\r\n\t\tsuper(...arguments);\r\n\t}\r\n\tget duration() {\r\n\t\treturn 0;\r\n\t}\r\n};\r\n// PerformanceMark\r\nexport class PerformanceMeasure extends PerformanceEntry {\r\n\tentryType = \"measure\";\r\n}\r\n// PerformanceResourceTiming\r\nexport class PerformanceResourceTiming extends PerformanceEntry {\r\n\tentryType = \"resource\";\r\n\tserverTiming = [];\r\n\tconnectEnd = 0;\r\n\tconnectStart = 0;\r\n\tdecodedBodySize = 0;\r\n\tdomainLookupEnd = 0;\r\n\tdomainLookupStart = 0;\r\n\tencodedBodySize = 0;\r\n\tfetchStart = 0;\r\n\tinitiatorType = \"\";\r\n\tname = \"\";\r\n\tnextHopProtocol = \"\";\r\n\tredirectEnd = 0;\r\n\tredirectStart = 0;\r\n\trequestStart = 0;\r\n\tresponseEnd = 0;\r\n\tresponseStart = 0;\r\n\tsecureConnectionStart = 0;\r\n\tstartTime = 0;\r\n\ttransferSize = 0;\r\n\tworkerStart = 0;\r\n\tresponseStatus = 0;\r\n}\r\n// PerformanceObserverEntryList\r\nexport class PerformanceObserverEntryList {\r\n\t__unenv__ = true;\r\n\tgetEntries() {\r\n\t\treturn [];\r\n\t}\r\n\tgetEntriesByName(_name, _type) {\r\n\t\treturn [];\r\n\t}\r\n\tgetEntriesByType(type) {\r\n\t\treturn [];\r\n\t}\r\n}\r\n// Performance\r\nexport class Performance {\r\n\t__unenv__ = true;\r\n\ttimeOrigin = _timeOrigin;\r\n\teventCounts = new Map();\r\n\t_entries = [];\r\n\t_resourceTimingBufferSize = 0;\r\n\tnavigation = undefined;\r\n\ttiming = undefined;\r\n\ttimerify(_fn, _options) {\r\n\t\tthrow createNotImplementedError(\"Performance.timerify\");\r\n\t}\r\n\tget nodeTiming() {\r\n\t\treturn nodeTiming;\r\n\t}\r\n\teventLoopUtilization() {\r\n\t\treturn {};\r\n\t}\r\n\tmarkResourceTiming() {\r\n\t\t// TODO: create a new PerformanceResourceTiming entry\r\n\t\t// so that performance.getEntries, getEntriesByName, and getEntriesByType return it\r\n\t\t// see: https://nodejs.org/api/perf_hooks.html#performancemarkresourcetimingtiminginfo-requestedurl-initiatortype-global-cachemode-bodyinfo-responsestatus-deliverytype\r\n\t\treturn new PerformanceResourceTiming(\"\");\r\n\t}\r\n\tonresourcetimingbufferfull = null;\r\n\tnow() {\r\n\t\t// https://developer.mozilla.org/en-US/docs/Web/API/Performance/now\r\n\t\tif (this.timeOrigin === _timeOrigin) {\r\n\t\t\treturn _performanceNow();\r\n\t\t}\r\n\t\treturn Date.now() - this.timeOrigin;\r\n\t}\r\n\tclearMarks(markName) {\r\n\t\tthis._entries = markName ? this._entries.filter((e) => e.name !== markName) : this._entries.filter((e) => e.entryType !== \"mark\");\r\n\t}\r\n\tclearMeasures(measureName) {\r\n\t\tthis._entries = measureName ? this._entries.filter((e) => e.name !== measureName) : this._entries.filter((e) => e.entryType !== \"measure\");\r\n\t}\r\n\tclearResourceTimings() {\r\n\t\tthis._entries = this._entries.filter((e) => e.entryType !== \"resource\" || e.entryType !== \"navigation\");\r\n\t}\r\n\tgetEntries() {\r\n\t\treturn this._entries;\r\n\t}\r\n\tgetEntriesByName(name, type) {\r\n\t\treturn this._entries.filter((e) => e.name === name && (!type || e.entryType === type));\r\n\t}\r\n\tgetEntriesByType(type) {\r\n\t\treturn this._entries.filter((e) => e.entryType === type);\r\n\t}\r\n\tmark(name, options) {\r\n\t\t// @ts-expect-error constructor is not protected\r\n\t\tconst entry = new PerformanceMark(name, options);\r\n\t\tthis._entries.push(entry);\r\n\t\treturn entry;\r\n\t}\r\n\tmeasure(measureName, startOrMeasureOptions, endMark) {\r\n\t\tlet start;\r\n\t\tlet end;\r\n\t\tif (typeof startOrMeasureOptions === \"string\") {\r\n\t\t\tstart = this.getEntriesByName(startOrMeasureOptions, \"mark\")[0]?.startTime;\r\n\t\t\tend = this.getEntriesByName(endMark, \"mark\")[0]?.startTime;\r\n\t\t} else {\r\n\t\t\tstart = Number.parseFloat(startOrMeasureOptions?.start) || this.now();\r\n\t\t\tend = Number.parseFloat(startOrMeasureOptions?.end) || this.now();\r\n\t\t}\r\n\t\tconst entry = new PerformanceMeasure(measureName, {\r\n\t\t\tstartTime: start,\r\n\t\t\tdetail: {\r\n\t\t\t\tstart,\r\n\t\t\t\tend\r\n\t\t\t}\r\n\t\t});\r\n\t\tthis._entries.push(entry);\r\n\t\treturn entry;\r\n\t}\r\n\tsetResourceTimingBufferSize(maxSize) {\r\n\t\tthis._resourceTimingBufferSize = maxSize;\r\n\t}\r\n\taddEventListener(type, listener, options) {\r\n\t\tthrow createNotImplementedError(\"Performance.addEventListener\");\r\n\t}\r\n\tremoveEventListener(type, listener, options) {\r\n\t\tthrow createNotImplementedError(\"Performance.removeEventListener\");\r\n\t}\r\n\tdispatchEvent(event) {\r\n\t\tthrow createNotImplementedError(\"Performance.dispatchEvent\");\r\n\t}\r\n\ttoJSON() {\r\n\t\treturn this;\r\n\t}\r\n}\r\n// PerformanceObserver\r\nexport class PerformanceObserver {\r\n\t__unenv__ = true;\r\n\tstatic supportedEntryTypes = [];\r\n\t_callback = null;\r\n\tconstructor(callback) {\r\n\t\tthis._callback = callback;\r\n\t}\r\n\ttakeRecords() {\r\n\t\treturn [];\r\n\t}\r\n\tdisconnect() {\r\n\t\tthrow createNotImplementedError(\"PerformanceObserver.disconnect\");\r\n\t}\r\n\tobserve(options) {\r\n\t\tthrow createNotImplementedError(\"PerformanceObserver.observe\");\r\n\t}\r\n\tbind(fn) {\r\n\t\treturn fn;\r\n\t}\r\n\trunInAsyncScope(fn, thisArg, ...args) {\r\n\t\treturn fn.call(thisArg, ...args);\r\n\t}\r\n\tasyncId() {\r\n\t\treturn 0;\r\n\t}\r\n\ttriggerAsyncId() {\r\n\t\treturn 0;\r\n\t}\r\n\temitDestroy() {\r\n\t\treturn this;\r\n\t}\r\n}\r\n// workerd implements a subset of globalThis.performance (as of last check, only timeOrigin set to 0 + now() implemented)\r\n// We already use performance.now() from globalThis.performance, if provided (see top of this file)\r\n// If we detect this condition, we can just use polyfill instead.\r\nexport const performance = globalThis.performance && \"addEventListener\" in globalThis.performance ? globalThis.performance : new Performance();\r\n", "import { IntervalHistogram, RecordableHistogram } from \"./internal/perf_hooks/histogram.mjs\";\r\nimport { performance, Performance, PerformanceEntry, PerformanceMark, PerformanceMeasure, PerformanceObserverEntryList, PerformanceObserver, PerformanceResourceTiming } from \"./internal/perf_hooks/performance.mjs\";\r\nexport * from \"./internal/perf_hooks/performance.mjs\";\r\n// prettier-ignore\r\nimport { NODE_PERFORMANCE_GC_MAJOR, NODE_PERFORMANCE_GC_MINOR, NODE_PERFORMANCE_GC_INCREMENTAL, NODE_PERFORMANCE_GC_WEAKCB, NODE_PERFORMANCE_GC_FLAGS_NO, NODE_PERFORMANCE_GC_FLAGS_CONSTRUCT_RETAINED, NODE_PERFORMANCE_GC_FLAGS_FORCED, NODE_PERFORMANCE_GC_FLAGS_SYNCHRONOUS_PHANTOM_PROCESSING, NODE_PERFORMANCE_GC_FLAGS_ALL_AVAILABLE_GARBAGE, NODE_PERFORMANCE_GC_FLAGS_ALL_EXTERNAL_MEMORY, NODE_PERFORMANCE_GC_FLAGS_SCHEDULE_IDLE, NODE_PERFORMANCE_ENTRY_TYPE_GC, NODE_PERFORMANCE_ENTRY_TYPE_HTTP, NODE_PERFORMANCE_ENTRY_TYPE_HTTP2, NODE_PERFORMANCE_ENTRY_TYPE_NET, NODE_PERFORMANCE_ENTRY_TYPE_DNS, NODE_PERFORMANCE_MILESTONE_TIME_ORIGIN_TIMESTAMP, NODE_PERFORMANCE_MILESTONE_TIME_ORIGIN, NODE_PERFORMANCE_MILESTONE_ENVIRONMENT, NODE_PERFORMANCE_MILESTONE_NODE_START, NODE_PERFORMANCE_MILESTONE_V8_START, NODE_PERFORMANCE_MILESTONE_LOOP_START, NODE_PERFORMANCE_MILESTONE_LOOP_EXIT, NODE_PERFORMANCE_MILESTONE_BOOTSTRAP_COMPLETE } from \"./internal/perf_hooks/constants.mjs\";\r\n// prettier-ignore\r\nexport const constants = {\r\n\tNODE_PERFORMANCE_GC_MAJOR,\r\n\tNODE_PERFORMANCE_GC_MINOR,\r\n\tNODE_PERFORMANCE_GC_INCREMENTAL,\r\n\tNODE_PERFORMANCE_GC_WEAKCB,\r\n\tNODE_PERFORMANCE_GC_FLAGS_NO,\r\n\tNODE_PERFORMANCE_GC_FLAGS_CONSTRUCT_RETAINED,\r\n\tNODE_PERFORMANCE_GC_FLAGS_FORCED,\r\n\tNODE_PERFORMANCE_GC_FLAGS_SYNCHRONOUS_PHANTOM_PROCESSING,\r\n\tNODE_PERFORMANCE_GC_FLAGS_ALL_AVAILABLE_GARBAGE,\r\n\tNODE_PERFORMANCE_GC_FLAGS_ALL_EXTERNAL_MEMORY,\r\n\tNODE_PERFORMANCE_GC_FLAGS_SCHEDULE_IDLE,\r\n\tNODE_PERFORMANCE_ENTRY_TYPE_GC,\r\n\tNODE_PERFORMANCE_ENTRY_TYPE_HTTP,\r\n\tNODE_PERFORMANCE_ENTRY_TYPE_HTTP2,\r\n\tNODE_PERFORMANCE_ENTRY_TYPE_NET,\r\n\tNODE_PERFORMANCE_ENTRY_TYPE_DNS,\r\n\tNODE_PERFORMANCE_MILESTONE_TIME_ORIGIN_TIMESTAMP,\r\n\tNODE_PERFORMANCE_MILESTONE_TIME_ORIGIN,\r\n\tNODE_PERFORMANCE_MILESTONE_ENVIRONMENT,\r\n\tNODE_PERFORMANCE_MILESTONE_NODE_START,\r\n\tNODE_PERFORMANCE_MILESTONE_V8_START,\r\n\tNODE_PERFORMANCE_MILESTONE_LOOP_START,\r\n\tNODE_PERFORMANCE_MILESTONE_LOOP_EXIT,\r\n\tNODE_PERFORMANCE_MILESTONE_BOOTSTRAP_COMPLETE\r\n};\r\nexport const monitorEventLoopDelay = function(_options) {\r\n\treturn new IntervalHistogram();\r\n};\r\nexport const createHistogram = function(_options) {\r\n\treturn new RecordableHistogram();\r\n};\r\nexport default {\r\n\tPerformance,\r\n\tPerformanceMark,\r\n\tPerformanceEntry,\r\n\tPerformanceMeasure,\r\n\tPerformanceObserverEntryList,\r\n\tPerformanceObserver,\r\n\tPerformanceResourceTiming,\r\n\tperformance,\r\n\tconstants,\r\n\tcreateHistogram,\r\n\tmonitorEventLoopDelay\r\n};\r\n", "import {\r\n  performance,\r\n  Performance,\r\n  PerformanceEntry,\r\n  PerformanceMark,\r\n  PerformanceMeasure,\r\n  PerformanceObserver,\r\n  PerformanceObserverEntryList,\r\n  PerformanceResourceTiming\r\n} from \"node:perf_hooks\";\r\nglobalThis.performance = performance;\r\nglobalThis.Performance = Performance;\r\nglobalThis.PerformanceEntry = PerformanceEntry;\r\nglobalThis.PerformanceMark = PerformanceMark;\r\nglobalThis.PerformanceMeasure = PerformanceMeasure;\r\nglobalThis.PerformanceObserver = PerformanceObserver;\r\nglobalThis.PerformanceObserverEntryList = PerformanceObserverEntryList;\r\nglobalThis.PerformanceResourceTiming = PerformanceResourceTiming;\r\n", "export default Object.assign(() => {}, { __unenv__: true });\r\n", "import { Writable } from \"node:stream\";\r\nimport noop from \"../mock/noop.mjs\";\r\nimport { notImplemented, notImplementedClass } from \"../_internal/utils.mjs\";\r\nconst _console = globalThis.console;\r\n// undocumented public APIs\r\nexport const _ignoreErrors = true;\r\nexport const _stderr = new Writable();\r\nexport const _stdout = new Writable();\r\nexport const log = _console?.log ?? noop;\r\nexport const info = _console?.info ?? log;\r\nexport const trace = _console?.trace ?? info;\r\nexport const debug = _console?.debug ?? log;\r\nexport const table = _console?.table ?? log;\r\nexport const error = _console?.error ?? log;\r\nexport const warn = _console?.warn ?? error;\r\n// https://developer.chrome.com/docs/devtools/console/api#createtask\r\nexport const createTask = _console?.createTask ?? /* @__PURE__ */ notImplemented(\"console.createTask\");\r\nexport const assert = /* @__PURE__ */ notImplemented(\"console.assert\");\r\n// noop\r\nexport const clear = _console?.clear ?? noop;\r\nexport const count = _console?.count ?? noop;\r\nexport const countReset = _console?.countReset ?? noop;\r\nexport const dir = _console?.dir ?? noop;\r\nexport const dirxml = _console?.dirxml ?? noop;\r\nexport const group = _console?.group ?? noop;\r\nexport const groupEnd = _console?.groupEnd ?? noop;\r\nexport const groupCollapsed = _console?.groupCollapsed ?? noop;\r\nexport const profile = _console?.profile ?? noop;\r\nexport const profileEnd = _console?.profileEnd ?? noop;\r\nexport const time = _console?.time ?? noop;\r\nexport const timeEnd = _console?.timeEnd ?? noop;\r\nexport const timeLog = _console?.timeLog ?? noop;\r\nexport const timeStamp = _console?.timeStamp ?? noop;\r\nexport const Console = _console?.Console ?? /* @__PURE__ */ notImplementedClass(\"console.Console\");\r\nexport const _times = /* @__PURE__ */ new Map();\r\nexport function context() {\r\n\t// TODO: Should be Console with all the methods\r\n\treturn _console;\r\n}\r\nexport const _stdoutErrorHandler = noop;\r\nexport const _stderrErrorHandler = noop;\r\nexport default {\r\n\t_times,\r\n\t_ignoreErrors,\r\n\t_stdoutErrorHandler,\r\n\t_stderrErrorHandler,\r\n\t_stdout,\r\n\t_stderr,\r\n\tassert,\r\n\tclear,\r\n\tConsole,\r\n\tcount,\r\n\tcountReset,\r\n\tdebug,\r\n\tdir,\r\n\tdirxml,\r\n\terror,\r\n\tcontext,\r\n\tcreateTask,\r\n\tgroup,\r\n\tgroupEnd,\r\n\tgroupCollapsed,\r\n\tinfo,\r\n\tlog,\r\n\tprofile,\r\n\tprofileEnd,\r\n\ttable,\r\n\ttime,\r\n\ttimeEnd,\r\n\ttimeLog,\r\n\ttimeStamp,\r\n\ttrace,\r\n\twarn\r\n};\r\n", "import {\r\n  _ignoreErrors,\r\n  _stderr,\r\n  _stderrErrorHandler,\r\n  _stdout,\r\n  _stdoutErrorHandler,\r\n  _times,\r\n  Console\r\n} from \"unenv/node/console\";\r\nexport {\r\n  Console,\r\n  _ignoreErrors,\r\n  _stderr,\r\n  _stderrErrorHandler,\r\n  _stdout,\r\n  _stdoutErrorHandler,\r\n  _times\r\n} from \"unenv/node/console\";\r\nconst workerdConsole = globalThis[\"console\"];\r\nexport const {\r\n  assert,\r\n  clear,\r\n  // @ts-expect-error undocumented public API\r\n  context,\r\n  count,\r\n  countReset,\r\n  // @ts-expect-error undocumented public API\r\n  createTask,\r\n  debug,\r\n  dir,\r\n  dirxml,\r\n  error,\r\n  group,\r\n  groupCollapsed,\r\n  groupEnd,\r\n  info,\r\n  log,\r\n  profile,\r\n  profileEnd,\r\n  table,\r\n  time,\r\n  timeEnd,\r\n  timeLog,\r\n  timeStamp,\r\n  trace,\r\n  warn\r\n} = workerdConsole;\r\nObject.assign(workerdConsole, {\r\n  Console,\r\n  _ignoreErrors,\r\n  _stderr,\r\n  _stderrErrorHandler,\r\n  _stdout,\r\n  _stdoutErrorHandler,\r\n  _times\r\n});\r\nexport default workerdConsole;\r\n", "import { default as defaultExport } from \"@cloudflare/unenv-preset/node/console\";\nglobalThis.console = defaultExport;", "// https://nodejs.org/api/process.html#processhrtime\r\nexport const hrtime = /* @__PURE__ */ Object.assign(function hrtime(startTime) {\r\n\tconst now = Date.now();\r\n\t// millis to seconds\r\n\tconst seconds = Math.trunc(now / 1e3);\r\n\t// convert millis to nanos\r\n\tconst nanos = now % 1e3 * 1e6;\r\n\tif (startTime) {\r\n\t\tlet diffSeconds = seconds - startTime[0];\r\n\t\tlet diffNanos = nanos - startTime[0];\r\n\t\tif (diffNanos < 0) {\r\n\t\t\tdiffSeconds = diffSeconds - 1;\r\n\t\t\tdiffNanos = 1e9 + diffNanos;\r\n\t\t}\r\n\t\treturn [diffSeconds, diffNanos];\r\n\t}\r\n\treturn [seconds, nanos];\r\n}, { bigint: function bigint() {\r\n\t// Convert milliseconds to nanoseconds\r\n\treturn BigInt(Date.now() * 1e6);\r\n} });\r\n", "export class ReadStream {\r\n\tfd;\r\n\tisRaw = false;\r\n\tisTTY = false;\r\n\tconstructor(fd) {\r\n\t\tthis.fd = fd;\r\n\t}\r\n\tsetRawMode(mode) {\r\n\t\tthis.isRaw = mode;\r\n\t\treturn this;\r\n\t}\r\n}\r\n", "export class WriteStream {\r\n\tfd;\r\n\tcolumns = 80;\r\n\trows = 24;\r\n\tisTTY = false;\r\n\tconstructor(fd) {\r\n\t\tthis.fd = fd;\r\n\t}\r\n\tclearLine(dir, callback) {\r\n\t\tcallback && callback();\r\n\t\treturn false;\r\n\t}\r\n\tclearScreenDown(callback) {\r\n\t\tcallback && callback();\r\n\t\treturn false;\r\n\t}\r\n\tcursorTo(x, y, callback) {\r\n\t\tcallback && typeof callback === \"function\" && callback();\r\n\t\treturn false;\r\n\t}\r\n\tmoveCursor(dx, dy, callback) {\r\n\t\tcallback && callback();\r\n\t\treturn false;\r\n\t}\r\n\tgetColorDepth(env) {\r\n\t\treturn 1;\r\n\t}\r\n\thasColors(count, env) {\r\n\t\treturn false;\r\n\t}\r\n\tgetWindowSize() {\r\n\t\treturn [this.columns, this.rows];\r\n\t}\r\n\twrite(str, encoding, cb) {\r\n\t\tif (str instanceof Uint8Array) {\r\n\t\t\tstr = new TextDecoder().decode(str);\r\n\t\t}\r\n\t\ttry {\r\n\t\t\tconsole.log(str);\r\n\t\t} catch {}\r\n\t\tcb && typeof cb === \"function\" && cb();\r\n\t\treturn false;\r\n\t}\r\n}\r\n", "import { ReadStream } from \"./internal/tty/read-stream.mjs\";\r\nimport { WriteStream } from \"./internal/tty/write-stream.mjs\";\r\nexport { ReadStream } from \"./internal/tty/read-stream.mjs\";\r\nexport { WriteStream } from \"./internal/tty/write-stream.mjs\";\r\nexport const isatty = function() {\r\n\treturn false;\r\n};\r\nexport default {\r\n\tReadStream,\r\n\tWriteStream,\r\n\tisatty\r\n};\r\n", "// Extracted from .nvmrc\r\nexport const NODE_VERSION = \"22.14.0\";\r\n", "import { EventEmitter } from \"node:events\";\r\nimport { ReadStream, WriteStream } from \"node:tty\";\r\nimport { notImplemented, createNotImplementedError } from \"../../../_internal/utils.mjs\";\r\n// node-version.ts is generated at build time\r\nimport { NODE_VERSION } from \"./node-version.mjs\";\r\nexport class Process extends EventEmitter {\r\n\tenv;\r\n\thrtime;\r\n\tnextTick;\r\n\tconstructor(impl) {\r\n\t\tsuper();\r\n\t\tthis.env = impl.env;\r\n\t\tthis.hrtime = impl.hrtime;\r\n\t\tthis.nextTick = impl.nextTick;\r\n\t\tfor (const prop of [...Object.getOwnPropertyNames(Process.prototype), ...Object.getOwnPropertyNames(EventEmitter.prototype)]) {\r\n\t\t\tconst value = this[prop];\r\n\t\t\tif (typeof value === \"function\") {\r\n\t\t\t\tthis[prop] = value.bind(this);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t// --- event emitter ---\r\n\temitWarning(warning, type, code) {\r\n\t\tconsole.warn(`${code ? `[${code}] ` : \"\"}${type ? `${type}: ` : \"\"}${warning}`);\r\n\t}\r\n\temit(...args) {\r\n\t\t// @ts-ignore\r\n\t\treturn super.emit(...args);\r\n\t}\r\n\tlisteners(eventName) {\r\n\t\treturn super.listeners(eventName);\r\n\t}\r\n\t// --- stdio (lazy initializers) ---\r\n\t#stdin;\r\n\t#stdout;\r\n\t#stderr;\r\n\tget stdin() {\r\n\t\treturn this.#stdin ??= new ReadStream(0);\r\n\t}\r\n\tget stdout() {\r\n\t\treturn this.#stdout ??= new WriteStream(1);\r\n\t}\r\n\tget stderr() {\r\n\t\treturn this.#stderr ??= new WriteStream(2);\r\n\t}\r\n\t// --- cwd ---\r\n\t#cwd = \"/\";\r\n\tchdir(cwd) {\r\n\t\tthis.#cwd = cwd;\r\n\t}\r\n\tcwd() {\r\n\t\treturn this.#cwd;\r\n\t}\r\n\t// --- dummy props and getters ---\r\n\tarch = \"\";\r\n\tplatform = \"\";\r\n\targv = [];\r\n\targv0 = \"\";\r\n\texecArgv = [];\r\n\texecPath = \"\";\r\n\ttitle = \"\";\r\n\tpid = 200;\r\n\tppid = 100;\r\n\tget version() {\r\n\t\treturn `v${NODE_VERSION}`;\r\n\t}\r\n\tget versions() {\r\n\t\treturn { node: NODE_VERSION };\r\n\t}\r\n\tget allowedNodeEnvironmentFlags() {\r\n\t\treturn new Set();\r\n\t}\r\n\tget sourceMapsEnabled() {\r\n\t\treturn false;\r\n\t}\r\n\tget debugPort() {\r\n\t\treturn 0;\r\n\t}\r\n\tget throwDeprecation() {\r\n\t\treturn false;\r\n\t}\r\n\tget traceDeprecation() {\r\n\t\treturn false;\r\n\t}\r\n\tget features() {\r\n\t\treturn {};\r\n\t}\r\n\tget release() {\r\n\t\treturn {};\r\n\t}\r\n\tget connected() {\r\n\t\treturn false;\r\n\t}\r\n\tget config() {\r\n\t\treturn {};\r\n\t}\r\n\tget moduleLoadList() {\r\n\t\treturn [];\r\n\t}\r\n\tconstrainedMemory() {\r\n\t\treturn 0;\r\n\t}\r\n\tavailableMemory() {\r\n\t\treturn 0;\r\n\t}\r\n\tuptime() {\r\n\t\treturn 0;\r\n\t}\r\n\tresourceUsage() {\r\n\t\treturn {};\r\n\t}\r\n\t// --- noop methods ---\r\n\tref() {\r\n\t\t// noop\r\n\t}\r\n\tunref() {\r\n\t\t// noop\r\n\t}\r\n\t// --- unimplemented methods ---\r\n\tumask() {\r\n\t\tthrow createNotImplementedError(\"process.umask\");\r\n\t}\r\n\tgetBuiltinModule() {\r\n\t\treturn undefined;\r\n\t}\r\n\tgetActiveResourcesInfo() {\r\n\t\tthrow createNotImplementedError(\"process.getActiveResourcesInfo\");\r\n\t}\r\n\texit() {\r\n\t\tthrow createNotImplementedError(\"process.exit\");\r\n\t}\r\n\treallyExit() {\r\n\t\tthrow createNotImplementedError(\"process.reallyExit\");\r\n\t}\r\n\tkill() {\r\n\t\tthrow createNotImplementedError(\"process.kill\");\r\n\t}\r\n\tabort() {\r\n\t\tthrow createNotImplementedError(\"process.abort\");\r\n\t}\r\n\tdlopen() {\r\n\t\tthrow createNotImplementedError(\"process.dlopen\");\r\n\t}\r\n\tsetSourceMapsEnabled() {\r\n\t\tthrow createNotImplementedError(\"process.setSourceMapsEnabled\");\r\n\t}\r\n\tloadEnvFile() {\r\n\t\tthrow createNotImplementedError(\"process.loadEnvFile\");\r\n\t}\r\n\tdisconnect() {\r\n\t\tthrow createNotImplementedError(\"process.disconnect\");\r\n\t}\r\n\tcpuUsage() {\r\n\t\tthrow createNotImplementedError(\"process.cpuUsage\");\r\n\t}\r\n\tsetUncaughtExceptionCaptureCallback() {\r\n\t\tthrow createNotImplementedError(\"process.setUncaughtExceptionCaptureCallback\");\r\n\t}\r\n\thasUncaughtExceptionCaptureCallback() {\r\n\t\tthrow createNotImplementedError(\"process.hasUncaughtExceptionCaptureCallback\");\r\n\t}\r\n\tinitgroups() {\r\n\t\tthrow createNotImplementedError(\"process.initgroups\");\r\n\t}\r\n\topenStdin() {\r\n\t\tthrow createNotImplementedError(\"process.openStdin\");\r\n\t}\r\n\tassert() {\r\n\t\tthrow createNotImplementedError(\"process.assert\");\r\n\t}\r\n\tbinding() {\r\n\t\tthrow createNotImplementedError(\"process.binding\");\r\n\t}\r\n\t// --- attached interfaces ---\r\n\tpermission = { has: /* @__PURE__ */ notImplemented(\"process.permission.has\") };\r\n\treport = {\r\n\t\tdirectory: \"\",\r\n\t\tfilename: \"\",\r\n\t\tsignal: \"SIGUSR2\",\r\n\t\tcompact: false,\r\n\t\treportOnFatalError: false,\r\n\t\treportOnSignal: false,\r\n\t\treportOnUncaughtException: false,\r\n\t\tgetReport: /* @__PURE__ */ notImplemented(\"process.report.getReport\"),\r\n\t\twriteReport: /* @__PURE__ */ notImplemented(\"process.report.writeReport\")\r\n\t};\r\n\tfinalization = {\r\n\t\tregister: /* @__PURE__ */ notImplemented(\"process.finalization.register\"),\r\n\t\tunregister: /* @__PURE__ */ notImplemented(\"process.finalization.unregister\"),\r\n\t\tregisterBeforeExit: /* @__PURE__ */ notImplemented(\"process.finalization.registerBeforeExit\")\r\n\t};\r\n\tmemoryUsage = Object.assign(() => ({\r\n\t\tarrayBuffers: 0,\r\n\t\trss: 0,\r\n\t\texternal: 0,\r\n\t\theapTotal: 0,\r\n\t\theapUsed: 0\r\n\t}), { rss: () => 0 });\r\n\t// --- undefined props ---\r\n\tmainModule = undefined;\r\n\tdomain = undefined;\r\n\t// optional\r\n\tsend = undefined;\r\n\texitCode = undefined;\r\n\tchannel = undefined;\r\n\tgetegid = undefined;\r\n\tgeteuid = undefined;\r\n\tgetgid = undefined;\r\n\tgetgroups = undefined;\r\n\tgetuid = undefined;\r\n\tsetegid = undefined;\r\n\tseteuid = undefined;\r\n\tsetgid = undefined;\r\n\tsetgroups = undefined;\r\n\tsetuid = undefined;\r\n\t// internals\r\n\t_events = undefined;\r\n\t_eventsCount = undefined;\r\n\t_exiting = undefined;\r\n\t_maxListeners = undefined;\r\n\t_debugEnd = undefined;\r\n\t_debugProcess = undefined;\r\n\t_fatalException = undefined;\r\n\t_getActiveHandles = undefined;\r\n\t_getActiveRequests = undefined;\r\n\t_kill = undefined;\r\n\t_preload_modules = undefined;\r\n\t_rawDebug = undefined;\r\n\t_startProfilerIdleNotifier = undefined;\r\n\t_stopProfilerIdleNotifier = undefined;\r\n\t_tickCallback = undefined;\r\n\t_disconnect = undefined;\r\n\t_handleQueue = undefined;\r\n\t_pendingMessage = undefined;\r\n\t_channel = undefined;\r\n\t_send = undefined;\r\n\t_linkedBinding = undefined;\r\n}\r\n", "import { hrtime as UnenvHrTime } from \"unenv/node/internal/process/hrtime\";\r\nimport { Process as UnenvProcess } from \"unenv/node/internal/process/process\";\r\nconst globalProcess = globalThis[\"process\"];\r\nexport const getBuiltinModule = globalProcess.getBuiltinModule;\r\nexport const { exit, platform, nextTick } = getBuiltinModule(\r\n  \"node:process\"\r\n);\r\nconst unenvProcess = new UnenvProcess({\r\n  env: globalProcess.env,\r\n  hrtime: UnenvHrTime,\r\n  nextTick\r\n});\r\nexport const {\r\n  abort,\r\n  addListener,\r\n  allowedNodeEnvironmentFlags,\r\n  hasUncaughtExceptionCaptureCallback,\r\n  setUncaughtExceptionCaptureCallback,\r\n  loadEnvFile,\r\n  sourceMapsEnabled,\r\n  arch,\r\n  argv,\r\n  argv0,\r\n  chdir,\r\n  config,\r\n  connected,\r\n  constrainedMemory,\r\n  availableMemory,\r\n  cpuUsage,\r\n  cwd,\r\n  debugPort,\r\n  dlopen,\r\n  disconnect,\r\n  emit,\r\n  emitWarning,\r\n  env,\r\n  eventNames,\r\n  execArgv,\r\n  execPath,\r\n  finalization,\r\n  features,\r\n  getActiveResourcesInfo,\r\n  getMaxListeners,\r\n  hrtime,\r\n  kill,\r\n  listeners,\r\n  listenerCount,\r\n  memoryUsage,\r\n  on,\r\n  off,\r\n  once,\r\n  pid,\r\n  ppid,\r\n  prependListener,\r\n  prependOnceListener,\r\n  rawListeners,\r\n  release,\r\n  removeAllListeners,\r\n  removeListener,\r\n  report,\r\n  resourceUsage,\r\n  setMaxListeners,\r\n  setSourceMapsEnabled,\r\n  stderr,\r\n  stdin,\r\n  stdout,\r\n  title,\r\n  throwDeprecation,\r\n  traceDeprecation,\r\n  umask,\r\n  uptime,\r\n  version,\r\n  versions,\r\n  domain,\r\n  initgroups,\r\n  moduleLoadList,\r\n  reallyExit,\r\n  openStdin,\r\n  assert,\r\n  binding,\r\n  send,\r\n  exitCode,\r\n  channel,\r\n  getegid,\r\n  geteuid,\r\n  getgid,\r\n  getgroups,\r\n  getuid,\r\n  setegid,\r\n  seteuid,\r\n  setgid,\r\n  setgroups,\r\n  setuid,\r\n  permission,\r\n  mainModule,\r\n  _events,\r\n  _eventsCount,\r\n  _exiting,\r\n  _maxListeners,\r\n  _debugEnd,\r\n  _debugProcess,\r\n  _fatalException,\r\n  _getActiveHandles,\r\n  _getActiveRequests,\r\n  _kill,\r\n  _preload_modules,\r\n  _rawDebug,\r\n  _startProfilerIdleNotifier,\r\n  _stopProfilerIdleNotifier,\r\n  _tickCallback,\r\n  _disconnect,\r\n  _handleQueue,\r\n  _pendingMessage,\r\n  _channel,\r\n  _send,\r\n  _linkedBinding\r\n} = unenvProcess;\r\nconst _process = {\r\n  abort,\r\n  addListener,\r\n  allowedNodeEnvironmentFlags,\r\n  hasUncaughtExceptionCaptureCallback,\r\n  setUncaughtExceptionCaptureCallback,\r\n  loadEnvFile,\r\n  sourceMapsEnabled,\r\n  arch,\r\n  argv,\r\n  argv0,\r\n  chdir,\r\n  config,\r\n  connected,\r\n  constrainedMemory,\r\n  availableMemory,\r\n  cpuUsage,\r\n  cwd,\r\n  debugPort,\r\n  dlopen,\r\n  disconnect,\r\n  emit,\r\n  emitWarning,\r\n  env,\r\n  eventNames,\r\n  execArgv,\r\n  execPath,\r\n  exit,\r\n  finalization,\r\n  features,\r\n  getBuiltinModule,\r\n  getActiveResourcesInfo,\r\n  getMaxListeners,\r\n  hrtime,\r\n  kill,\r\n  listeners,\r\n  listenerCount,\r\n  memoryUsage,\r\n  nextTick,\r\n  on,\r\n  off,\r\n  once,\r\n  pid,\r\n  platform,\r\n  ppid,\r\n  prependListener,\r\n  prependOnceListener,\r\n  rawListeners,\r\n  release,\r\n  removeAllListeners,\r\n  removeListener,\r\n  report,\r\n  resourceUsage,\r\n  setMaxListeners,\r\n  setSourceMapsEnabled,\r\n  stderr,\r\n  stdin,\r\n  stdout,\r\n  title,\r\n  throwDeprecation,\r\n  traceDeprecation,\r\n  umask,\r\n  uptime,\r\n  version,\r\n  versions,\r\n  // @ts-expect-error old API\r\n  domain,\r\n  initgroups,\r\n  moduleLoadList,\r\n  reallyExit,\r\n  openStdin,\r\n  assert,\r\n  binding,\r\n  send,\r\n  exitCode,\r\n  channel,\r\n  getegid,\r\n  geteuid,\r\n  getgid,\r\n  getgroups,\r\n  getuid,\r\n  setegid,\r\n  seteuid,\r\n  setgid,\r\n  setgroups,\r\n  setuid,\r\n  permission,\r\n  mainModule,\r\n  _events,\r\n  _eventsCount,\r\n  _exiting,\r\n  _maxListeners,\r\n  _debugEnd,\r\n  _debugProcess,\r\n  _fatalException,\r\n  _getActiveHandles,\r\n  _getActiveRequests,\r\n  _kill,\r\n  _preload_modules,\r\n  _rawDebug,\r\n  _startProfilerIdleNotifier,\r\n  _stopProfilerIdleNotifier,\r\n  _tickCallback,\r\n  _disconnect,\r\n  _handleQueue,\r\n  _pendingMessage,\r\n  _channel,\r\n  _send,\r\n  _linkedBinding\r\n};\r\nexport default _process;\r\n", "import { default as defaultExport } from \"@cloudflare/unenv-preset/node/process\";\nglobalThis.process = defaultExport;", "", "// `esbuild` doesn't support returning `watch*` options from `onStart()`\r\n// plugin callbacks. Instead, we define an empty virtual module that is\r\n// imported by this injected file. Importing the module registers watchers.\r\nimport \"wrangler:modules-watch\";\r\n", "!function(t,e){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=e():\"function\"==typeof define&&define.amd?define(e):(t=\"undefined\"!=typeof globalThis?globalThis:t||self).dayjs=e()}(this,(function(){\"use strict\";var t=1e3,e=6e4,n=36e5,r=\"millisecond\",i=\"second\",s=\"minute\",u=\"hour\",a=\"day\",o=\"week\",c=\"month\",f=\"quarter\",h=\"year\",d=\"date\",l=\"Invalid Date\",$=/^(\\d{4})[-/]?(\\d{1,2})?[-/]?(\\d{0,2})[Tt\\s]*(\\d{1,2})?:?(\\d{1,2})?:?(\\d{1,2})?[.:]?(\\d+)?$/,y=/\\[([^\\]]+)]|Y{1,4}|M{1,4}|D{1,2}|d{1,4}|H{1,2}|h{1,2}|a|A|m{1,2}|s{1,2}|Z{1,2}|SSS/g,M={name:\"en\",weekdays:\"Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday\".split(\"_\"),months:\"January_February_March_April_May_June_July_August_September_October_November_December\".split(\"_\"),ordinal:function(t){var e=[\"th\",\"st\",\"nd\",\"rd\"],n=t%100;return\"[\"+t+(e[(n-20)%10]||e[n]||e[0])+\"]\"}},m=function(t,e,n){var r=String(t);return!r||r.length>=e?t:\"\"+Array(e+1-r.length).join(n)+t},v={s:m,z:function(t){var e=-t.utcOffset(),n=Math.abs(e),r=Math.floor(n/60),i=n%60;return(e<=0?\"+\":\"-\")+m(r,2,\"0\")+\":\"+m(i,2,\"0\")},m:function t(e,n){if(e.date()<n.date())return-t(n,e);var r=12*(n.year()-e.year())+(n.month()-e.month()),i=e.clone().add(r,c),s=n-i<0,u=e.clone().add(r+(s?-1:1),c);return+(-(r+(n-i)/(s?i-u:u-i))||0)},a:function(t){return t<0?Math.ceil(t)||0:Math.floor(t)},p:function(t){return{M:c,y:h,w:o,d:a,D:d,h:u,m:s,s:i,ms:r,Q:f}[t]||String(t||\"\").toLowerCase().replace(/s$/,\"\")},u:function(t){return void 0===t}},g=\"en\",D={};D[g]=M;var p=\"$isDayjsObject\",S=function(t){return t instanceof _||!(!t||!t[p])},w=function t(e,n,r){var i;if(!e)return g;if(\"string\"==typeof e){var s=e.toLowerCase();D[s]&&(i=s),n&&(D[s]=n,i=s);var u=e.split(\"-\");if(!i&&u.length>1)return t(u[0])}else{var a=e.name;D[a]=e,i=a}return!r&&i&&(g=i),i||!r&&g},O=function(t,e){if(S(t))return t.clone();var n=\"object\"==typeof e?e:{};return n.date=t,n.args=arguments,new _(n)},b=v;b.l=w,b.i=S,b.w=function(t,e){return O(t,{locale:e.$L,utc:e.$u,x:e.$x,$offset:e.$offset})};var _=function(){function M(t){this.$L=w(t.locale,null,!0),this.parse(t),this.$x=this.$x||t.x||{},this[p]=!0}var m=M.prototype;return m.parse=function(t){this.$d=function(t){var e=t.date,n=t.utc;if(null===e)return new Date(NaN);if(b.u(e))return new Date;if(e instanceof Date)return new Date(e);if(\"string\"==typeof e&&!/Z$/i.test(e)){var r=e.match($);if(r){var i=r[2]-1||0,s=(r[7]||\"0\").substring(0,3);return n?new Date(Date.UTC(r[1],i,r[3]||1,r[4]||0,r[5]||0,r[6]||0,s)):new Date(r[1],i,r[3]||1,r[4]||0,r[5]||0,r[6]||0,s)}}return new Date(e)}(t),this.init()},m.init=function(){var t=this.$d;this.$y=t.getFullYear(),this.$M=t.getMonth(),this.$D=t.getDate(),this.$W=t.getDay(),this.$H=t.getHours(),this.$m=t.getMinutes(),this.$s=t.getSeconds(),this.$ms=t.getMilliseconds()},m.$utils=function(){return b},m.isValid=function(){return!(this.$d.toString()===l)},m.isSame=function(t,e){var n=O(t);return this.startOf(e)<=n&&n<=this.endOf(e)},m.isAfter=function(t,e){return O(t)<this.startOf(e)},m.isBefore=function(t,e){return this.endOf(e)<O(t)},m.$g=function(t,e,n){return b.u(t)?this[e]:this.set(n,t)},m.unix=function(){return Math.floor(this.valueOf()/1e3)},m.valueOf=function(){return this.$d.getTime()},m.startOf=function(t,e){var n=this,r=!!b.u(e)||e,f=b.p(t),l=function(t,e){var i=b.w(n.$u?Date.UTC(n.$y,e,t):new Date(n.$y,e,t),n);return r?i:i.endOf(a)},$=function(t,e){return b.w(n.toDate()[t].apply(n.toDate(\"s\"),(r?[0,0,0,0]:[23,59,59,999]).slice(e)),n)},y=this.$W,M=this.$M,m=this.$D,v=\"set\"+(this.$u?\"UTC\":\"\");switch(f){case h:return r?l(1,0):l(31,11);case c:return r?l(1,M):l(0,M+1);case o:var g=this.$locale().weekStart||0,D=(y<g?y+7:y)-g;return l(r?m-D:m+(6-D),M);case a:case d:return $(v+\"Hours\",0);case u:return $(v+\"Minutes\",1);case s:return $(v+\"Seconds\",2);case i:return $(v+\"Milliseconds\",3);default:return this.clone()}},m.endOf=function(t){return this.startOf(t,!1)},m.$set=function(t,e){var n,o=b.p(t),f=\"set\"+(this.$u?\"UTC\":\"\"),l=(n={},n[a]=f+\"Date\",n[d]=f+\"Date\",n[c]=f+\"Month\",n[h]=f+\"FullYear\",n[u]=f+\"Hours\",n[s]=f+\"Minutes\",n[i]=f+\"Seconds\",n[r]=f+\"Milliseconds\",n)[o],$=o===a?this.$D+(e-this.$W):e;if(o===c||o===h){var y=this.clone().set(d,1);y.$d[l]($),y.init(),this.$d=y.set(d,Math.min(this.$D,y.daysInMonth())).$d}else l&&this.$d[l]($);return this.init(),this},m.set=function(t,e){return this.clone().$set(t,e)},m.get=function(t){return this[b.p(t)]()},m.add=function(r,f){var d,l=this;r=Number(r);var $=b.p(f),y=function(t){var e=O(l);return b.w(e.date(e.date()+Math.round(t*r)),l)};if($===c)return this.set(c,this.$M+r);if($===h)return this.set(h,this.$y+r);if($===a)return y(1);if($===o)return y(7);var M=(d={},d[s]=e,d[u]=n,d[i]=t,d)[$]||1,m=this.$d.getTime()+r*M;return b.w(m,this)},m.subtract=function(t,e){return this.add(-1*t,e)},m.format=function(t){var e=this,n=this.$locale();if(!this.isValid())return n.invalidDate||l;var r=t||\"YYYY-MM-DDTHH:mm:ssZ\",i=b.z(this),s=this.$H,u=this.$m,a=this.$M,o=n.weekdays,c=n.months,f=n.meridiem,h=function(t,n,i,s){return t&&(t[n]||t(e,r))||i[n].slice(0,s)},d=function(t){return b.s(s%12||12,t,\"0\")},$=f||function(t,e,n){var r=t<12?\"AM\":\"PM\";return n?r.toLowerCase():r};return r.replace(y,(function(t,r){return r||function(t){switch(t){case\"YY\":return String(e.$y).slice(-2);case\"YYYY\":return b.s(e.$y,4,\"0\");case\"M\":return a+1;case\"MM\":return b.s(a+1,2,\"0\");case\"MMM\":return h(n.monthsShort,a,c,3);case\"MMMM\":return h(c,a);case\"D\":return e.$D;case\"DD\":return b.s(e.$D,2,\"0\");case\"d\":return String(e.$W);case\"dd\":return h(n.weekdaysMin,e.$W,o,2);case\"ddd\":return h(n.weekdaysShort,e.$W,o,3);case\"dddd\":return o[e.$W];case\"H\":return String(s);case\"HH\":return b.s(s,2,\"0\");case\"h\":return d(1);case\"hh\":return d(2);case\"a\":return $(s,u,!0);case\"A\":return $(s,u,!1);case\"m\":return String(u);case\"mm\":return b.s(u,2,\"0\");case\"s\":return String(e.$s);case\"ss\":return b.s(e.$s,2,\"0\");case\"SSS\":return b.s(e.$ms,3,\"0\");case\"Z\":return i}return null}(t)||i.replace(\":\",\"\")}))},m.utcOffset=function(){return 15*-Math.round(this.$d.getTimezoneOffset()/15)},m.diff=function(r,d,l){var $,y=this,M=b.p(d),m=O(r),v=(m.utcOffset()-this.utcOffset())*e,g=this-m,D=function(){return b.m(y,m)};switch(M){case h:$=D()/12;break;case c:$=D();break;case f:$=D()/3;break;case o:$=(g-v)/6048e5;break;case a:$=(g-v)/864e5;break;case u:$=g/n;break;case s:$=g/e;break;case i:$=g/t;break;default:$=g}return l?$:b.a($)},m.daysInMonth=function(){return this.endOf(c).$D},m.$locale=function(){return D[this.$L]},m.locale=function(t,e){if(!t)return this.$L;var n=this.clone(),r=w(t,e,!0);return r&&(n.$L=r),n},m.clone=function(){return b.w(this.$d,this)},m.toDate=function(){return new Date(this.valueOf())},m.toJSON=function(){return this.isValid()?this.toISOString():null},m.toISOString=function(){return this.$d.toISOString()},m.toString=function(){return this.$d.toUTCString()},M}(),k=_.prototype;return O.prototype=k,[[\"$ms\",r],[\"$s\",i],[\"$m\",s],[\"$H\",u],[\"$W\",a],[\"$M\",c],[\"$y\",h],[\"$D\",d]].forEach((function(t){k[t[1]]=function(e){return this.$g(e,t[0],t[1])}})),O.extend=function(t,e){return t.$i||(t(e,_,O),t.$i=!0),O},O.locale=w,O.isDayjs=S,O.unix=function(t){return O(1e3*t)},O.en=D[g],O.Ls=D,O.p={},O}));", "// This loads all middlewares exposed on the middleware object and then starts\r\n// the invocation chain. The big idea is that we can add these to the middleware\r\n// export dynamically through wrangler, or we can potentially let users directly\r\n// add them as a sort of \"plugin\" system.\r\n\r\nimport ENTRY, { __INTERNAL_WRANGLER_MIDDLEWARE__ } from \"C:\\\\Projetos\\\\CursoDoSistema\\\\CursoBackend\\\\.wrangler\\\\tmp\\\\bundle-pQo35v\\\\middleware-insertion-facade.js\";\r\nimport { __facade_invoke__, __facade_register__, Dispatcher } from \"C:\\\\Projetos\\\\CursoDoSistema\\\\CursoBackend\\\\node_modules\\\\wrangler\\\\templates\\\\middleware\\\\common.ts\";\r\nimport type { WorkerEntrypointConstructor } from \"C:\\\\Projetos\\\\CursoDoSistema\\\\CursoBackend\\\\.wrangler\\\\tmp\\\\bundle-pQo35v\\\\middleware-insertion-facade.js\";\r\n\r\n// Preserve all the exports from the worker\r\nexport * from \"C:\\\\Projetos\\\\CursoDoSistema\\\\CursoBackend\\\\.wrangler\\\\tmp\\\\bundle-pQo35v\\\\middleware-insertion-facade.js\";\r\n\r\nclass __Facade_ScheduledController__ implements ScheduledController {\r\n\treadonly #noRetry: ScheduledController[\"noRetry\"];\r\n\r\n\tconstructor(\r\n\t\treadonly scheduledTime: number,\r\n\t\treadonly cron: string,\r\n\t\tnoRetry: ScheduledController[\"noRetry\"]\r\n\t) {\r\n\t\tthis.#noRetry = noRetry;\r\n\t}\r\n\r\n\tnoRetry() {\r\n\t\tif (!(this instanceof __Facade_ScheduledController__)) {\r\n\t\t\tthrow new TypeError(\"Illegal invocation\");\r\n\t\t}\r\n\t\t// Need to call native method immediately in case uncaught error thrown\r\n\t\tthis.#noRetry();\r\n\t}\r\n}\r\n\r\nfunction wrapExportedHandler(worker: ExportedHandler): ExportedHandler {\r\n\t// If we don't have any middleware defined, just return the handler as is\r\n\tif (\r\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__ === undefined ||\r\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__.length === 0\r\n\t) {\r\n\t\treturn worker;\r\n\t}\r\n\t// Otherwise, register all middleware once\r\n\tfor (const middleware of __INTERNAL_WRANGLER_MIDDLEWARE__) {\r\n\t\t__facade_register__(middleware);\r\n\t}\r\n\r\n\tconst fetchDispatcher: ExportedHandlerFetchHandler = function (\r\n\t\trequest,\r\n\t\tenv,\r\n\t\tctx\r\n\t) {\r\n\t\tif (worker.fetch === undefined) {\r\n\t\t\tthrow new Error(\"Handler does not export a fetch() function.\");\r\n\t\t}\r\n\t\treturn worker.fetch(request, env, ctx);\r\n\t};\r\n\r\n\treturn {\r\n\t\t...worker,\r\n\t\tfetch(request, env, ctx) {\r\n\t\t\tconst dispatcher: Dispatcher = function (type, init) {\r\n\t\t\t\tif (type === \"scheduled\" && worker.scheduled !== undefined) {\r\n\t\t\t\t\tconst controller = new __Facade_ScheduledController__(\r\n\t\t\t\t\t\tDate.now(),\r\n\t\t\t\t\t\tinit.cron ?? \"\",\r\n\t\t\t\t\t\t() => {}\r\n\t\t\t\t\t);\r\n\t\t\t\t\treturn worker.scheduled(controller, env, ctx);\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t\treturn __facade_invoke__(request, env, ctx, dispatcher, fetchDispatcher);\r\n\t\t},\r\n\t};\r\n}\r\n\r\nfunction wrapWorkerEntrypoint(\r\n\tklass: WorkerEntrypointConstructor\r\n): WorkerEntrypointConstructor {\r\n\t// If we don't have any middleware defined, just return the handler as is\r\n\tif (\r\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__ === undefined ||\r\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__.length === 0\r\n\t) {\r\n\t\treturn klass;\r\n\t}\r\n\t// Otherwise, register all middleware once\r\n\tfor (const middleware of __INTERNAL_WRANGLER_MIDDLEWARE__) {\r\n\t\t__facade_register__(middleware);\r\n\t}\r\n\r\n\t// `extend`ing `klass` here so other RPC methods remain callable\r\n\treturn class extends klass {\r\n\t\t#fetchDispatcher: ExportedHandlerFetchHandler<Record<string, unknown>> = (\r\n\t\t\trequest,\r\n\t\t\tenv,\r\n\t\t\tctx\r\n\t\t) => {\r\n\t\t\tthis.env = env;\r\n\t\t\tthis.ctx = ctx;\r\n\t\t\tif (super.fetch === undefined) {\r\n\t\t\t\tthrow new Error(\"Entrypoint class does not define a fetch() function.\");\r\n\t\t\t}\r\n\t\t\treturn super.fetch(request);\r\n\t\t};\r\n\r\n\t\t#dispatcher: Dispatcher = (type, init) => {\r\n\t\t\tif (type === \"scheduled\" && super.scheduled !== undefined) {\r\n\t\t\t\tconst controller = new __Facade_ScheduledController__(\r\n\t\t\t\t\tDate.now(),\r\n\t\t\t\t\tinit.cron ?? \"\",\r\n\t\t\t\t\t() => {}\r\n\t\t\t\t);\r\n\t\t\t\treturn super.scheduled(controller);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tfetch(request: Request<unknown, IncomingRequestCfProperties>) {\r\n\t\t\treturn __facade_invoke__(\r\n\t\t\t\trequest,\r\n\t\t\t\tthis.env,\r\n\t\t\t\tthis.ctx,\r\n\t\t\t\tthis.#dispatcher,\r\n\t\t\t\tthis.#fetchDispatcher\r\n\t\t\t);\r\n\t\t}\r\n\t};\r\n}\r\n\r\nlet WRAPPED_ENTRY: ExportedHandler | WorkerEntrypointConstructor | undefined;\r\nif (typeof ENTRY === \"object\") {\r\n\tWRAPPED_ENTRY = wrapExportedHandler(ENTRY);\r\n} else if (typeof ENTRY === \"function\") {\r\n\tWRAPPED_ENTRY = wrapWorkerEntrypoint(ENTRY);\r\n}\r\nexport default WRAPPED_ENTRY;\r\n", "\t\t\t\timport worker, * as OTHER_EXPORTS from \"C:\\\\Projetos\\\\CursoDoSistema\\\\CursoBackend\\\\src\\\\index.ts\";\n\t\t\t\timport * as __MIDDLEWARE_0__ from \"C:\\\\Projetos\\\\CursoDoSistema\\\\CursoBackend\\\\node_modules\\\\wrangler\\\\templates\\\\middleware\\\\middleware-ensure-req-body-drained.ts\";\nimport * as __MIDDLEWARE_1__ from \"C:\\\\Projetos\\\\CursoDoSistema\\\\CursoBackend\\\\node_modules\\\\wrangler\\\\templates\\\\middleware\\\\middleware-miniflare3-json-error.ts\";\n\n\t\t\t\texport * from \"C:\\\\Projetos\\\\CursoDoSistema\\\\CursoBackend\\\\src\\\\index.ts\";\n\t\t\t\tconst MIDDLEWARE_TEST_INJECT = \"__INJECT_FOR_TESTING_WRANGLER_MIDDLEWARE__\";\n\t\t\t\texport const __INTERNAL_WRANGLER_MIDDLEWARE__ = [\n\t\t\t\t\t\n\t\t\t\t\t__MIDDLEWARE_0__.default,__MIDDLEWARE_1__.default\n\t\t\t\t]\n\t\t\t\texport default worker;", "// src/index.ts\r\nimport { Hono } from 'hono';\r\nimport { cors } from 'hono/cors';\r\nimport type { Env, CtxVars } from './lib/types';\r\nimport { withDb } from './lib/db';\r\n\r\n// Rotas\r\nimport { auth } from './routes/auth';\r\nimport { usersRouter } from './routes/users';\r\nimport { passwordResetRoutes } from './routes/passwordReset';\r\nimport dbping from './routes/dbping';\r\n\r\nconst app = new Hono<{ Bindings: Env; Variables: CtxVars }>();\r\n\r\n// Middleware de CORS\r\n// Middleware de CORS\r\napp.use(\r\n  '*',\r\n  cors({\r\n    origin: (origin) => {\r\n      const allow = new Set([\r\n        'http://localhost:5173',\r\n        'http://127.0.0.1:5173',\r\n        'http://localhost:3000',\r\n      ]);\r\n      if (!origin) return 'http://localhost:5173'; // fallback dev\r\n      return allow.has(origin) ? origin : ''; // vazio = bloqueia\r\n    },\r\n    allowMethods: ['GET', 'POST', 'PUT', 'PATCH', 'DELETE', 'OPTIONS'],\r\n    allowHeaders: ['Content-Type', 'Authorization', 'X-Requested-With'],\r\n    exposeHeaders: [\r\n      'Content-Type',\r\n      'Content-Length',\r\n      // \uD83D\uDC47 estes aqui s\u00E3o essenciais para a pagina\u00E7\u00E3o\r\n      'X-Total-Count',\r\n      'X-Total-Pages',\r\n      'X-Current-Page',\r\n    ],\r\n    credentials: true,\r\n    maxAge: 86400,\r\n  })\r\n);\r\n\r\n\r\n// Injeta db na req\r\napp.use('*', withDb);\r\n\r\n// Rotas b\u00E1sicas\r\napp.get('/', (c) => c.text('API rodando \uD83D\uDE80'));\r\napp.get('/health', (c) => c.json({ ok: true, ts: Date.now() }));\r\n\r\n// Sub-rotas\r\napp.route('/dbping', dbping);\r\napp.route('/auth', auth);                  // -> /auth/login\r\napp.route('/users', usersRouter);\r\napp.route('/password-reset', passwordResetRoutes); // -> /password-reset/request e /password-reset/confirm\r\n\r\n// 404\r\napp.notFound((c) => c.json({ message: 'Rota n\u00E3o encontrada' }, 404));\r\n\r\nexport default app;\r\n", "// src/index.ts\r\nimport { Hono } from \"./hono.js\";\r\nexport {\r\n  Hono\r\n};\r\n", "// src/hono.ts\r\nimport { HonoBase } from \"./hono-base.js\";\r\nimport { RegExpRouter } from \"./router/reg-exp-router/index.js\";\r\nimport { SmartRouter } from \"./router/smart-router/index.js\";\r\nimport { TrieRouter } from \"./router/trie-router/index.js\";\r\nvar Hono = class extends HonoBase {\r\n  constructor(options = {}) {\r\n    super(options);\r\n    this.router = options.router ?? new SmartRouter({\r\n      routers: [new RegExpRouter(), new TrieRouter()]\r\n    });\r\n  }\r\n};\r\nexport {\r\n  Hono\r\n};\r\n", "// src/hono-base.ts\r\nimport { compose } from \"./compose.js\";\r\nimport { Context } from \"./context.js\";\r\nimport { METHODS, METHOD_NAME_ALL, METHOD_NAME_ALL_LOWERCASE } from \"./router.js\";\r\nimport { COMPOSED_HANDLER } from \"./utils/constants.js\";\r\nimport { getPath, getPathNoStrict, mergePath } from \"./utils/url.js\";\r\nvar notFoundHandler = (c) => {\r\n  return c.text(\"404 Not Found\", 404);\r\n};\r\nvar errorHandler = (err, c) => {\r\n  if (\"getResponse\" in err) {\r\n    const res = err.getResponse();\r\n    return c.newResponse(res.body, res);\r\n  }\r\n  console.error(err);\r\n  return c.text(\"Internal Server Error\", 500);\r\n};\r\nvar Hono = class {\r\n  get;\r\n  post;\r\n  put;\r\n  delete;\r\n  options;\r\n  patch;\r\n  all;\r\n  on;\r\n  use;\r\n  router;\r\n  getPath;\r\n  _basePath = \"/\";\r\n  #path = \"/\";\r\n  routes = [];\r\n  constructor(options = {}) {\r\n    const allMethods = [...METHODS, METHOD_NAME_ALL_LOWERCASE];\r\n    allMethods.forEach((method) => {\r\n      this[method] = (args1, ...args) => {\r\n        if (typeof args1 === \"string\") {\r\n          this.#path = args1;\r\n        } else {\r\n          this.#addRoute(method, this.#path, args1);\r\n        }\r\n        args.forEach((handler) => {\r\n          this.#addRoute(method, this.#path, handler);\r\n        });\r\n        return this;\r\n      };\r\n    });\r\n    this.on = (method, path, ...handlers) => {\r\n      for (const p of [path].flat()) {\r\n        this.#path = p;\r\n        for (const m of [method].flat()) {\r\n          handlers.map((handler) => {\r\n            this.#addRoute(m.toUpperCase(), this.#path, handler);\r\n          });\r\n        }\r\n      }\r\n      return this;\r\n    };\r\n    this.use = (arg1, ...handlers) => {\r\n      if (typeof arg1 === \"string\") {\r\n        this.#path = arg1;\r\n      } else {\r\n        this.#path = \"*\";\r\n        handlers.unshift(arg1);\r\n      }\r\n      handlers.forEach((handler) => {\r\n        this.#addRoute(METHOD_NAME_ALL, this.#path, handler);\r\n      });\r\n      return this;\r\n    };\r\n    const { strict, ...optionsWithoutStrict } = options;\r\n    Object.assign(this, optionsWithoutStrict);\r\n    this.getPath = strict ?? true ? options.getPath ?? getPath : getPathNoStrict;\r\n  }\r\n  #clone() {\r\n    const clone = new Hono({\r\n      router: this.router,\r\n      getPath: this.getPath\r\n    });\r\n    clone.errorHandler = this.errorHandler;\r\n    clone.#notFoundHandler = this.#notFoundHandler;\r\n    clone.routes = this.routes;\r\n    return clone;\r\n  }\r\n  #notFoundHandler = notFoundHandler;\r\n  errorHandler = errorHandler;\r\n  route(path, app) {\r\n    const subApp = this.basePath(path);\r\n    app.routes.map((r) => {\r\n      let handler;\r\n      if (app.errorHandler === errorHandler) {\r\n        handler = r.handler;\r\n      } else {\r\n        handler = async (c, next) => (await compose([], app.errorHandler)(c, () => r.handler(c, next))).res;\r\n        handler[COMPOSED_HANDLER] = r.handler;\r\n      }\r\n      subApp.#addRoute(r.method, r.path, handler);\r\n    });\r\n    return this;\r\n  }\r\n  basePath(path) {\r\n    const subApp = this.#clone();\r\n    subApp._basePath = mergePath(this._basePath, path);\r\n    return subApp;\r\n  }\r\n  onError = (handler) => {\r\n    this.errorHandler = handler;\r\n    return this;\r\n  };\r\n  notFound = (handler) => {\r\n    this.#notFoundHandler = handler;\r\n    return this;\r\n  };\r\n  mount(path, applicationHandler, options) {\r\n    let replaceRequest;\r\n    let optionHandler;\r\n    if (options) {\r\n      if (typeof options === \"function\") {\r\n        optionHandler = options;\r\n      } else {\r\n        optionHandler = options.optionHandler;\r\n        if (options.replaceRequest === false) {\r\n          replaceRequest = (request) => request;\r\n        } else {\r\n          replaceRequest = options.replaceRequest;\r\n        }\r\n      }\r\n    }\r\n    const getOptions = optionHandler ? (c) => {\r\n      const options2 = optionHandler(c);\r\n      return Array.isArray(options2) ? options2 : [options2];\r\n    } : (c) => {\r\n      let executionContext = void 0;\r\n      try {\r\n        executionContext = c.executionCtx;\r\n      } catch {\r\n      }\r\n      return [c.env, executionContext];\r\n    };\r\n    replaceRequest ||= (() => {\r\n      const mergedPath = mergePath(this._basePath, path);\r\n      const pathPrefixLength = mergedPath === \"/\" ? 0 : mergedPath.length;\r\n      return (request) => {\r\n        const url = new URL(request.url);\r\n        url.pathname = url.pathname.slice(pathPrefixLength) || \"/\";\r\n        return new Request(url, request);\r\n      };\r\n    })();\r\n    const handler = async (c, next) => {\r\n      const res = await applicationHandler(replaceRequest(c.req.raw), ...getOptions(c));\r\n      if (res) {\r\n        return res;\r\n      }\r\n      await next();\r\n    };\r\n    this.#addRoute(METHOD_NAME_ALL, mergePath(path, \"*\"), handler);\r\n    return this;\r\n  }\r\n  #addRoute(method, path, handler) {\r\n    method = method.toUpperCase();\r\n    path = mergePath(this._basePath, path);\r\n    const r = { basePath: this._basePath, path, method, handler };\r\n    this.router.add(method, path, [handler, r]);\r\n    this.routes.push(r);\r\n  }\r\n  #handleError(err, c) {\r\n    if (err instanceof Error) {\r\n      return this.errorHandler(err, c);\r\n    }\r\n    throw err;\r\n  }\r\n  #dispatch(request, executionCtx, env, method) {\r\n    if (method === \"HEAD\") {\r\n      return (async () => new Response(null, await this.#dispatch(request, executionCtx, env, \"GET\")))();\r\n    }\r\n    const path = this.getPath(request, { env });\r\n    const matchResult = this.router.match(method, path);\r\n    const c = new Context(request, {\r\n      path,\r\n      matchResult,\r\n      env,\r\n      executionCtx,\r\n      notFoundHandler: this.#notFoundHandler\r\n    });\r\n    if (matchResult[0].length === 1) {\r\n      let res;\r\n      try {\r\n        res = matchResult[0][0][0][0](c, async () => {\r\n          c.res = await this.#notFoundHandler(c);\r\n        });\r\n      } catch (err) {\r\n        return this.#handleError(err, c);\r\n      }\r\n      return res instanceof Promise ? res.then(\r\n        (resolved) => resolved || (c.finalized ? c.res : this.#notFoundHandler(c))\r\n      ).catch((err) => this.#handleError(err, c)) : res ?? this.#notFoundHandler(c);\r\n    }\r\n    const composed = compose(matchResult[0], this.errorHandler, this.#notFoundHandler);\r\n    return (async () => {\r\n      try {\r\n        const context = await composed(c);\r\n        if (!context.finalized) {\r\n          throw new Error(\r\n            \"Context is not finalized. Did you forget to return a Response object or `await next()`?\"\r\n          );\r\n        }\r\n        return context.res;\r\n      } catch (err) {\r\n        return this.#handleError(err, c);\r\n      }\r\n    })();\r\n  }\r\n  fetch = (request, ...rest) => {\r\n    return this.#dispatch(request, rest[1], rest[0], request.method);\r\n  };\r\n  request = (input, requestInit, Env, executionCtx) => {\r\n    if (input instanceof Request) {\r\n      return this.fetch(requestInit ? new Request(input, requestInit) : input, Env, executionCtx);\r\n    }\r\n    input = input.toString();\r\n    return this.fetch(\r\n      new Request(\r\n        /^https?:\\/\\//.test(input) ? input : `http://localhost${mergePath(\"/\", input)}`,\r\n        requestInit\r\n      ),\r\n      Env,\r\n      executionCtx\r\n    );\r\n  };\r\n  fire = () => {\r\n    addEventListener(\"fetch\", (event) => {\r\n      event.respondWith(this.#dispatch(event.request, event, void 0, event.request.method));\r\n    });\r\n  };\r\n};\r\nexport {\r\n  Hono as HonoBase\r\n};\r\n", "// src/compose.ts\r\nvar compose = (middleware, onError, onNotFound) => {\r\n  return (context, next) => {\r\n    let index = -1;\r\n    return dispatch(0);\r\n    async function dispatch(i) {\r\n      if (i <= index) {\r\n        throw new Error(\"next() called multiple times\");\r\n      }\r\n      index = i;\r\n      let res;\r\n      let isError = false;\r\n      let handler;\r\n      if (middleware[i]) {\r\n        handler = middleware[i][0][0];\r\n        context.req.routeIndex = i;\r\n      } else {\r\n        handler = i === middleware.length && next || void 0;\r\n      }\r\n      if (handler) {\r\n        try {\r\n          res = await handler(context, () => dispatch(i + 1));\r\n        } catch (err) {\r\n          if (err instanceof Error && onError) {\r\n            context.error = err;\r\n            res = await onError(err, context);\r\n            isError = true;\r\n          } else {\r\n            throw err;\r\n          }\r\n        }\r\n      } else {\r\n        if (context.finalized === false && onNotFound) {\r\n          res = await onNotFound(context);\r\n        }\r\n      }\r\n      if (res && (context.finalized === false || isError)) {\r\n        context.res = res;\r\n      }\r\n      return context;\r\n    }\r\n  };\r\n};\r\nexport {\r\n  compose\r\n};\r\n", "// src/context.ts\r\nimport { HonoRequest } from \"./request.js\";\r\nimport { HtmlEscapedCallbackPhase, resolveCallback } from \"./utils/html.js\";\r\nvar TEXT_PLAIN = \"text/plain; charset=UTF-8\";\r\nvar setDefaultContentType = (contentType, headers) => {\r\n  return {\r\n    \"Content-Type\": contentType,\r\n    ...headers\r\n  };\r\n};\r\nvar Context = class {\r\n  #rawRequest;\r\n  #req;\r\n  env = {};\r\n  #var;\r\n  finalized = false;\r\n  error;\r\n  #status;\r\n  #executionCtx;\r\n  #res;\r\n  #layout;\r\n  #renderer;\r\n  #notFoundHandler;\r\n  #preparedHeaders;\r\n  #matchResult;\r\n  #path;\r\n  constructor(req, options) {\r\n    this.#rawRequest = req;\r\n    if (options) {\r\n      this.#executionCtx = options.executionCtx;\r\n      this.env = options.env;\r\n      this.#notFoundHandler = options.notFoundHandler;\r\n      this.#path = options.path;\r\n      this.#matchResult = options.matchResult;\r\n    }\r\n  }\r\n  get req() {\r\n    this.#req ??= new HonoRequest(this.#rawRequest, this.#path, this.#matchResult);\r\n    return this.#req;\r\n  }\r\n  get event() {\r\n    if (this.#executionCtx && \"respondWith\" in this.#executionCtx) {\r\n      return this.#executionCtx;\r\n    } else {\r\n      throw Error(\"This context has no FetchEvent\");\r\n    }\r\n  }\r\n  get executionCtx() {\r\n    if (this.#executionCtx) {\r\n      return this.#executionCtx;\r\n    } else {\r\n      throw Error(\"This context has no ExecutionContext\");\r\n    }\r\n  }\r\n  get res() {\r\n    return this.#res ||= new Response(null, {\r\n      headers: this.#preparedHeaders ??= new Headers()\r\n    });\r\n  }\r\n  set res(_res) {\r\n    if (this.#res && _res) {\r\n      _res = new Response(_res.body, _res);\r\n      for (const [k, v] of this.#res.headers.entries()) {\r\n        if (k === \"content-type\") {\r\n          continue;\r\n        }\r\n        if (k === \"set-cookie\") {\r\n          const cookies = this.#res.headers.getSetCookie();\r\n          _res.headers.delete(\"set-cookie\");\r\n          for (const cookie of cookies) {\r\n            _res.headers.append(\"set-cookie\", cookie);\r\n          }\r\n        } else {\r\n          _res.headers.set(k, v);\r\n        }\r\n      }\r\n    }\r\n    this.#res = _res;\r\n    this.finalized = true;\r\n  }\r\n  render = (...args) => {\r\n    this.#renderer ??= (content) => this.html(content);\r\n    return this.#renderer(...args);\r\n  };\r\n  setLayout = (layout) => this.#layout = layout;\r\n  getLayout = () => this.#layout;\r\n  setRenderer = (renderer) => {\r\n    this.#renderer = renderer;\r\n  };\r\n  header = (name, value, options) => {\r\n    if (this.finalized) {\r\n      this.#res = new Response(this.#res.body, this.#res);\r\n    }\r\n    const headers = this.#res ? this.#res.headers : this.#preparedHeaders ??= new Headers();\r\n    if (value === void 0) {\r\n      headers.delete(name);\r\n    } else if (options?.append) {\r\n      headers.append(name, value);\r\n    } else {\r\n      headers.set(name, value);\r\n    }\r\n  };\r\n  status = (status) => {\r\n    this.#status = status;\r\n  };\r\n  set = (key, value) => {\r\n    this.#var ??= /* @__PURE__ */ new Map();\r\n    this.#var.set(key, value);\r\n  };\r\n  get = (key) => {\r\n    return this.#var ? this.#var.get(key) : void 0;\r\n  };\r\n  get var() {\r\n    if (!this.#var) {\r\n      return {};\r\n    }\r\n    return Object.fromEntries(this.#var);\r\n  }\r\n  #newResponse(data, arg, headers) {\r\n    const responseHeaders = this.#res ? new Headers(this.#res.headers) : this.#preparedHeaders ?? new Headers();\r\n    if (typeof arg === \"object\" && \"headers\" in arg) {\r\n      const argHeaders = arg.headers instanceof Headers ? arg.headers : new Headers(arg.headers);\r\n      for (const [key, value] of argHeaders) {\r\n        if (key.toLowerCase() === \"set-cookie\") {\r\n          responseHeaders.append(key, value);\r\n        } else {\r\n          responseHeaders.set(key, value);\r\n        }\r\n      }\r\n    }\r\n    if (headers) {\r\n      for (const [k, v] of Object.entries(headers)) {\r\n        if (typeof v === \"string\") {\r\n          responseHeaders.set(k, v);\r\n        } else {\r\n          responseHeaders.delete(k);\r\n          for (const v2 of v) {\r\n            responseHeaders.append(k, v2);\r\n          }\r\n        }\r\n      }\r\n    }\r\n    const status = typeof arg === \"number\" ? arg : arg?.status ?? this.#status;\r\n    return new Response(data, { status, headers: responseHeaders });\r\n  }\r\n  newResponse = (...args) => this.#newResponse(...args);\r\n  body = (data, arg, headers) => this.#newResponse(data, arg, headers);\r\n  text = (text, arg, headers) => {\r\n    return !this.#preparedHeaders && !this.#status && !arg && !headers && !this.finalized ? new Response(text) : this.#newResponse(\r\n      text,\r\n      arg,\r\n      setDefaultContentType(TEXT_PLAIN, headers)\r\n    );\r\n  };\r\n  json = (object, arg, headers) => {\r\n    return this.#newResponse(\r\n      JSON.stringify(object),\r\n      arg,\r\n      setDefaultContentType(\"application/json\", headers)\r\n    );\r\n  };\r\n  html = (html, arg, headers) => {\r\n    const res = (html2) => this.#newResponse(html2, arg, setDefaultContentType(\"text/html; charset=UTF-8\", headers));\r\n    return typeof html === \"object\" ? resolveCallback(html, HtmlEscapedCallbackPhase.Stringify, false, {}).then(res) : res(html);\r\n  };\r\n  redirect = (location, status) => {\r\n    const locationString = String(location);\r\n    this.header(\r\n      \"Location\",\r\n      !/[^\\x00-\\xFF]/.test(locationString) ? locationString : encodeURI(locationString)\r\n    );\r\n    return this.newResponse(null, status ?? 302);\r\n  };\r\n  notFound = () => {\r\n    this.#notFoundHandler ??= () => new Response();\r\n    return this.#notFoundHandler(this);\r\n  };\r\n};\r\nexport {\r\n  Context,\r\n  TEXT_PLAIN\r\n};\r\n", "// src/request.ts\r\nimport { GET_MATCH_RESULT } from \"./request/constants.js\";\r\nimport { parseBody } from \"./utils/body.js\";\r\nimport { decodeURIComponent_, getQueryParam, getQueryParams, tryDecode } from \"./utils/url.js\";\r\nvar tryDecodeURIComponent = (str) => tryDecode(str, decodeURIComponent_);\r\nvar HonoRequest = class {\r\n  raw;\r\n  #validatedData;\r\n  #matchResult;\r\n  routeIndex = 0;\r\n  path;\r\n  bodyCache = {};\r\n  constructor(request, path = \"/\", matchResult = [[]]) {\r\n    this.raw = request;\r\n    this.path = path;\r\n    this.#matchResult = matchResult;\r\n    this.#validatedData = {};\r\n  }\r\n  param(key) {\r\n    return key ? this.#getDecodedParam(key) : this.#getAllDecodedParams();\r\n  }\r\n  #getDecodedParam(key) {\r\n    const paramKey = this.#matchResult[0][this.routeIndex][1][key];\r\n    const param = this.#getParamValue(paramKey);\r\n    return param ? /\\%/.test(param) ? tryDecodeURIComponent(param) : param : void 0;\r\n  }\r\n  #getAllDecodedParams() {\r\n    const decoded = {};\r\n    const keys = Object.keys(this.#matchResult[0][this.routeIndex][1]);\r\n    for (const key of keys) {\r\n      const value = this.#getParamValue(this.#matchResult[0][this.routeIndex][1][key]);\r\n      if (value && typeof value === \"string\") {\r\n        decoded[key] = /\\%/.test(value) ? tryDecodeURIComponent(value) : value;\r\n      }\r\n    }\r\n    return decoded;\r\n  }\r\n  #getParamValue(paramKey) {\r\n    return this.#matchResult[1] ? this.#matchResult[1][paramKey] : paramKey;\r\n  }\r\n  query(key) {\r\n    return getQueryParam(this.url, key);\r\n  }\r\n  queries(key) {\r\n    return getQueryParams(this.url, key);\r\n  }\r\n  header(name) {\r\n    if (name) {\r\n      return this.raw.headers.get(name) ?? void 0;\r\n    }\r\n    const headerData = {};\r\n    this.raw.headers.forEach((value, key) => {\r\n      headerData[key] = value;\r\n    });\r\n    return headerData;\r\n  }\r\n  async parseBody(options) {\r\n    return this.bodyCache.parsedBody ??= await parseBody(this, options);\r\n  }\r\n  #cachedBody = (key) => {\r\n    const { bodyCache, raw } = this;\r\n    const cachedBody = bodyCache[key];\r\n    if (cachedBody) {\r\n      return cachedBody;\r\n    }\r\n    const anyCachedKey = Object.keys(bodyCache)[0];\r\n    if (anyCachedKey) {\r\n      return bodyCache[anyCachedKey].then((body) => {\r\n        if (anyCachedKey === \"json\") {\r\n          body = JSON.stringify(body);\r\n        }\r\n        return new Response(body)[key]();\r\n      });\r\n    }\r\n    return bodyCache[key] = raw[key]();\r\n  };\r\n  json() {\r\n    return this.#cachedBody(\"text\").then((text) => JSON.parse(text));\r\n  }\r\n  text() {\r\n    return this.#cachedBody(\"text\");\r\n  }\r\n  arrayBuffer() {\r\n    return this.#cachedBody(\"arrayBuffer\");\r\n  }\r\n  blob() {\r\n    return this.#cachedBody(\"blob\");\r\n  }\r\n  formData() {\r\n    return this.#cachedBody(\"formData\");\r\n  }\r\n  addValidatedData(target, data) {\r\n    this.#validatedData[target] = data;\r\n  }\r\n  valid(target) {\r\n    return this.#validatedData[target];\r\n  }\r\n  get url() {\r\n    return this.raw.url;\r\n  }\r\n  get method() {\r\n    return this.raw.method;\r\n  }\r\n  get [GET_MATCH_RESULT]() {\r\n    return this.#matchResult;\r\n  }\r\n  get matchedRoutes() {\r\n    return this.#matchResult[0].map(([[, route]]) => route);\r\n  }\r\n  get routePath() {\r\n    return this.#matchResult[0].map(([[, route]]) => route)[this.routeIndex].path;\r\n  }\r\n};\r\nexport {\r\n  HonoRequest\r\n};\r\n", "// src/request/constants.ts\r\nvar GET_MATCH_RESULT = Symbol();\r\nexport {\r\n  GET_MATCH_RESULT\r\n};\r\n", "// src/utils/body.ts\r\nimport { HonoRequest } from \"../request.js\";\r\nvar parseBody = async (request, options = /* @__PURE__ */ Object.create(null)) => {\r\n  const { all = false, dot = false } = options;\r\n  const headers = request instanceof HonoRequest ? request.raw.headers : request.headers;\r\n  const contentType = headers.get(\"Content-Type\");\r\n  if (contentType?.startsWith(\"multipart/form-data\") || contentType?.startsWith(\"application/x-www-form-urlencoded\")) {\r\n    return parseFormData(request, { all, dot });\r\n  }\r\n  return {};\r\n};\r\nasync function parseFormData(request, options) {\r\n  const formData = await request.formData();\r\n  if (formData) {\r\n    return convertFormDataToBodyData(formData, options);\r\n  }\r\n  return {};\r\n}\r\nfunction convertFormDataToBodyData(formData, options) {\r\n  const form = /* @__PURE__ */ Object.create(null);\r\n  formData.forEach((value, key) => {\r\n    const shouldParseAllValues = options.all || key.endsWith(\"[]\");\r\n    if (!shouldParseAllValues) {\r\n      form[key] = value;\r\n    } else {\r\n      handleParsingAllValues(form, key, value);\r\n    }\r\n  });\r\n  if (options.dot) {\r\n    Object.entries(form).forEach(([key, value]) => {\r\n      const shouldParseDotValues = key.includes(\".\");\r\n      if (shouldParseDotValues) {\r\n        handleParsingNestedValues(form, key, value);\r\n        delete form[key];\r\n      }\r\n    });\r\n  }\r\n  return form;\r\n}\r\nvar handleParsingAllValues = (form, key, value) => {\r\n  if (form[key] !== void 0) {\r\n    if (Array.isArray(form[key])) {\r\n      ;\r\n      form[key].push(value);\r\n    } else {\r\n      form[key] = [form[key], value];\r\n    }\r\n  } else {\r\n    if (!key.endsWith(\"[]\")) {\r\n      form[key] = value;\r\n    } else {\r\n      form[key] = [value];\r\n    }\r\n  }\r\n};\r\nvar handleParsingNestedValues = (form, key, value) => {\r\n  let nestedForm = form;\r\n  const keys = key.split(\".\");\r\n  keys.forEach((key2, index) => {\r\n    if (index === keys.length - 1) {\r\n      nestedForm[key2] = value;\r\n    } else {\r\n      if (!nestedForm[key2] || typeof nestedForm[key2] !== \"object\" || Array.isArray(nestedForm[key2]) || nestedForm[key2] instanceof File) {\r\n        nestedForm[key2] = /* @__PURE__ */ Object.create(null);\r\n      }\r\n      nestedForm = nestedForm[key2];\r\n    }\r\n  });\r\n};\r\nexport {\r\n  parseBody\r\n};\r\n", "// src/utils/url.ts\r\nvar splitPath = (path) => {\r\n  const paths = path.split(\"/\");\r\n  if (paths[0] === \"\") {\r\n    paths.shift();\r\n  }\r\n  return paths;\r\n};\r\nvar splitRoutingPath = (routePath) => {\r\n  const { groups, path } = extractGroupsFromPath(routePath);\r\n  const paths = splitPath(path);\r\n  return replaceGroupMarks(paths, groups);\r\n};\r\nvar extractGroupsFromPath = (path) => {\r\n  const groups = [];\r\n  path = path.replace(/\\{[^}]+\\}/g, (match, index) => {\r\n    const mark = `@${index}`;\r\n    groups.push([mark, match]);\r\n    return mark;\r\n  });\r\n  return { groups, path };\r\n};\r\nvar replaceGroupMarks = (paths, groups) => {\r\n  for (let i = groups.length - 1; i >= 0; i--) {\r\n    const [mark] = groups[i];\r\n    for (let j = paths.length - 1; j >= 0; j--) {\r\n      if (paths[j].includes(mark)) {\r\n        paths[j] = paths[j].replace(mark, groups[i][1]);\r\n        break;\r\n      }\r\n    }\r\n  }\r\n  return paths;\r\n};\r\nvar patternCache = {};\r\nvar getPattern = (label, next) => {\r\n  if (label === \"*\") {\r\n    return \"*\";\r\n  }\r\n  const match = label.match(/^\\:([^\\{\\}]+)(?:\\{(.+)\\})?$/);\r\n  if (match) {\r\n    const cacheKey = `${label}#${next}`;\r\n    if (!patternCache[cacheKey]) {\r\n      if (match[2]) {\r\n        patternCache[cacheKey] = next && next[0] !== \":\" && next[0] !== \"*\" ? [cacheKey, match[1], new RegExp(`^${match[2]}(?=/${next})`)] : [label, match[1], new RegExp(`^${match[2]}$`)];\r\n      } else {\r\n        patternCache[cacheKey] = [label, match[1], true];\r\n      }\r\n    }\r\n    return patternCache[cacheKey];\r\n  }\r\n  return null;\r\n};\r\nvar tryDecode = (str, decoder) => {\r\n  try {\r\n    return decoder(str);\r\n  } catch {\r\n    return str.replace(/(?:%[0-9A-Fa-f]{2})+/g, (match) => {\r\n      try {\r\n        return decoder(match);\r\n      } catch {\r\n        return match;\r\n      }\r\n    });\r\n  }\r\n};\r\nvar tryDecodeURI = (str) => tryDecode(str, decodeURI);\r\nvar getPath = (request) => {\r\n  const url = request.url;\r\n  const start = url.indexOf(\"/\", url.indexOf(\":\") + 4);\r\n  let i = start;\r\n  for (; i < url.length; i++) {\r\n    const charCode = url.charCodeAt(i);\r\n    if (charCode === 37) {\r\n      const queryIndex = url.indexOf(\"?\", i);\r\n      const path = url.slice(start, queryIndex === -1 ? void 0 : queryIndex);\r\n      return tryDecodeURI(path.includes(\"%25\") ? path.replace(/%25/g, \"%2525\") : path);\r\n    } else if (charCode === 63) {\r\n      break;\r\n    }\r\n  }\r\n  return url.slice(start, i);\r\n};\r\nvar getQueryStrings = (url) => {\r\n  const queryIndex = url.indexOf(\"?\", 8);\r\n  return queryIndex === -1 ? \"\" : \"?\" + url.slice(queryIndex + 1);\r\n};\r\nvar getPathNoStrict = (request) => {\r\n  const result = getPath(request);\r\n  return result.length > 1 && result.at(-1) === \"/\" ? result.slice(0, -1) : result;\r\n};\r\nvar mergePath = (base, sub, ...rest) => {\r\n  if (rest.length) {\r\n    sub = mergePath(sub, ...rest);\r\n  }\r\n  return `${base?.[0] === \"/\" ? \"\" : \"/\"}${base}${sub === \"/\" ? \"\" : `${base?.at(-1) === \"/\" ? \"\" : \"/\"}${sub?.[0] === \"/\" ? sub.slice(1) : sub}`}`;\r\n};\r\nvar checkOptionalParameter = (path) => {\r\n  if (path.charCodeAt(path.length - 1) !== 63 || !path.includes(\":\")) {\r\n    return null;\r\n  }\r\n  const segments = path.split(\"/\");\r\n  const results = [];\r\n  let basePath = \"\";\r\n  segments.forEach((segment) => {\r\n    if (segment !== \"\" && !/\\:/.test(segment)) {\r\n      basePath += \"/\" + segment;\r\n    } else if (/\\:/.test(segment)) {\r\n      if (/\\?/.test(segment)) {\r\n        if (results.length === 0 && basePath === \"\") {\r\n          results.push(\"/\");\r\n        } else {\r\n          results.push(basePath);\r\n        }\r\n        const optionalSegment = segment.replace(\"?\", \"\");\r\n        basePath += \"/\" + optionalSegment;\r\n        results.push(basePath);\r\n      } else {\r\n        basePath += \"/\" + segment;\r\n      }\r\n    }\r\n  });\r\n  return results.filter((v, i, a) => a.indexOf(v) === i);\r\n};\r\nvar _decodeURI = (value) => {\r\n  if (!/[%+]/.test(value)) {\r\n    return value;\r\n  }\r\n  if (value.indexOf(\"+\") !== -1) {\r\n    value = value.replace(/\\+/g, \" \");\r\n  }\r\n  return value.indexOf(\"%\") !== -1 ? tryDecode(value, decodeURIComponent_) : value;\r\n};\r\nvar _getQueryParam = (url, key, multiple) => {\r\n  let encoded;\r\n  if (!multiple && key && !/[%+]/.test(key)) {\r\n    let keyIndex2 = url.indexOf(`?${key}`, 8);\r\n    if (keyIndex2 === -1) {\r\n      keyIndex2 = url.indexOf(`&${key}`, 8);\r\n    }\r\n    while (keyIndex2 !== -1) {\r\n      const trailingKeyCode = url.charCodeAt(keyIndex2 + key.length + 1);\r\n      if (trailingKeyCode === 61) {\r\n        const valueIndex = keyIndex2 + key.length + 2;\r\n        const endIndex = url.indexOf(\"&\", valueIndex);\r\n        return _decodeURI(url.slice(valueIndex, endIndex === -1 ? void 0 : endIndex));\r\n      } else if (trailingKeyCode == 38 || isNaN(trailingKeyCode)) {\r\n        return \"\";\r\n      }\r\n      keyIndex2 = url.indexOf(`&${key}`, keyIndex2 + 1);\r\n    }\r\n    encoded = /[%+]/.test(url);\r\n    if (!encoded) {\r\n      return void 0;\r\n    }\r\n  }\r\n  const results = {};\r\n  encoded ??= /[%+]/.test(url);\r\n  let keyIndex = url.indexOf(\"?\", 8);\r\n  while (keyIndex !== -1) {\r\n    const nextKeyIndex = url.indexOf(\"&\", keyIndex + 1);\r\n    let valueIndex = url.indexOf(\"=\", keyIndex);\r\n    if (valueIndex > nextKeyIndex && nextKeyIndex !== -1) {\r\n      valueIndex = -1;\r\n    }\r\n    let name = url.slice(\r\n      keyIndex + 1,\r\n      valueIndex === -1 ? nextKeyIndex === -1 ? void 0 : nextKeyIndex : valueIndex\r\n    );\r\n    if (encoded) {\r\n      name = _decodeURI(name);\r\n    }\r\n    keyIndex = nextKeyIndex;\r\n    if (name === \"\") {\r\n      continue;\r\n    }\r\n    let value;\r\n    if (valueIndex === -1) {\r\n      value = \"\";\r\n    } else {\r\n      value = url.slice(valueIndex + 1, nextKeyIndex === -1 ? void 0 : nextKeyIndex);\r\n      if (encoded) {\r\n        value = _decodeURI(value);\r\n      }\r\n    }\r\n    if (multiple) {\r\n      if (!(results[name] && Array.isArray(results[name]))) {\r\n        results[name] = [];\r\n      }\r\n      ;\r\n      results[name].push(value);\r\n    } else {\r\n      results[name] ??= value;\r\n    }\r\n  }\r\n  return key ? results[key] : results;\r\n};\r\nvar getQueryParam = _getQueryParam;\r\nvar getQueryParams = (url, key) => {\r\n  return _getQueryParam(url, key, true);\r\n};\r\nvar decodeURIComponent_ = decodeURIComponent;\r\nexport {\r\n  checkOptionalParameter,\r\n  decodeURIComponent_,\r\n  getPath,\r\n  getPathNoStrict,\r\n  getPattern,\r\n  getQueryParam,\r\n  getQueryParams,\r\n  getQueryStrings,\r\n  mergePath,\r\n  splitPath,\r\n  splitRoutingPath,\r\n  tryDecode\r\n};\r\n", "// src/utils/html.ts\r\nvar HtmlEscapedCallbackPhase = {\r\n  Stringify: 1,\r\n  BeforeStream: 2,\r\n  Stream: 3\r\n};\r\nvar raw = (value, callbacks) => {\r\n  const escapedString = new String(value);\r\n  escapedString.isEscaped = true;\r\n  escapedString.callbacks = callbacks;\r\n  return escapedString;\r\n};\r\nvar escapeRe = /[&<>'\"]/;\r\nvar stringBufferToString = async (buffer, callbacks) => {\r\n  let str = \"\";\r\n  callbacks ||= [];\r\n  const resolvedBuffer = await Promise.all(buffer);\r\n  for (let i = resolvedBuffer.length - 1; ; i--) {\r\n    str += resolvedBuffer[i];\r\n    i--;\r\n    if (i < 0) {\r\n      break;\r\n    }\r\n    let r = resolvedBuffer[i];\r\n    if (typeof r === \"object\") {\r\n      callbacks.push(...r.callbacks || []);\r\n    }\r\n    const isEscaped = r.isEscaped;\r\n    r = await (typeof r === \"object\" ? r.toString() : r);\r\n    if (typeof r === \"object\") {\r\n      callbacks.push(...r.callbacks || []);\r\n    }\r\n    if (r.isEscaped ?? isEscaped) {\r\n      str += r;\r\n    } else {\r\n      const buf = [str];\r\n      escapeToBuffer(r, buf);\r\n      str = buf[0];\r\n    }\r\n  }\r\n  return raw(str, callbacks);\r\n};\r\nvar escapeToBuffer = (str, buffer) => {\r\n  const match = str.search(escapeRe);\r\n  if (match === -1) {\r\n    buffer[0] += str;\r\n    return;\r\n  }\r\n  let escape;\r\n  let index;\r\n  let lastIndex = 0;\r\n  for (index = match; index < str.length; index++) {\r\n    switch (str.charCodeAt(index)) {\r\n      case 34:\r\n        escape = \"&quot;\";\r\n        break;\r\n      case 39:\r\n        escape = \"&#39;\";\r\n        break;\r\n      case 38:\r\n        escape = \"&amp;\";\r\n        break;\r\n      case 60:\r\n        escape = \"&lt;\";\r\n        break;\r\n      case 62:\r\n        escape = \"&gt;\";\r\n        break;\r\n      default:\r\n        continue;\r\n    }\r\n    buffer[0] += str.substring(lastIndex, index) + escape;\r\n    lastIndex = index + 1;\r\n  }\r\n  buffer[0] += str.substring(lastIndex, index);\r\n};\r\nvar resolveCallbackSync = (str) => {\r\n  const callbacks = str.callbacks;\r\n  if (!callbacks?.length) {\r\n    return str;\r\n  }\r\n  const buffer = [str];\r\n  const context = {};\r\n  callbacks.forEach((c) => c({ phase: HtmlEscapedCallbackPhase.Stringify, buffer, context }));\r\n  return buffer[0];\r\n};\r\nvar resolveCallback = async (str, phase, preserveCallbacks, context, buffer) => {\r\n  if (typeof str === \"object\" && !(str instanceof String)) {\r\n    if (!(str instanceof Promise)) {\r\n      str = str.toString();\r\n    }\r\n    if (str instanceof Promise) {\r\n      str = await str;\r\n    }\r\n  }\r\n  const callbacks = str.callbacks;\r\n  if (!callbacks?.length) {\r\n    return Promise.resolve(str);\r\n  }\r\n  if (buffer) {\r\n    buffer[0] += str;\r\n  } else {\r\n    buffer = [str];\r\n  }\r\n  const resStr = Promise.all(callbacks.map((c) => c({ phase, buffer, context }))).then(\r\n    (res) => Promise.all(\r\n      res.filter(Boolean).map((str2) => resolveCallback(str2, phase, false, context, buffer))\r\n    ).then(() => buffer[0])\r\n  );\r\n  if (preserveCallbacks) {\r\n    return raw(await resStr, callbacks);\r\n  } else {\r\n    return resStr;\r\n  }\r\n};\r\nexport {\r\n  HtmlEscapedCallbackPhase,\r\n  escapeToBuffer,\r\n  raw,\r\n  resolveCallback,\r\n  resolveCallbackSync,\r\n  stringBufferToString\r\n};\r\n", "// src/router.ts\r\nvar METHOD_NAME_ALL = \"ALL\";\r\nvar METHOD_NAME_ALL_LOWERCASE = \"all\";\r\nvar METHODS = [\"get\", \"post\", \"put\", \"delete\", \"options\", \"patch\"];\r\nvar MESSAGE_MATCHER_IS_ALREADY_BUILT = \"Can not add a route since the matcher is already built.\";\r\nvar UnsupportedPathError = class extends Error {\r\n};\r\nexport {\r\n  MESSAGE_MATCHER_IS_ALREADY_BUILT,\r\n  METHODS,\r\n  METHOD_NAME_ALL,\r\n  METHOD_NAME_ALL_LOWERCASE,\r\n  UnsupportedPathError\r\n};\r\n", "// src/utils/constants.ts\r\nvar COMPOSED_HANDLER = \"__COMPOSED_HANDLER\";\r\nexport {\r\n  COMPOSED_HANDLER\r\n};\r\n", "// src/router/reg-exp-router/index.ts\r\nimport { RegExpRouter } from \"./router.js\";\r\nexport {\r\n  RegExpRouter\r\n};\r\n", "// src/router/reg-exp-router/router.ts\r\nimport {\r\n  MESSAGE_MATCHER_IS_ALREADY_BUILT,\r\n  METHOD_NAME_ALL,\r\n  UnsupportedPathError\r\n} from \"../../router.js\";\r\nimport { checkOptionalParameter } from \"../../utils/url.js\";\r\nimport { PATH_ERROR } from \"./node.js\";\r\nimport { Trie } from \"./trie.js\";\r\nvar emptyParam = [];\r\nvar nullMatcher = [/^$/, [], /* @__PURE__ */ Object.create(null)];\r\nvar wildcardRegExpCache = /* @__PURE__ */ Object.create(null);\r\nfunction buildWildcardRegExp(path) {\r\n  return wildcardRegExpCache[path] ??= new RegExp(\r\n    path === \"*\" ? \"\" : `^${path.replace(\r\n      /\\/\\*$|([.\\\\+*[^\\]$()])/g,\r\n      (_, metaChar) => metaChar ? `\\\\${metaChar}` : \"(?:|/.*)\"\r\n    )}$`\r\n  );\r\n}\r\nfunction clearWildcardRegExpCache() {\r\n  wildcardRegExpCache = /* @__PURE__ */ Object.create(null);\r\n}\r\nfunction buildMatcherFromPreprocessedRoutes(routes) {\r\n  const trie = new Trie();\r\n  const handlerData = [];\r\n  if (routes.length === 0) {\r\n    return nullMatcher;\r\n  }\r\n  const routesWithStaticPathFlag = routes.map(\r\n    (route) => [!/\\*|\\/:/.test(route[0]), ...route]\r\n  ).sort(\r\n    ([isStaticA, pathA], [isStaticB, pathB]) => isStaticA ? 1 : isStaticB ? -1 : pathA.length - pathB.length\r\n  );\r\n  const staticMap = /* @__PURE__ */ Object.create(null);\r\n  for (let i = 0, j = -1, len = routesWithStaticPathFlag.length; i < len; i++) {\r\n    const [pathErrorCheckOnly, path, handlers] = routesWithStaticPathFlag[i];\r\n    if (pathErrorCheckOnly) {\r\n      staticMap[path] = [handlers.map(([h]) => [h, /* @__PURE__ */ Object.create(null)]), emptyParam];\r\n    } else {\r\n      j++;\r\n    }\r\n    let paramAssoc;\r\n    try {\r\n      paramAssoc = trie.insert(path, j, pathErrorCheckOnly);\r\n    } catch (e) {\r\n      throw e === PATH_ERROR ? new UnsupportedPathError(path) : e;\r\n    }\r\n    if (pathErrorCheckOnly) {\r\n      continue;\r\n    }\r\n    handlerData[j] = handlers.map(([h, paramCount]) => {\r\n      const paramIndexMap = /* @__PURE__ */ Object.create(null);\r\n      paramCount -= 1;\r\n      for (; paramCount >= 0; paramCount--) {\r\n        const [key, value] = paramAssoc[paramCount];\r\n        paramIndexMap[key] = value;\r\n      }\r\n      return [h, paramIndexMap];\r\n    });\r\n  }\r\n  const [regexp, indexReplacementMap, paramReplacementMap] = trie.buildRegExp();\r\n  for (let i = 0, len = handlerData.length; i < len; i++) {\r\n    for (let j = 0, len2 = handlerData[i].length; j < len2; j++) {\r\n      const map = handlerData[i][j]?.[1];\r\n      if (!map) {\r\n        continue;\r\n      }\r\n      const keys = Object.keys(map);\r\n      for (let k = 0, len3 = keys.length; k < len3; k++) {\r\n        map[keys[k]] = paramReplacementMap[map[keys[k]]];\r\n      }\r\n    }\r\n  }\r\n  const handlerMap = [];\r\n  for (const i in indexReplacementMap) {\r\n    handlerMap[i] = handlerData[indexReplacementMap[i]];\r\n  }\r\n  return [regexp, handlerMap, staticMap];\r\n}\r\nfunction findMiddleware(middleware, path) {\r\n  if (!middleware) {\r\n    return void 0;\r\n  }\r\n  for (const k of Object.keys(middleware).sort((a, b) => b.length - a.length)) {\r\n    if (buildWildcardRegExp(k).test(path)) {\r\n      return [...middleware[k]];\r\n    }\r\n  }\r\n  return void 0;\r\n}\r\nvar RegExpRouter = class {\r\n  name = \"RegExpRouter\";\r\n  #middleware;\r\n  #routes;\r\n  constructor() {\r\n    this.#middleware = { [METHOD_NAME_ALL]: /* @__PURE__ */ Object.create(null) };\r\n    this.#routes = { [METHOD_NAME_ALL]: /* @__PURE__ */ Object.create(null) };\r\n  }\r\n  add(method, path, handler) {\r\n    const middleware = this.#middleware;\r\n    const routes = this.#routes;\r\n    if (!middleware || !routes) {\r\n      throw new Error(MESSAGE_MATCHER_IS_ALREADY_BUILT);\r\n    }\r\n    if (!middleware[method]) {\r\n      ;\r\n      [middleware, routes].forEach((handlerMap) => {\r\n        handlerMap[method] = /* @__PURE__ */ Object.create(null);\r\n        Object.keys(handlerMap[METHOD_NAME_ALL]).forEach((p) => {\r\n          handlerMap[method][p] = [...handlerMap[METHOD_NAME_ALL][p]];\r\n        });\r\n      });\r\n    }\r\n    if (path === \"/*\") {\r\n      path = \"*\";\r\n    }\r\n    const paramCount = (path.match(/\\/:/g) || []).length;\r\n    if (/\\*$/.test(path)) {\r\n      const re = buildWildcardRegExp(path);\r\n      if (method === METHOD_NAME_ALL) {\r\n        Object.keys(middleware).forEach((m) => {\r\n          middleware[m][path] ||= findMiddleware(middleware[m], path) || findMiddleware(middleware[METHOD_NAME_ALL], path) || [];\r\n        });\r\n      } else {\r\n        middleware[method][path] ||= findMiddleware(middleware[method], path) || findMiddleware(middleware[METHOD_NAME_ALL], path) || [];\r\n      }\r\n      Object.keys(middleware).forEach((m) => {\r\n        if (method === METHOD_NAME_ALL || method === m) {\r\n          Object.keys(middleware[m]).forEach((p) => {\r\n            re.test(p) && middleware[m][p].push([handler, paramCount]);\r\n          });\r\n        }\r\n      });\r\n      Object.keys(routes).forEach((m) => {\r\n        if (method === METHOD_NAME_ALL || method === m) {\r\n          Object.keys(routes[m]).forEach(\r\n            (p) => re.test(p) && routes[m][p].push([handler, paramCount])\r\n          );\r\n        }\r\n      });\r\n      return;\r\n    }\r\n    const paths = checkOptionalParameter(path) || [path];\r\n    for (let i = 0, len = paths.length; i < len; i++) {\r\n      const path2 = paths[i];\r\n      Object.keys(routes).forEach((m) => {\r\n        if (method === METHOD_NAME_ALL || method === m) {\r\n          routes[m][path2] ||= [\r\n            ...findMiddleware(middleware[m], path2) || findMiddleware(middleware[METHOD_NAME_ALL], path2) || []\r\n          ];\r\n          routes[m][path2].push([handler, paramCount - len + i + 1]);\r\n        }\r\n      });\r\n    }\r\n  }\r\n  match(method, path) {\r\n    clearWildcardRegExpCache();\r\n    const matchers = this.#buildAllMatchers();\r\n    this.match = (method2, path2) => {\r\n      const matcher = matchers[method2] || matchers[METHOD_NAME_ALL];\r\n      const staticMatch = matcher[2][path2];\r\n      if (staticMatch) {\r\n        return staticMatch;\r\n      }\r\n      const match = path2.match(matcher[0]);\r\n      if (!match) {\r\n        return [[], emptyParam];\r\n      }\r\n      const index = match.indexOf(\"\", 1);\r\n      return [matcher[1][index], match];\r\n    };\r\n    return this.match(method, path);\r\n  }\r\n  #buildAllMatchers() {\r\n    const matchers = /* @__PURE__ */ Object.create(null);\r\n    Object.keys(this.#routes).concat(Object.keys(this.#middleware)).forEach((method) => {\r\n      matchers[method] ||= this.#buildMatcher(method);\r\n    });\r\n    this.#middleware = this.#routes = void 0;\r\n    return matchers;\r\n  }\r\n  #buildMatcher(method) {\r\n    const routes = [];\r\n    let hasOwnRoute = method === METHOD_NAME_ALL;\r\n    [this.#middleware, this.#routes].forEach((r) => {\r\n      const ownRoute = r[method] ? Object.keys(r[method]).map((path) => [path, r[method][path]]) : [];\r\n      if (ownRoute.length !== 0) {\r\n        hasOwnRoute ||= true;\r\n        routes.push(...ownRoute);\r\n      } else if (method !== METHOD_NAME_ALL) {\r\n        routes.push(\r\n          ...Object.keys(r[METHOD_NAME_ALL]).map((path) => [path, r[METHOD_NAME_ALL][path]])\r\n        );\r\n      }\r\n    });\r\n    if (!hasOwnRoute) {\r\n      return null;\r\n    } else {\r\n      return buildMatcherFromPreprocessedRoutes(routes);\r\n    }\r\n  }\r\n};\r\nexport {\r\n  RegExpRouter\r\n};\r\n", "// src/router/reg-exp-router/node.ts\r\nvar LABEL_REG_EXP_STR = \"[^/]+\";\r\nvar ONLY_WILDCARD_REG_EXP_STR = \".*\";\r\nvar TAIL_WILDCARD_REG_EXP_STR = \"(?:|/.*)\";\r\nvar PATH_ERROR = Symbol();\r\nvar regExpMetaChars = new Set(\".\\\\+*[^]$()\");\r\nfunction compareKey(a, b) {\r\n  if (a.length === 1) {\r\n    return b.length === 1 ? a < b ? -1 : 1 : -1;\r\n  }\r\n  if (b.length === 1) {\r\n    return 1;\r\n  }\r\n  if (a === ONLY_WILDCARD_REG_EXP_STR || a === TAIL_WILDCARD_REG_EXP_STR) {\r\n    return 1;\r\n  } else if (b === ONLY_WILDCARD_REG_EXP_STR || b === TAIL_WILDCARD_REG_EXP_STR) {\r\n    return -1;\r\n  }\r\n  if (a === LABEL_REG_EXP_STR) {\r\n    return 1;\r\n  } else if (b === LABEL_REG_EXP_STR) {\r\n    return -1;\r\n  }\r\n  return a.length === b.length ? a < b ? -1 : 1 : b.length - a.length;\r\n}\r\nvar Node = class {\r\n  #index;\r\n  #varIndex;\r\n  #children = /* @__PURE__ */ Object.create(null);\r\n  insert(tokens, index, paramMap, context, pathErrorCheckOnly) {\r\n    if (tokens.length === 0) {\r\n      if (this.#index !== void 0) {\r\n        throw PATH_ERROR;\r\n      }\r\n      if (pathErrorCheckOnly) {\r\n        return;\r\n      }\r\n      this.#index = index;\r\n      return;\r\n    }\r\n    const [token, ...restTokens] = tokens;\r\n    const pattern = token === \"*\" ? restTokens.length === 0 ? [\"\", \"\", ONLY_WILDCARD_REG_EXP_STR] : [\"\", \"\", LABEL_REG_EXP_STR] : token === \"/*\" ? [\"\", \"\", TAIL_WILDCARD_REG_EXP_STR] : token.match(/^\\:([^\\{\\}]+)(?:\\{(.+)\\})?$/);\r\n    let node;\r\n    if (pattern) {\r\n      const name = pattern[1];\r\n      let regexpStr = pattern[2] || LABEL_REG_EXP_STR;\r\n      if (name && pattern[2]) {\r\n        if (regexpStr === \".*\") {\r\n          throw PATH_ERROR;\r\n        }\r\n        regexpStr = regexpStr.replace(/^\\((?!\\?:)(?=[^)]+\\)$)/, \"(?:\");\r\n        if (/\\((?!\\?:)/.test(regexpStr)) {\r\n          throw PATH_ERROR;\r\n        }\r\n      }\r\n      node = this.#children[regexpStr];\r\n      if (!node) {\r\n        if (Object.keys(this.#children).some(\r\n          (k) => k !== ONLY_WILDCARD_REG_EXP_STR && k !== TAIL_WILDCARD_REG_EXP_STR\r\n        )) {\r\n          throw PATH_ERROR;\r\n        }\r\n        if (pathErrorCheckOnly) {\r\n          return;\r\n        }\r\n        node = this.#children[regexpStr] = new Node();\r\n        if (name !== \"\") {\r\n          node.#varIndex = context.varIndex++;\r\n        }\r\n      }\r\n      if (!pathErrorCheckOnly && name !== \"\") {\r\n        paramMap.push([name, node.#varIndex]);\r\n      }\r\n    } else {\r\n      node = this.#children[token];\r\n      if (!node) {\r\n        if (Object.keys(this.#children).some(\r\n          (k) => k.length > 1 && k !== ONLY_WILDCARD_REG_EXP_STR && k !== TAIL_WILDCARD_REG_EXP_STR\r\n        )) {\r\n          throw PATH_ERROR;\r\n        }\r\n        if (pathErrorCheckOnly) {\r\n          return;\r\n        }\r\n        node = this.#children[token] = new Node();\r\n      }\r\n    }\r\n    node.insert(restTokens, index, paramMap, context, pathErrorCheckOnly);\r\n  }\r\n  buildRegExpStr() {\r\n    const childKeys = Object.keys(this.#children).sort(compareKey);\r\n    const strList = childKeys.map((k) => {\r\n      const c = this.#children[k];\r\n      return (typeof c.#varIndex === \"number\" ? `(${k})@${c.#varIndex}` : regExpMetaChars.has(k) ? `\\\\${k}` : k) + c.buildRegExpStr();\r\n    });\r\n    if (typeof this.#index === \"number\") {\r\n      strList.unshift(`#${this.#index}`);\r\n    }\r\n    if (strList.length === 0) {\r\n      return \"\";\r\n    }\r\n    if (strList.length === 1) {\r\n      return strList[0];\r\n    }\r\n    return \"(?:\" + strList.join(\"|\") + \")\";\r\n  }\r\n};\r\nexport {\r\n  Node,\r\n  PATH_ERROR\r\n};\r\n", "// src/router/reg-exp-router/trie.ts\r\nimport { Node } from \"./node.js\";\r\nvar Trie = class {\r\n  #context = { varIndex: 0 };\r\n  #root = new Node();\r\n  insert(path, index, pathErrorCheckOnly) {\r\n    const paramAssoc = [];\r\n    const groups = [];\r\n    for (let i = 0; ; ) {\r\n      let replaced = false;\r\n      path = path.replace(/\\{[^}]+\\}/g, (m) => {\r\n        const mark = `@\\\\${i}`;\r\n        groups[i] = [mark, m];\r\n        i++;\r\n        replaced = true;\r\n        return mark;\r\n      });\r\n      if (!replaced) {\r\n        break;\r\n      }\r\n    }\r\n    const tokens = path.match(/(?::[^\\/]+)|(?:\\/\\*$)|./g) || [];\r\n    for (let i = groups.length - 1; i >= 0; i--) {\r\n      const [mark] = groups[i];\r\n      for (let j = tokens.length - 1; j >= 0; j--) {\r\n        if (tokens[j].indexOf(mark) !== -1) {\r\n          tokens[j] = tokens[j].replace(mark, groups[i][1]);\r\n          break;\r\n        }\r\n      }\r\n    }\r\n    this.#root.insert(tokens, index, paramAssoc, this.#context, pathErrorCheckOnly);\r\n    return paramAssoc;\r\n  }\r\n  buildRegExp() {\r\n    let regexp = this.#root.buildRegExpStr();\r\n    if (regexp === \"\") {\r\n      return [/^$/, [], []];\r\n    }\r\n    let captureIndex = 0;\r\n    const indexReplacementMap = [];\r\n    const paramReplacementMap = [];\r\n    regexp = regexp.replace(/#(\\d+)|@(\\d+)|\\.\\*\\$/g, (_, handlerIndex, paramIndex) => {\r\n      if (handlerIndex !== void 0) {\r\n        indexReplacementMap[++captureIndex] = Number(handlerIndex);\r\n        return \"$()\";\r\n      }\r\n      if (paramIndex !== void 0) {\r\n        paramReplacementMap[Number(paramIndex)] = ++captureIndex;\r\n        return \"\";\r\n      }\r\n      return \"\";\r\n    });\r\n    return [new RegExp(`^${regexp}`), indexReplacementMap, paramReplacementMap];\r\n  }\r\n};\r\nexport {\r\n  Trie\r\n};\r\n", "// src/router/smart-router/index.ts\r\nimport { SmartRouter } from \"./router.js\";\r\nexport {\r\n  SmartRouter\r\n};\r\n", "// src/router/smart-router/router.ts\r\nimport { MESSAGE_MATCHER_IS_ALREADY_BUILT, UnsupportedPathError } from \"../../router.js\";\r\nvar SmartRouter = class {\r\n  name = \"SmartRouter\";\r\n  #routers = [];\r\n  #routes = [];\r\n  constructor(init) {\r\n    this.#routers = init.routers;\r\n  }\r\n  add(method, path, handler) {\r\n    if (!this.#routes) {\r\n      throw new Error(MESSAGE_MATCHER_IS_ALREADY_BUILT);\r\n    }\r\n    this.#routes.push([method, path, handler]);\r\n  }\r\n  match(method, path) {\r\n    if (!this.#routes) {\r\n      throw new Error(\"Fatal error\");\r\n    }\r\n    const routers = this.#routers;\r\n    const routes = this.#routes;\r\n    const len = routers.length;\r\n    let i = 0;\r\n    let res;\r\n    for (; i < len; i++) {\r\n      const router = routers[i];\r\n      try {\r\n        for (let i2 = 0, len2 = routes.length; i2 < len2; i2++) {\r\n          router.add(...routes[i2]);\r\n        }\r\n        res = router.match(method, path);\r\n      } catch (e) {\r\n        if (e instanceof UnsupportedPathError) {\r\n          continue;\r\n        }\r\n        throw e;\r\n      }\r\n      this.match = router.match.bind(router);\r\n      this.#routers = [router];\r\n      this.#routes = void 0;\r\n      break;\r\n    }\r\n    if (i === len) {\r\n      throw new Error(\"Fatal error\");\r\n    }\r\n    this.name = `SmartRouter + ${this.activeRouter.name}`;\r\n    return res;\r\n  }\r\n  get activeRouter() {\r\n    if (this.#routes || this.#routers.length !== 1) {\r\n      throw new Error(\"No active router has been determined yet.\");\r\n    }\r\n    return this.#routers[0];\r\n  }\r\n};\r\nexport {\r\n  SmartRouter\r\n};\r\n", "// src/router/trie-router/index.ts\r\nimport { TrieRouter } from \"./router.js\";\r\nexport {\r\n  TrieRouter\r\n};\r\n", "// src/router/trie-router/router.ts\r\nimport { checkOptionalParameter } from \"../../utils/url.js\";\r\nimport { Node } from \"./node.js\";\r\nvar TrieRouter = class {\r\n  name = \"TrieRouter\";\r\n  #node;\r\n  constructor() {\r\n    this.#node = new Node();\r\n  }\r\n  add(method, path, handler) {\r\n    const results = checkOptionalParameter(path);\r\n    if (results) {\r\n      for (let i = 0, len = results.length; i < len; i++) {\r\n        this.#node.insert(method, results[i], handler);\r\n      }\r\n      return;\r\n    }\r\n    this.#node.insert(method, path, handler);\r\n  }\r\n  match(method, path) {\r\n    return this.#node.search(method, path);\r\n  }\r\n};\r\nexport {\r\n  TrieRouter\r\n};\r\n", "// src/router/trie-router/node.ts\r\nimport { METHOD_NAME_ALL } from \"../../router.js\";\r\nimport { getPattern, splitPath, splitRoutingPath } from \"../../utils/url.js\";\r\nvar emptyParams = /* @__PURE__ */ Object.create(null);\r\nvar Node = class {\r\n  #methods;\r\n  #children;\r\n  #patterns;\r\n  #order = 0;\r\n  #params = emptyParams;\r\n  constructor(method, handler, children) {\r\n    this.#children = children || /* @__PURE__ */ Object.create(null);\r\n    this.#methods = [];\r\n    if (method && handler) {\r\n      const m = /* @__PURE__ */ Object.create(null);\r\n      m[method] = { handler, possibleKeys: [], score: 0 };\r\n      this.#methods = [m];\r\n    }\r\n    this.#patterns = [];\r\n  }\r\n  insert(method, path, handler) {\r\n    this.#order = ++this.#order;\r\n    let curNode = this;\r\n    const parts = splitRoutingPath(path);\r\n    const possibleKeys = [];\r\n    for (let i = 0, len = parts.length; i < len; i++) {\r\n      const p = parts[i];\r\n      const nextP = parts[i + 1];\r\n      const pattern = getPattern(p, nextP);\r\n      const key = Array.isArray(pattern) ? pattern[0] : p;\r\n      if (key in curNode.#children) {\r\n        curNode = curNode.#children[key];\r\n        if (pattern) {\r\n          possibleKeys.push(pattern[1]);\r\n        }\r\n        continue;\r\n      }\r\n      curNode.#children[key] = new Node();\r\n      if (pattern) {\r\n        curNode.#patterns.push(pattern);\r\n        possibleKeys.push(pattern[1]);\r\n      }\r\n      curNode = curNode.#children[key];\r\n    }\r\n    curNode.#methods.push({\r\n      [method]: {\r\n        handler,\r\n        possibleKeys: possibleKeys.filter((v, i, a) => a.indexOf(v) === i),\r\n        score: this.#order\r\n      }\r\n    });\r\n    return curNode;\r\n  }\r\n  #getHandlerSets(node, method, nodeParams, params) {\r\n    const handlerSets = [];\r\n    for (let i = 0, len = node.#methods.length; i < len; i++) {\r\n      const m = node.#methods[i];\r\n      const handlerSet = m[method] || m[METHOD_NAME_ALL];\r\n      const processedSet = {};\r\n      if (handlerSet !== void 0) {\r\n        handlerSet.params = /* @__PURE__ */ Object.create(null);\r\n        handlerSets.push(handlerSet);\r\n        if (nodeParams !== emptyParams || params && params !== emptyParams) {\r\n          for (let i2 = 0, len2 = handlerSet.possibleKeys.length; i2 < len2; i2++) {\r\n            const key = handlerSet.possibleKeys[i2];\r\n            const processed = processedSet[handlerSet.score];\r\n            handlerSet.params[key] = params?.[key] && !processed ? params[key] : nodeParams[key] ?? params?.[key];\r\n            processedSet[handlerSet.score] = true;\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return handlerSets;\r\n  }\r\n  search(method, path) {\r\n    const handlerSets = [];\r\n    this.#params = emptyParams;\r\n    const curNode = this;\r\n    let curNodes = [curNode];\r\n    const parts = splitPath(path);\r\n    const curNodesQueue = [];\r\n    for (let i = 0, len = parts.length; i < len; i++) {\r\n      const part = parts[i];\r\n      const isLast = i === len - 1;\r\n      const tempNodes = [];\r\n      for (let j = 0, len2 = curNodes.length; j < len2; j++) {\r\n        const node = curNodes[j];\r\n        const nextNode = node.#children[part];\r\n        if (nextNode) {\r\n          nextNode.#params = node.#params;\r\n          if (isLast) {\r\n            if (nextNode.#children[\"*\"]) {\r\n              handlerSets.push(\r\n                ...this.#getHandlerSets(nextNode.#children[\"*\"], method, node.#params)\r\n              );\r\n            }\r\n            handlerSets.push(...this.#getHandlerSets(nextNode, method, node.#params));\r\n          } else {\r\n            tempNodes.push(nextNode);\r\n          }\r\n        }\r\n        for (let k = 0, len3 = node.#patterns.length; k < len3; k++) {\r\n          const pattern = node.#patterns[k];\r\n          const params = node.#params === emptyParams ? {} : { ...node.#params };\r\n          if (pattern === \"*\") {\r\n            const astNode = node.#children[\"*\"];\r\n            if (astNode) {\r\n              handlerSets.push(...this.#getHandlerSets(astNode, method, node.#params));\r\n              astNode.#params = params;\r\n              tempNodes.push(astNode);\r\n            }\r\n            continue;\r\n          }\r\n          const [key, name, matcher] = pattern;\r\n          if (!part && !(matcher instanceof RegExp)) {\r\n            continue;\r\n          }\r\n          const child = node.#children[key];\r\n          const restPathString = parts.slice(i).join(\"/\");\r\n          if (matcher instanceof RegExp) {\r\n            const m = matcher.exec(restPathString);\r\n            if (m) {\r\n              params[name] = m[0];\r\n              handlerSets.push(...this.#getHandlerSets(child, method, node.#params, params));\r\n              if (Object.keys(child.#children).length) {\r\n                child.#params = params;\r\n                const componentCount = m[0].match(/\\//)?.length ?? 0;\r\n                const targetCurNodes = curNodesQueue[componentCount] ||= [];\r\n                targetCurNodes.push(child);\r\n              }\r\n              continue;\r\n            }\r\n          }\r\n          if (matcher === true || matcher.test(part)) {\r\n            params[name] = part;\r\n            if (isLast) {\r\n              handlerSets.push(...this.#getHandlerSets(child, method, params, node.#params));\r\n              if (child.#children[\"*\"]) {\r\n                handlerSets.push(\r\n                  ...this.#getHandlerSets(child.#children[\"*\"], method, params, node.#params)\r\n                );\r\n              }\r\n            } else {\r\n              child.#params = params;\r\n              tempNodes.push(child);\r\n            }\r\n          }\r\n        }\r\n      }\r\n      curNodes = tempNodes.concat(curNodesQueue.shift() ?? []);\r\n    }\r\n    if (handlerSets.length > 1) {\r\n      handlerSets.sort((a, b) => {\r\n        return a.score - b.score;\r\n      });\r\n    }\r\n    return [handlerSets.map(({ handler, params }) => [handler, params])];\r\n  }\r\n};\r\nexport {\r\n  Node\r\n};\r\n", "// src/middleware/cors/index.ts\r\nvar cors = (options) => {\r\n  const defaults = {\r\n    origin: \"*\",\r\n    allowMethods: [\"GET\", \"HEAD\", \"PUT\", \"POST\", \"DELETE\", \"PATCH\"],\r\n    allowHeaders: [],\r\n    exposeHeaders: []\r\n  };\r\n  const opts = {\r\n    ...defaults,\r\n    ...options\r\n  };\r\n  const findAllowOrigin = ((optsOrigin) => {\r\n    if (typeof optsOrigin === \"string\") {\r\n      if (optsOrigin === \"*\") {\r\n        return () => optsOrigin;\r\n      } else {\r\n        return (origin) => optsOrigin === origin ? origin : null;\r\n      }\r\n    } else if (typeof optsOrigin === \"function\") {\r\n      return optsOrigin;\r\n    } else {\r\n      return (origin) => optsOrigin.includes(origin) ? origin : null;\r\n    }\r\n  })(opts.origin);\r\n  const findAllowMethods = ((optsAllowMethods) => {\r\n    if (typeof optsAllowMethods === \"function\") {\r\n      return optsAllowMethods;\r\n    } else if (Array.isArray(optsAllowMethods)) {\r\n      return () => optsAllowMethods;\r\n    } else {\r\n      return () => [];\r\n    }\r\n  })(opts.allowMethods);\r\n  return async function cors2(c, next) {\r\n    function set(key, value) {\r\n      c.res.headers.set(key, value);\r\n    }\r\n    const allowOrigin = await findAllowOrigin(c.req.header(\"origin\") || \"\", c);\r\n    if (allowOrigin) {\r\n      set(\"Access-Control-Allow-Origin\", allowOrigin);\r\n    }\r\n    if (opts.origin !== \"*\") {\r\n      const existingVary = c.req.header(\"Vary\");\r\n      if (existingVary) {\r\n        set(\"Vary\", existingVary);\r\n      } else {\r\n        set(\"Vary\", \"Origin\");\r\n      }\r\n    }\r\n    if (opts.credentials) {\r\n      set(\"Access-Control-Allow-Credentials\", \"true\");\r\n    }\r\n    if (opts.exposeHeaders?.length) {\r\n      set(\"Access-Control-Expose-Headers\", opts.exposeHeaders.join(\",\"));\r\n    }\r\n    if (c.req.method === \"OPTIONS\") {\r\n      if (opts.maxAge != null) {\r\n        set(\"Access-Control-Max-Age\", opts.maxAge.toString());\r\n      }\r\n      const allowMethods = await findAllowMethods(c.req.header(\"origin\") || \"\", c);\r\n      if (allowMethods.length) {\r\n        set(\"Access-Control-Allow-Methods\", allowMethods.join(\",\"));\r\n      }\r\n      let headers = opts.allowHeaders;\r\n      if (!headers?.length) {\r\n        const requestHeaders = c.req.header(\"Access-Control-Request-Headers\");\r\n        if (requestHeaders) {\r\n          headers = requestHeaders.split(/\\s*,\\s*/);\r\n        }\r\n      }\r\n      if (headers?.length) {\r\n        set(\"Access-Control-Allow-Headers\", headers.join(\",\"));\r\n        c.res.headers.append(\"Vary\", \"Access-Control-Request-Headers\");\r\n      }\r\n      c.res.headers.delete(\"Content-Length\");\r\n      c.res.headers.delete(\"Content-Type\");\r\n      return new Response(null, {\r\n        headers: c.res.headers,\r\n        status: 204,\r\n        statusText: \"No Content\"\r\n      });\r\n    }\r\n    await next();\r\n  };\r\n};\r\nexport {\r\n  cors\r\n};\r\n", "import type { MiddlewareHandler } from 'hono';\r\nimport type { Env } from '../lib/types';\r\nimport { makeDb } from '../db/client';\r\n\r\n\r\nexport const withDb: MiddlewareHandler<{ Bindings: Env; Variables: CtxVars }> = async (c, next) => {\r\n  if (!c.var.db) c.set('db', makeDb(c.env));\r\n  await next();\r\n};\r\n", "import { drizzle } from 'drizzle-orm/neon-http';\r\nimport { neon } from '@neondatabase/serverless';\r\n\r\n\r\nexport function makeDb(env: { DATABASE_URL?: string; MIGRATION_URL?: string }) {\r\n  // Tenta DATABASE_URL (Worker) e, se faltar, usa MIGRATION_URL\r\n  const url = env.DATABASE_URL ?? env.MIGRATION_URL;\r\n  if (!url) throw new Error('DATABASE_URL n\u00E3o configurada');\r\n  const sql = neon(url);\r\n  return drizzle(sql);\r\n}\r\n", "import type { HTTPQueryOptions, HTTPTransactionOptions, NeonQueryFunction } from '@neondatabase/serverless';\nimport { neon, types } from '@neondatabase/serverless';\nimport type { BatchItem, BatchResponse } from '~/batch.ts';\nimport type { Cache } from '~/cache/core/cache.ts';\nimport { entityKind } from '~/entity.ts';\nimport type { Logger } from '~/logger.ts';\nimport { DefaultLogger } from '~/logger.ts';\nimport { PgDatabase } from '~/pg-core/db.ts';\nimport { PgDialect } from '~/pg-core/dialect.ts';\nimport { createTableRelationsHelpers, extractTablesRelationalConfig } from '~/relations.ts';\nimport type { ExtractTablesWithRelations, RelationalSchemaConfig, TablesRelationalConfig } from '~/relations.ts';\nimport { type DrizzleConfig, isConfig } from '~/utils.ts';\nimport { type NeonHttpClient, type NeonHttpQueryResultHKT, NeonHttpSession } from './session.ts';\n\nexport interface NeonDriverOptions {\n\tlogger?: Logger;\n\tcache?: Cache;\n}\n\nexport class NeonHttpDriver {\n\tstatic readonly [entityKind]: string = 'NeonHttpDriver';\n\n\tconstructor(\n\t\tprivate client: NeonHttpClient,\n\t\tprivate dialect: PgDialect,\n\t\tprivate options: NeonDriverOptions = {},\n\t) {\n\t\tthis.initMappers();\n\t}\n\n\tcreateSession(\n\t\tschema: RelationalSchemaConfig<TablesRelationalConfig> | undefined,\n\t): NeonHttpSession<Record<string, unknown>, TablesRelationalConfig> {\n\t\treturn new NeonHttpSession(this.client, this.dialect, schema, {\n\t\t\tlogger: this.options.logger,\n\t\t\tcache: this.options.cache,\n\t\t});\n\t}\n\n\tinitMappers() {\n\t\ttypes.setTypeParser(types.builtins.TIMESTAMPTZ, (val) => val);\n\t\ttypes.setTypeParser(types.builtins.TIMESTAMP, (val) => val);\n\t\ttypes.setTypeParser(types.builtins.DATE, (val) => val);\n\t\ttypes.setTypeParser(types.builtins.INTERVAL, (val) => val);\n\t\ttypes.setTypeParser(1231, (val) => val);\n\t\ttypes.setTypeParser(1115, (val) => val);\n\t\ttypes.setTypeParser(1185, (val) => val);\n\t\ttypes.setTypeParser(1187, (val) => val);\n\t\ttypes.setTypeParser(1182, (val) => val);\n\t}\n}\n\nfunction wrap<T extends object>(\n\ttarget: T,\n\ttoken: Exclude<HTTPQueryOptions<true, true>['authToken'], undefined>,\n\tcb: (target: any, p: string | symbol, res: any) => any,\n\tdeep?: boolean,\n) {\n\treturn new Proxy(target, {\n\t\tget(target, p) {\n\t\t\tconst element = target[p as keyof typeof p];\n\t\t\tif (typeof element !== 'function' && (typeof element !== 'object' || element === null)) return element;\n\n\t\t\tif (deep) return wrap(element, token, cb);\n\t\t\tif (p === 'query') return wrap(element, token, cb, true);\n\n\t\t\treturn new Proxy(element as any, {\n\t\t\t\tapply(target, thisArg, argArray) {\n\t\t\t\t\tconst res = target.call(thisArg, ...argArray);\n\t\t\t\t\tif (typeof res === 'object' && res !== null && 'setToken' in res && typeof res.setToken === 'function') {\n\t\t\t\t\t\tres.setToken(token);\n\t\t\t\t\t}\n\t\t\t\t\treturn cb(target, p, res);\n\t\t\t\t},\n\t\t\t});\n\t\t},\n\t});\n}\n\nexport class NeonHttpDatabase<\n\tTSchema extends Record<string, unknown> = Record<string, never>,\n> extends PgDatabase<NeonHttpQueryResultHKT, TSchema> {\n\tstatic override readonly [entityKind]: string = 'NeonHttpDatabase';\n\n\t$withAuth(\n\t\ttoken: Exclude<HTTPQueryOptions<true, true>['authToken'], undefined>,\n\t): Omit<\n\t\tthis,\n\t\tExclude<\n\t\t\tkeyof this,\n\t\t\t| '$count'\n\t\t\t| 'delete'\n\t\t\t| 'select'\n\t\t\t| 'selectDistinct'\n\t\t\t| 'selectDistinctOn'\n\t\t\t| 'update'\n\t\t\t| 'insert'\n\t\t\t| 'with'\n\t\t\t| 'query'\n\t\t\t| 'execute'\n\t\t\t| 'refreshMaterializedView'\n\t\t>\n\t> {\n\t\tthis.authToken = token;\n\n\t\treturn wrap(this, token, (target, p, res) => {\n\t\t\tif (p === 'with') {\n\t\t\t\treturn wrap(res, token, (_, __, res) => res);\n\t\t\t}\n\t\t\treturn res;\n\t\t});\n\t}\n\n\t/** @internal */\n\tdeclare readonly session: NeonHttpSession<TSchema, ExtractTablesWithRelations<TSchema>>;\n\n\tasync batch<U extends BatchItem<'pg'>, T extends Readonly<[U, ...U[]]>>(\n\t\tbatch: T,\n\t): Promise<BatchResponse<T>> {\n\t\treturn this.session.batch(batch) as Promise<BatchResponse<T>>;\n\t}\n}\n\nfunction construct<\n\tTSchema extends Record<string, unknown> = Record<string, never>,\n\tTClient extends NeonQueryFunction<any, any> = NeonQueryFunction<any, any>,\n>(\n\tclient: TClient,\n\tconfig: DrizzleConfig<TSchema> = {},\n): NeonHttpDatabase<TSchema> & {\n\t$client: TClient;\n} {\n\tconst dialect = new PgDialect({ casing: config.casing });\n\tlet logger;\n\tif (config.logger === true) {\n\t\tlogger = new DefaultLogger();\n\t} else if (config.logger !== false) {\n\t\tlogger = config.logger;\n\t}\n\n\tlet schema: RelationalSchemaConfig<TablesRelationalConfig> | undefined;\n\tif (config.schema) {\n\t\tconst tablesConfig = extractTablesRelationalConfig(\n\t\t\tconfig.schema,\n\t\t\tcreateTableRelationsHelpers,\n\t\t);\n\t\tschema = {\n\t\t\tfullSchema: config.schema,\n\t\t\tschema: tablesConfig.tables,\n\t\t\ttableNamesMap: tablesConfig.tableNamesMap,\n\t\t};\n\t}\n\n\tconst driver = new NeonHttpDriver(client, dialect, { logger, cache: config.cache });\n\tconst session = driver.createSession(schema);\n\n\tconst db = new NeonHttpDatabase(\n\t\tdialect,\n\t\tsession,\n\t\tschema as RelationalSchemaConfig<ExtractTablesWithRelations<TSchema>> | undefined,\n\t);\n\t(<any> db).$client = client;\n\t(<any> db).$cache = config.cache;\n\tif ((<any> db).$cache) {\n\t\t(<any> db).$cache['invalidate'] = config.cache?.onMutate;\n\t}\n\n\treturn db as any;\n}\n\nexport function drizzle<\n\tTSchema extends Record<string, unknown> = Record<string, never>,\n\tTClient extends NeonQueryFunction<any, any> = NeonQueryFunction<false, false>,\n>(\n\t...params: [\n\t\tTClient | string,\n\t] | [\n\t\tTClient | string,\n\t\tDrizzleConfig<TSchema>,\n\t] | [\n\t\t(\n\t\t\t& DrizzleConfig<TSchema>\n\t\t\t& ({\n\t\t\t\tconnection: string | ({ connectionString: string } & HTTPTransactionOptions<boolean, boolean>);\n\t\t\t} | {\n\t\t\t\tclient: TClient;\n\t\t\t})\n\t\t),\n\t]\n): NeonHttpDatabase<TSchema> & {\n\t$client: TClient;\n} {\n\tif (typeof params[0] === 'string') {\n\t\tconst instance = neon(params[0] as string);\n\t\treturn construct(instance, params[1]) as any;\n\t}\n\n\tif (isConfig(params[0])) {\n\t\tconst { connection, client, ...drizzleConfig } = params[0] as\n\t\t\t& {\n\t\t\t\tconnection?:\n\t\t\t\t\t| ({\n\t\t\t\t\t\tconnectionString: string;\n\t\t\t\t\t} & HTTPTransactionOptions<boolean, boolean>)\n\t\t\t\t\t| string;\n\t\t\t\tclient?: TClient;\n\t\t\t}\n\t\t\t& DrizzleConfig<TSchema>;\n\n\t\tif (client) return construct(client, drizzleConfig);\n\n\t\tif (typeof connection === 'object') {\n\t\t\tconst { connectionString, ...options } = connection;\n\n\t\t\tconst instance = neon(connectionString, options);\n\n\t\t\treturn construct(instance, drizzleConfig) as any;\n\t\t}\n\n\t\tconst instance = neon(connection!);\n\n\t\treturn construct(instance, drizzleConfig) as any;\n\t}\n\n\treturn construct(params[0] as TClient, params[1] as DrizzleConfig<TSchema> | undefined) as any;\n}\n\nexport namespace drizzle {\n\texport function mock<TSchema extends Record<string, unknown> = Record<string, never>>(\n\t\tconfig?: DrizzleConfig<TSchema>,\n\t): NeonHttpDatabase<TSchema> & {\n\t\t$client: '$client is not available on drizzle.mock()';\n\t} {\n\t\treturn construct({} as any, config) as any;\n\t}\n}\n", "/* @ts-self-types=\"./index.d.mts\" */\r\nvar So=Object.create;var Ie=Object.defineProperty;var Eo=Object.getOwnPropertyDescriptor;var Ao=Object.getOwnPropertyNames;var Co=Object.getPrototypeOf,_o=Object.prototype.hasOwnProperty;var Io=(r,e,t)=>e in r?Ie(r,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):r[e]=t;var a=(r,e)=>Ie(r,\"name\",{value:e,configurable:!0});var G=(r,e)=>()=>(r&&(e=r(r=0)),e);var T=(r,e)=>()=>(e||r((e={exports:{}}).exports,e),e.exports),ie=(r,e)=>{for(var t in e)Ie(r,t,{get:e[t],\r\nenumerable:!0})},Dn=(r,e,t,n)=>{if(e&&typeof e==\"object\"||typeof e==\"function\")for(let i of Ao(e))!_o.\r\ncall(r,i)&&i!==t&&Ie(r,i,{get:()=>e[i],enumerable:!(n=Eo(e,i))||n.enumerable});return r};var Se=(r,e,t)=>(t=r!=null?So(Co(r)):{},Dn(e||!r||!r.__esModule?Ie(t,\"default\",{value:r,enumerable:!0}):\r\nt,r)),O=r=>Dn(Ie({},\"__esModule\",{value:!0}),r);var E=(r,e,t)=>Io(r,typeof e!=\"symbol\"?e+\"\":e,t);var Qn=T(lt=>{\"use strict\";p();lt.byteLength=Po;lt.toByteArray=Ro;lt.fromByteArray=ko;var ae=[],te=[],\r\nTo=typeof Uint8Array<\"u\"?Uint8Array:Array,qt=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz01\\\r\n23456789+/\";for(Ee=0,On=qt.length;Ee<On;++Ee)ae[Ee]=qt[Ee],te[qt.charCodeAt(Ee)]=Ee;var Ee,On;te[45]=\r\n62;te[95]=63;function qn(r){var e=r.length;if(e%4>0)throw new Error(\"Invalid string. Length must be \\\r\na multiple of 4\");var t=r.indexOf(\"=\");t===-1&&(t=e);var n=t===e?0:4-t%4;return[t,n]}a(qn,\"getLens\");\r\nfunction Po(r){var e=qn(r),t=e[0],n=e[1];return(t+n)*3/4-n}a(Po,\"byteLength\");function Bo(r,e,t){return(e+\r\nt)*3/4-t}a(Bo,\"_byteLength\");function Ro(r){var e,t=qn(r),n=t[0],i=t[1],s=new To(Bo(r,n,i)),o=0,u=i>\r\n0?n-4:n,c;for(c=0;c<u;c+=4)e=te[r.charCodeAt(c)]<<18|te[r.charCodeAt(c+1)]<<12|te[r.charCodeAt(c+2)]<<\r\n6|te[r.charCodeAt(c+3)],s[o++]=e>>16&255,s[o++]=e>>8&255,s[o++]=e&255;return i===2&&(e=te[r.charCodeAt(\r\nc)]<<2|te[r.charCodeAt(c+1)]>>4,s[o++]=e&255),i===1&&(e=te[r.charCodeAt(c)]<<10|te[r.charCodeAt(c+1)]<<\r\n4|te[r.charCodeAt(c+2)]>>2,s[o++]=e>>8&255,s[o++]=e&255),s}a(Ro,\"toByteArray\");function Lo(r){return ae[r>>\r\n18&63]+ae[r>>12&63]+ae[r>>6&63]+ae[r&63]}a(Lo,\"tripletToBase64\");function Fo(r,e,t){for(var n,i=[],s=e;s<\r\nt;s+=3)n=(r[s]<<16&16711680)+(r[s+1]<<8&65280)+(r[s+2]&255),i.push(Lo(n));return i.join(\"\")}a(Fo,\"en\\\r\ncodeChunk\");function ko(r){for(var e,t=r.length,n=t%3,i=[],s=16383,o=0,u=t-n;o<u;o+=s)i.push(Fo(r,o,\r\no+s>u?u:o+s));return n===1?(e=r[t-1],i.push(ae[e>>2]+ae[e<<4&63]+\"==\")):n===2&&(e=(r[t-2]<<8)+r[t-1],\r\ni.push(ae[e>>10]+ae[e>>4&63]+ae[e<<2&63]+\"=\")),i.join(\"\")}a(ko,\"fromByteArray\")});var Nn=T(Qt=>{p();Qt.read=function(r,e,t,n,i){var s,o,u=i*8-n-1,c=(1<<u)-1,l=c>>1,f=-7,y=t?i-1:0,g=t?\r\n-1:1,A=r[e+y];for(y+=g,s=A&(1<<-f)-1,A>>=-f,f+=u;f>0;s=s*256+r[e+y],y+=g,f-=8);for(o=s&(1<<-f)-1,s>>=\r\n-f,f+=n;f>0;o=o*256+r[e+y],y+=g,f-=8);if(s===0)s=1-l;else{if(s===c)return o?NaN:(A?-1:1)*(1/0);o=o+Math.\r\npow(2,n),s=s-l}return(A?-1:1)*o*Math.pow(2,s-n)};Qt.write=function(r,e,t,n,i,s){var o,u,c,l=s*8-i-1,\r\nf=(1<<l)-1,y=f>>1,g=i===23?Math.pow(2,-24)-Math.pow(2,-77):0,A=n?0:s-1,C=n?1:-1,D=e<0||e===0&&1/e<0?\r\n1:0;for(e=Math.abs(e),isNaN(e)||e===1/0?(u=isNaN(e)?1:0,o=f):(o=Math.floor(Math.log(e)/Math.LN2),e*(c=\r\nMath.pow(2,-o))<1&&(o--,c*=2),o+y>=1?e+=g/c:e+=g*Math.pow(2,1-y),e*c>=2&&(o++,c/=2),o+y>=f?(u=0,o=f):\r\no+y>=1?(u=(e*c-1)*Math.pow(2,i),o=o+y):(u=e*Math.pow(2,y-1)*Math.pow(2,i),o=0));i>=8;r[t+A]=u&255,A+=\r\nC,u/=256,i-=8);for(o=o<<i|u,l+=i;l>0;r[t+A]=o&255,A+=C,o/=256,l-=8);r[t+A-C]|=D*128}});var ii=T(Re=>{\"use strict\";p();var Nt=Qn(),Pe=Nn(),Wn=typeof Symbol==\"function\"&&typeof Symbol.for==\r\n\"function\"?Symbol.for(\"nodejs.util.inspect.custom\"):null;Re.Buffer=h;Re.SlowBuffer=Qo;Re.INSPECT_MAX_BYTES=\r\n50;var ft=2147483647;Re.kMaxLength=ft;h.TYPED_ARRAY_SUPPORT=Mo();!h.TYPED_ARRAY_SUPPORT&&typeof console<\r\n\"u\"&&typeof console.error==\"function\"&&console.error(\"This browser lacks typed array (Uint8Array) su\\\r\npport which is required by `buffer` v5.x. Use `buffer` v4.x if you require old browser support.\");function Mo(){\r\ntry{let r=new Uint8Array(1),e={foo:a(function(){return 42},\"foo\")};return Object.setPrototypeOf(e,Uint8Array.\r\nprototype),Object.setPrototypeOf(r,e),r.foo()===42}catch{return!1}}a(Mo,\"typedArraySupport\");Object.\r\ndefineProperty(h.prototype,\"parent\",{enumerable:!0,get:a(function(){if(h.isBuffer(this))return this.\r\nbuffer},\"get\")});Object.defineProperty(h.prototype,\"offset\",{enumerable:!0,get:a(function(){if(h.isBuffer(\r\nthis))return this.byteOffset},\"get\")});function he(r){if(r>ft)throw new RangeError('The value \"'+r+'\\\r\n\" is invalid for option \"size\"');let e=new Uint8Array(r);return Object.setPrototypeOf(e,h.prototype),\r\ne}a(he,\"createBuffer\");function h(r,e,t){if(typeof r==\"number\"){if(typeof e==\"string\")throw new TypeError(\r\n'The \"string\" argument must be of type string. Received type number');return $t(r)}return Gn(r,e,t)}\r\na(h,\"Buffer\");h.poolSize=8192;function Gn(r,e,t){if(typeof r==\"string\")return Do(r,e);if(ArrayBuffer.\r\nisView(r))return Oo(r);if(r==null)throw new TypeError(\"The first argument must be one of type string\\\r\n, Buffer, ArrayBuffer, Array, or Array-like Object. Received type \"+typeof r);if(ue(r,ArrayBuffer)||\r\nr&&ue(r.buffer,ArrayBuffer)||typeof SharedArrayBuffer<\"u\"&&(ue(r,SharedArrayBuffer)||r&&ue(r.buffer,\r\nSharedArrayBuffer)))return jt(r,e,t);if(typeof r==\"number\")throw new TypeError('The \"value\" argument\\\r\n must not be of type number. Received type number');let n=r.valueOf&&r.valueOf();if(n!=null&&n!==r)return h.\r\nfrom(n,e,t);let i=qo(r);if(i)return i;if(typeof Symbol<\"u\"&&Symbol.toPrimitive!=null&&typeof r[Symbol.\r\ntoPrimitive]==\"function\")return h.from(r[Symbol.toPrimitive](\"string\"),e,t);throw new TypeError(\"The\\\r\n first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Receiv\\\r\ned type \"+typeof r)}a(Gn,\"from\");h.from=function(r,e,t){return Gn(r,e,t)};Object.setPrototypeOf(h.prototype,\r\nUint8Array.prototype);Object.setPrototypeOf(h,Uint8Array);function Vn(r){if(typeof r!=\"number\")throw new TypeError(\r\n'\"size\" argument must be of type number');if(r<0)throw new RangeError('The value \"'+r+'\" is invalid \\\r\nfor option \"size\"')}a(Vn,\"assertSize\");function Uo(r,e,t){return Vn(r),r<=0?he(r):e!==void 0?typeof t==\r\n\"string\"?he(r).fill(e,t):he(r).fill(e):he(r)}a(Uo,\"alloc\");h.alloc=function(r,e,t){return Uo(r,e,t)};\r\nfunction $t(r){return Vn(r),he(r<0?0:Gt(r)|0)}a($t,\"allocUnsafe\");h.allocUnsafe=function(r){return $t(\r\nr)};h.allocUnsafeSlow=function(r){return $t(r)};function Do(r,e){if((typeof e!=\"string\"||e===\"\")&&(e=\r\n\"utf8\"),!h.isEncoding(e))throw new TypeError(\"Unknown encoding: \"+e);let t=zn(r,e)|0,n=he(t),i=n.write(\r\nr,e);return i!==t&&(n=n.slice(0,i)),n}a(Do,\"fromString\");function Wt(r){let e=r.length<0?0:Gt(r.length)|\r\n0,t=he(e);for(let n=0;n<e;n+=1)t[n]=r[n]&255;return t}a(Wt,\"fromArrayLike\");function Oo(r){if(ue(r,Uint8Array)){\r\nlet e=new Uint8Array(r);return jt(e.buffer,e.byteOffset,e.byteLength)}return Wt(r)}a(Oo,\"fromArrayVi\\\r\new\");function jt(r,e,t){if(e<0||r.byteLength<e)throw new RangeError('\"offset\" is outside of buffer b\\\r\nounds');if(r.byteLength<e+(t||0))throw new RangeError('\"length\" is outside of buffer bounds');let n;\r\nreturn e===void 0&&t===void 0?n=new Uint8Array(r):t===void 0?n=new Uint8Array(r,e):n=new Uint8Array(\r\nr,e,t),Object.setPrototypeOf(n,h.prototype),n}a(jt,\"fromArrayBuffer\");function qo(r){if(h.isBuffer(r)){\r\nlet e=Gt(r.length)|0,t=he(e);return t.length===0||r.copy(t,0,0,e),t}if(r.length!==void 0)return typeof r.\r\nlength!=\"number\"||zt(r.length)?he(0):Wt(r);if(r.type===\"Buffer\"&&Array.isArray(r.data))return Wt(r.data)}\r\na(qo,\"fromObject\");function Gt(r){if(r>=ft)throw new RangeError(\"Attempt to allocate Buffer larger t\\\r\nhan maximum size: 0x\"+ft.toString(16)+\" bytes\");return r|0}a(Gt,\"checked\");function Qo(r){return+r!=\r\nr&&(r=0),h.alloc(+r)}a(Qo,\"SlowBuffer\");h.isBuffer=a(function(e){return e!=null&&e._isBuffer===!0&&e!==\r\nh.prototype},\"isBuffer\");h.compare=a(function(e,t){if(ue(e,Uint8Array)&&(e=h.from(e,e.offset,e.byteLength)),\r\nue(t,Uint8Array)&&(t=h.from(t,t.offset,t.byteLength)),!h.isBuffer(e)||!h.isBuffer(t))throw new TypeError(\r\n'The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array');if(e===t)return 0;let n=e.length,\r\ni=t.length;for(let s=0,o=Math.min(n,i);s<o;++s)if(e[s]!==t[s]){n=e[s],i=t[s];break}return n<i?-1:i<n?\r\n1:0},\"compare\");h.isEncoding=a(function(e){switch(String(e).toLowerCase()){case\"hex\":case\"utf8\":case\"\\\r\nutf-8\":case\"ascii\":case\"latin1\":case\"binary\":case\"base64\":case\"ucs2\":case\"ucs-2\":case\"utf16le\":case\"\\\r\nutf-16le\":return!0;default:return!1}},\"isEncoding\");h.concat=a(function(e,t){if(!Array.isArray(e))throw new TypeError(\r\n'\"list\" argument must be an Array of Buffers');if(e.length===0)return h.alloc(0);let n;if(t===void 0)\r\nfor(t=0,n=0;n<e.length;++n)t+=e[n].length;let i=h.allocUnsafe(t),s=0;for(n=0;n<e.length;++n){let o=e[n];\r\nif(ue(o,Uint8Array))s+o.length>i.length?(h.isBuffer(o)||(o=h.from(o)),o.copy(i,s)):Uint8Array.prototype.\r\nset.call(i,o,s);else if(h.isBuffer(o))o.copy(i,s);else throw new TypeError('\"list\" argument must be \\\r\nan Array of Buffers');s+=o.length}return i},\"concat\");function zn(r,e){if(h.isBuffer(r))return r.length;\r\nif(ArrayBuffer.isView(r)||ue(r,ArrayBuffer))return r.byteLength;if(typeof r!=\"string\")throw new TypeError(\r\n'The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. Received type '+typeof r);\r\nlet t=r.length,n=arguments.length>2&&arguments[2]===!0;if(!n&&t===0)return 0;let i=!1;for(;;)switch(e){case\"\\\r\nascii\":case\"latin1\":case\"binary\":return t;case\"utf8\":case\"utf-8\":return Ht(r).length;case\"ucs2\":case\"\\\r\nucs-2\":case\"utf16le\":case\"utf-16le\":return t*2;case\"hex\":return t>>>1;case\"base64\":return ni(r).length;default:\r\nif(i)return n?-1:Ht(r).length;e=(\"\"+e).toLowerCase(),i=!0}}a(zn,\"byteLength\");h.byteLength=zn;function No(r,e,t){\r\nlet n=!1;if((e===void 0||e<0)&&(e=0),e>this.length||((t===void 0||t>this.length)&&(t=this.length),t<=\r\n0)||(t>>>=0,e>>>=0,t<=e))return\"\";for(r||(r=\"utf8\");;)switch(r){case\"hex\":return Zo(this,e,t);case\"u\\\r\ntf8\":case\"utf-8\":return Yn(this,e,t);case\"ascii\":return Ko(this,e,t);case\"latin1\":case\"binary\":return Yo(\r\nthis,e,t);case\"base64\":return Vo(this,e,t);case\"ucs2\":case\"ucs-2\":case\"utf16le\":case\"utf-16le\":return Jo(\r\nthis,e,t);default:if(n)throw new TypeError(\"Unknown encoding: \"+r);r=(r+\"\").toLowerCase(),n=!0}}a(No,\r\n\"slowToString\");h.prototype._isBuffer=!0;function Ae(r,e,t){let n=r[e];r[e]=r[t],r[t]=n}a(Ae,\"swap\");\r\nh.prototype.swap16=a(function(){let e=this.length;if(e%2!==0)throw new RangeError(\"Buffer size must \\\r\nbe a multiple of 16-bits\");for(let t=0;t<e;t+=2)Ae(this,t,t+1);return this},\"swap16\");h.prototype.swap32=\r\na(function(){let e=this.length;if(e%4!==0)throw new RangeError(\"Buffer size must be a multiple of 32\\\r\n-bits\");for(let t=0;t<e;t+=4)Ae(this,t,t+3),Ae(this,t+1,t+2);return this},\"swap32\");h.prototype.swap64=\r\na(function(){let e=this.length;if(e%8!==0)throw new RangeError(\"Buffer size must be a multiple of 64\\\r\n-bits\");for(let t=0;t<e;t+=8)Ae(this,t,t+7),Ae(this,t+1,t+6),Ae(this,t+2,t+5),Ae(this,t+3,t+4);return this},\r\n\"swap64\");h.prototype.toString=a(function(){let e=this.length;return e===0?\"\":arguments.length===0?Yn(\r\nthis,0,e):No.apply(this,arguments)},\"toString\");h.prototype.toLocaleString=h.prototype.toString;h.prototype.\r\nequals=a(function(e){if(!h.isBuffer(e))throw new TypeError(\"Argument must be a Buffer\");return this===\r\ne?!0:h.compare(this,e)===0},\"equals\");h.prototype.inspect=a(function(){let e=\"\",t=Re.INSPECT_MAX_BYTES;\r\nreturn e=this.toString(\"hex\",0,t).replace(/(.{2})/g,\"$1 \").trim(),this.length>t&&(e+=\" ... \"),\"<Buff\\\r\ner \"+e+\">\"},\"inspect\");Wn&&(h.prototype[Wn]=h.prototype.inspect);h.prototype.compare=a(function(e,t,n,i,s){\r\nif(ue(e,Uint8Array)&&(e=h.from(e,e.offset,e.byteLength)),!h.isBuffer(e))throw new TypeError('The \"ta\\\r\nrget\" argument must be one of type Buffer or Uint8Array. Received type '+typeof e);if(t===void 0&&(t=\r\n0),n===void 0&&(n=e?e.length:0),i===void 0&&(i=0),s===void 0&&(s=this.length),t<0||n>e.length||i<0||\r\ns>this.length)throw new RangeError(\"out of range index\");if(i>=s&&t>=n)return 0;if(i>=s)return-1;if(t>=\r\nn)return 1;if(t>>>=0,n>>>=0,i>>>=0,s>>>=0,this===e)return 0;let o=s-i,u=n-t,c=Math.min(o,u),l=this.slice(\r\ni,s),f=e.slice(t,n);for(let y=0;y<c;++y)if(l[y]!==f[y]){o=l[y],u=f[y];break}return o<u?-1:u<o?1:0},\"\\\r\ncompare\");function Kn(r,e,t,n,i){if(r.length===0)return-1;if(typeof t==\"string\"?(n=t,t=0):t>2147483647?\r\nt=2147483647:t<-2147483648&&(t=-2147483648),t=+t,zt(t)&&(t=i?0:r.length-1),t<0&&(t=r.length+t),t>=r.\r\nlength){if(i)return-1;t=r.length-1}else if(t<0)if(i)t=0;else return-1;if(typeof e==\"string\"&&(e=h.from(\r\ne,n)),h.isBuffer(e))return e.length===0?-1:jn(r,e,t,n,i);if(typeof e==\"number\")return e=e&255,typeof Uint8Array.\r\nprototype.indexOf==\"function\"?i?Uint8Array.prototype.indexOf.call(r,e,t):Uint8Array.prototype.lastIndexOf.\r\ncall(r,e,t):jn(r,[e],t,n,i);throw new TypeError(\"val must be string, number or Buffer\")}a(Kn,\"bidire\\\r\nctionalIndexOf\");function jn(r,e,t,n,i){let s=1,o=r.length,u=e.length;if(n!==void 0&&(n=String(n).toLowerCase(),\r\nn===\"ucs2\"||n===\"ucs-2\"||n===\"utf16le\"||n===\"utf-16le\")){if(r.length<2||e.length<2)return-1;s=2,o/=2,\r\nu/=2,t/=2}function c(f,y){return s===1?f[y]:f.readUInt16BE(y*s)}a(c,\"read\");let l;if(i){let f=-1;for(l=\r\nt;l<o;l++)if(c(r,l)===c(e,f===-1?0:l-f)){if(f===-1&&(f=l),l-f+1===u)return f*s}else f!==-1&&(l-=l-f),\r\nf=-1}else for(t+u>o&&(t=o-u),l=t;l>=0;l--){let f=!0;for(let y=0;y<u;y++)if(c(r,l+y)!==c(e,y)){f=!1;break}\r\nif(f)return l}return-1}a(jn,\"arrayIndexOf\");h.prototype.includes=a(function(e,t,n){return this.indexOf(\r\ne,t,n)!==-1},\"includes\");h.prototype.indexOf=a(function(e,t,n){return Kn(this,e,t,n,!0)},\"indexOf\");\r\nh.prototype.lastIndexOf=a(function(e,t,n){return Kn(this,e,t,n,!1)},\"lastIndexOf\");function Wo(r,e,t,n){\r\nt=Number(t)||0;let i=r.length-t;n?(n=Number(n),n>i&&(n=i)):n=i;let s=e.length;n>s/2&&(n=s/2);let o;for(o=\r\n0;o<n;++o){let u=parseInt(e.substr(o*2,2),16);if(zt(u))return o;r[t+o]=u}return o}a(Wo,\"hexWrite\");function jo(r,e,t,n){\r\nreturn ht(Ht(e,r.length-t),r,t,n)}a(jo,\"utf8Write\");function Ho(r,e,t,n){return ht(ra(e),r,t,n)}a(Ho,\r\n\"asciiWrite\");function $o(r,e,t,n){return ht(ni(e),r,t,n)}a($o,\"base64Write\");function Go(r,e,t,n){return ht(\r\nna(e,r.length-t),r,t,n)}a(Go,\"ucs2Write\");h.prototype.write=a(function(e,t,n,i){if(t===void 0)i=\"utf\\\r\n8\",n=this.length,t=0;else if(n===void 0&&typeof t==\"string\")i=t,n=this.length,t=0;else if(isFinite(t))\r\nt=t>>>0,isFinite(n)?(n=n>>>0,i===void 0&&(i=\"utf8\")):(i=n,n=void 0);else throw new Error(\"Buffer.wri\\\r\nte(string, encoding, offset[, length]) is no longer supported\");let s=this.length-t;if((n===void 0||\r\nn>s)&&(n=s),e.length>0&&(n<0||t<0)||t>this.length)throw new RangeError(\"Attempt to write outside buf\\\r\nfer bounds\");i||(i=\"utf8\");let o=!1;for(;;)switch(i){case\"hex\":return Wo(this,e,t,n);case\"utf8\":case\"\\\r\nutf-8\":return jo(this,e,t,n);case\"ascii\":case\"latin1\":case\"binary\":return Ho(this,e,t,n);case\"base64\":\r\nreturn $o(this,e,t,n);case\"ucs2\":case\"ucs-2\":case\"utf16le\":case\"utf-16le\":return Go(this,e,t,n);default:\r\nif(o)throw new TypeError(\"Unknown encoding: \"+i);i=(\"\"+i).toLowerCase(),o=!0}},\"write\");h.prototype.\r\ntoJSON=a(function(){return{type:\"Buffer\",data:Array.prototype.slice.call(this._arr||this,0)}},\"toJSO\\\r\nN\");function Vo(r,e,t){return e===0&&t===r.length?Nt.fromByteArray(r):Nt.fromByteArray(r.slice(e,t))}\r\na(Vo,\"base64Slice\");function Yn(r,e,t){t=Math.min(r.length,t);let n=[],i=e;for(;i<t;){let s=r[i],o=null,\r\nu=s>239?4:s>223?3:s>191?2:1;if(i+u<=t){let c,l,f,y;switch(u){case 1:s<128&&(o=s);break;case 2:c=r[i+\r\n1],(c&192)===128&&(y=(s&31)<<6|c&63,y>127&&(o=y));break;case 3:c=r[i+1],l=r[i+2],(c&192)===128&&(l&192)===\r\n128&&(y=(s&15)<<12|(c&63)<<6|l&63,y>2047&&(y<55296||y>57343)&&(o=y));break;case 4:c=r[i+1],l=r[i+2],\r\nf=r[i+3],(c&192)===128&&(l&192)===128&&(f&192)===128&&(y=(s&15)<<18|(c&63)<<12|(l&63)<<6|f&63,y>65535&&\r\ny<1114112&&(o=y))}}o===null?(o=65533,u=1):o>65535&&(o-=65536,n.push(o>>>10&1023|55296),o=56320|o&1023),\r\nn.push(o),i+=u}return zo(n)}a(Yn,\"utf8Slice\");var Hn=4096;function zo(r){let e=r.length;if(e<=Hn)return String.\r\nfromCharCode.apply(String,r);let t=\"\",n=0;for(;n<e;)t+=String.fromCharCode.apply(String,r.slice(n,n+=\r\nHn));return t}a(zo,\"decodeCodePointsArray\");function Ko(r,e,t){let n=\"\";t=Math.min(r.length,t);for(let i=e;i<\r\nt;++i)n+=String.fromCharCode(r[i]&127);return n}a(Ko,\"asciiSlice\");function Yo(r,e,t){let n=\"\";t=Math.\r\nmin(r.length,t);for(let i=e;i<t;++i)n+=String.fromCharCode(r[i]);return n}a(Yo,\"latin1Slice\");function Zo(r,e,t){\r\nlet n=r.length;(!e||e<0)&&(e=0),(!t||t<0||t>n)&&(t=n);let i=\"\";for(let s=e;s<t;++s)i+=ia[r[s]];return i}\r\na(Zo,\"hexSlice\");function Jo(r,e,t){let n=r.slice(e,t),i=\"\";for(let s=0;s<n.length-1;s+=2)i+=String.\r\nfromCharCode(n[s]+n[s+1]*256);return i}a(Jo,\"utf16leSlice\");h.prototype.slice=a(function(e,t){let n=this.\r\nlength;e=~~e,t=t===void 0?n:~~t,e<0?(e+=n,e<0&&(e=0)):e>n&&(e=n),t<0?(t+=n,t<0&&(t=0)):t>n&&(t=n),t<\r\ne&&(t=e);let i=this.subarray(e,t);return Object.setPrototypeOf(i,h.prototype),i},\"slice\");function q(r,e,t){\r\nif(r%1!==0||r<0)throw new RangeError(\"offset is not uint\");if(r+e>t)throw new RangeError(\"Trying to \\\r\naccess beyond buffer length\")}a(q,\"checkOffset\");h.prototype.readUintLE=h.prototype.readUIntLE=a(function(e,t,n){\r\ne=e>>>0,t=t>>>0,n||q(e,t,this.length);let i=this[e],s=1,o=0;for(;++o<t&&(s*=256);)i+=this[e+o]*s;return i},\r\n\"readUIntLE\");h.prototype.readUintBE=h.prototype.readUIntBE=a(function(e,t,n){e=e>>>0,t=t>>>0,n||q(e,\r\nt,this.length);let i=this[e+--t],s=1;for(;t>0&&(s*=256);)i+=this[e+--t]*s;return i},\"readUIntBE\");h.\r\nprototype.readUint8=h.prototype.readUInt8=a(function(e,t){return e=e>>>0,t||q(e,1,this.length),this[e]},\r\n\"readUInt8\");h.prototype.readUint16LE=h.prototype.readUInt16LE=a(function(e,t){return e=e>>>0,t||q(e,\r\n2,this.length),this[e]|this[e+1]<<8},\"readUInt16LE\");h.prototype.readUint16BE=h.prototype.readUInt16BE=\r\na(function(e,t){return e=e>>>0,t||q(e,2,this.length),this[e]<<8|this[e+1]},\"readUInt16BE\");h.prototype.\r\nreadUint32LE=h.prototype.readUInt32LE=a(function(e,t){return e=e>>>0,t||q(e,4,this.length),(this[e]|\r\nthis[e+1]<<8|this[e+2]<<16)+this[e+3]*16777216},\"readUInt32LE\");h.prototype.readUint32BE=h.prototype.\r\nreadUInt32BE=a(function(e,t){return e=e>>>0,t||q(e,4,this.length),this[e]*16777216+(this[e+1]<<16|this[e+\r\n2]<<8|this[e+3])},\"readUInt32BE\");h.prototype.readBigUInt64LE=we(a(function(e){e=e>>>0,Be(e,\"offset\");\r\nlet t=this[e],n=this[e+7];(t===void 0||n===void 0)&&je(e,this.length-8);let i=t+this[++e]*2**8+this[++e]*\r\n2**16+this[++e]*2**24,s=this[++e]+this[++e]*2**8+this[++e]*2**16+n*2**24;return BigInt(i)+(BigInt(s)<<\r\nBigInt(32))},\"readBigUInt64LE\"));h.prototype.readBigUInt64BE=we(a(function(e){e=e>>>0,Be(e,\"offset\");\r\nlet t=this[e],n=this[e+7];(t===void 0||n===void 0)&&je(e,this.length-8);let i=t*2**24+this[++e]*2**16+\r\nthis[++e]*2**8+this[++e],s=this[++e]*2**24+this[++e]*2**16+this[++e]*2**8+n;return(BigInt(i)<<BigInt(\r\n32))+BigInt(s)},\"readBigUInt64BE\"));h.prototype.readIntLE=a(function(e,t,n){e=e>>>0,t=t>>>0,n||q(e,t,\r\nthis.length);let i=this[e],s=1,o=0;for(;++o<t&&(s*=256);)i+=this[e+o]*s;return s*=128,i>=s&&(i-=Math.\r\npow(2,8*t)),i},\"readIntLE\");h.prototype.readIntBE=a(function(e,t,n){e=e>>>0,t=t>>>0,n||q(e,t,this.length);\r\nlet i=t,s=1,o=this[e+--i];for(;i>0&&(s*=256);)o+=this[e+--i]*s;return s*=128,o>=s&&(o-=Math.pow(2,8*\r\nt)),o},\"readIntBE\");h.prototype.readInt8=a(function(e,t){return e=e>>>0,t||q(e,1,this.length),this[e]&\r\n128?(255-this[e]+1)*-1:this[e]},\"readInt8\");h.prototype.readInt16LE=a(function(e,t){e=e>>>0,t||q(e,2,\r\nthis.length);let n=this[e]|this[e+1]<<8;return n&32768?n|4294901760:n},\"readInt16LE\");h.prototype.readInt16BE=\r\na(function(e,t){e=e>>>0,t||q(e,2,this.length);let n=this[e+1]|this[e]<<8;return n&32768?n|4294901760:\r\nn},\"readInt16BE\");h.prototype.readInt32LE=a(function(e,t){return e=e>>>0,t||q(e,4,this.length),this[e]|\r\nthis[e+1]<<8|this[e+2]<<16|this[e+3]<<24},\"readInt32LE\");h.prototype.readInt32BE=a(function(e,t){return e=\r\ne>>>0,t||q(e,4,this.length),this[e]<<24|this[e+1]<<16|this[e+2]<<8|this[e+3]},\"readInt32BE\");h.prototype.\r\nreadBigInt64LE=we(a(function(e){e=e>>>0,Be(e,\"offset\");let t=this[e],n=this[e+7];(t===void 0||n===void 0)&&\r\nje(e,this.length-8);let i=this[e+4]+this[e+5]*2**8+this[e+6]*2**16+(n<<24);return(BigInt(i)<<BigInt(\r\n32))+BigInt(t+this[++e]*2**8+this[++e]*2**16+this[++e]*2**24)},\"readBigInt64LE\"));h.prototype.readBigInt64BE=\r\nwe(a(function(e){e=e>>>0,Be(e,\"offset\");let t=this[e],n=this[e+7];(t===void 0||n===void 0)&&je(e,this.\r\nlength-8);let i=(t<<24)+this[++e]*2**16+this[++e]*2**8+this[++e];return(BigInt(i)<<BigInt(32))+BigInt(\r\nthis[++e]*2**24+this[++e]*2**16+this[++e]*2**8+n)},\"readBigInt64BE\"));h.prototype.readFloatLE=a(function(e,t){\r\nreturn e=e>>>0,t||q(e,4,this.length),Pe.read(this,e,!0,23,4)},\"readFloatLE\");h.prototype.readFloatBE=\r\na(function(e,t){return e=e>>>0,t||q(e,4,this.length),Pe.read(this,e,!1,23,4)},\"readFloatBE\");h.prototype.\r\nreadDoubleLE=a(function(e,t){return e=e>>>0,t||q(e,8,this.length),Pe.read(this,e,!0,52,8)},\"readDoub\\\r\nleLE\");h.prototype.readDoubleBE=a(function(e,t){return e=e>>>0,t||q(e,8,this.length),Pe.read(this,e,\r\n!1,52,8)},\"readDoubleBE\");function V(r,e,t,n,i,s){if(!h.isBuffer(r))throw new TypeError('\"buffer\" ar\\\r\ngument must be a Buffer instance');if(e>i||e<s)throw new RangeError('\"value\" argument is out of boun\\\r\nds');if(t+n>r.length)throw new RangeError(\"Index out of range\")}a(V,\"checkInt\");h.prototype.writeUintLE=\r\nh.prototype.writeUIntLE=a(function(e,t,n,i){if(e=+e,t=t>>>0,n=n>>>0,!i){let u=Math.pow(2,8*n)-1;V(this,\r\ne,t,n,u,0)}let s=1,o=0;for(this[t]=e&255;++o<n&&(s*=256);)this[t+o]=e/s&255;return t+n},\"writeUIntLE\");\r\nh.prototype.writeUintBE=h.prototype.writeUIntBE=a(function(e,t,n,i){if(e=+e,t=t>>>0,n=n>>>0,!i){let u=Math.\r\npow(2,8*n)-1;V(this,e,t,n,u,0)}let s=n-1,o=1;for(this[t+s]=e&255;--s>=0&&(o*=256);)this[t+s]=e/o&255;\r\nreturn t+n},\"writeUIntBE\");h.prototype.writeUint8=h.prototype.writeUInt8=a(function(e,t,n){return e=\r\n+e,t=t>>>0,n||V(this,e,t,1,255,0),this[t]=e&255,t+1},\"writeUInt8\");h.prototype.writeUint16LE=h.prototype.\r\nwriteUInt16LE=a(function(e,t,n){return e=+e,t=t>>>0,n||V(this,e,t,2,65535,0),this[t]=e&255,this[t+1]=\r\ne>>>8,t+2},\"writeUInt16LE\");h.prototype.writeUint16BE=h.prototype.writeUInt16BE=a(function(e,t,n){return e=\r\n+e,t=t>>>0,n||V(this,e,t,2,65535,0),this[t]=e>>>8,this[t+1]=e&255,t+2},\"writeUInt16BE\");h.prototype.\r\nwriteUint32LE=h.prototype.writeUInt32LE=a(function(e,t,n){return e=+e,t=t>>>0,n||V(this,e,t,4,4294967295,\r\n0),this[t+3]=e>>>24,this[t+2]=e>>>16,this[t+1]=e>>>8,this[t]=e&255,t+4},\"writeUInt32LE\");h.prototype.\r\nwriteUint32BE=h.prototype.writeUInt32BE=a(function(e,t,n){return e=+e,t=t>>>0,n||V(this,e,t,4,4294967295,\r\n0),this[t]=e>>>24,this[t+1]=e>>>16,this[t+2]=e>>>8,this[t+3]=e&255,t+4},\"writeUInt32BE\");function Zn(r,e,t,n,i){\r\nri(e,n,i,r,t,7);let s=Number(e&BigInt(4294967295));r[t++]=s,s=s>>8,r[t++]=s,s=s>>8,r[t++]=s,s=s>>8,r[t++]=\r\ns;let o=Number(e>>BigInt(32)&BigInt(4294967295));return r[t++]=o,o=o>>8,r[t++]=o,o=o>>8,r[t++]=o,o=o>>\r\n8,r[t++]=o,t}a(Zn,\"wrtBigUInt64LE\");function Jn(r,e,t,n,i){ri(e,n,i,r,t,7);let s=Number(e&BigInt(4294967295));\r\nr[t+7]=s,s=s>>8,r[t+6]=s,s=s>>8,r[t+5]=s,s=s>>8,r[t+4]=s;let o=Number(e>>BigInt(32)&BigInt(4294967295));\r\nreturn r[t+3]=o,o=o>>8,r[t+2]=o,o=o>>8,r[t+1]=o,o=o>>8,r[t]=o,t+8}a(Jn,\"wrtBigUInt64BE\");h.prototype.\r\nwriteBigUInt64LE=we(a(function(e,t=0){return Zn(this,e,t,BigInt(0),BigInt(\"0xffffffffffffffff\"))},\"w\\\r\nriteBigUInt64LE\"));h.prototype.writeBigUInt64BE=we(a(function(e,t=0){return Jn(this,e,t,BigInt(0),BigInt(\r\n\"0xffffffffffffffff\"))},\"writeBigUInt64BE\"));h.prototype.writeIntLE=a(function(e,t,n,i){if(e=+e,t=t>>>\r\n0,!i){let c=Math.pow(2,8*n-1);V(this,e,t,n,c-1,-c)}let s=0,o=1,u=0;for(this[t]=e&255;++s<n&&(o*=256);)\r\ne<0&&u===0&&this[t+s-1]!==0&&(u=1),this[t+s]=(e/o>>0)-u&255;return t+n},\"writeIntLE\");h.prototype.writeIntBE=\r\na(function(e,t,n,i){if(e=+e,t=t>>>0,!i){let c=Math.pow(2,8*n-1);V(this,e,t,n,c-1,-c)}let s=n-1,o=1,u=0;\r\nfor(this[t+s]=e&255;--s>=0&&(o*=256);)e<0&&u===0&&this[t+s+1]!==0&&(u=1),this[t+s]=(e/o>>0)-u&255;return t+\r\nn},\"writeIntBE\");h.prototype.writeInt8=a(function(e,t,n){return e=+e,t=t>>>0,n||V(this,e,t,1,127,-128),\r\ne<0&&(e=255+e+1),this[t]=e&255,t+1},\"writeInt8\");h.prototype.writeInt16LE=a(function(e,t,n){return e=\r\n+e,t=t>>>0,n||V(this,e,t,2,32767,-32768),this[t]=e&255,this[t+1]=e>>>8,t+2},\"writeInt16LE\");h.prototype.\r\nwriteInt16BE=a(function(e,t,n){return e=+e,t=t>>>0,n||V(this,e,t,2,32767,-32768),this[t]=e>>>8,this[t+\r\n1]=e&255,t+2},\"writeInt16BE\");h.prototype.writeInt32LE=a(function(e,t,n){return e=+e,t=t>>>0,n||V(this,\r\ne,t,4,2147483647,-2147483648),this[t]=e&255,this[t+1]=e>>>8,this[t+2]=e>>>16,this[t+3]=e>>>24,t+4},\"\\\r\nwriteInt32LE\");h.prototype.writeInt32BE=a(function(e,t,n){return e=+e,t=t>>>0,n||V(this,e,t,4,2147483647,\r\n-2147483648),e<0&&(e=4294967295+e+1),this[t]=e>>>24,this[t+1]=e>>>16,this[t+2]=e>>>8,this[t+3]=e&255,\r\nt+4},\"writeInt32BE\");h.prototype.writeBigInt64LE=we(a(function(e,t=0){return Zn(this,e,t,-BigInt(\"0x\\\r\n8000000000000000\"),BigInt(\"0x7fffffffffffffff\"))},\"writeBigInt64LE\"));h.prototype.writeBigInt64BE=we(\r\na(function(e,t=0){return Jn(this,e,t,-BigInt(\"0x8000000000000000\"),BigInt(\"0x7fffffffffffffff\"))},\"w\\\r\nriteBigInt64BE\"));function Xn(r,e,t,n,i,s){if(t+n>r.length)throw new RangeError(\"Index out of range\");\r\nif(t<0)throw new RangeError(\"Index out of range\")}a(Xn,\"checkIEEE754\");function ei(r,e,t,n,i){return e=\r\n+e,t=t>>>0,i||Xn(r,e,t,4,34028234663852886e22,-34028234663852886e22),Pe.write(r,e,t,n,23,4),t+4}a(ei,\r\n\"writeFloat\");h.prototype.writeFloatLE=a(function(e,t,n){return ei(this,e,t,!0,n)},\"writeFloatLE\");h.\r\nprototype.writeFloatBE=a(function(e,t,n){return ei(this,e,t,!1,n)},\"writeFloatBE\");function ti(r,e,t,n,i){\r\nreturn e=+e,t=t>>>0,i||Xn(r,e,t,8,17976931348623157e292,-17976931348623157e292),Pe.write(r,e,t,n,52,\r\n8),t+8}a(ti,\"writeDouble\");h.prototype.writeDoubleLE=a(function(e,t,n){return ti(this,e,t,!0,n)},\"wr\\\r\niteDoubleLE\");h.prototype.writeDoubleBE=a(function(e,t,n){return ti(this,e,t,!1,n)},\"writeDoubleBE\");\r\nh.prototype.copy=a(function(e,t,n,i){if(!h.isBuffer(e))throw new TypeError(\"argument should be a Buf\\\r\nfer\");if(n||(n=0),!i&&i!==0&&(i=this.length),t>=e.length&&(t=e.length),t||(t=0),i>0&&i<n&&(i=n),i===\r\nn||e.length===0||this.length===0)return 0;if(t<0)throw new RangeError(\"targetStart out of bounds\");if(n<\r\n0||n>=this.length)throw new RangeError(\"Index out of range\");if(i<0)throw new RangeError(\"sourceEnd \\\r\nout of bounds\");i>this.length&&(i=this.length),e.length-t<i-n&&(i=e.length-t+n);let s=i-n;return this===\r\ne&&typeof Uint8Array.prototype.copyWithin==\"function\"?this.copyWithin(t,n,i):Uint8Array.prototype.set.\r\ncall(e,this.subarray(n,i),t),s},\"copy\");h.prototype.fill=a(function(e,t,n,i){if(typeof e==\"string\"){\r\nif(typeof t==\"string\"?(i=t,t=0,n=this.length):typeof n==\"string\"&&(i=n,n=this.length),i!==void 0&&typeof i!=\r\n\"string\")throw new TypeError(\"encoding must be a string\");if(typeof i==\"string\"&&!h.isEncoding(i))throw new TypeError(\r\n\"Unknown encoding: \"+i);if(e.length===1){let o=e.charCodeAt(0);(i===\"utf8\"&&o<128||i===\"latin1\")&&(e=\r\no)}}else typeof e==\"number\"?e=e&255:typeof e==\"boolean\"&&(e=Number(e));if(t<0||this.length<t||this.length<\r\nn)throw new RangeError(\"Out of range index\");if(n<=t)return this;t=t>>>0,n=n===void 0?this.length:n>>>\r\n0,e||(e=0);let s;if(typeof e==\"number\")for(s=t;s<n;++s)this[s]=e;else{let o=h.isBuffer(e)?e:h.from(e,\r\ni),u=o.length;if(u===0)throw new TypeError('The value \"'+e+'\" is invalid for argument \"value\"');for(s=\r\n0;s<n-t;++s)this[s+t]=o[s%u]}return this},\"fill\");var Te={};function Vt(r,e,t){var n;Te[r]=(n=class extends t{constructor(){\r\nsuper(),Object.defineProperty(this,\"message\",{value:e.apply(this,arguments),writable:!0,configurable:!0}),\r\nthis.name=`${this.name} [${r}]`,this.stack,delete this.name}get code(){return r}set code(s){Object.defineProperty(\r\nthis,\"code\",{configurable:!0,enumerable:!0,value:s,writable:!0})}toString(){return`${this.name} [${r}\\\r\n]: ${this.message}`}},a(n,\"NodeError\"),n)}a(Vt,\"E\");Vt(\"ERR_BUFFER_OUT_OF_BOUNDS\",function(r){return r?\r\n`${r} is outside of buffer bounds`:\"Attempt to access memory outside buffer bounds\"},RangeError);Vt(\r\n\"ERR_INVALID_ARG_TYPE\",function(r,e){return`The \"${r}\" argument must be of type number. Received typ\\\r\ne ${typeof e}`},TypeError);Vt(\"ERR_OUT_OF_RANGE\",function(r,e,t){let n=`The value of \"${r}\" is out o\\\r\nf range.`,i=t;return Number.isInteger(t)&&Math.abs(t)>2**32?i=$n(String(t)):typeof t==\"bigint\"&&(i=String(\r\nt),(t>BigInt(2)**BigInt(32)||t<-(BigInt(2)**BigInt(32)))&&(i=$n(i)),i+=\"n\"),n+=` It must be ${e}. Re\\\r\nceived ${i}`,n},RangeError);function $n(r){let e=\"\",t=r.length,n=r[0]===\"-\"?1:0;for(;t>=n+4;t-=3)e=`\\\r\n_${r.slice(t-3,t)}${e}`;return`${r.slice(0,t)}${e}`}a($n,\"addNumericalSeparator\");function Xo(r,e,t){\r\nBe(e,\"offset\"),(r[e]===void 0||r[e+t]===void 0)&&je(e,r.length-(t+1))}a(Xo,\"checkBounds\");function ri(r,e,t,n,i,s){\r\nif(r>t||r<e){let o=typeof e==\"bigint\"?\"n\":\"\",u;throw s>3?e===0||e===BigInt(0)?u=`>= 0${o} and < 2${o}\\\r\n ** ${(s+1)*8}${o}`:u=`>= -(2${o} ** ${(s+1)*8-1}${o}) and < 2 ** ${(s+1)*8-1}${o}`:u=`>= ${e}${o} a\\\r\nnd <= ${t}${o}`,new Te.ERR_OUT_OF_RANGE(\"value\",u,r)}Xo(n,i,s)}a(ri,\"checkIntBI\");function Be(r,e){if(typeof r!=\r\n\"number\")throw new Te.ERR_INVALID_ARG_TYPE(e,\"number\",r)}a(Be,\"validateNumber\");function je(r,e,t){throw Math.\r\nfloor(r)!==r?(Be(r,t),new Te.ERR_OUT_OF_RANGE(t||\"offset\",\"an integer\",r)):e<0?new Te.ERR_BUFFER_OUT_OF_BOUNDS:\r\nnew Te.ERR_OUT_OF_RANGE(t||\"offset\",`>= ${t?1:0} and <= ${e}`,r)}a(je,\"boundsError\");var ea=/[^+/0-9A-Za-z-_]/g;\r\nfunction ta(r){if(r=r.split(\"=\")[0],r=r.trim().replace(ea,\"\"),r.length<2)return\"\";for(;r.length%4!==\r\n0;)r=r+\"=\";return r}a(ta,\"base64clean\");function Ht(r,e){e=e||1/0;let t,n=r.length,i=null,s=[];for(let o=0;o<\r\nn;++o){if(t=r.charCodeAt(o),t>55295&&t<57344){if(!i){if(t>56319){(e-=3)>-1&&s.push(239,191,189);continue}else if(o+\r\n1===n){(e-=3)>-1&&s.push(239,191,189);continue}i=t;continue}if(t<56320){(e-=3)>-1&&s.push(239,191,189),\r\ni=t;continue}t=(i-55296<<10|t-56320)+65536}else i&&(e-=3)>-1&&s.push(239,191,189);if(i=null,t<128){if((e-=\r\n1)<0)break;s.push(t)}else if(t<2048){if((e-=2)<0)break;s.push(t>>6|192,t&63|128)}else if(t<65536){if((e-=\r\n3)<0)break;s.push(t>>12|224,t>>6&63|128,t&63|128)}else if(t<1114112){if((e-=4)<0)break;s.push(t>>18|\r\n240,t>>12&63|128,t>>6&63|128,t&63|128)}else throw new Error(\"Invalid code point\")}return s}a(Ht,\"utf\\\r\n8ToBytes\");function ra(r){let e=[];for(let t=0;t<r.length;++t)e.push(r.charCodeAt(t)&255);return e}a(\r\nra,\"asciiToBytes\");function na(r,e){let t,n,i,s=[];for(let o=0;o<r.length&&!((e-=2)<0);++o)t=r.charCodeAt(\r\no),n=t>>8,i=t%256,s.push(i),s.push(n);return s}a(na,\"utf16leToBytes\");function ni(r){return Nt.toByteArray(\r\nta(r))}a(ni,\"base64ToBytes\");function ht(r,e,t,n){let i;for(i=0;i<n&&!(i+t>=e.length||i>=r.length);++i)\r\ne[i+t]=r[i];return i}a(ht,\"blitBuffer\");function ue(r,e){return r instanceof e||r!=null&&r.constructor!=\r\nnull&&r.constructor.name!=null&&r.constructor.name===e.name}a(ue,\"isInstance\");function zt(r){return r!==\r\nr}a(zt,\"numberIsNaN\");var ia=function(){let r=\"0123456789abcdef\",e=new Array(256);for(let t=0;t<16;++t){\r\nlet n=t*16;for(let i=0;i<16;++i)e[n+i]=r[t]+r[i]}return e}();function we(r){return typeof BigInt>\"u\"?\r\nsa:r}a(we,\"defineBigIntMethod\");function sa(){throw new Error(\"BigInt not supported\")}a(sa,\"BufferBi\\\r\ngIntNotDefined\")});var b,v,x,d,m,p=G(()=>{\"use strict\";b=globalThis,v=globalThis.setImmediate??(r=>setTimeout(r,0)),x=globalThis.\r\nclearImmediate??(r=>clearTimeout(r)),d=typeof globalThis.Buffer==\"function\"&&typeof globalThis.Buffer.\r\nallocUnsafe==\"function\"?globalThis.Buffer:ii().Buffer,m=globalThis.process??{};m.env??(m.env={});try{\r\nm.nextTick(()=>{})}catch{let e=Promise.resolve();m.nextTick=e.then.bind(e)}});var ge=T((Rl,Kt)=>{\"use strict\";p();var Le=typeof Reflect==\"object\"?Reflect:null,si=Le&&typeof Le.apply==\r\n\"function\"?Le.apply:a(function(e,t,n){return Function.prototype.apply.call(e,t,n)},\"ReflectApply\"),pt;\r\nLe&&typeof Le.ownKeys==\"function\"?pt=Le.ownKeys:Object.getOwnPropertySymbols?pt=a(function(e){return Object.\r\ngetOwnPropertyNames(e).concat(Object.getOwnPropertySymbols(e))},\"ReflectOwnKeys\"):pt=a(function(e){return Object.\r\ngetOwnPropertyNames(e)},\"ReflectOwnKeys\");function oa(r){console&&console.warn&&console.warn(r)}a(oa,\r\n\"ProcessEmitWarning\");var ai=Number.isNaN||a(function(e){return e!==e},\"NumberIsNaN\");function B(){B.\r\ninit.call(this)}a(B,\"EventEmitter\");Kt.exports=B;Kt.exports.once=la;B.EventEmitter=B;B.prototype._events=\r\nvoid 0;B.prototype._eventsCount=0;B.prototype._maxListeners=void 0;var oi=10;function dt(r){if(typeof r!=\r\n\"function\")throw new TypeError('The \"listener\" argument must be of type Function. Received type '+typeof r)}\r\na(dt,\"checkListener\");Object.defineProperty(B,\"defaultMaxListeners\",{enumerable:!0,get:a(function(){\r\nreturn oi},\"get\"),set:a(function(r){if(typeof r!=\"number\"||r<0||ai(r))throw new RangeError('The valu\\\r\ne of \"defaultMaxListeners\" is out of range. It must be a non-negative number. Received '+r+\".\");oi=r},\r\n\"set\")});B.init=function(){(this._events===void 0||this._events===Object.getPrototypeOf(this)._events)&&\r\n(this._events=Object.create(null),this._eventsCount=0),this._maxListeners=this._maxListeners||void 0};\r\nB.prototype.setMaxListeners=a(function(e){if(typeof e!=\"number\"||e<0||ai(e))throw new RangeError('Th\\\r\ne value of \"n\" is out of range. It must be a non-negative number. Received '+e+\".\");return this._maxListeners=\r\ne,this},\"setMaxListeners\");function ui(r){return r._maxListeners===void 0?B.defaultMaxListeners:r._maxListeners}\r\na(ui,\"_getMaxListeners\");B.prototype.getMaxListeners=a(function(){return ui(this)},\"getMaxListeners\");\r\nB.prototype.emit=a(function(e){for(var t=[],n=1;n<arguments.length;n++)t.push(arguments[n]);var i=e===\r\n\"error\",s=this._events;if(s!==void 0)i=i&&s.error===void 0;else if(!i)return!1;if(i){var o;if(t.length>\r\n0&&(o=t[0]),o instanceof Error)throw o;var u=new Error(\"Unhandled error.\"+(o?\" (\"+o.message+\")\":\"\"));\r\nthrow u.context=o,u}var c=s[e];if(c===void 0)return!1;if(typeof c==\"function\")si(c,this,t);else for(var l=c.\r\nlength,f=pi(c,l),n=0;n<l;++n)si(f[n],this,t);return!0},\"emit\");function ci(r,e,t,n){var i,s,o;if(dt(\r\nt),s=r._events,s===void 0?(s=r._events=Object.create(null),r._eventsCount=0):(s.newListener!==void 0&&\r\n(r.emit(\"newListener\",e,t.listener?t.listener:t),s=r._events),o=s[e]),o===void 0)o=s[e]=t,++r._eventsCount;else if(typeof o==\r\n\"function\"?o=s[e]=n?[t,o]:[o,t]:n?o.unshift(t):o.push(t),i=ui(r),i>0&&o.length>i&&!o.warned){o.warned=\r\n!0;var u=new Error(\"Possible EventEmitter memory leak detected. \"+o.length+\" \"+String(e)+\" listeners\\\r\n added. Use emitter.setMaxListeners() to increase limit\");u.name=\"MaxListenersExceededWarning\",u.emitter=\r\nr,u.type=e,u.count=o.length,oa(u)}return r}a(ci,\"_addListener\");B.prototype.addListener=a(function(e,t){\r\nreturn ci(this,e,t,!1)},\"addListener\");B.prototype.on=B.prototype.addListener;B.prototype.prependListener=\r\na(function(e,t){return ci(this,e,t,!0)},\"prependListener\");function aa(){if(!this.fired)return this.\r\ntarget.removeListener(this.type,this.wrapFn),this.fired=!0,arguments.length===0?this.listener.call(this.\r\ntarget):this.listener.apply(this.target,arguments)}a(aa,\"onceWrapper\");function li(r,e,t){var n={fired:!1,\r\nwrapFn:void 0,target:r,type:e,listener:t},i=aa.bind(n);return i.listener=t,n.wrapFn=i,i}a(li,\"_onceW\\\r\nrap\");B.prototype.once=a(function(e,t){return dt(t),this.on(e,li(this,e,t)),this},\"once\");B.prototype.\r\nprependOnceListener=a(function(e,t){return dt(t),this.prependListener(e,li(this,e,t)),this},\"prepend\\\r\nOnceListener\");B.prototype.removeListener=a(function(e,t){var n,i,s,o,u;if(dt(t),i=this._events,i===\r\nvoid 0)return this;if(n=i[e],n===void 0)return this;if(n===t||n.listener===t)--this._eventsCount===0?\r\nthis._events=Object.create(null):(delete i[e],i.removeListener&&this.emit(\"removeListener\",e,n.listener||\r\nt));else if(typeof n!=\"function\"){for(s=-1,o=n.length-1;o>=0;o--)if(n[o]===t||n[o].listener===t){u=n[o].\r\nlistener,s=o;break}if(s<0)return this;s===0?n.shift():ua(n,s),n.length===1&&(i[e]=n[0]),i.removeListener!==\r\nvoid 0&&this.emit(\"removeListener\",e,u||t)}return this},\"removeListener\");B.prototype.off=B.prototype.\r\nremoveListener;B.prototype.removeAllListeners=a(function(e){var t,n,i;if(n=this._events,n===void 0)return this;\r\nif(n.removeListener===void 0)return arguments.length===0?(this._events=Object.create(null),this._eventsCount=\r\n0):n[e]!==void 0&&(--this._eventsCount===0?this._events=Object.create(null):delete n[e]),this;if(arguments.\r\nlength===0){var s=Object.keys(n),o;for(i=0;i<s.length;++i)o=s[i],o!==\"removeListener\"&&this.removeAllListeners(\r\no);return this.removeAllListeners(\"removeListener\"),this._events=Object.create(null),this._eventsCount=\r\n0,this}if(t=n[e],typeof t==\"function\")this.removeListener(e,t);else if(t!==void 0)for(i=t.length-1;i>=\r\n0;i--)this.removeListener(e,t[i]);return this},\"removeAllListeners\");function fi(r,e,t){var n=r._events;\r\nif(n===void 0)return[];var i=n[e];return i===void 0?[]:typeof i==\"function\"?t?[i.listener||i]:[i]:t?\r\nca(i):pi(i,i.length)}a(fi,\"_listeners\");B.prototype.listeners=a(function(e){return fi(this,e,!0)},\"l\\\r\nisteners\");B.prototype.rawListeners=a(function(e){return fi(this,e,!1)},\"rawListeners\");B.listenerCount=\r\nfunction(r,e){return typeof r.listenerCount==\"function\"?r.listenerCount(e):hi.call(r,e)};B.prototype.\r\nlistenerCount=hi;function hi(r){var e=this._events;if(e!==void 0){var t=e[r];if(typeof t==\"function\")\r\nreturn 1;if(t!==void 0)return t.length}return 0}a(hi,\"listenerCount\");B.prototype.eventNames=a(function(){\r\nreturn this._eventsCount>0?pt(this._events):[]},\"eventNames\");function pi(r,e){for(var t=new Array(e),\r\nn=0;n<e;++n)t[n]=r[n];return t}a(pi,\"arrayClone\");function ua(r,e){for(;e+1<r.length;e++)r[e]=r[e+1];\r\nr.pop()}a(ua,\"spliceOne\");function ca(r){for(var e=new Array(r.length),t=0;t<e.length;++t)e[t]=r[t].\r\nlistener||r[t];return e}a(ca,\"unwrapListeners\");function la(r,e){return new Promise(function(t,n){function i(o){\r\nr.removeListener(e,s),n(o)}a(i,\"errorListener\");function s(){typeof r.removeListener==\"function\"&&r.\r\nremoveListener(\"error\",i),t([].slice.call(arguments))}a(s,\"resolver\"),di(r,e,s,{once:!0}),e!==\"error\"&&\r\nfa(r,i,{once:!0})})}a(la,\"once\");function fa(r,e,t){typeof r.on==\"function\"&&di(r,\"error\",e,t)}a(fa,\r\n\"addErrorHandlerIfEventEmitter\");function di(r,e,t,n){if(typeof r.on==\"function\")n.once?r.once(e,t):\r\nr.on(e,t);else if(typeof r.addEventListener==\"function\")r.addEventListener(e,a(function i(s){n.once&&\r\nr.removeEventListener(e,i),t(s)},\"wrapListener\"));else throw new TypeError('The \"emitter\" argument m\\\r\nust be of type EventEmitter. Received type '+typeof r)}a(di,\"eventTargetAgnosticAddListener\")});var wi={};ie(wi,{Socket:()=>ce,isIP:()=>ha});function ha(r){return 0}var mi,yi,S,ce,Fe=G(()=>{\"use s\\\r\ntrict\";p();mi=Se(ge(),1);a(ha,\"isIP\");yi=/^[^.]+\\./,S=class S extends mi.EventEmitter{constructor(){\r\nsuper(...arguments);E(this,\"opts\",{});E(this,\"connecting\",!1);E(this,\"pending\",!0);E(this,\"writable\",\r\n!0);E(this,\"encrypted\",!1);E(this,\"authorized\",!1);E(this,\"destroyed\",!1);E(this,\"ws\",null);E(this,\"\\\r\nwriteBuffer\");E(this,\"tlsState\",0);E(this,\"tlsRead\");E(this,\"tlsWrite\")}static get poolQueryViaFetch(){\r\nreturn S.opts.poolQueryViaFetch??S.defaults.poolQueryViaFetch}static set poolQueryViaFetch(t){S.opts.\r\npoolQueryViaFetch=t}static get fetchEndpoint(){return S.opts.fetchEndpoint??S.defaults.fetchEndpoint}static set fetchEndpoint(t){\r\nS.opts.fetchEndpoint=t}static get fetchConnectionCache(){return!0}static set fetchConnectionCache(t){\r\nconsole.warn(\"The `fetchConnectionCache` option is deprecated (now always `true`)\")}static get fetchFunction(){\r\nreturn S.opts.fetchFunction??S.defaults.fetchFunction}static set fetchFunction(t){S.opts.fetchFunction=\r\nt}static get webSocketConstructor(){return S.opts.webSocketConstructor??S.defaults.webSocketConstructor}static set webSocketConstructor(t){\r\nS.opts.webSocketConstructor=t}get webSocketConstructor(){return this.opts.webSocketConstructor??S.webSocketConstructor}set webSocketConstructor(t){\r\nthis.opts.webSocketConstructor=t}static get wsProxy(){return S.opts.wsProxy??S.defaults.wsProxy}static set wsProxy(t){\r\nS.opts.wsProxy=t}get wsProxy(){return this.opts.wsProxy??S.wsProxy}set wsProxy(t){this.opts.wsProxy=\r\nt}static get coalesceWrites(){return S.opts.coalesceWrites??S.defaults.coalesceWrites}static set coalesceWrites(t){\r\nS.opts.coalesceWrites=t}get coalesceWrites(){return this.opts.coalesceWrites??S.coalesceWrites}set coalesceWrites(t){\r\nthis.opts.coalesceWrites=t}static get useSecureWebSocket(){return S.opts.useSecureWebSocket??S.defaults.\r\nuseSecureWebSocket}static set useSecureWebSocket(t){S.opts.useSecureWebSocket=t}get useSecureWebSocket(){\r\nreturn this.opts.useSecureWebSocket??S.useSecureWebSocket}set useSecureWebSocket(t){this.opts.useSecureWebSocket=\r\nt}static get forceDisablePgSSL(){return S.opts.forceDisablePgSSL??S.defaults.forceDisablePgSSL}static set forceDisablePgSSL(t){\r\nS.opts.forceDisablePgSSL=t}get forceDisablePgSSL(){return this.opts.forceDisablePgSSL??S.forceDisablePgSSL}set forceDisablePgSSL(t){\r\nthis.opts.forceDisablePgSSL=t}static get disableSNI(){return S.opts.disableSNI??S.defaults.disableSNI}static set disableSNI(t){\r\nS.opts.disableSNI=t}get disableSNI(){return this.opts.disableSNI??S.disableSNI}set disableSNI(t){this.\r\nopts.disableSNI=t}static get disableWarningInBrowsers(){return S.opts.disableWarningInBrowsers??S.defaults.\r\ndisableWarningInBrowsers}static set disableWarningInBrowsers(t){S.opts.disableWarningInBrowsers=t}get disableWarningInBrowsers(){\r\nreturn this.opts.disableWarningInBrowsers??S.disableWarningInBrowsers}set disableWarningInBrowsers(t){\r\nthis.opts.disableWarningInBrowsers=t}static get pipelineConnect(){return S.opts.pipelineConnect??S.defaults.\r\npipelineConnect}static set pipelineConnect(t){S.opts.pipelineConnect=t}get pipelineConnect(){return this.\r\nopts.pipelineConnect??S.pipelineConnect}set pipelineConnect(t){this.opts.pipelineConnect=t}static get subtls(){\r\nreturn S.opts.subtls??S.defaults.subtls}static set subtls(t){S.opts.subtls=t}get subtls(){return this.\r\nopts.subtls??S.subtls}set subtls(t){this.opts.subtls=t}static get pipelineTLS(){return S.opts.pipelineTLS??\r\nS.defaults.pipelineTLS}static set pipelineTLS(t){S.opts.pipelineTLS=t}get pipelineTLS(){return this.\r\nopts.pipelineTLS??S.pipelineTLS}set pipelineTLS(t){this.opts.pipelineTLS=t}static get rootCerts(){return S.\r\nopts.rootCerts??S.defaults.rootCerts}static set rootCerts(t){S.opts.rootCerts=t}get rootCerts(){return this.\r\nopts.rootCerts??S.rootCerts}set rootCerts(t){this.opts.rootCerts=t}wsProxyAddrForHost(t,n){let i=this.\r\nwsProxy;if(i===void 0)throw new Error(\"No WebSocket proxy is configured. Please see https://github.c\\\r\nom/neondatabase/serverless/blob/main/CONFIG.md#wsproxy-string--host-string-port-number--string--stri\\\r\nng\");return typeof i==\"function\"?i(t,n):`${i}?address=${t}:${n}`}setNoDelay(){return this}setKeepAlive(){\r\nreturn this}ref(){return this}unref(){return this}connect(t,n,i){this.connecting=!0,i&&this.once(\"co\\\r\nnnect\",i);let s=a(()=>{this.connecting=!1,this.pending=!1,this.emit(\"connect\"),this.emit(\"ready\")},\"\\\r\nhandleWebSocketOpen\"),o=a((c,l=!1)=>{c.binaryType=\"arraybuffer\",c.addEventListener(\"error\",f=>{this.\r\nemit(\"error\",f),this.emit(\"close\")}),c.addEventListener(\"message\",f=>{if(this.tlsState===0){let y=d.\r\nfrom(f.data);this.emit(\"data\",y)}}),c.addEventListener(\"close\",()=>{this.emit(\"close\")}),l?s():c.addEventListener(\r\n\"open\",s)},\"configureWebSocket\"),u;try{u=this.wsProxyAddrForHost(n,typeof t==\"string\"?parseInt(t,10):\r\nt)}catch(c){this.emit(\"error\",c),this.emit(\"close\");return}try{let l=(this.useSecureWebSocket?\"wss:\":\r\n\"ws:\")+\"//\"+u;if(this.webSocketConstructor!==void 0)this.ws=new this.webSocketConstructor(l),o(this.\r\nws);else try{this.ws=new WebSocket(l),o(this.ws)}catch{this.ws=new __unstable_WebSocket(l),o(this.ws)}}catch(c){\r\nlet f=(this.useSecureWebSocket?\"https:\":\"http:\")+\"//\"+u;fetch(f,{headers:{Upgrade:\"websocket\"}}).then(\r\ny=>{if(this.ws=y.webSocket,this.ws==null)throw c;this.ws.accept(),o(this.ws,!0)}).catch(y=>{this.emit(\r\n\"error\",new Error(`All attempts to open a WebSocket to connect to the database failed. Please refer \\\r\nto https://github.com/neondatabase/serverless/blob/main/CONFIG.md#websocketconstructor-typeof-websoc\\\r\nket--undefined. Details: ${y}`)),this.emit(\"close\")})}}async startTls(t){if(this.subtls===void 0)throw new Error(\r\n\"For Postgres SSL connections, you must set `neonConfig.subtls` to the subtls library. See https://g\\\r\nithub.com/neondatabase/serverless/blob/main/CONFIG.md for more information.\");this.tlsState=1;let n=await this.\r\nsubtls.TrustedCert.databaseFromPEM(this.rootCerts),i=new this.subtls.WebSocketReadQueue(this.ws),s=i.\r\nread.bind(i),o=this.rawWrite.bind(this),{read:u,write:c}=await this.subtls.startTls(t,n,s,o,{useSNI:!this.\r\ndisableSNI,expectPreData:this.pipelineTLS?new Uint8Array([83]):void 0});this.tlsRead=u,this.tlsWrite=\r\nc,this.tlsState=2,this.encrypted=!0,this.authorized=!0,this.emit(\"secureConnection\",this),this.tlsReadLoop()}async tlsReadLoop(){\r\nfor(;;){let t=await this.tlsRead();if(t===void 0)break;{let n=d.from(t);this.emit(\"data\",n)}}}rawWrite(t){\r\nif(!this.coalesceWrites){this.ws&&this.ws.send(t);return}if(this.writeBuffer===void 0)this.writeBuffer=\r\nt,setTimeout(()=>{this.ws&&this.ws.send(this.writeBuffer),this.writeBuffer=void 0},0);else{let n=new Uint8Array(\r\nthis.writeBuffer.length+t.length);n.set(this.writeBuffer),n.set(t,this.writeBuffer.length),this.writeBuffer=\r\nn}}write(t,n=\"utf8\",i=s=>{}){return t.length===0?(i(),!0):(typeof t==\"string\"&&(t=d.from(t,n)),this.\r\ntlsState===0?(this.rawWrite(t),i()):this.tlsState===1?this.once(\"secureConnection\",()=>{this.write(t,\r\nn,i)}):(this.tlsWrite(t),i()),!0)}end(t=d.alloc(0),n=\"utf8\",i=()=>{}){return this.write(t,n,()=>{this.\r\nws.close(),i()}),this}destroy(){return this.destroyed=!0,this.end()}};a(S,\"Socket\"),E(S,\"defaults\",{\r\npoolQueryViaFetch:!1,fetchEndpoint:a((t,n,i)=>{let s;return i?.jwtAuth?s=t.replace(yi,\"apiauth.\"):s=\r\nt.replace(yi,\"api.\"),\"https://\"+s+\"/sql\"},\"fetchEndpoint\"),fetchConnectionCache:!0,fetchFunction:void 0,\r\nwebSocketConstructor:void 0,wsProxy:a(t=>t+\"/v2\",\"wsProxy\"),useSecureWebSocket:!0,forceDisablePgSSL:!0,\r\ncoalesceWrites:!0,pipelineConnect:\"password\",subtls:void 0,rootCerts:\"\",pipelineTLS:!1,disableSNI:!1,\r\ndisableWarningInBrowsers:!1}),E(S,\"opts\",{});ce=S});var gi={};ie(gi,{parse:()=>Yt});function Yt(r,e=!1){let{protocol:t}=new URL(r),n=\"http:\"+r.substring(\r\nt.length),{username:i,password:s,host:o,hostname:u,port:c,pathname:l,search:f,searchParams:y,hash:g}=new URL(\r\nn);s=decodeURIComponent(s),i=decodeURIComponent(i),l=decodeURIComponent(l);let A=i+\":\"+s,C=e?Object.\r\nfromEntries(y.entries()):f;return{href:r,protocol:t,auth:A,username:i,password:s,host:o,hostname:u,port:c,\r\npathname:l,search:f,query:C,hash:g}}var Zt=G(()=>{\"use strict\";p();a(Yt,\"parse\")});var tr=T(Ai=>{\"use strict\";p();Ai.parse=function(r,e){return new er(r,e).parse()};var vt=class vt{constructor(e,t){\r\nthis.source=e,this.transform=t||Ca,this.position=0,this.entries=[],this.recorded=[],this.dimension=0}isEof(){\r\nreturn this.position>=this.source.length}nextCharacter(){var e=this.source[this.position++];return e===\r\n\"\\\\\"?{value:this.source[this.position++],escaped:!0}:{value:e,escaped:!1}}record(e){this.recorded.push(\r\ne)}newEntry(e){var t;(this.recorded.length>0||e)&&(t=this.recorded.join(\"\"),t===\"NULL\"&&!e&&(t=null),\r\nt!==null&&(t=this.transform(t)),this.entries.push(t),this.recorded=[])}consumeDimensions(){if(this.source[0]===\r\n\"[\")for(;!this.isEof();){var e=this.nextCharacter();if(e.value===\"=\")break}}parse(e){var t,n,i;for(this.\r\nconsumeDimensions();!this.isEof();)if(t=this.nextCharacter(),t.value===\"{\"&&!i)this.dimension++,this.\r\ndimension>1&&(n=new vt(this.source.substr(this.position-1),this.transform),this.entries.push(n.parse(\r\n!0)),this.position+=n.position-2);else if(t.value===\"}\"&&!i){if(this.dimension--,!this.dimension&&(this.\r\nnewEntry(),e))return this.entries}else t.value==='\"'&&!t.escaped?(i&&this.newEntry(!0),i=!i):t.value===\r\n\",\"&&!i?this.newEntry():this.record(t.value);if(this.dimension!==0)throw new Error(\"array dimension \\\r\nnot balanced\");return this.entries}};a(vt,\"ArrayParser\");var er=vt;function Ca(r){return r}a(Ca,\"ide\\\r\nntity\")});var rr=T((Zl,Ci)=>{p();var _a=tr();Ci.exports={create:a(function(r,e){return{parse:a(function(){return _a.\r\nparse(r,e)},\"parse\")}},\"create\")}});var Ti=T((ef,Ii)=>{\"use strict\";p();var Ia=/(\\d{1,})-(\\d{2})-(\\d{2}) (\\d{2}):(\\d{2}):(\\d{2})(\\.\\d{1,})?.*?( BC)?$/,\r\nTa=/^(\\d{1,})-(\\d{2})-(\\d{2})( BC)?$/,Pa=/([Z+-])(\\d{2})?:?(\\d{2})?:?(\\d{2})?/,Ba=/^-?infinity$/;Ii.\r\nexports=a(function(e){if(Ba.test(e))return Number(e.replace(\"i\",\"I\"));var t=Ia.exec(e);if(!t)return Ra(\r\ne)||null;var n=!!t[8],i=parseInt(t[1],10);n&&(i=_i(i));var s=parseInt(t[2],10)-1,o=t[3],u=parseInt(t[4],\r\n10),c=parseInt(t[5],10),l=parseInt(t[6],10),f=t[7];f=f?1e3*parseFloat(f):0;var y,g=La(e);return g!=null?\r\n(y=new Date(Date.UTC(i,s,o,u,c,l,f)),nr(i)&&y.setUTCFullYear(i),g!==0&&y.setTime(y.getTime()-g)):(y=\r\nnew Date(i,s,o,u,c,l,f),nr(i)&&y.setFullYear(i)),y},\"parseDate\");function Ra(r){var e=Ta.exec(r);if(e){\r\nvar t=parseInt(e[1],10),n=!!e[4];n&&(t=_i(t));var i=parseInt(e[2],10)-1,s=e[3],o=new Date(t,i,s);return nr(\r\nt)&&o.setFullYear(t),o}}a(Ra,\"getDate\");function La(r){if(r.endsWith(\"+00\"))return 0;var e=Pa.exec(r.\r\nsplit(\" \")[1]);if(e){var t=e[1];if(t===\"Z\")return 0;var n=t===\"-\"?-1:1,i=parseInt(e[2],10)*3600+parseInt(\r\ne[3]||0,10)*60+parseInt(e[4]||0,10);return i*n*1e3}}a(La,\"timeZoneOffset\");function _i(r){return-(r-\r\n1)}a(_i,\"bcYearToNegativeYear\");function nr(r){return r>=0&&r<100}a(nr,\"is0To99\")});var Bi=T((nf,Pi)=>{p();Pi.exports=ka;var Fa=Object.prototype.hasOwnProperty;function ka(r){for(var e=1;e<\r\narguments.length;e++){var t=arguments[e];for(var n in t)Fa.call(t,n)&&(r[n]=t[n])}return r}a(ka,\"ext\\\r\nend\")});var Fi=T((af,Li)=>{\"use strict\";p();var Ma=Bi();Li.exports=ke;function ke(r){if(!(this instanceof ke))\r\nreturn new ke(r);Ma(this,Va(r))}a(ke,\"PostgresInterval\");var Ua=[\"seconds\",\"minutes\",\"hours\",\"days\",\r\n\"months\",\"years\"];ke.prototype.toPostgres=function(){var r=Ua.filter(this.hasOwnProperty,this);return this.\r\nmilliseconds&&r.indexOf(\"seconds\")<0&&r.push(\"seconds\"),r.length===0?\"0\":r.map(function(e){var t=this[e]||\r\n0;return e===\"seconds\"&&this.milliseconds&&(t=(t+this.milliseconds/1e3).toFixed(6).replace(/\\.?0+$/,\r\n\"\")),t+\" \"+e},this).join(\" \")};var Da={years:\"Y\",months:\"M\",days:\"D\",hours:\"H\",minutes:\"M\",seconds:\"\\\r\nS\"},Oa=[\"years\",\"months\",\"days\"],qa=[\"hours\",\"minutes\",\"seconds\"];ke.prototype.toISOString=ke.prototype.\r\ntoISO=function(){var r=Oa.map(t,this).join(\"\"),e=qa.map(t,this).join(\"\");return\"P\"+r+\"T\"+e;function t(n){\r\nvar i=this[n]||0;return n===\"seconds\"&&this.milliseconds&&(i=(i+this.milliseconds/1e3).toFixed(6).replace(\r\n/0+$/,\"\")),i+Da[n]}};var ir=\"([+-]?\\\\d+)\",Qa=ir+\"\\\\s+years?\",Na=ir+\"\\\\s+mons?\",Wa=ir+\"\\\\s+days?\",ja=\"\\\r\n([+-])?([\\\\d]*):(\\\\d\\\\d):(\\\\d\\\\d)\\\\.?(\\\\d{1,6})?\",Ha=new RegExp([Qa,Na,Wa,ja].map(function(r){return\"\\\r\n(\"+r+\")?\"}).join(\"\\\\s*\")),Ri={years:2,months:4,days:6,hours:9,minutes:10,seconds:11,milliseconds:12},\r\n$a=[\"hours\",\"minutes\",\"seconds\",\"milliseconds\"];function Ga(r){var e=r+\"000000\".slice(r.length);return parseInt(\r\ne,10)/1e3}a(Ga,\"parseMilliseconds\");function Va(r){if(!r)return{};var e=Ha.exec(r),t=e[8]===\"-\";return Object.\r\nkeys(Ri).reduce(function(n,i){var s=Ri[i],o=e[s];return!o||(o=i===\"milliseconds\"?Ga(o):parseInt(o,10),\r\n!o)||(t&&~$a.indexOf(i)&&(o*=-1),n[i]=o),n},{})}a(Va,\"parse\")});var Mi=T((lf,ki)=>{\"use strict\";p();ki.exports=a(function(e){if(/^\\\\x/.test(e))return new d(e.substr(\r\n2),\"hex\");for(var t=\"\",n=0;n<e.length;)if(e[n]!==\"\\\\\")t+=e[n],++n;else if(/[0-7]{3}/.test(e.substr(n+\r\n1,3)))t+=String.fromCharCode(parseInt(e.substr(n+1,3),8)),n+=4;else{for(var i=1;n+i<e.length&&e[n+i]===\r\n\"\\\\\";)i++;for(var s=0;s<Math.floor(i/2);++s)t+=\"\\\\\";n+=Math.floor(i/2)*2}return new d(t,\"binary\")},\"\\\r\nparseBytea\")});var Wi=T((pf,Ni)=>{p();var Ve=tr(),ze=rr(),xt=Ti(),Di=Fi(),Oi=Mi();function St(r){return a(function(t){\r\nreturn t===null?t:r(t)},\"nullAllowed\")}a(St,\"allowNull\");function qi(r){return r===null?r:r===\"TRUE\"||\r\nr===\"t\"||r===\"true\"||r===\"y\"||r===\"yes\"||r===\"on\"||r===\"1\"}a(qi,\"parseBool\");function za(r){return r?\r\nVe.parse(r,qi):null}a(za,\"parseBoolArray\");function Ka(r){return parseInt(r,10)}a(Ka,\"parseBaseTenIn\\\r\nt\");function sr(r){return r?Ve.parse(r,St(Ka)):null}a(sr,\"parseIntegerArray\");function Ya(r){return r?\r\nVe.parse(r,St(function(e){return Qi(e).trim()})):null}a(Ya,\"parseBigIntegerArray\");var Za=a(function(r){\r\nif(!r)return null;var e=ze.create(r,function(t){return t!==null&&(t=cr(t)),t});return e.parse()},\"pa\\\r\nrsePointArray\"),or=a(function(r){if(!r)return null;var e=ze.create(r,function(t){return t!==null&&(t=\r\nparseFloat(t)),t});return e.parse()},\"parseFloatArray\"),re=a(function(r){if(!r)return null;var e=ze.\r\ncreate(r);return e.parse()},\"parseStringArray\"),ar=a(function(r){if(!r)return null;var e=ze.create(r,\r\nfunction(t){return t!==null&&(t=xt(t)),t});return e.parse()},\"parseDateArray\"),Ja=a(function(r){if(!r)\r\nreturn null;var e=ze.create(r,function(t){return t!==null&&(t=Di(t)),t});return e.parse()},\"parseInt\\\r\nervalArray\"),Xa=a(function(r){return r?Ve.parse(r,St(Oi)):null},\"parseByteAArray\"),ur=a(function(r){\r\nreturn parseInt(r,10)},\"parseInteger\"),Qi=a(function(r){var e=String(r);return/^\\d+$/.test(e)?e:r},\"\\\r\nparseBigInteger\"),Ui=a(function(r){return r?Ve.parse(r,St(JSON.parse)):null},\"parseJsonArray\"),cr=a(\r\nfunction(r){return r[0]!==\"(\"?null:(r=r.substring(1,r.length-1).split(\",\"),{x:parseFloat(r[0]),y:parseFloat(\r\nr[1])})},\"parsePoint\"),eu=a(function(r){if(r[0]!==\"<\"&&r[1]!==\"(\")return null;for(var e=\"(\",t=\"\",n=!1,\r\ni=2;i<r.length-1;i++){if(n||(e+=r[i]),r[i]===\")\"){n=!0;continue}else if(!n)continue;r[i]!==\",\"&&(t+=\r\nr[i])}var s=cr(e);return s.radius=parseFloat(t),s},\"parseCircle\"),tu=a(function(r){r(20,Qi),r(21,ur),\r\nr(23,ur),r(26,ur),r(700,parseFloat),r(701,parseFloat),r(16,qi),r(1082,xt),r(1114,xt),r(1184,xt),r(600,\r\ncr),r(651,re),r(718,eu),r(1e3,za),r(1001,Xa),r(1005,sr),r(1007,sr),r(1028,sr),r(1016,Ya),r(1017,Za),\r\nr(1021,or),r(1022,or),r(1231,or),r(1014,re),r(1015,re),r(1008,re),r(1009,re),r(1040,re),r(1041,re),r(\r\n1115,ar),r(1182,ar),r(1185,ar),r(1186,Di),r(1187,Ja),r(17,Oi),r(114,JSON.parse.bind(JSON)),r(3802,JSON.\r\nparse.bind(JSON)),r(199,Ui),r(3807,Ui),r(3907,re),r(2951,re),r(791,re),r(1183,re),r(1270,re)},\"init\");\r\nNi.exports={init:tu}});var Hi=T((mf,ji)=>{\"use strict\";p();var z=1e6;function ru(r){var e=r.readInt32BE(0),t=r.readUInt32BE(\r\n4),n=\"\";e<0&&(e=~e+(t===0),t=~t+1>>>0,n=\"-\");var i=\"\",s,o,u,c,l,f;{if(s=e%z,e=e/z>>>0,o=4294967296*s+\r\nt,t=o/z>>>0,u=\"\"+(o-z*t),t===0&&e===0)return n+u+i;for(c=\"\",l=6-u.length,f=0;f<l;f++)c+=\"0\";i=c+u+i}\r\n{if(s=e%z,e=e/z>>>0,o=4294967296*s+t,t=o/z>>>0,u=\"\"+(o-z*t),t===0&&e===0)return n+u+i;for(c=\"\",l=6-u.\r\nlength,f=0;f<l;f++)c+=\"0\";i=c+u+i}{if(s=e%z,e=e/z>>>0,o=4294967296*s+t,t=o/z>>>0,u=\"\"+(o-z*t),t===0&&\r\ne===0)return n+u+i;for(c=\"\",l=6-u.length,f=0;f<l;f++)c+=\"0\";i=c+u+i}return s=e%z,o=4294967296*s+t,u=\r\n\"\"+o%z,n+u+i}a(ru,\"readInt8\");ji.exports=ru});var Ki=T((bf,zi)=>{p();var nu=Hi(),L=a(function(r,e,t,n,i){t=t||0,n=n||!1,i=i||function(A,C,D){return A*\r\nMath.pow(2,D)+C};var s=t>>3,o=a(function(A){return n?~A&255:A},\"inv\"),u=255,c=8-t%8;e<c&&(u=255<<8-e&\r\n255,c=e),t&&(u=u>>t%8);var l=0;t%8+e>=8&&(l=i(0,o(r[s])&u,c));for(var f=e+t>>3,y=s+1;y<f;y++)l=i(l,o(\r\nr[y]),8);var g=(e+t)%8;return g>0&&(l=i(l,o(r[f])>>8-g,g)),l},\"parseBits\"),Vi=a(function(r,e,t){var n=Math.\r\npow(2,t-1)-1,i=L(r,1),s=L(r,t,1);if(s===0)return 0;var o=1,u=a(function(l,f,y){l===0&&(l=1);for(var g=1;g<=\r\ny;g++)o/=2,(f&1<<y-g)>0&&(l+=o);return l},\"parsePrecisionBits\"),c=L(r,e,t+1,!1,u);return s==Math.pow(\r\n2,t+1)-1?c===0?i===0?1/0:-1/0:NaN:(i===0?1:-1)*Math.pow(2,s-n)*c},\"parseFloatFromBits\"),iu=a(function(r){\r\nreturn L(r,1)==1?-1*(L(r,15,1,!0)+1):L(r,15,1)},\"parseInt16\"),$i=a(function(r){return L(r,1)==1?-1*(L(\r\nr,31,1,!0)+1):L(r,31,1)},\"parseInt32\"),su=a(function(r){return Vi(r,23,8)},\"parseFloat32\"),ou=a(function(r){\r\nreturn Vi(r,52,11)},\"parseFloat64\"),au=a(function(r){var e=L(r,16,32);if(e==49152)return NaN;for(var t=Math.\r\npow(1e4,L(r,16,16)),n=0,i=[],s=L(r,16),o=0;o<s;o++)n+=L(r,16,64+16*o)*t,t/=1e4;var u=Math.pow(10,L(r,\r\n16,48));return(e===0?1:-1)*Math.round(n*u)/u},\"parseNumeric\"),Gi=a(function(r,e){var t=L(e,1),n=L(e,\r\n63,1),i=new Date((t===0?1:-1)*n/1e3+9466848e5);return r||i.setTime(i.getTime()+i.getTimezoneOffset()*\r\n6e4),i.usec=n%1e3,i.getMicroSeconds=function(){return this.usec},i.setMicroSeconds=function(s){this.\r\nusec=s},i.getUTCMicroSeconds=function(){return this.usec},i},\"parseDate\"),Ke=a(function(r){for(var e=L(\r\nr,32),t=L(r,32,32),n=L(r,32,64),i=96,s=[],o=0;o<e;o++)s[o]=L(r,32,i),i+=32,i+=32;var u=a(function(l){\r\nvar f=L(r,32,i);if(i+=32,f==4294967295)return null;var y;if(l==23||l==20)return y=L(r,f*8,i),i+=f*8,\r\ny;if(l==25)return y=r.toString(this.encoding,i>>3,(i+=f<<3)>>3),y;console.log(\"ERROR: ElementType no\\\r\nt implemented: \"+l)},\"parseElement\"),c=a(function(l,f){var y=[],g;if(l.length>1){var A=l.shift();for(g=\r\n0;g<A;g++)y[g]=c(l,f);l.unshift(A)}else for(g=0;g<l[0];g++)y[g]=u(f);return y},\"parse\");return c(s,n)},\r\n\"parseArray\"),uu=a(function(r){return r.toString(\"utf8\")},\"parseText\"),cu=a(function(r){return r===null?\r\nnull:L(r,8)>0},\"parseBool\"),lu=a(function(r){r(20,nu),r(21,iu),r(23,$i),r(26,$i),r(1700,au),r(700,su),\r\nr(701,ou),r(16,cu),r(1114,Gi.bind(null,!1)),r(1184,Gi.bind(null,!0)),r(1e3,Ke),r(1007,Ke),r(1016,Ke),\r\nr(1008,Ke),r(1009,Ke),r(25,uu)},\"init\");zi.exports={init:lu}});var Zi=T((Sf,Yi)=>{p();Yi.exports={BOOL:16,BYTEA:17,CHAR:18,INT8:20,INT2:21,INT4:23,REGPROC:24,TEXT:25,\r\nOID:26,TID:27,XID:28,CID:29,JSON:114,XML:142,PG_NODE_TREE:194,SMGR:210,PATH:602,POLYGON:604,CIDR:650,\r\nFLOAT4:700,FLOAT8:701,ABSTIME:702,RELTIME:703,TINTERVAL:704,CIRCLE:718,MACADDR8:774,MONEY:790,MACADDR:829,\r\nINET:869,ACLITEM:1033,BPCHAR:1042,VARCHAR:1043,DATE:1082,TIME:1083,TIMESTAMP:1114,TIMESTAMPTZ:1184,INTERVAL:1186,\r\nTIMETZ:1266,BIT:1560,VARBIT:1562,NUMERIC:1700,REFCURSOR:1790,REGPROCEDURE:2202,REGOPER:2203,REGOPERATOR:2204,\r\nREGCLASS:2205,REGTYPE:2206,UUID:2950,TXID_SNAPSHOT:2970,PG_LSN:3220,PG_NDISTINCT:3361,PG_DEPENDENCIES:3402,\r\nTSVECTOR:3614,TSQUERY:3615,GTSVECTOR:3642,REGCONFIG:3734,REGDICTIONARY:3769,JSONB:3802,REGNAMESPACE:4089,\r\nREGROLE:4096}});var Je=T(Ze=>{p();var fu=Wi(),hu=Ki(),pu=rr(),du=Zi();Ze.getTypeParser=yu;Ze.setTypeParser=mu;Ze.arrayParser=\r\npu;Ze.builtins=du;var Ye={text:{},binary:{}};function Ji(r){return String(r)}a(Ji,\"noParse\");function yu(r,e){\r\nreturn e=e||\"text\",Ye[e]&&Ye[e][r]||Ji}a(yu,\"getTypeParser\");function mu(r,e,t){typeof e==\"function\"&&\r\n(t=e,e=\"text\"),Ye[e][r]=t}a(mu,\"setTypeParser\");fu.init(function(r,e){Ye.text[r]=e});hu.init(function(r,e){\r\nYe.binary[r]=e})});var At=T((If,Xi)=>{\"use strict\";p();var wu=Je();function Et(r){this._types=r||wu,this.text={},this.binary=\r\n{}}a(Et,\"TypeOverrides\");Et.prototype.getOverrides=function(r){switch(r){case\"text\":return this.text;case\"\\\r\nbinary\":return this.binary;default:return{}}};Et.prototype.setTypeParser=function(r,e,t){typeof e==\"\\\r\nfunction\"&&(t=e,e=\"text\"),this.getOverrides(e)[r]=t};Et.prototype.getTypeParser=function(r,e){return e=\r\ne||\"text\",this.getOverrides(e)[r]||this._types.getTypeParser(r,e)};Xi.exports=Et});function Xe(r){let e=1779033703,t=3144134277,n=1013904242,i=2773480762,s=1359893119,o=2600822924,u=528734635,\r\nc=1541459225,l=0,f=0,y=[1116352408,1899447441,3049323471,3921009573,961987163,1508970993,2453635748,\r\n2870763221,3624381080,310598401,607225278,1426881987,1925078388,2162078206,2614888103,3248222580,3835390401,\r\n4022224774,264347078,604807628,770255983,1249150122,1555081692,1996064986,2554220882,2821834349,2952996808,\r\n3210313671,3336571891,3584528711,113926993,338241895,666307205,773529912,1294757372,1396182291,1695183700,\r\n1986661051,2177026350,2456956037,2730485921,2820302411,3259730800,3345764771,3516065817,3600352804,4094571909,\r\n275423344,430227734,506948616,659060556,883997877,958139571,1322822218,1537002063,1747873779,1955562222,\r\n2024104815,2227730452,2361852424,2428436474,2756734187,3204031479,3329325298],g=a((I,w)=>I>>>w|I<<32-\r\nw,\"rrot\"),A=new Uint32Array(64),C=new Uint8Array(64),D=a(()=>{for(let R=0,j=0;R<16;R++,j+=4)A[R]=C[j]<<\r\n24|C[j+1]<<16|C[j+2]<<8|C[j+3];for(let R=16;R<64;R++){let j=g(A[R-15],7)^g(A[R-15],18)^A[R-15]>>>3,le=g(\r\nA[R-2],17)^g(A[R-2],19)^A[R-2]>>>10;A[R]=A[R-16]+j+A[R-7]+le|0}let I=e,w=t,Z=n,W=i,J=s,X=o,se=u,oe=c;\r\nfor(let R=0;R<64;R++){let j=g(J,6)^g(J,11)^g(J,25),le=J&X^~J&se,de=oe+j+le+y[R]+A[R]|0,We=g(I,2)^g(I,\r\n13)^g(I,22),fe=I&w^I&Z^w&Z,_e=We+fe|0;oe=se,se=X,X=J,J=W+de|0,W=Z,Z=w,w=I,I=de+_e|0}e=e+I|0,t=t+w|0,\r\nn=n+Z|0,i=i+W|0,s=s+J|0,o=o+X|0,u=u+se|0,c=c+oe|0,f=0},\"process\"),Y=a(I=>{typeof I==\"string\"&&(I=new TextEncoder().\r\nencode(I));for(let w=0;w<I.length;w++)C[f++]=I[w],f===64&&D();l+=I.length},\"add\"),P=a(()=>{if(C[f++]=\r\n128,f==64&&D(),f+8>64){for(;f<64;)C[f++]=0;D()}for(;f<58;)C[f++]=0;let I=l*8;C[f++]=I/1099511627776&\r\n255,C[f++]=I/4294967296&255,C[f++]=I>>>24,C[f++]=I>>>16&255,C[f++]=I>>>8&255,C[f++]=I&255,D();let w=new Uint8Array(\r\n32);return w[0]=e>>>24,w[1]=e>>>16&255,w[2]=e>>>8&255,w[3]=e&255,w[4]=t>>>24,w[5]=t>>>16&255,w[6]=t>>>\r\n8&255,w[7]=t&255,w[8]=n>>>24,w[9]=n>>>16&255,w[10]=n>>>8&255,w[11]=n&255,w[12]=i>>>24,w[13]=i>>>16&255,\r\nw[14]=i>>>8&255,w[15]=i&255,w[16]=s>>>24,w[17]=s>>>16&255,w[18]=s>>>8&255,w[19]=s&255,w[20]=o>>>24,w[21]=\r\no>>>16&255,w[22]=o>>>8&255,w[23]=o&255,w[24]=u>>>24,w[25]=u>>>16&255,w[26]=u>>>8&255,w[27]=u&255,w[28]=\r\nc>>>24,w[29]=c>>>16&255,w[30]=c>>>8&255,w[31]=c&255,w},\"digest\");return r===void 0?{add:Y,digest:P}:\r\n(Y(r),P())}var es=G(()=>{\"use strict\";p();a(Xe,\"sha256\")});var U,et,ts=G(()=>{\"use strict\";p();U=class U{constructor(){E(this,\"_dataLength\",0);E(this,\"_bufferL\\\r\nength\",0);E(this,\"_state\",new Int32Array(4));E(this,\"_buffer\",new ArrayBuffer(68));E(this,\"_buffer8\");\r\nE(this,\"_buffer32\");this._buffer8=new Uint8Array(this._buffer,0,68),this._buffer32=new Uint32Array(this.\r\n_buffer,0,17),this.start()}static hashByteArray(e,t=!1){return this.onePassHasher.start().appendByteArray(\r\ne).end(t)}static hashStr(e,t=!1){return this.onePassHasher.start().appendStr(e).end(t)}static hashAsciiStr(e,t=!1){\r\nreturn this.onePassHasher.start().appendAsciiStr(e).end(t)}static _hex(e){let t=U.hexChars,n=U.hexOut,\r\ni,s,o,u;for(u=0;u<4;u+=1)for(s=u*8,i=e[u],o=0;o<8;o+=2)n[s+1+o]=t.charAt(i&15),i>>>=4,n[s+0+o]=t.charAt(\r\ni&15),i>>>=4;return n.join(\"\")}static _md5cycle(e,t){let n=e[0],i=e[1],s=e[2],o=e[3];n+=(i&s|~i&o)+t[0]-\r\n680876936|0,n=(n<<7|n>>>25)+i|0,o+=(n&i|~n&s)+t[1]-389564586|0,o=(o<<12|o>>>20)+n|0,s+=(o&n|~o&i)+t[2]+\r\n606105819|0,s=(s<<17|s>>>15)+o|0,i+=(s&o|~s&n)+t[3]-1044525330|0,i=(i<<22|i>>>10)+s|0,n+=(i&s|~i&o)+\r\nt[4]-176418897|0,n=(n<<7|n>>>25)+i|0,o+=(n&i|~n&s)+t[5]+1200080426|0,o=(o<<12|o>>>20)+n|0,s+=(o&n|~o&\r\ni)+t[6]-1473231341|0,s=(s<<17|s>>>15)+o|0,i+=(s&o|~s&n)+t[7]-45705983|0,i=(i<<22|i>>>10)+s|0,n+=(i&s|\r\n~i&o)+t[8]+1770035416|0,n=(n<<7|n>>>25)+i|0,o+=(n&i|~n&s)+t[9]-1958414417|0,o=(o<<12|o>>>20)+n|0,s+=\r\n(o&n|~o&i)+t[10]-42063|0,s=(s<<17|s>>>15)+o|0,i+=(s&o|~s&n)+t[11]-1990404162|0,i=(i<<22|i>>>10)+s|0,\r\nn+=(i&s|~i&o)+t[12]+1804603682|0,n=(n<<7|n>>>25)+i|0,o+=(n&i|~n&s)+t[13]-40341101|0,o=(o<<12|o>>>20)+\r\nn|0,s+=(o&n|~o&i)+t[14]-1502002290|0,s=(s<<17|s>>>15)+o|0,i+=(s&o|~s&n)+t[15]+1236535329|0,i=(i<<22|\r\ni>>>10)+s|0,n+=(i&o|s&~o)+t[1]-165796510|0,n=(n<<5|n>>>27)+i|0,o+=(n&s|i&~s)+t[6]-1069501632|0,o=(o<<\r\n9|o>>>23)+n|0,s+=(o&i|n&~i)+t[11]+643717713|0,s=(s<<14|s>>>18)+o|0,i+=(s&n|o&~n)+t[0]-373897302|0,i=\r\n(i<<20|i>>>12)+s|0,n+=(i&o|s&~o)+t[5]-701558691|0,n=(n<<5|n>>>27)+i|0,o+=(n&s|i&~s)+t[10]+38016083|0,\r\no=(o<<9|o>>>23)+n|0,s+=(o&i|n&~i)+t[15]-660478335|0,s=(s<<14|s>>>18)+o|0,i+=(s&n|o&~n)+t[4]-405537848|\r\n0,i=(i<<20|i>>>12)+s|0,n+=(i&o|s&~o)+t[9]+568446438|0,n=(n<<5|n>>>27)+i|0,o+=(n&s|i&~s)+t[14]-1019803690|\r\n0,o=(o<<9|o>>>23)+n|0,s+=(o&i|n&~i)+t[3]-187363961|0,s=(s<<14|s>>>18)+o|0,i+=(s&n|o&~n)+t[8]+1163531501|\r\n0,i=(i<<20|i>>>12)+s|0,n+=(i&o|s&~o)+t[13]-1444681467|0,n=(n<<5|n>>>27)+i|0,o+=(n&s|i&~s)+t[2]-51403784|\r\n0,o=(o<<9|o>>>23)+n|0,s+=(o&i|n&~i)+t[7]+1735328473|0,s=(s<<14|s>>>18)+o|0,i+=(s&n|o&~n)+t[12]-1926607734|\r\n0,i=(i<<20|i>>>12)+s|0,n+=(i^s^o)+t[5]-378558|0,n=(n<<4|n>>>28)+i|0,o+=(n^i^s)+t[8]-2022574463|0,o=(o<<\r\n11|o>>>21)+n|0,s+=(o^n^i)+t[11]+1839030562|0,s=(s<<16|s>>>16)+o|0,i+=(s^o^n)+t[14]-35309556|0,i=(i<<\r\n23|i>>>9)+s|0,n+=(i^s^o)+t[1]-1530992060|0,n=(n<<4|n>>>28)+i|0,o+=(n^i^s)+t[4]+1272893353|0,o=(o<<11|\r\no>>>21)+n|0,s+=(o^n^i)+t[7]-155497632|0,s=(s<<16|s>>>16)+o|0,i+=(s^o^n)+t[10]-1094730640|0,i=(i<<23|\r\ni>>>9)+s|0,n+=(i^s^o)+t[13]+681279174|0,n=(n<<4|n>>>28)+i|0,o+=(n^i^s)+t[0]-358537222|0,o=(o<<11|o>>>\r\n21)+n|0,s+=(o^n^i)+t[3]-722521979|0,s=(s<<16|s>>>16)+o|0,i+=(s^o^n)+t[6]+76029189|0,i=(i<<23|i>>>9)+\r\ns|0,n+=(i^s^o)+t[9]-640364487|0,n=(n<<4|n>>>28)+i|0,o+=(n^i^s)+t[12]-421815835|0,o=(o<<11|o>>>21)+n|\r\n0,s+=(o^n^i)+t[15]+530742520|0,s=(s<<16|s>>>16)+o|0,i+=(s^o^n)+t[2]-995338651|0,i=(i<<23|i>>>9)+s|0,\r\nn+=(s^(i|~o))+t[0]-198630844|0,n=(n<<6|n>>>26)+i|0,o+=(i^(n|~s))+t[7]+1126891415|0,o=(o<<10|o>>>22)+\r\nn|0,s+=(n^(o|~i))+t[14]-1416354905|0,s=(s<<15|s>>>17)+o|0,i+=(o^(s|~n))+t[5]-57434055|0,i=(i<<21|i>>>\r\n11)+s|0,n+=(s^(i|~o))+t[12]+1700485571|0,n=(n<<6|n>>>26)+i|0,o+=(i^(n|~s))+t[3]-1894986606|0,o=(o<<10|\r\no>>>22)+n|0,s+=(n^(o|~i))+t[10]-1051523|0,s=(s<<15|s>>>17)+o|0,i+=(o^(s|~n))+t[1]-2054922799|0,i=(i<<\r\n21|i>>>11)+s|0,n+=(s^(i|~o))+t[8]+1873313359|0,n=(n<<6|n>>>26)+i|0,o+=(i^(n|~s))+t[15]-30611744|0,o=\r\n(o<<10|o>>>22)+n|0,s+=(n^(o|~i))+t[6]-1560198380|0,s=(s<<15|s>>>17)+o|0,i+=(o^(s|~n))+t[13]+1309151649|\r\n0,i=(i<<21|i>>>11)+s|0,n+=(s^(i|~o))+t[4]-145523070|0,n=(n<<6|n>>>26)+i|0,o+=(i^(n|~s))+t[11]-1120210379|\r\n0,o=(o<<10|o>>>22)+n|0,s+=(n^(o|~i))+t[2]+718787259|0,s=(s<<15|s>>>17)+o|0,i+=(o^(s|~n))+t[9]-343485551|\r\n0,i=(i<<21|i>>>11)+s|0,e[0]=n+e[0]|0,e[1]=i+e[1]|0,e[2]=s+e[2]|0,e[3]=o+e[3]|0}start(){return this._dataLength=\r\n0,this._bufferLength=0,this._state.set(U.stateIdentity),this}appendStr(e){let t=this._buffer8,n=this.\r\n_buffer32,i=this._bufferLength,s,o;for(o=0;o<e.length;o+=1){if(s=e.charCodeAt(o),s<128)t[i++]=s;else if(s<\r\n2048)t[i++]=(s>>>6)+192,t[i++]=s&63|128;else if(s<55296||s>56319)t[i++]=(s>>>12)+224,t[i++]=s>>>6&63|\r\n128,t[i++]=s&63|128;else{if(s=(s-55296)*1024+(e.charCodeAt(++o)-56320)+65536,s>1114111)throw new Error(\r\n\"Unicode standard supports code points up to U+10FFFF\");t[i++]=(s>>>18)+240,t[i++]=s>>>12&63|128,t[i++]=\r\ns>>>6&63|128,t[i++]=s&63|128}i>=64&&(this._dataLength+=64,U._md5cycle(this._state,n),i-=64,n[0]=n[16])}\r\nreturn this._bufferLength=i,this}appendAsciiStr(e){let t=this._buffer8,n=this._buffer32,i=this._bufferLength,\r\ns,o=0;for(;;){for(s=Math.min(e.length-o,64-i);s--;)t[i++]=e.charCodeAt(o++);if(i<64)break;this._dataLength+=\r\n64,U._md5cycle(this._state,n),i=0}return this._bufferLength=i,this}appendByteArray(e){let t=this._buffer8,\r\nn=this._buffer32,i=this._bufferLength,s,o=0;for(;;){for(s=Math.min(e.length-o,64-i);s--;)t[i++]=e[o++];\r\nif(i<64)break;this._dataLength+=64,U._md5cycle(this._state,n),i=0}return this._bufferLength=i,this}getState(){\r\nlet e=this._state;return{buffer:String.fromCharCode.apply(null,Array.from(this._buffer8)),buflen:this.\r\n_bufferLength,length:this._dataLength,state:[e[0],e[1],e[2],e[3]]}}setState(e){let t=e.buffer,n=e.state,\r\ni=this._state,s;for(this._dataLength=e.length,this._bufferLength=e.buflen,i[0]=n[0],i[1]=n[1],i[2]=n[2],\r\ni[3]=n[3],s=0;s<t.length;s+=1)this._buffer8[s]=t.charCodeAt(s)}end(e=!1){let t=this._bufferLength,n=this.\r\n_buffer8,i=this._buffer32,s=(t>>2)+1;this._dataLength+=t;let o=this._dataLength*8;if(n[t]=128,n[t+1]=\r\nn[t+2]=n[t+3]=0,i.set(U.buffer32Identity.subarray(s),s),t>55&&(U._md5cycle(this._state,i),i.set(U.buffer32Identity)),\r\no<=4294967295)i[14]=o;else{let u=o.toString(16).match(/(.*?)(.{0,8})$/);if(u===null)return;let c=parseInt(\r\nu[2],16),l=parseInt(u[1],16)||0;i[14]=c,i[15]=l}return U._md5cycle(this._state,i),e?this._state:U._hex(\r\nthis._state)}};a(U,\"Md5\"),E(U,\"stateIdentity\",new Int32Array([1732584193,-271733879,-1732584194,271733878])),\r\nE(U,\"buffer32Identity\",new Int32Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0])),E(U,\"hexChars\",\"0123456789\\\r\nabcdef\"),E(U,\"hexOut\",[]),E(U,\"onePassHasher\",new U);et=U});var lr={};ie(lr,{createHash:()=>bu,createHmac:()=>vu,randomBytes:()=>gu});function gu(r){return crypto.\r\ngetRandomValues(d.alloc(r))}function bu(r){if(r===\"sha256\")return{update:a(function(e){return{digest:a(\r\nfunction(){return d.from(Xe(e))},\"digest\")}},\"update\")};if(r===\"md5\")return{update:a(function(e){return{\r\ndigest:a(function(){return typeof e==\"string\"?et.hashStr(e):et.hashByteArray(e)},\"digest\")}},\"update\")};\r\nthrow new Error(`Hash type '${r}' not supported`)}function vu(r,e){if(r!==\"sha256\")throw new Error(`\\\r\nOnly sha256 is supported (requested: '${r}')`);return{update:a(function(t){return{digest:a(function(){\r\ntypeof e==\"string\"&&(e=new TextEncoder().encode(e)),typeof t==\"string\"&&(t=new TextEncoder().encode(\r\nt));let n=e.length;if(n>64)e=Xe(e);else if(n<64){let c=new Uint8Array(64);c.set(e),e=c}let i=new Uint8Array(\r\n64),s=new Uint8Array(64);for(let c=0;c<64;c++)i[c]=54^e[c],s[c]=92^e[c];let o=new Uint8Array(t.length+\r\n64);o.set(i,0),o.set(t,64);let u=new Uint8Array(96);return u.set(s,0),u.set(Xe(o),64),d.from(Xe(u))},\r\n\"digest\")}},\"update\")}}var fr=G(()=>{\"use strict\";p();es();ts();a(gu,\"randomBytes\");a(bu,\"createHash\");\r\na(vu,\"createHmac\")});var tt=T((Qf,hr)=>{\"use strict\";p();hr.exports={host:\"localhost\",user:m.platform===\"win32\"?m.env.USERNAME:\r\nm.env.USER,database:void 0,password:null,connectionString:void 0,port:5432,rows:0,binary:!1,max:10,idleTimeoutMillis:3e4,\r\nclient_encoding:\"\",ssl:!1,application_name:void 0,fallback_application_name:void 0,options:void 0,parseInputDatesAsUTC:!1,\r\nstatement_timeout:!1,lock_timeout:!1,idle_in_transaction_session_timeout:!1,query_timeout:!1,connect_timeout:0,\r\nkeepalives:1,keepalives_idle:0};var Me=Je(),xu=Me.getTypeParser(20,\"text\"),Su=Me.getTypeParser(1016,\r\n\"text\");hr.exports.__defineSetter__(\"parseInt8\",function(r){Me.setTypeParser(20,\"text\",r?Me.getTypeParser(\r\n23,\"text\"):xu),Me.setTypeParser(1016,\"text\",r?Me.getTypeParser(1007,\"text\"):Su)})});var rt=T((Wf,ns)=>{\"use strict\";p();var Eu=(fr(),O(lr)),Au=tt();function Cu(r){var e=r.replace(/\\\\/g,\r\n\"\\\\\\\\\").replace(/\"/g,'\\\\\"');return'\"'+e+'\"'}a(Cu,\"escapeElement\");function rs(r){for(var e=\"{\",t=0;t<\r\nr.length;t++)t>0&&(e=e+\",\"),r[t]===null||typeof r[t]>\"u\"?e=e+\"NULL\":Array.isArray(r[t])?e=e+rs(r[t]):\r\nr[t]instanceof d?e+=\"\\\\\\\\x\"+r[t].toString(\"hex\"):e+=Cu(Ct(r[t]));return e=e+\"}\",e}a(rs,\"arrayString\");\r\nvar Ct=a(function(r,e){if(r==null)return null;if(r instanceof d)return r;if(ArrayBuffer.isView(r)){var t=d.\r\nfrom(r.buffer,r.byteOffset,r.byteLength);return t.length===r.byteLength?t:t.slice(r.byteOffset,r.byteOffset+\r\nr.byteLength)}return r instanceof Date?Au.parseInputDatesAsUTC?Tu(r):Iu(r):Array.isArray(r)?rs(r):typeof r==\r\n\"object\"?_u(r,e):r.toString()},\"prepareValue\");function _u(r,e){if(r&&typeof r.toPostgres==\"function\"){\r\nif(e=e||[],e.indexOf(r)!==-1)throw new Error('circular reference detected while preparing \"'+r+'\" fo\\\r\nr query');return e.push(r),Ct(r.toPostgres(Ct),e)}return JSON.stringify(r)}a(_u,\"prepareObject\");function N(r,e){\r\nfor(r=\"\"+r;r.length<e;)r=\"0\"+r;return r}a(N,\"pad\");function Iu(r){var e=-r.getTimezoneOffset(),t=r.getFullYear(),\r\nn=t<1;n&&(t=Math.abs(t)+1);var i=N(t,4)+\"-\"+N(r.getMonth()+1,2)+\"-\"+N(r.getDate(),2)+\"T\"+N(r.getHours(),\r\n2)+\":\"+N(r.getMinutes(),2)+\":\"+N(r.getSeconds(),2)+\".\"+N(r.getMilliseconds(),3);return e<0?(i+=\"-\",e*=\r\n-1):i+=\"+\",i+=N(Math.floor(e/60),2)+\":\"+N(e%60,2),n&&(i+=\" BC\"),i}a(Iu,\"dateToString\");function Tu(r){\r\nvar e=r.getUTCFullYear(),t=e<1;t&&(e=Math.abs(e)+1);var n=N(e,4)+\"-\"+N(r.getUTCMonth()+1,2)+\"-\"+N(r.\r\ngetUTCDate(),2)+\"T\"+N(r.getUTCHours(),2)+\":\"+N(r.getUTCMinutes(),2)+\":\"+N(r.getUTCSeconds(),2)+\".\"+N(\r\nr.getUTCMilliseconds(),3);return n+=\"+00:00\",t&&(n+=\" BC\"),n}a(Tu,\"dateToStringUTC\");function Pu(r,e,t){\r\nreturn r=typeof r==\"string\"?{text:r}:r,e&&(typeof e==\"function\"?r.callback=e:r.values=e),t&&(r.callback=\r\nt),r}a(Pu,\"normalizeQueryConfig\");var pr=a(function(r){return Eu.createHash(\"md5\").update(r,\"utf-8\").\r\ndigest(\"hex\")},\"md5\"),Bu=a(function(r,e,t){var n=pr(e+r),i=pr(d.concat([d.from(n),t]));return\"md5\"+i},\r\n\"postgresMd5PasswordHash\");ns.exports={prepareValue:a(function(e){return Ct(e)},\"prepareValueWrapper\"),\r\nnormalizeQueryConfig:Pu,postgresMd5PasswordHash:Bu,md5:pr}});var nt={};ie(nt,{default:()=>ku});var ku,it=G(()=>{\"use strict\";p();ku={}});var ds=T((th,ps)=>{\"use strict\";p();var yr=(fr(),O(lr));function Mu(r){if(r.indexOf(\"SCRAM-SHA-256\")===\r\n-1)throw new Error(\"SASL: Only mechanism SCRAM-SHA-256 is currently supported\");let e=yr.randomBytes(\r\n18).toString(\"base64\");return{mechanism:\"SCRAM-SHA-256\",clientNonce:e,response:\"n,,n=*,r=\"+e,message:\"\\\r\nSASLInitialResponse\"}}a(Mu,\"startSession\");function Uu(r,e,t){if(r.message!==\"SASLInitialResponse\")throw new Error(\r\n\"SASL: Last message was not SASLInitialResponse\");if(typeof e!=\"string\")throw new Error(\"SASL: SCRAM\\\r\n-SERVER-FIRST-MESSAGE: client password must be a string\");if(typeof t!=\"string\")throw new Error(\"SAS\\\r\nL: SCRAM-SERVER-FIRST-MESSAGE: serverData must be a string\");let n=qu(t);if(n.nonce.startsWith(r.clientNonce)){\r\nif(n.nonce.length===r.clientNonce.length)throw new Error(\"SASL: SCRAM-SERVER-FIRST-MESSAGE: server n\\\r\nonce is too short\")}else throw new Error(\"SASL: SCRAM-SERVER-FIRST-MESSAGE: server nonce does not st\\\r\nart with client nonce\");var i=d.from(n.salt,\"base64\"),s=Wu(e,i,n.iteration),o=Ue(s,\"Client Key\"),u=Nu(\r\no),c=\"n=*,r=\"+r.clientNonce,l=\"r=\"+n.nonce+\",s=\"+n.salt+\",i=\"+n.iteration,f=\"c=biws,r=\"+n.nonce,y=c+\r\n\",\"+l+\",\"+f,g=Ue(u,y),A=hs(o,g),C=A.toString(\"base64\"),D=Ue(s,\"Server Key\"),Y=Ue(D,y);r.message=\"SAS\\\r\nLResponse\",r.serverSignature=Y.toString(\"base64\"),r.response=f+\",p=\"+C}a(Uu,\"continueSession\");function Du(r,e){\r\nif(r.message!==\"SASLResponse\")throw new Error(\"SASL: Last message was not SASLResponse\");if(typeof e!=\r\n\"string\")throw new Error(\"SASL: SCRAM-SERVER-FINAL-MESSAGE: serverData must be a string\");let{serverSignature:t}=Qu(\r\ne);if(t!==r.serverSignature)throw new Error(\"SASL: SCRAM-SERVER-FINAL-MESSAGE: server signature does\\\r\n not match\")}a(Du,\"finalizeSession\");function Ou(r){if(typeof r!=\"string\")throw new TypeError(\"SASL:\\\r\n text must be a string\");return r.split(\"\").map((e,t)=>r.charCodeAt(t)).every(e=>e>=33&&e<=43||e>=45&&\r\ne<=126)}a(Ou,\"isPrintableChars\");function ls(r){return/^(?:[a-zA-Z0-9+/]{4})*(?:[a-zA-Z0-9+/]{2}==|[a-zA-Z0-9+/]{3}=)?$/.\r\ntest(r)}a(ls,\"isBase64\");function fs(r){if(typeof r!=\"string\")throw new TypeError(\"SASL: attribute p\\\r\nairs text must be a string\");return new Map(r.split(\",\").map(e=>{if(!/^.=/.test(e))throw new Error(\"\\\r\nSASL: Invalid attribute pair entry\");let t=e[0],n=e.substring(2);return[t,n]}))}a(fs,\"parseAttribute\\\r\nPairs\");function qu(r){let e=fs(r),t=e.get(\"r\");if(t){if(!Ou(t))throw new Error(\"SASL: SCRAM-SERVER-\\\r\nFIRST-MESSAGE: nonce must only contain printable characters\")}else throw new Error(\"SASL: SCRAM-SERV\\\r\nER-FIRST-MESSAGE: nonce missing\");let n=e.get(\"s\");if(n){if(!ls(n))throw new Error(\"SASL: SCRAM-SERV\\\r\nER-FIRST-MESSAGE: salt must be base64\")}else throw new Error(\"SASL: SCRAM-SERVER-FIRST-MESSAGE: salt\\\r\n missing\");let i=e.get(\"i\");if(i){if(!/^[1-9][0-9]*$/.test(i))throw new Error(\"SASL: SCRAM-SERVER-FI\\\r\nRST-MESSAGE: invalid iteration count\")}else throw new Error(\"SASL: SCRAM-SERVER-FIRST-MESSAGE: itera\\\r\ntion missing\");let s=parseInt(i,10);return{nonce:t,salt:n,iteration:s}}a(qu,\"parseServerFirstMessage\");\r\nfunction Qu(r){let t=fs(r).get(\"v\");if(t){if(!ls(t))throw new Error(\"SASL: SCRAM-SERVER-FINAL-MESSAG\\\r\nE: server signature must be base64\")}else throw new Error(\"SASL: SCRAM-SERVER-FINAL-MESSAGE: server \\\r\nsignature is missing\");return{serverSignature:t}}a(Qu,\"parseServerFinalMessage\");function hs(r,e){if(!d.\r\nisBuffer(r))throw new TypeError(\"first argument must be a Buffer\");if(!d.isBuffer(e))throw new TypeError(\r\n\"second argument must be a Buffer\");if(r.length!==e.length)throw new Error(\"Buffer lengths must matc\\\r\nh\");if(r.length===0)throw new Error(\"Buffers cannot be empty\");return d.from(r.map((t,n)=>r[n]^e[n]))}\r\na(hs,\"xorBuffers\");function Nu(r){return yr.createHash(\"sha256\").update(r).digest()}a(Nu,\"sha256\");function Ue(r,e){\r\nreturn yr.createHmac(\"sha256\",r).update(e).digest()}a(Ue,\"hmacSha256\");function Wu(r,e,t){for(var n=Ue(\r\nr,d.concat([e,d.from([0,0,0,1])])),i=n,s=0;s<t-1;s++)n=Ue(r,n),i=hs(i,n);return i}a(Wu,\"Hi\");ps.exports=\r\n{startSession:Mu,continueSession:Uu,finalizeSession:Du}});var mr={};ie(mr,{join:()=>ju});function ju(...r){return r.join(\"/\")}var wr=G(()=>{\"use strict\";p();a(\r\nju,\"join\")});var gr={};ie(gr,{stat:()=>Hu});function Hu(r,e){e(new Error(\"No filesystem\"))}var br=G(()=>{\"use str\\\r\nict\";p();a(Hu,\"stat\")});var vr={};ie(vr,{default:()=>$u});var $u,xr=G(()=>{\"use strict\";p();$u={}});var ys={};ie(ys,{StringDecoder:()=>Sr});var Er,Sr,ms=G(()=>{\"use strict\";p();Er=class Er{constructor(e){\r\nE(this,\"td\");this.td=new TextDecoder(e)}write(e){return this.td.decode(e,{stream:!0})}end(e){return this.\r\ntd.decode(e)}};a(Er,\"StringDecoder\");Sr=Er});var vs=T((fh,bs)=>{\"use strict\";p();var{Transform:Gu}=(xr(),O(vr)),{StringDecoder:Vu}=(ms(),O(ys)),ve=Symbol(\r\n\"last\"),It=Symbol(\"decoder\");function zu(r,e,t){let n;if(this.overflow){if(n=this[It].write(r).split(\r\nthis.matcher),n.length===1)return t();n.shift(),this.overflow=!1}else this[ve]+=this[It].write(r),n=\r\nthis[ve].split(this.matcher);this[ve]=n.pop();for(let i=0;i<n.length;i++)try{gs(this,this.mapper(n[i]))}catch(s){\r\nreturn t(s)}if(this.overflow=this[ve].length>this.maxLength,this.overflow&&!this.skipOverflow){t(new Error(\r\n\"maximum buffer reached\"));return}t()}a(zu,\"transform\");function Ku(r){if(this[ve]+=this[It].end(),this[ve])\r\ntry{gs(this,this.mapper(this[ve]))}catch(e){return r(e)}r()}a(Ku,\"flush\");function gs(r,e){e!==void 0&&\r\nr.push(e)}a(gs,\"push\");function ws(r){return r}a(ws,\"noop\");function Yu(r,e,t){switch(r=r||/\\r?\\n/,e=\r\ne||ws,t=t||{},arguments.length){case 1:typeof r==\"function\"?(e=r,r=/\\r?\\n/):typeof r==\"object\"&&!(r instanceof\r\nRegExp)&&!r[Symbol.split]&&(t=r,r=/\\r?\\n/);break;case 2:typeof r==\"function\"?(t=e,e=r,r=/\\r?\\n/):typeof e==\r\n\"object\"&&(t=e,e=ws)}t=Object.assign({},t),t.autoDestroy=!0,t.transform=zu,t.flush=Ku,t.readableObjectMode=\r\n!0;let n=new Gu(t);return n[ve]=\"\",n[It]=new Vu(\"utf8\"),n.matcher=r,n.mapper=e,n.maxLength=t.maxLength,\r\nn.skipOverflow=t.skipOverflow||!1,n.overflow=!1,n._destroy=function(i,s){this._writableState.errorEmitted=\r\n!1,s(i)},n}a(Yu,\"split\");bs.exports=Yu});var Es=T((dh,pe)=>{\"use strict\";p();var xs=(wr(),O(mr)),Zu=(xr(),O(vr)).Stream,Ju=vs(),Ss=(it(),O(nt)),\r\nXu=5432,Tt=m.platform===\"win32\",st=m.stderr,ec=56,tc=7,rc=61440,nc=32768;function ic(r){return(r&rc)==\r\nnc}a(ic,\"isRegFile\");var De=[\"host\",\"port\",\"database\",\"user\",\"password\"],Ar=De.length,sc=De[Ar-1];function Cr(){\r\nvar r=st instanceof Zu&&st.writable===!0;if(r){var e=Array.prototype.slice.call(arguments).concat(`\r\n`);st.write(Ss.format.apply(Ss,e))}}a(Cr,\"warn\");Object.defineProperty(pe.exports,\"isWin\",{get:a(function(){\r\nreturn Tt},\"get\"),set:a(function(r){Tt=r},\"set\")});pe.exports.warnTo=function(r){var e=st;return st=\r\nr,e};pe.exports.getFileName=function(r){var e=r||m.env,t=e.PGPASSFILE||(Tt?xs.join(e.APPDATA||\"./\",\"\\\r\npostgresql\",\"pgpass.conf\"):xs.join(e.HOME||\"./\",\".pgpass\"));return t};pe.exports.usePgPass=function(r,e){\r\nreturn Object.prototype.hasOwnProperty.call(m.env,\"PGPASSWORD\")?!1:Tt?!0:(e=e||\"<unkn>\",ic(r.mode)?r.\r\nmode&(ec|tc)?(Cr('WARNING: password file \"%s\" has group or world access; permissions should be u=rw \\\r\n(0600) or less',e),!1):!0:(Cr('WARNING: password file \"%s\" is not a plain file',e),!1))};var oc=pe.exports.\r\nmatch=function(r,e){return De.slice(0,-1).reduce(function(t,n,i){return i==1&&Number(r[n]||Xu)===Number(\r\ne[n])?t&&!0:t&&(e[n]===\"*\"||e[n]===r[n])},!0)};pe.exports.getPassword=function(r,e,t){var n,i=e.pipe(\r\nJu());function s(c){var l=ac(c);l&&uc(l)&&oc(r,l)&&(n=l[sc],i.end())}a(s,\"onLine\");var o=a(function(){\r\ne.destroy(),t(n)},\"onEnd\"),u=a(function(c){e.destroy(),Cr(\"WARNING: error on reading file: %s\",c),t(\r\nvoid 0)},\"onErr\");e.on(\"error\",u),i.on(\"data\",s).on(\"end\",o).on(\"error\",u)};var ac=pe.exports.parseLine=\r\nfunction(r){if(r.length<11||r.match(/^\\s+#/))return null;for(var e=\"\",t=\"\",n=0,i=0,s=0,o={},u=!1,c=a(\r\nfunction(f,y,g){var A=r.substring(y,g);Object.hasOwnProperty.call(m.env,\"PGPASS_NO_DEESCAPE\")||(A=A.\r\nreplace(/\\\\([:\\\\])/g,\"$1\")),o[De[f]]=A},\"addToObj\"),l=0;l<r.length-1;l+=1){if(e=r.charAt(l+1),t=r.charAt(\r\nl),u=n==Ar-1,u){c(n,i);break}l>=0&&e==\":\"&&t!==\"\\\\\"&&(c(n,i,l+1),i=l+2,n+=1)}return o=Object.keys(o).\r\nlength===Ar?o:null,o},uc=pe.exports.isValidEntry=function(r){for(var e={0:function(o){return o.length>\r\n0},1:function(o){return o===\"*\"?!0:(o=Number(o),isFinite(o)&&o>0&&o<9007199254740992&&Math.floor(o)===\r\no)},2:function(o){return o.length>0},3:function(o){return o.length>0},4:function(o){return o.length>\r\n0}},t=0;t<De.length;t+=1){var n=e[t],i=r[De[t]]||\"\",s=n(i);if(!s)return!1}return!0}});var Cs=T((gh,_r)=>{\"use strict\";p();var wh=(wr(),O(mr)),As=(br(),O(gr)),Pt=Es();_r.exports=function(r,e){\r\nvar t=Pt.getFileName();As.stat(t,function(n,i){if(n||!Pt.usePgPass(i,t))return e(void 0);var s=As.createReadStream(\r\nt);Pt.getPassword(r,s,e)})};_r.exports.warnTo=Pt.warnTo});var _s={};ie(_s,{default:()=>cc});var cc,Is=G(()=>{\"use strict\";p();cc={}});var Ps=T((xh,Ts)=>{\"use strict\";p();var lc=(Zt(),O(gi)),Ir=(br(),O(gr));function Tr(r){if(r.charAt(0)===\r\n\"/\"){var t=r.split(\" \");return{host:t[0],database:t[1]}}var e=lc.parse(/ |%[^a-f0-9]|%[a-f0-9][^a-f0-9]/i.\r\ntest(r)?encodeURI(r).replace(/\\%25(\\d\\d)/g,\"%$1\"):r,!0),t=e.query;for(var n in t)Array.isArray(t[n])&&\r\n(t[n]=t[n][t[n].length-1]);var i=(e.auth||\":\").split(\":\");if(t.user=i[0],t.password=i.splice(1).join(\r\n\":\"),t.port=e.port,e.protocol==\"socket:\")return t.host=decodeURI(e.pathname),t.database=e.query.db,t.\r\nclient_encoding=e.query.encoding,t;t.host||(t.host=e.hostname);var s=e.pathname;if(!t.host&&s&&/^%2f/i.\r\ntest(s)){var o=s.split(\"/\");t.host=decodeURIComponent(o[0]),s=o.splice(1).join(\"/\")}switch(s&&s.charAt(\r\n0)===\"/\"&&(s=s.slice(1)||null),t.database=s&&decodeURI(s),(t.ssl===\"true\"||t.ssl===\"1\")&&(t.ssl=!0),\r\nt.ssl===\"0\"&&(t.ssl=!1),(t.sslcert||t.sslkey||t.sslrootcert||t.sslmode)&&(t.ssl={}),t.sslcert&&(t.ssl.\r\ncert=Ir.readFileSync(t.sslcert).toString()),t.sslkey&&(t.ssl.key=Ir.readFileSync(t.sslkey).toString()),\r\nt.sslrootcert&&(t.ssl.ca=Ir.readFileSync(t.sslrootcert).toString()),t.sslmode){case\"disable\":{t.ssl=\r\n!1;break}case\"prefer\":case\"require\":case\"verify-ca\":case\"verify-full\":break;case\"no-verify\":{t.ssl.rejectUnauthorized=\r\n!1;break}}return t}a(Tr,\"parse\");Ts.exports=Tr;Tr.parse=Tr});var Bt=T((Ah,Ls)=>{\"use strict\";p();var fc=(Is(),O(_s)),Rs=tt(),Bs=Ps().parse,H=a(function(r,e,t){return t===\r\nvoid 0?t=m.env[\"PG\"+r.toUpperCase()]:t===!1||(t=m.env[t]),e[r]||t||Rs[r]},\"val\"),hc=a(function(){switch(m.\r\nenv.PGSSLMODE){case\"disable\":return!1;case\"prefer\":case\"require\":case\"verify-ca\":case\"verify-full\":return!0;case\"\\\r\nno-verify\":return{rejectUnauthorized:!1}}return Rs.ssl},\"readSSLConfigFromEnvironment\"),Oe=a(function(r){\r\nreturn\"'\"+(\"\"+r).replace(/\\\\/g,\"\\\\\\\\\").replace(/'/g,\"\\\\'\")+\"'\"},\"quoteParamValue\"),ne=a(function(r,e,t){\r\nvar n=e[t];n!=null&&r.push(t+\"=\"+Oe(n))},\"add\"),Br=class Br{constructor(e){e=typeof e==\"string\"?Bs(e):\r\ne||{},e.connectionString&&(e=Object.assign({},e,Bs(e.connectionString))),this.user=H(\"user\",e),this.\r\ndatabase=H(\"database\",e),this.database===void 0&&(this.database=this.user),this.port=parseInt(H(\"por\\\r\nt\",e),10),this.host=H(\"host\",e),Object.defineProperty(this,\"password\",{configurable:!0,enumerable:!1,\r\nwritable:!0,value:H(\"password\",e)}),this.binary=H(\"binary\",e),this.options=H(\"options\",e),this.ssl=typeof e.\r\nssl>\"u\"?hc():e.ssl,typeof this.ssl==\"string\"&&this.ssl===\"true\"&&(this.ssl=!0),this.ssl===\"no-verify\"&&\r\n(this.ssl={rejectUnauthorized:!1}),this.ssl&&this.ssl.key&&Object.defineProperty(this.ssl,\"key\",{enumerable:!1}),\r\nthis.client_encoding=H(\"client_encoding\",e),this.replication=H(\"replication\",e),this.isDomainSocket=\r\n!(this.host||\"\").indexOf(\"/\"),this.application_name=H(\"application_name\",e,\"PGAPPNAME\"),this.fallback_application_name=\r\nH(\"fallback_application_name\",e,!1),this.statement_timeout=H(\"statement_timeout\",e,!1),this.lock_timeout=\r\nH(\"lock_timeout\",e,!1),this.idle_in_transaction_session_timeout=H(\"idle_in_transaction_session_timeo\\\r\nut\",e,!1),this.query_timeout=H(\"query_timeout\",e,!1),e.connectionTimeoutMillis===void 0?this.connect_timeout=\r\nm.env.PGCONNECT_TIMEOUT||0:this.connect_timeout=Math.floor(e.connectionTimeoutMillis/1e3),e.keepAlive===\r\n!1?this.keepalives=0:e.keepAlive===!0&&(this.keepalives=1),typeof e.keepAliveInitialDelayMillis==\"nu\\\r\nmber\"&&(this.keepalives_idle=Math.floor(e.keepAliveInitialDelayMillis/1e3))}getLibpqConnectionString(e){\r\nvar t=[];ne(t,this,\"user\"),ne(t,this,\"password\"),ne(t,this,\"port\"),ne(t,this,\"application_name\"),ne(\r\nt,this,\"fallback_application_name\"),ne(t,this,\"connect_timeout\"),ne(t,this,\"options\");var n=typeof this.\r\nssl==\"object\"?this.ssl:this.ssl?{sslmode:this.ssl}:{};if(ne(t,n,\"sslmode\"),ne(t,n,\"sslca\"),ne(t,n,\"s\\\r\nslkey\"),ne(t,n,\"sslcert\"),ne(t,n,\"sslrootcert\"),this.database&&t.push(\"dbname=\"+Oe(this.database)),this.\r\nreplication&&t.push(\"replication=\"+Oe(this.replication)),this.host&&t.push(\"host=\"+Oe(this.host)),this.\r\nisDomainSocket)return e(null,t.join(\" \"));this.client_encoding&&t.push(\"client_encoding=\"+Oe(this.client_encoding)),\r\nfc.lookup(this.host,function(i,s){return i?e(i,null):(t.push(\"hostaddr=\"+Oe(s)),e(null,t.join(\" \")))})}};\r\na(Br,\"ConnectionParameters\");var Pr=Br;Ls.exports=Pr});var Ms=T((Ih,ks)=>{\"use strict\";p();var pc=Je(),Fs=/^([A-Za-z]+)(?: (\\d+))?(?: (\\d+))?/,Lr=class Lr{constructor(e,t){\r\nthis.command=null,this.rowCount=null,this.oid=null,this.rows=[],this.fields=[],this._parsers=void 0,\r\nthis._types=t,this.RowCtor=null,this.rowAsArray=e===\"array\",this.rowAsArray&&(this.parseRow=this._parseRowAsArray)}addCommandComplete(e){\r\nvar t;e.text?t=Fs.exec(e.text):t=Fs.exec(e.command),t&&(this.command=t[1],t[3]?(this.oid=parseInt(t[2],\r\n10),this.rowCount=parseInt(t[3],10)):t[2]&&(this.rowCount=parseInt(t[2],10)))}_parseRowAsArray(e){for(var t=new Array(\r\ne.length),n=0,i=e.length;n<i;n++){var s=e[n];s!==null?t[n]=this._parsers[n](s):t[n]=null}return t}parseRow(e){\r\nfor(var t={},n=0,i=e.length;n<i;n++){var s=e[n],o=this.fields[n].name;s!==null?t[o]=this._parsers[n](\r\ns):t[o]=null}return t}addRow(e){this.rows.push(e)}addFields(e){this.fields=e,this.fields.length&&(this.\r\n_parsers=new Array(e.length));for(var t=0;t<e.length;t++){var n=e[t];this._types?this._parsers[t]=this.\r\n_types.getTypeParser(n.dataTypeID,n.format||\"text\"):this._parsers[t]=pc.getTypeParser(n.dataTypeID,n.\r\nformat||\"text\")}}};a(Lr,\"Result\");var Rr=Lr;ks.exports=Rr});var qs=T((Bh,Os)=>{\"use strict\";p();var{EventEmitter:dc}=ge(),Us=Ms(),Ds=rt(),kr=class kr extends dc{constructor(e,t,n){\r\nsuper(),e=Ds.normalizeQueryConfig(e,t,n),this.text=e.text,this.values=e.values,this.rows=e.rows,this.\r\ntypes=e.types,this.name=e.name,this.binary=e.binary,this.portal=e.portal||\"\",this.callback=e.callback,\r\nthis._rowMode=e.rowMode,m.domain&&e.callback&&(this.callback=m.domain.bind(e.callback)),this._result=\r\nnew Us(this._rowMode,this.types),this._results=this._result,this.isPreparedStatement=!1,this._canceledDueToError=\r\n!1,this._promise=null}requiresPreparation(){return this.name||this.rows?!0:!this.text||!this.values?\r\n!1:this.values.length>0}_checkForMultirow(){this._result.command&&(Array.isArray(this._results)||(this.\r\n_results=[this._result]),this._result=new Us(this._rowMode,this.types),this._results.push(this._result))}handleRowDescription(e){\r\nthis._checkForMultirow(),this._result.addFields(e.fields),this._accumulateRows=this.callback||!this.\r\nlisteners(\"row\").length}handleDataRow(e){let t;if(!this._canceledDueToError){try{t=this._result.parseRow(\r\ne.fields)}catch(n){this._canceledDueToError=n;return}this.emit(\"row\",t,this._result),this._accumulateRows&&\r\nthis._result.addRow(t)}}handleCommandComplete(e,t){this._checkForMultirow(),this._result.addCommandComplete(\r\ne),this.rows&&t.sync()}handleEmptyQuery(e){this.rows&&e.sync()}handleError(e,t){if(this._canceledDueToError&&\r\n(e=this._canceledDueToError,this._canceledDueToError=!1),this.callback)return this.callback(e);this.\r\nemit(\"error\",e)}handleReadyForQuery(e){if(this._canceledDueToError)return this.handleError(this._canceledDueToError,\r\ne);if(this.callback)try{this.callback(null,this._results)}catch(t){m.nextTick(()=>{throw t})}this.emit(\r\n\"end\",this._results)}submit(e){if(typeof this.text!=\"string\"&&typeof this.name!=\"string\")return new Error(\r\n\"A query must have either text or a name. Supplying neither is unsupported.\");let t=e.parsedStatements[this.\r\nname];return this.text&&t&&this.text!==t?new Error(`Prepared statements must be unique - '${this.name}\\\r\n' was used for a different statement`):this.values&&!Array.isArray(this.values)?new Error(\"Query val\\\r\nues must be an array\"):(this.requiresPreparation()?this.prepare(e):e.query(this.text),null)}hasBeenParsed(e){\r\nreturn this.name&&e.parsedStatements[this.name]}handlePortalSuspended(e){this._getRows(e,this.rows)}_getRows(e,t){\r\ne.execute({portal:this.portal,rows:t}),t?e.flush():e.sync()}prepare(e){this.isPreparedStatement=!0,this.\r\nhasBeenParsed(e)||e.parse({text:this.text,name:this.name,types:this.types});try{e.bind({portal:this.\r\nportal,statement:this.name,values:this.values,binary:this.binary,valueMapper:Ds.prepareValue})}catch(t){\r\nthis.handleError(t,e);return}e.describe({type:\"P\",name:this.portal||\"\"}),this._getRows(e,this.rows)}handleCopyInResponse(e){\r\ne.sendCopyFail(\"No source stream defined\")}handleCopyData(e,t){}};a(kr,\"Query\");var Fr=kr;Os.exports=\r\nFr});var ln=T(_=>{\"use strict\";p();Object.defineProperty(_,\"__esModule\",{value:!0});_.NoticeMessage=_.DataRowMessage=\r\n_.CommandCompleteMessage=_.ReadyForQueryMessage=_.NotificationResponseMessage=_.BackendKeyDataMessage=\r\n_.AuthenticationMD5Password=_.ParameterStatusMessage=_.ParameterDescriptionMessage=_.RowDescriptionMessage=\r\n_.Field=_.CopyResponse=_.CopyDataMessage=_.DatabaseError=_.copyDone=_.emptyQuery=_.replicationStart=\r\n_.portalSuspended=_.noData=_.closeComplete=_.bindComplete=_.parseComplete=void 0;_.parseComplete={name:\"\\\r\nparseComplete\",length:5};_.bindComplete={name:\"bindComplete\",length:5};_.closeComplete={name:\"closeC\\\r\nomplete\",length:5};_.noData={name:\"noData\",length:5};_.portalSuspended={name:\"portalSuspended\",length:5};\r\n_.replicationStart={name:\"replicationStart\",length:4};_.emptyQuery={name:\"emptyQuery\",length:4};_.copyDone=\r\n{name:\"copyDone\",length:4};var Kr=class Kr extends Error{constructor(e,t,n){super(e),this.length=t,this.\r\nname=n}};a(Kr,\"DatabaseError\");var Mr=Kr;_.DatabaseError=Mr;var Yr=class Yr{constructor(e,t){this.length=\r\ne,this.chunk=t,this.name=\"copyData\"}};a(Yr,\"CopyDataMessage\");var Ur=Yr;_.CopyDataMessage=Ur;var Zr=class Zr{constructor(e,t,n,i){\r\nthis.length=e,this.name=t,this.binary=n,this.columnTypes=new Array(i)}};a(Zr,\"CopyResponse\");var Dr=Zr;\r\n_.CopyResponse=Dr;var Jr=class Jr{constructor(e,t,n,i,s,o,u){this.name=e,this.tableID=t,this.columnID=\r\nn,this.dataTypeID=i,this.dataTypeSize=s,this.dataTypeModifier=o,this.format=u}};a(Jr,\"Field\");var Or=Jr;\r\n_.Field=Or;var Xr=class Xr{constructor(e,t){this.length=e,this.fieldCount=t,this.name=\"rowDescriptio\\\r\nn\",this.fields=new Array(this.fieldCount)}};a(Xr,\"RowDescriptionMessage\");var qr=Xr;_.RowDescriptionMessage=\r\nqr;var en=class en{constructor(e,t){this.length=e,this.parameterCount=t,this.name=\"parameterDescript\\\r\nion\",this.dataTypeIDs=new Array(this.parameterCount)}};a(en,\"ParameterDescriptionMessage\");var Qr=en;\r\n_.ParameterDescriptionMessage=Qr;var tn=class tn{constructor(e,t,n){this.length=e,this.parameterName=\r\nt,this.parameterValue=n,this.name=\"parameterStatus\"}};a(tn,\"ParameterStatusMessage\");var Nr=tn;_.ParameterStatusMessage=\r\nNr;var rn=class rn{constructor(e,t){this.length=e,this.salt=t,this.name=\"authenticationMD5Password\"}};\r\na(rn,\"AuthenticationMD5Password\");var Wr=rn;_.AuthenticationMD5Password=Wr;var nn=class nn{constructor(e,t,n){\r\nthis.length=e,this.processID=t,this.secretKey=n,this.name=\"backendKeyData\"}};a(nn,\"BackendKeyDataMes\\\r\nsage\");var jr=nn;_.BackendKeyDataMessage=jr;var sn=class sn{constructor(e,t,n,i){this.length=e,this.\r\nprocessId=t,this.channel=n,this.payload=i,this.name=\"notification\"}};a(sn,\"NotificationResponseMessa\\\r\nge\");var Hr=sn;_.NotificationResponseMessage=Hr;var on=class on{constructor(e,t){this.length=e,this.\r\nstatus=t,this.name=\"readyForQuery\"}};a(on,\"ReadyForQueryMessage\");var $r=on;_.ReadyForQueryMessage=$r;\r\nvar an=class an{constructor(e,t){this.length=e,this.text=t,this.name=\"commandComplete\"}};a(an,\"Comma\\\r\nndCompleteMessage\");var Gr=an;_.CommandCompleteMessage=Gr;var un=class un{constructor(e,t){this.length=\r\ne,this.fields=t,this.name=\"dataRow\",this.fieldCount=t.length}};a(un,\"DataRowMessage\");var Vr=un;_.DataRowMessage=\r\nVr;var cn=class cn{constructor(e,t){this.length=e,this.message=t,this.name=\"notice\"}};a(cn,\"NoticeMe\\\r\nssage\");var zr=cn;_.NoticeMessage=zr});var Qs=T(Rt=>{\"use strict\";p();Object.defineProperty(Rt,\"__esModule\",{value:!0});Rt.Writer=void 0;var hn=class hn{constructor(e=256){\r\nthis.size=e,this.offset=5,this.headerPosition=0,this.buffer=d.allocUnsafe(e)}ensure(e){if(this.buffer.\r\nlength-this.offset<e){let n=this.buffer,i=n.length+(n.length>>1)+e;this.buffer=d.allocUnsafe(i),n.copy(\r\nthis.buffer)}}addInt32(e){return this.ensure(4),this.buffer[this.offset++]=e>>>24&255,this.buffer[this.\r\noffset++]=e>>>16&255,this.buffer[this.offset++]=e>>>8&255,this.buffer[this.offset++]=e>>>0&255,this}addInt16(e){\r\nreturn this.ensure(2),this.buffer[this.offset++]=e>>>8&255,this.buffer[this.offset++]=e>>>0&255,this}addCString(e){\r\nif(!e)this.ensure(1);else{let t=d.byteLength(e);this.ensure(t+1),this.buffer.write(e,this.offset,\"ut\\\r\nf-8\"),this.offset+=t}return this.buffer[this.offset++]=0,this}addString(e=\"\"){let t=d.byteLength(e);\r\nreturn this.ensure(t),this.buffer.write(e,this.offset),this.offset+=t,this}add(e){return this.ensure(\r\ne.length),e.copy(this.buffer,this.offset),this.offset+=e.length,this}join(e){if(e){this.buffer[this.\r\nheaderPosition]=e;let t=this.offset-(this.headerPosition+1);this.buffer.writeInt32BE(t,this.headerPosition+\r\n1)}return this.buffer.slice(e?0:5,this.offset)}flush(e){let t=this.join(e);return this.offset=5,this.\r\nheaderPosition=0,this.buffer=d.allocUnsafe(this.size),t}};a(hn,\"Writer\");var fn=hn;Rt.Writer=fn});var Ws=T(Ft=>{\"use strict\";p();Object.defineProperty(Ft,\"__esModule\",{value:!0});Ft.serialize=void 0;\r\nvar pn=Qs(),F=new pn.Writer,yc=a(r=>{F.addInt16(3).addInt16(0);for(let n of Object.keys(r))F.addCString(\r\nn).addCString(r[n]);F.addCString(\"client_encoding\").addCString(\"UTF8\");let e=F.addCString(\"\").flush(),\r\nt=e.length+4;return new pn.Writer().addInt32(t).add(e).flush()},\"startup\"),mc=a(()=>{let r=d.allocUnsafe(\r\n8);return r.writeInt32BE(8,0),r.writeInt32BE(80877103,4),r},\"requestSsl\"),wc=a(r=>F.addCString(r).flush(\r\n112),\"password\"),gc=a(function(r,e){return F.addCString(r).addInt32(d.byteLength(e)).addString(e),F.\r\nflush(112)},\"sendSASLInitialResponseMessage\"),bc=a(function(r){return F.addString(r).flush(112)},\"se\\\r\nndSCRAMClientFinalMessage\"),vc=a(r=>F.addCString(r).flush(81),\"query\"),Ns=[],xc=a(r=>{let e=r.name||\r\n\"\";e.length>63&&(console.error(\"Warning! Postgres only supports 63 characters for query names.\"),console.\r\nerror(\"You supplied %s (%s)\",e,e.length),console.error(\"This can cause conflicts and silent errors e\\\r\nxecuting queries\"));let t=r.types||Ns,n=t.length,i=F.addCString(e).addCString(r.text).addInt16(n);for(let s=0;s<\r\nn;s++)i.addInt32(t[s]);return F.flush(80)},\"parse\"),qe=new pn.Writer,Sc=a(function(r,e){for(let t=0;t<\r\nr.length;t++){let n=e?e(r[t],t):r[t];n==null?(F.addInt16(0),qe.addInt32(-1)):n instanceof d?(F.addInt16(\r\n1),qe.addInt32(n.length),qe.add(n)):(F.addInt16(0),qe.addInt32(d.byteLength(n)),qe.addString(n))}},\"\\\r\nwriteValues\"),Ec=a((r={})=>{let e=r.portal||\"\",t=r.statement||\"\",n=r.binary||!1,i=r.values||Ns,s=i.length;\r\nreturn F.addCString(e).addCString(t),F.addInt16(s),Sc(i,r.valueMapper),F.addInt16(s),F.add(qe.flush()),\r\nF.addInt16(n?1:0),F.flush(66)},\"bind\"),Ac=d.from([69,0,0,0,9,0,0,0,0,0]),Cc=a(r=>{if(!r||!r.portal&&\r\n!r.rows)return Ac;let e=r.portal||\"\",t=r.rows||0,n=d.byteLength(e),i=4+n+1+4,s=d.allocUnsafe(1+i);return s[0]=\r\n69,s.writeInt32BE(i,1),s.write(e,5,\"utf-8\"),s[n+5]=0,s.writeUInt32BE(t,s.length-4),s},\"execute\"),_c=a(\r\n(r,e)=>{let t=d.allocUnsafe(16);return t.writeInt32BE(16,0),t.writeInt16BE(1234,4),t.writeInt16BE(5678,\r\n6),t.writeInt32BE(r,8),t.writeInt32BE(e,12),t},\"cancel\"),dn=a((r,e)=>{let n=4+d.byteLength(e)+1,i=d.\r\nallocUnsafe(1+n);return i[0]=r,i.writeInt32BE(n,1),i.write(e,5,\"utf-8\"),i[n]=0,i},\"cstringMessage\"),\r\nIc=F.addCString(\"P\").flush(68),Tc=F.addCString(\"S\").flush(68),Pc=a(r=>r.name?dn(68,`${r.type}${r.name||\r\n\"\"}`):r.type===\"P\"?Ic:Tc,\"describe\"),Bc=a(r=>{let e=`${r.type}${r.name||\"\"}`;return dn(67,e)},\"close\"),\r\nRc=a(r=>F.add(r).flush(100),\"copyData\"),Lc=a(r=>dn(102,r),\"copyFail\"),Lt=a(r=>d.from([r,0,0,0,4]),\"c\\\r\nodeOnlyBuffer\"),Fc=Lt(72),kc=Lt(83),Mc=Lt(88),Uc=Lt(99),Dc={startup:yc,password:wc,requestSsl:mc,sendSASLInitialResponseMessage:gc,\r\nsendSCRAMClientFinalMessage:bc,query:vc,parse:xc,bind:Ec,execute:Cc,describe:Pc,close:Bc,flush:a(()=>Fc,\r\n\"flush\"),sync:a(()=>kc,\"sync\"),end:a(()=>Mc,\"end\"),copyData:Rc,copyDone:a(()=>Uc,\"copyDone\"),copyFail:Lc,\r\ncancel:_c};Ft.serialize=Dc});var js=T(kt=>{\"use strict\";p();Object.defineProperty(kt,\"__esModule\",{value:!0});kt.BufferReader=void 0;\r\nvar Oc=d.allocUnsafe(0),mn=class mn{constructor(e=0){this.offset=e,this.buffer=Oc,this.encoding=\"utf\\\r\n-8\"}setBuffer(e,t){this.offset=e,this.buffer=t}int16(){let e=this.buffer.readInt16BE(this.offset);return this.\r\noffset+=2,e}byte(){let e=this.buffer[this.offset];return this.offset++,e}int32(){let e=this.buffer.readInt32BE(\r\nthis.offset);return this.offset+=4,e}uint32(){let e=this.buffer.readUInt32BE(this.offset);return this.\r\noffset+=4,e}string(e){let t=this.buffer.toString(this.encoding,this.offset,this.offset+e);return this.\r\noffset+=e,t}cstring(){let e=this.offset,t=e;for(;this.buffer[t++]!==0;);return this.offset=t,this.buffer.\r\ntoString(this.encoding,e,t-1)}bytes(e){let t=this.buffer.slice(this.offset,this.offset+e);return this.\r\noffset+=e,t}};a(mn,\"BufferReader\");var yn=mn;kt.BufferReader=yn});var Gs=T(Mt=>{\"use strict\";p();Object.defineProperty(Mt,\"__esModule\",{value:!0});Mt.Parser=void 0;var k=ln(),\r\nqc=js(),wn=1,Qc=4,Hs=wn+Qc,$s=d.allocUnsafe(0),bn=class bn{constructor(e){if(this.buffer=$s,this.bufferLength=\r\n0,this.bufferOffset=0,this.reader=new qc.BufferReader,e?.mode===\"binary\")throw new Error(\"Binary mod\\\r\ne not supported yet\");this.mode=e?.mode||\"text\"}parse(e,t){this.mergeBuffer(e);let n=this.bufferOffset+\r\nthis.bufferLength,i=this.bufferOffset;for(;i+Hs<=n;){let s=this.buffer[i],o=this.buffer.readUInt32BE(\r\ni+wn),u=wn+o;if(u+i<=n){let c=this.handlePacket(i+Hs,s,o,this.buffer);t(c),i+=u}else break}i===n?(this.\r\nbuffer=$s,this.bufferLength=0,this.bufferOffset=0):(this.bufferLength=n-i,this.bufferOffset=i)}mergeBuffer(e){\r\nif(this.bufferLength>0){let t=this.bufferLength+e.byteLength;if(t+this.bufferOffset>this.buffer.byteLength){\r\nlet i;if(t<=this.buffer.byteLength&&this.bufferOffset>=this.bufferLength)i=this.buffer;else{let s=this.\r\nbuffer.byteLength*2;for(;t>=s;)s*=2;i=d.allocUnsafe(s)}this.buffer.copy(i,0,this.bufferOffset,this.bufferOffset+\r\nthis.bufferLength),this.buffer=i,this.bufferOffset=0}e.copy(this.buffer,this.bufferOffset+this.bufferLength),\r\nthis.bufferLength=t}else this.buffer=e,this.bufferOffset=0,this.bufferLength=e.byteLength}handlePacket(e,t,n,i){\r\nswitch(t){case 50:return k.bindComplete;case 49:return k.parseComplete;case 51:return k.closeComplete;case 110:\r\nreturn k.noData;case 115:return k.portalSuspended;case 99:return k.copyDone;case 87:return k.replicationStart;case 73:\r\nreturn k.emptyQuery;case 68:return this.parseDataRowMessage(e,n,i);case 67:return this.parseCommandCompleteMessage(\r\ne,n,i);case 90:return this.parseReadyForQueryMessage(e,n,i);case 65:return this.parseNotificationMessage(\r\ne,n,i);case 82:return this.parseAuthenticationResponse(e,n,i);case 83:return this.parseParameterStatusMessage(\r\ne,n,i);case 75:return this.parseBackendKeyData(e,n,i);case 69:return this.parseErrorMessage(e,n,i,\"e\\\r\nrror\");case 78:return this.parseErrorMessage(e,n,i,\"notice\");case 84:return this.parseRowDescriptionMessage(\r\ne,n,i);case 116:return this.parseParameterDescriptionMessage(e,n,i);case 71:return this.parseCopyInMessage(\r\ne,n,i);case 72:return this.parseCopyOutMessage(e,n,i);case 100:return this.parseCopyData(e,n,i);default:\r\nreturn new k.DatabaseError(\"received invalid response: \"+t.toString(16),n,\"error\")}}parseReadyForQueryMessage(e,t,n){\r\nthis.reader.setBuffer(e,n);let i=this.reader.string(1);return new k.ReadyForQueryMessage(t,i)}parseCommandCompleteMessage(e,t,n){\r\nthis.reader.setBuffer(e,n);let i=this.reader.cstring();return new k.CommandCompleteMessage(t,i)}parseCopyData(e,t,n){\r\nlet i=n.slice(e,e+(t-4));return new k.CopyDataMessage(t,i)}parseCopyInMessage(e,t,n){return this.parseCopyMessage(\r\ne,t,n,\"copyInResponse\")}parseCopyOutMessage(e,t,n){return this.parseCopyMessage(e,t,n,\"copyOutRespon\\\r\nse\")}parseCopyMessage(e,t,n,i){this.reader.setBuffer(e,n);let s=this.reader.byte()!==0,o=this.reader.\r\nint16(),u=new k.CopyResponse(t,i,s,o);for(let c=0;c<o;c++)u.columnTypes[c]=this.reader.int16();return u}parseNotificationMessage(e,t,n){\r\nthis.reader.setBuffer(e,n);let i=this.reader.int32(),s=this.reader.cstring(),o=this.reader.cstring();\r\nreturn new k.NotificationResponseMessage(t,i,s,o)}parseRowDescriptionMessage(e,t,n){this.reader.setBuffer(\r\ne,n);let i=this.reader.int16(),s=new k.RowDescriptionMessage(t,i);for(let o=0;o<i;o++)s.fields[o]=this.\r\nparseField();return s}parseField(){let e=this.reader.cstring(),t=this.reader.uint32(),n=this.reader.\r\nint16(),i=this.reader.uint32(),s=this.reader.int16(),o=this.reader.int32(),u=this.reader.int16()===0?\r\n\"text\":\"binary\";return new k.Field(e,t,n,i,s,o,u)}parseParameterDescriptionMessage(e,t,n){this.reader.\r\nsetBuffer(e,n);let i=this.reader.int16(),s=new k.ParameterDescriptionMessage(t,i);for(let o=0;o<i;o++)\r\ns.dataTypeIDs[o]=this.reader.int32();return s}parseDataRowMessage(e,t,n){this.reader.setBuffer(e,n);\r\nlet i=this.reader.int16(),s=new Array(i);for(let o=0;o<i;o++){let u=this.reader.int32();s[o]=u===-1?\r\nnull:this.reader.string(u)}return new k.DataRowMessage(t,s)}parseParameterStatusMessage(e,t,n){this.\r\nreader.setBuffer(e,n);let i=this.reader.cstring(),s=this.reader.cstring();return new k.ParameterStatusMessage(\r\nt,i,s)}parseBackendKeyData(e,t,n){this.reader.setBuffer(e,n);let i=this.reader.int32(),s=this.reader.\r\nint32();return new k.BackendKeyDataMessage(t,i,s)}parseAuthenticationResponse(e,t,n){this.reader.setBuffer(\r\ne,n);let i=this.reader.int32(),s={name:\"authenticationOk\",length:t};switch(i){case 0:break;case 3:s.\r\nlength===8&&(s.name=\"authenticationCleartextPassword\");break;case 5:if(s.length===12){s.name=\"authen\\\r\nticationMD5Password\";let o=this.reader.bytes(4);return new k.AuthenticationMD5Password(t,o)}break;case 10:\r\n{s.name=\"authenticationSASL\",s.mechanisms=[];let o;do o=this.reader.cstring(),o&&s.mechanisms.push(o);while(o)}\r\nbreak;case 11:s.name=\"authenticationSASLContinue\",s.data=this.reader.string(t-8);break;case 12:s.name=\r\n\"authenticationSASLFinal\",s.data=this.reader.string(t-8);break;default:throw new Error(\"Unknown auth\\\r\nenticationOk message type \"+i)}return s}parseErrorMessage(e,t,n,i){this.reader.setBuffer(e,n);let s={},\r\no=this.reader.string(1);for(;o!==\"\\0\";)s[o]=this.reader.cstring(),o=this.reader.string(1);let u=s.M,\r\nc=i===\"notice\"?new k.NoticeMessage(t,u):new k.DatabaseError(u,t,i);return c.severity=s.S,c.code=s.C,\r\nc.detail=s.D,c.hint=s.H,c.position=s.P,c.internalPosition=s.p,c.internalQuery=s.q,c.where=s.W,c.schema=\r\ns.s,c.table=s.t,c.column=s.c,c.dataType=s.d,c.constraint=s.n,c.file=s.F,c.line=s.L,c.routine=s.R,c}};\r\na(bn,\"Parser\");var gn=bn;Mt.Parser=gn});var vn=T(xe=>{\"use strict\";p();Object.defineProperty(xe,\"__esModule\",{value:!0});xe.DatabaseError=xe.\r\nserialize=xe.parse=void 0;var Nc=ln();Object.defineProperty(xe,\"DatabaseError\",{enumerable:!0,get:a(\r\nfunction(){return Nc.DatabaseError},\"get\")});var Wc=Ws();Object.defineProperty(xe,\"serialize\",{enumerable:!0,\r\nget:a(function(){return Wc.serialize},\"get\")});var jc=Gs();function Hc(r,e){let t=new jc.Parser;return r.\r\non(\"data\",n=>t.parse(n,e)),new Promise(n=>r.on(\"end\",()=>n()))}a(Hc,\"parse\");xe.parse=Hc});var Vs={};ie(Vs,{connect:()=>$c});function $c({socket:r,servername:e}){return r.startTls(e),r}var zs=G(\r\n()=>{\"use strict\";p();a($c,\"connect\")});var En=T((Xh,Zs)=>{\"use strict\";p();var Ks=(Fe(),O(wi)),Gc=ge().EventEmitter,{parse:Vc,serialize:Q}=vn(),\r\nYs=Q.flush(),zc=Q.sync(),Kc=Q.end(),Sn=class Sn extends Gc{constructor(e){super(),e=e||{},this.stream=\r\ne.stream||new Ks.Socket,this._keepAlive=e.keepAlive,this._keepAliveInitialDelayMillis=e.keepAliveInitialDelayMillis,\r\nthis.lastBuffer=!1,this.parsedStatements={},this.ssl=e.ssl||!1,this._ending=!1,this._emitMessage=!1;\r\nvar t=this;this.on(\"newListener\",function(n){n===\"message\"&&(t._emitMessage=!0)})}connect(e,t){var n=this;\r\nthis._connecting=!0,this.stream.setNoDelay(!0),this.stream.connect(e,t),this.stream.once(\"connect\",function(){\r\nn._keepAlive&&n.stream.setKeepAlive(!0,n._keepAliveInitialDelayMillis),n.emit(\"connect\")});let i=a(function(s){\r\nn._ending&&(s.code===\"ECONNRESET\"||s.code===\"EPIPE\")||n.emit(\"error\",s)},\"reportStreamError\");if(this.\r\nstream.on(\"error\",i),this.stream.on(\"close\",function(){n.emit(\"end\")}),!this.ssl)return this.attachListeners(\r\nthis.stream);this.stream.once(\"data\",function(s){var o=s.toString(\"utf8\");switch(o){case\"S\":break;case\"\\\r\nN\":return n.stream.end(),n.emit(\"error\",new Error(\"The server does not support SSL connections\"));default:\r\nreturn n.stream.end(),n.emit(\"error\",new Error(\"There was an error establishing an SSL connection\"))}\r\nvar u=(zs(),O(Vs));let c={socket:n.stream};n.ssl!==!0&&(Object.assign(c,n.ssl),\"key\"in n.ssl&&(c.key=\r\nn.ssl.key)),Ks.isIP(t)===0&&(c.servername=t);try{n.stream=u.connect(c)}catch(l){return n.emit(\"error\",\r\nl)}n.attachListeners(n.stream),n.stream.on(\"error\",i),n.emit(\"sslconnect\")})}attachListeners(e){e.on(\r\n\"end\",()=>{this.emit(\"end\")}),Vc(e,t=>{var n=t.name===\"error\"?\"errorMessage\":t.name;this._emitMessage&&\r\nthis.emit(\"message\",t),this.emit(n,t)})}requestSsl(){this.stream.write(Q.requestSsl())}startup(e){this.\r\nstream.write(Q.startup(e))}cancel(e,t){this._send(Q.cancel(e,t))}password(e){this._send(Q.password(e))}sendSASLInitialResponseMessage(e,t){\r\nthis._send(Q.sendSASLInitialResponseMessage(e,t))}sendSCRAMClientFinalMessage(e){this._send(Q.sendSCRAMClientFinalMessage(\r\ne))}_send(e){return this.stream.writable?this.stream.write(e):!1}query(e){this._send(Q.query(e))}parse(e){\r\nthis._send(Q.parse(e))}bind(e){this._send(Q.bind(e))}execute(e){this._send(Q.execute(e))}flush(){this.\r\nstream.writable&&this.stream.write(Ys)}sync(){this._ending=!0,this._send(Ys),this._send(zc)}ref(){this.\r\nstream.ref()}unref(){this.stream.unref()}end(){if(this._ending=!0,!this._connecting||!this.stream.writable){\r\nthis.stream.end();return}return this.stream.write(Kc,()=>{this.stream.end()})}close(e){this._send(Q.\r\nclose(e))}describe(e){this._send(Q.describe(e))}sendCopyFromChunk(e){this._send(Q.copyData(e))}endCopyFrom(){\r\nthis._send(Q.copyDone())}sendCopyFail(e){this._send(Q.copyFail(e))}};a(Sn,\"Connection\");var xn=Sn;Zs.\r\nexports=xn});var eo=T((np,Xs)=>{\"use strict\";p();var Yc=ge().EventEmitter,rp=(it(),O(nt)),Zc=rt(),An=ds(),Jc=Cs(),\r\nXc=At(),el=Bt(),Js=qs(),tl=tt(),rl=En(),Cn=class Cn extends Yc{constructor(e){super(),this.connectionParameters=\r\nnew el(e),this.user=this.connectionParameters.user,this.database=this.connectionParameters.database,\r\nthis.port=this.connectionParameters.port,this.host=this.connectionParameters.host,Object.defineProperty(\r\nthis,\"password\",{configurable:!0,enumerable:!1,writable:!0,value:this.connectionParameters.password}),\r\nthis.replication=this.connectionParameters.replication;var t=e||{};this._Promise=t.Promise||b.Promise,\r\nthis._types=new Xc(t.types),this._ending=!1,this._connecting=!1,this._connected=!1,this._connectionError=\r\n!1,this._queryable=!0,this.connection=t.connection||new rl({stream:t.stream,ssl:this.connectionParameters.\r\nssl,keepAlive:t.keepAlive||!1,keepAliveInitialDelayMillis:t.keepAliveInitialDelayMillis||0,encoding:this.\r\nconnectionParameters.client_encoding||\"utf8\"}),this.queryQueue=[],this.binary=t.binary||tl.binary,this.\r\nprocessID=null,this.secretKey=null,this.ssl=this.connectionParameters.ssl||!1,this.ssl&&this.ssl.key&&\r\nObject.defineProperty(this.ssl,\"key\",{enumerable:!1}),this._connectionTimeoutMillis=t.connectionTimeoutMillis||\r\n0}_errorAllQueries(e){let t=a(n=>{m.nextTick(()=>{n.handleError(e,this.connection)})},\"enqueueError\");\r\nthis.activeQuery&&(t(this.activeQuery),this.activeQuery=null),this.queryQueue.forEach(t),this.queryQueue.\r\nlength=0}_connect(e){var t=this,n=this.connection;if(this._connectionCallback=e,this._connecting||this.\r\n_connected){let i=new Error(\"Client has already been connected. You cannot reuse a client.\");m.nextTick(\r\n()=>{e(i)});return}this._connecting=!0,this.connectionTimeoutHandle,this._connectionTimeoutMillis>0&&\r\n(this.connectionTimeoutHandle=setTimeout(()=>{n._ending=!0,n.stream.destroy(new Error(\"timeout expir\\\r\ned\"))},this._connectionTimeoutMillis)),this.host&&this.host.indexOf(\"/\")===0?n.connect(this.host+\"/.\\\r\ns.PGSQL.\"+this.port):n.connect(this.port,this.host),n.on(\"connect\",function(){t.ssl?n.requestSsl():n.\r\nstartup(t.getStartupConf())}),n.on(\"sslconnect\",function(){n.startup(t.getStartupConf())}),this._attachListeners(\r\nn),n.once(\"end\",()=>{let i=this._ending?new Error(\"Connection terminated\"):new Error(\"Connection ter\\\r\nminated unexpectedly\");clearTimeout(this.connectionTimeoutHandle),this._errorAllQueries(i),this._ending||\r\n(this._connecting&&!this._connectionError?this._connectionCallback?this._connectionCallback(i):this.\r\n_handleErrorEvent(i):this._connectionError||this._handleErrorEvent(i)),m.nextTick(()=>{this.emit(\"en\\\r\nd\")})})}connect(e){if(e){this._connect(e);return}return new this._Promise((t,n)=>{this._connect(i=>{\r\ni?n(i):t()})})}_attachListeners(e){e.on(\"authenticationCleartextPassword\",this._handleAuthCleartextPassword.\r\nbind(this)),e.on(\"authenticationMD5Password\",this._handleAuthMD5Password.bind(this)),e.on(\"authentic\\\r\nationSASL\",this._handleAuthSASL.bind(this)),e.on(\"authenticationSASLContinue\",this._handleAuthSASLContinue.\r\nbind(this)),e.on(\"authenticationSASLFinal\",this._handleAuthSASLFinal.bind(this)),e.on(\"backendKeyDat\\\r\na\",this._handleBackendKeyData.bind(this)),e.on(\"error\",this._handleErrorEvent.bind(this)),e.on(\"erro\\\r\nrMessage\",this._handleErrorMessage.bind(this)),e.on(\"readyForQuery\",this._handleReadyForQuery.bind(this)),\r\ne.on(\"notice\",this._handleNotice.bind(this)),e.on(\"rowDescription\",this._handleRowDescription.bind(this)),\r\ne.on(\"dataRow\",this._handleDataRow.bind(this)),e.on(\"portalSuspended\",this._handlePortalSuspended.bind(\r\nthis)),e.on(\"emptyQuery\",this._handleEmptyQuery.bind(this)),e.on(\"commandComplete\",this._handleCommandComplete.\r\nbind(this)),e.on(\"parseComplete\",this._handleParseComplete.bind(this)),e.on(\"copyInResponse\",this._handleCopyInResponse.\r\nbind(this)),e.on(\"copyData\",this._handleCopyData.bind(this)),e.on(\"notification\",this._handleNotification.\r\nbind(this))}_checkPgPass(e){let t=this.connection;typeof this.password==\"function\"?this._Promise.resolve().\r\nthen(()=>this.password()).then(n=>{if(n!==void 0){if(typeof n!=\"string\"){t.emit(\"error\",new TypeError(\r\n\"Password must be a string\"));return}this.connectionParameters.password=this.password=n}else this.connectionParameters.\r\npassword=this.password=null;e()}).catch(n=>{t.emit(\"error\",n)}):this.password!==null?e():Jc(this.connectionParameters,\r\nn=>{n!==void 0&&(this.connectionParameters.password=this.password=n),e()})}_handleAuthCleartextPassword(e){\r\nthis._checkPgPass(()=>{this.connection.password(this.password)})}_handleAuthMD5Password(e){this._checkPgPass(\r\n()=>{let t=Zc.postgresMd5PasswordHash(this.user,this.password,e.salt);this.connection.password(t)})}_handleAuthSASL(e){\r\nthis._checkPgPass(()=>{this.saslSession=An.startSession(e.mechanisms),this.connection.sendSASLInitialResponseMessage(\r\nthis.saslSession.mechanism,this.saslSession.response)})}_handleAuthSASLContinue(e){An.continueSession(\r\nthis.saslSession,this.password,e.data),this.connection.sendSCRAMClientFinalMessage(this.saslSession.\r\nresponse)}_handleAuthSASLFinal(e){An.finalizeSession(this.saslSession,e.data),this.saslSession=null}_handleBackendKeyData(e){\r\nthis.processID=e.processID,this.secretKey=e.secretKey}_handleReadyForQuery(e){this._connecting&&(this.\r\n_connecting=!1,this._connected=!0,clearTimeout(this.connectionTimeoutHandle),this._connectionCallback&&\r\n(this._connectionCallback(null,this),this._connectionCallback=null),this.emit(\"connect\"));let{activeQuery:t}=this;\r\nthis.activeQuery=null,this.readyForQuery=!0,t&&t.handleReadyForQuery(this.connection),this._pulseQueryQueue()}_handleErrorWhileConnecting(e){\r\nif(!this._connectionError){if(this._connectionError=!0,clearTimeout(this.connectionTimeoutHandle),this.\r\n_connectionCallback)return this._connectionCallback(e);this.emit(\"error\",e)}}_handleErrorEvent(e){if(this.\r\n_connecting)return this._handleErrorWhileConnecting(e);this._queryable=!1,this._errorAllQueries(e),this.\r\nemit(\"error\",e)}_handleErrorMessage(e){if(this._connecting)return this._handleErrorWhileConnecting(e);\r\nlet t=this.activeQuery;if(!t){this._handleErrorEvent(e);return}this.activeQuery=null,t.handleError(e,\r\nthis.connection)}_handleRowDescription(e){this.activeQuery.handleRowDescription(e)}_handleDataRow(e){\r\nthis.activeQuery.handleDataRow(e)}_handlePortalSuspended(e){this.activeQuery.handlePortalSuspended(this.\r\nconnection)}_handleEmptyQuery(e){this.activeQuery.handleEmptyQuery(this.connection)}_handleCommandComplete(e){\r\nthis.activeQuery.handleCommandComplete(e,this.connection)}_handleParseComplete(e){this.activeQuery.name&&\r\n(this.connection.parsedStatements[this.activeQuery.name]=this.activeQuery.text)}_handleCopyInResponse(e){\r\nthis.activeQuery.handleCopyInResponse(this.connection)}_handleCopyData(e){this.activeQuery.handleCopyData(\r\ne,this.connection)}_handleNotification(e){this.emit(\"notification\",e)}_handleNotice(e){this.emit(\"no\\\r\ntice\",e)}getStartupConf(){var e=this.connectionParameters,t={user:e.user,database:e.database},n=e.application_name||\r\ne.fallback_application_name;return n&&(t.application_name=n),e.replication&&(t.replication=\"\"+e.replication),\r\ne.statement_timeout&&(t.statement_timeout=String(parseInt(e.statement_timeout,10))),e.lock_timeout&&\r\n(t.lock_timeout=String(parseInt(e.lock_timeout,10))),e.idle_in_transaction_session_timeout&&(t.idle_in_transaction_session_timeout=\r\nString(parseInt(e.idle_in_transaction_session_timeout,10))),e.options&&(t.options=e.options),t}cancel(e,t){\r\nif(e.activeQuery===t){var n=this.connection;this.host&&this.host.indexOf(\"/\")===0?n.connect(this.host+\r\n\"/.s.PGSQL.\"+this.port):n.connect(this.port,this.host),n.on(\"connect\",function(){n.cancel(e.processID,\r\ne.secretKey)})}else e.queryQueue.indexOf(t)!==-1&&e.queryQueue.splice(e.queryQueue.indexOf(t),1)}setTypeParser(e,t,n){\r\nreturn this._types.setTypeParser(e,t,n)}getTypeParser(e,t){return this._types.getTypeParser(e,t)}escapeIdentifier(e){\r\nreturn'\"'+e.replace(/\"/g,'\"\"')+'\"'}escapeLiteral(e){for(var t=!1,n=\"'\",i=0;i<e.length;i++){var s=e[i];\r\ns===\"'\"?n+=s+s:s===\"\\\\\"?(n+=s+s,t=!0):n+=s}return n+=\"'\",t===!0&&(n=\" E\"+n),n}_pulseQueryQueue(){if(this.\r\nreadyForQuery===!0)if(this.activeQuery=this.queryQueue.shift(),this.activeQuery){this.readyForQuery=\r\n!1,this.hasExecuted=!0;let e=this.activeQuery.submit(this.connection);e&&m.nextTick(()=>{this.activeQuery.\r\nhandleError(e,this.connection),this.readyForQuery=!0,this._pulseQueryQueue()})}else this.hasExecuted&&\r\n(this.activeQuery=null,this.emit(\"drain\"))}query(e,t,n){var i,s,o,u,c;if(e==null)throw new TypeError(\r\n\"Client was passed a null or undefined query\");return typeof e.submit==\"function\"?(o=e.query_timeout||\r\nthis.connectionParameters.query_timeout,s=i=e,typeof t==\"function\"&&(i.callback=i.callback||t)):(o=this.\r\nconnectionParameters.query_timeout,i=new Js(e,t,n),i.callback||(s=new this._Promise((l,f)=>{i.callback=\r\n(y,g)=>y?f(y):l(g)}))),o&&(c=i.callback,u=setTimeout(()=>{var l=new Error(\"Query read timeout\");m.nextTick(\r\n()=>{i.handleError(l,this.connection)}),c(l),i.callback=()=>{};var f=this.queryQueue.indexOf(i);f>-1&&\r\nthis.queryQueue.splice(f,1),this._pulseQueryQueue()},o),i.callback=(l,f)=>{clearTimeout(u),c(l,f)}),\r\nthis.binary&&!i.binary&&(i.binary=!0),i._result&&!i._result._types&&(i._result._types=this._types),this.\r\n_queryable?this._ending?(m.nextTick(()=>{i.handleError(new Error(\"Client was closed and is not query\\\r\nable\"),this.connection)}),s):(this.queryQueue.push(i),this._pulseQueryQueue(),s):(m.nextTick(()=>{i.\r\nhandleError(new Error(\"Client has encountered a connection error and is not queryable\"),this.connection)}),\r\ns)}ref(){this.connection.ref()}unref(){this.connection.unref()}end(e){if(this._ending=!0,!this.connection.\r\n_connecting)if(e)e();else return this._Promise.resolve();if(this.activeQuery||!this._queryable?this.\r\nconnection.stream.destroy():this.connection.end(),e)this.connection.once(\"end\",e);else return new this.\r\n_Promise(t=>{this.connection.once(\"end\",t)})}};a(Cn,\"Client\");var Ut=Cn;Ut.Query=Js;Xs.exports=Ut});var io=T((op,no)=>{\"use strict\";p();var nl=ge().EventEmitter,to=a(function(){},\"NOOP\"),ro=a((r,e)=>{\r\nlet t=r.findIndex(e);return t===-1?void 0:r.splice(t,1)[0]},\"removeWhere\"),Tn=class Tn{constructor(e,t,n){\r\nthis.client=e,this.idleListener=t,this.timeoutId=n}};a(Tn,\"IdleItem\");var _n=Tn,Pn=class Pn{constructor(e){\r\nthis.callback=e}};a(Pn,\"PendingItem\");var Qe=Pn;function il(){throw new Error(\"Release called on cli\\\r\nent which has already been released to the pool.\")}a(il,\"throwOnDoubleRelease\");function Dt(r,e){if(e)\r\nreturn{callback:e,result:void 0};let t,n,i=a(function(o,u){o?t(o):n(u)},\"cb\"),s=new r(function(o,u){\r\nn=o,t=u}).catch(o=>{throw Error.captureStackTrace(o),o});return{callback:i,result:s}}a(Dt,\"promisify\");\r\nfunction sl(r,e){return a(function t(n){n.client=e,e.removeListener(\"error\",t),e.on(\"error\",()=>{r.log(\r\n\"additional client error after disconnection due to error\",n)}),r._remove(e),r.emit(\"error\",n,e)},\"i\\\r\ndleListener\")}a(sl,\"makeIdleListener\");var Bn=class Bn extends nl{constructor(e,t){super(),this.options=\r\nObject.assign({},e),e!=null&&\"password\"in e&&Object.defineProperty(this.options,\"password\",{configurable:!0,\r\nenumerable:!1,writable:!0,value:e.password}),e!=null&&e.ssl&&e.ssl.key&&Object.defineProperty(this.options.\r\nssl,\"key\",{enumerable:!1}),this.options.max=this.options.max||this.options.poolSize||10,this.options.\r\nmin=this.options.min||0,this.options.maxUses=this.options.maxUses||1/0,this.options.allowExitOnIdle=\r\nthis.options.allowExitOnIdle||!1,this.options.maxLifetimeSeconds=this.options.maxLifetimeSeconds||0,\r\nthis.log=this.options.log||function(){},this.Client=this.options.Client||t||ot().Client,this.Promise=\r\nthis.options.Promise||b.Promise,typeof this.options.idleTimeoutMillis>\"u\"&&(this.options.idleTimeoutMillis=\r\n1e4),this._clients=[],this._idle=[],this._expired=new WeakSet,this._pendingQueue=[],this._endCallback=\r\nvoid 0,this.ending=!1,this.ended=!1}_isFull(){return this._clients.length>=this.options.max}_isAboveMin(){\r\nreturn this._clients.length>this.options.min}_pulseQueue(){if(this.log(\"pulse queue\"),this.ended){this.\r\nlog(\"pulse queue ended\");return}if(this.ending){this.log(\"pulse queue on ending\"),this._idle.length&&\r\nthis._idle.slice().map(t=>{this._remove(t.client)}),this._clients.length||(this.ended=!0,this._endCallback());\r\nreturn}if(!this._pendingQueue.length){this.log(\"no queued requests\");return}if(!this._idle.length&&this.\r\n_isFull())return;let e=this._pendingQueue.shift();if(this._idle.length){let t=this._idle.pop();clearTimeout(\r\nt.timeoutId);let n=t.client;n.ref&&n.ref();let i=t.idleListener;return this._acquireClient(n,e,i,!1)}\r\nif(!this._isFull())return this.newClient(e);throw new Error(\"unexpected condition\")}_remove(e){let t=ro(\r\nthis._idle,n=>n.client===e);t!==void 0&&clearTimeout(t.timeoutId),this._clients=this._clients.filter(\r\nn=>n!==e),e.end(),this.emit(\"remove\",e)}connect(e){if(this.ending){let i=new Error(\"Cannot use a poo\\\r\nl after calling end on the pool\");return e?e(i):this.Promise.reject(i)}let t=Dt(this.Promise,e),n=t.\r\nresult;if(this._isFull()||this._idle.length){if(this._idle.length&&m.nextTick(()=>this._pulseQueue()),\r\n!this.options.connectionTimeoutMillis)return this._pendingQueue.push(new Qe(t.callback)),n;let i=a((u,c,l)=>{\r\nclearTimeout(o),t.callback(u,c,l)},\"queueCallback\"),s=new Qe(i),o=setTimeout(()=>{ro(this._pendingQueue,\r\nu=>u.callback===i),s.timedOut=!0,t.callback(new Error(\"timeout exceeded when trying to connect\"))},this.\r\noptions.connectionTimeoutMillis);return o.unref&&o.unref(),this._pendingQueue.push(s),n}return this.\r\nnewClient(new Qe(t.callback)),n}newClient(e){let t=new this.Client(this.options);this._clients.push(\r\nt);let n=sl(this,t);this.log(\"checking client timeout\");let i,s=!1;this.options.connectionTimeoutMillis&&\r\n(i=setTimeout(()=>{this.log(\"ending client due to timeout\"),s=!0,t.connection?t.connection.stream.destroy():\r\nt.end()},this.options.connectionTimeoutMillis)),this.log(\"connecting new client\"),t.connect(o=>{if(i&&\r\nclearTimeout(i),t.on(\"error\",n),o)this.log(\"client failed to connect\",o),this._clients=this._clients.\r\nfilter(u=>u!==t),s&&(o=new Error(\"Connection terminated due to connection timeout\",{cause:o})),this.\r\n_pulseQueue(),e.timedOut||e.callback(o,void 0,to);else{if(this.log(\"new client connected\"),this.options.\r\nmaxLifetimeSeconds!==0){let u=setTimeout(()=>{this.log(\"ending client due to expired lifetime\"),this.\r\n_expired.add(t),this._idle.findIndex(l=>l.client===t)!==-1&&this._acquireClient(t,new Qe((l,f,y)=>y()),\r\nn,!1)},this.options.maxLifetimeSeconds*1e3);u.unref(),t.once(\"end\",()=>clearTimeout(u))}return this.\r\n_acquireClient(t,e,n,!0)}})}_acquireClient(e,t,n,i){i&&this.emit(\"connect\",e),this.emit(\"acquire\",e),\r\ne.release=this._releaseOnce(e,n),e.removeListener(\"error\",n),t.timedOut?i&&this.options.verify?this.\r\noptions.verify(e,e.release):e.release():i&&this.options.verify?this.options.verify(e,s=>{if(s)return e.\r\nrelease(s),t.callback(s,void 0,to);t.callback(void 0,e,e.release)}):t.callback(void 0,e,e.release)}_releaseOnce(e,t){\r\nlet n=!1;return i=>{n&&il(),n=!0,this._release(e,t,i)}}_release(e,t,n){if(e.on(\"error\",t),e._poolUseCount=\r\n(e._poolUseCount||0)+1,this.emit(\"release\",n,e),n||this.ending||!e._queryable||e._ending||e._poolUseCount>=\r\nthis.options.maxUses){e._poolUseCount>=this.options.maxUses&&this.log(\"remove expended client\"),this.\r\n_remove(e),this._pulseQueue();return}if(this._expired.has(e)){this.log(\"remove expired client\"),this.\r\n_expired.delete(e),this._remove(e),this._pulseQueue();return}let s;this.options.idleTimeoutMillis&&this.\r\n_isAboveMin()&&(s=setTimeout(()=>{this.log(\"remove idle client\"),this._remove(e)},this.options.idleTimeoutMillis),\r\nthis.options.allowExitOnIdle&&s.unref()),this.options.allowExitOnIdle&&e.unref(),this._idle.push(new _n(\r\ne,t,s)),this._pulseQueue()}query(e,t,n){if(typeof e==\"function\"){let s=Dt(this.Promise,e);return v(function(){\r\nreturn s.callback(new Error(\"Passing a function as the first parameter to pool.query is not supporte\\\r\nd\"))}),s.result}typeof t==\"function\"&&(n=t,t=void 0);let i=Dt(this.Promise,n);return n=i.callback,this.\r\nconnect((s,o)=>{if(s)return n(s);let u=!1,c=a(l=>{u||(u=!0,o.release(l),n(l))},\"onError\");o.once(\"er\\\r\nror\",c),this.log(\"dispatching query\");try{o.query(e,t,(l,f)=>{if(this.log(\"query dispatched\"),o.removeListener(\r\n\"error\",c),!u)return u=!0,o.release(l),l?n(l):n(void 0,f)})}catch(l){return o.release(l),n(l)}}),i.result}end(e){\r\nif(this.log(\"ending\"),this.ending){let n=new Error(\"Called end on pool more than once\");return e?e(n):\r\nthis.Promise.reject(n)}this.ending=!0;let t=Dt(this.Promise,e);return this._endCallback=t.callback,this.\r\n_pulseQueue(),t.result}get waitingCount(){return this._pendingQueue.length}get idleCount(){return this.\r\n_idle.length}get expiredCount(){return this._clients.reduce((e,t)=>e+(this._expired.has(t)?1:0),0)}get totalCount(){\r\nreturn this._clients.length}};a(Bn,\"Pool\");var In=Bn;no.exports=In});var so={};ie(so,{default:()=>ol});var ol,oo=G(()=>{\"use strict\";p();ol={}});var ao=T((lp,al)=>{al.exports={name:\"pg\",version:\"8.8.0\",description:\"PostgreSQL client - pure javas\\\r\ncript & libpq with the same API\",keywords:[\"database\",\"libpq\",\"pg\",\"postgre\",\"postgres\",\"postgresql\",\r\n\"rdbms\"],homepage:\"https://github.com/brianc/node-postgres\",repository:{type:\"git\",url:\"git://github\\\r\n.com/brianc/node-postgres.git\",directory:\"packages/pg\"},author:\"Brian Carlson <brian.m.carlson@gmail\\\r\n.com>\",main:\"./lib\",dependencies:{\"buffer-writer\":\"2.0.0\",\"packet-reader\":\"1.0.0\",\"pg-connection-str\\\r\ning\":\"^2.5.0\",\"pg-pool\":\"^3.5.2\",\"pg-protocol\":\"^1.5.0\",\"pg-types\":\"^2.1.0\",pgpass:\"1.x\"},devDependencies:{\r\nasync:\"2.6.4\",bluebird:\"3.5.2\",co:\"4.6.0\",\"pg-copy-streams\":\"0.3.0\"},peerDependencies:{\"pg-native\":\"\\\r\n>=3.0.1\"},peerDependenciesMeta:{\"pg-native\":{optional:!0}},scripts:{test:\"make test-all\"},files:[\"li\\\r\nb\",\"SPONSORS.md\"],license:\"MIT\",engines:{node:\">= 8.0.0\"},gitHead:\"c99fb2c127ddf8d712500db2c7b9a5491\\\r\na178655\"}});var lo=T((fp,co)=>{\"use strict\";p();var uo=ge().EventEmitter,ul=(it(),O(nt)),Rn=rt(),Ne=co.exports=function(r,e,t){\r\nuo.call(this),r=Rn.normalizeQueryConfig(r,e,t),this.text=r.text,this.values=r.values,this.name=r.name,\r\nthis.callback=r.callback,this.state=\"new\",this._arrayMode=r.rowMode===\"array\",this._emitRowEvents=!1,\r\nthis.on(\"newListener\",function(n){n===\"row\"&&(this._emitRowEvents=!0)}.bind(this))};ul.inherits(Ne,uo);\r\nvar cl={sqlState:\"code\",statementPosition:\"position\",messagePrimary:\"message\",context:\"where\",schemaName:\"\\\r\nschema\",tableName:\"table\",columnName:\"column\",dataTypeName:\"dataType\",constraintName:\"constraint\",sourceFile:\"\\\r\nfile\",sourceLine:\"line\",sourceFunction:\"routine\"};Ne.prototype.handleError=function(r){var e=this.native.\r\npq.resultErrorFields();if(e)for(var t in e){var n=cl[t]||t;r[n]=e[t]}this.callback?this.callback(r):\r\nthis.emit(\"error\",r),this.state=\"error\"};Ne.prototype.then=function(r,e){return this._getPromise().then(\r\nr,e)};Ne.prototype.catch=function(r){return this._getPromise().catch(r)};Ne.prototype._getPromise=function(){\r\nreturn this._promise?this._promise:(this._promise=new Promise(function(r,e){this._once(\"end\",r),this.\r\n_once(\"error\",e)}.bind(this)),this._promise)};Ne.prototype.submit=function(r){this.state=\"running\";var e=this;\r\nthis.native=r.native,r.native.arrayMode=this._arrayMode;var t=a(function(s,o,u){if(r.native.arrayMode=\r\n!1,v(function(){e.emit(\"_done\")}),s)return e.handleError(s);e._emitRowEvents&&(u.length>1?o.forEach(\r\n(c,l)=>{c.forEach(f=>{e.emit(\"row\",f,u[l])})}):o.forEach(function(c){e.emit(\"row\",c,u)})),e.state=\"e\\\r\nnd\",e.emit(\"end\",u),e.callback&&e.callback(null,u)},\"after\");if(m.domain&&(t=m.domain.bind(t)),this.\r\nname){this.name.length>63&&(console.error(\"Warning! Postgres only supports 63 characters for query n\\\r\names.\"),console.error(\"You supplied %s (%s)\",this.name,this.name.length),console.error(\"This can cau\\\r\nse conflicts and silent errors executing queries\"));var n=(this.values||[]).map(Rn.prepareValue);if(r.\r\nnamedQueries[this.name]){if(this.text&&r.namedQueries[this.name]!==this.text){let s=new Error(`Prepa\\\r\nred statements must be unique - '${this.name}' was used for a different statement`);return t(s)}return r.\r\nnative.execute(this.name,n,t)}return r.native.prepare(this.name,this.text,n.length,function(s){return s?\r\nt(s):(r.namedQueries[e.name]=e.text,e.native.execute(e.name,n,t))})}else if(this.values){if(!Array.isArray(\r\nthis.values)){let s=new Error(\"Query values must be an array\");return t(s)}var i=this.values.map(Rn.\r\nprepareValue);r.native.query(this.text,i,t)}else r.native.query(this.text,t)}});var yo=T((yp,po)=>{\"use strict\";p();var ll=(oo(),O(so)),fl=At(),dp=ao(),fo=ge().EventEmitter,hl=(it(),O(nt)),\r\npl=Bt(),ho=lo(),K=po.exports=function(r){fo.call(this),r=r||{},this._Promise=r.Promise||b.Promise,this.\r\n_types=new fl(r.types),this.native=new ll({types:this._types}),this._queryQueue=[],this._ending=!1,this.\r\n_connecting=!1,this._connected=!1,this._queryable=!0;var e=this.connectionParameters=new pl(r);this.\r\nuser=e.user,Object.defineProperty(this,\"password\",{configurable:!0,enumerable:!1,writable:!0,value:e.\r\npassword}),this.database=e.database,this.host=e.host,this.port=e.port,this.namedQueries={}};K.Query=\r\nho;hl.inherits(K,fo);K.prototype._errorAllQueries=function(r){let e=a(t=>{m.nextTick(()=>{t.native=this.\r\nnative,t.handleError(r)})},\"enqueueError\");this._hasActiveQuery()&&(e(this._activeQuery),this._activeQuery=\r\nnull),this._queryQueue.forEach(e),this._queryQueue.length=0};K.prototype._connect=function(r){var e=this;\r\nif(this._connecting){m.nextTick(()=>r(new Error(\"Client has already been connected. You cannot reuse\\\r\n a client.\")));return}this._connecting=!0,this.connectionParameters.getLibpqConnectionString(function(t,n){\r\nif(t)return r(t);e.native.connect(n,function(i){if(i)return e.native.end(),r(i);e._connected=!0,e.native.\r\non(\"error\",function(s){e._queryable=!1,e._errorAllQueries(s),e.emit(\"error\",s)}),e.native.on(\"notifi\\\r\ncation\",function(s){e.emit(\"notification\",{channel:s.relname,payload:s.extra})}),e.emit(\"connect\"),e.\r\n_pulseQueryQueue(!0),r()})})};K.prototype.connect=function(r){if(r){this._connect(r);return}return new this.\r\n_Promise((e,t)=>{this._connect(n=>{n?t(n):e()})})};K.prototype.query=function(r,e,t){var n,i,s,o,u;if(r==\r\nnull)throw new TypeError(\"Client was passed a null or undefined query\");if(typeof r.submit==\"functio\\\r\nn\")s=r.query_timeout||this.connectionParameters.query_timeout,i=n=r,typeof e==\"function\"&&(r.callback=\r\ne);else if(s=this.connectionParameters.query_timeout,n=new ho(r,e,t),!n.callback){let c,l;i=new this.\r\n_Promise((f,y)=>{c=f,l=y}),n.callback=(f,y)=>f?l(f):c(y)}return s&&(u=n.callback,o=setTimeout(()=>{var c=new Error(\r\n\"Query read timeout\");m.nextTick(()=>{n.handleError(c,this.connection)}),u(c),n.callback=()=>{};var l=this.\r\n_queryQueue.indexOf(n);l>-1&&this._queryQueue.splice(l,1),this._pulseQueryQueue()},s),n.callback=(c,l)=>{\r\nclearTimeout(o),u(c,l)}),this._queryable?this._ending?(n.native=this.native,m.nextTick(()=>{n.handleError(\r\nnew Error(\"Client was closed and is not queryable\"))}),i):(this._queryQueue.push(n),this._pulseQueryQueue(),\r\ni):(n.native=this.native,m.nextTick(()=>{n.handleError(new Error(\"Client has encountered a connectio\\\r\nn error and is not queryable\"))}),i)};K.prototype.end=function(r){var e=this;this._ending=!0,this._connected||\r\nthis.once(\"connect\",this.end.bind(this,r));var t;return r||(t=new this._Promise(function(n,i){r=a(s=>s?\r\ni(s):n(),\"cb\")})),this.native.end(function(){e._errorAllQueries(new Error(\"Connection terminated\")),\r\nm.nextTick(()=>{e.emit(\"end\"),r&&r()})}),t};K.prototype._hasActiveQuery=function(){return this._activeQuery&&\r\nthis._activeQuery.state!==\"error\"&&this._activeQuery.state!==\"end\"};K.prototype._pulseQueryQueue=function(r){\r\nif(this._connected&&!this._hasActiveQuery()){var e=this._queryQueue.shift();if(!e){r||this.emit(\"dra\\\r\nin\");return}this._activeQuery=e,e.submit(this);var t=this;e.once(\"_done\",function(){t._pulseQueryQueue()})}};\r\nK.prototype.cancel=function(r){this._activeQuery===r?this.native.cancel(function(){}):this._queryQueue.\r\nindexOf(r)!==-1&&this._queryQueue.splice(this._queryQueue.indexOf(r),1)};K.prototype.ref=function(){};\r\nK.prototype.unref=function(){};K.prototype.setTypeParser=function(r,e,t){return this._types.setTypeParser(\r\nr,e,t)};K.prototype.getTypeParser=function(r,e){return this._types.getTypeParser(r,e)}});var Ln=T((gp,mo)=>{\"use strict\";p();mo.exports=yo()});var ot=T((vp,at)=>{\"use strict\";p();var dl=eo(),yl=tt(),ml=En(),wl=io(),{DatabaseError:gl}=vn(),bl=a(\r\nr=>{var e;return e=class extends wl{constructor(n){super(n,r)}},a(e,\"BoundPool\"),e},\"poolFactory\"),Fn=a(\r\nfunction(r){this.defaults=yl,this.Client=r,this.Query=this.Client.Query,this.Pool=bl(this.Client),this.\r\n_pools=[],this.Connection=ml,this.types=Je(),this.DatabaseError=gl},\"PG\");typeof m.env.NODE_PG_FORCE_NATIVE<\r\n\"u\"?at.exports=new Fn(Ln()):(at.exports=new Fn(dl),Object.defineProperty(at.exports,\"native\",{configurable:!0,\r\nenumerable:!1,get(){var r=null;try{r=new Fn(Ln())}catch(e){if(e.code!==\"MODULE_NOT_FOUND\")throw e}return Object.\r\ndefineProperty(at.exports,\"native\",{value:r}),r}}))});p();p();Fe();Zt();p();var pa=Object.defineProperty,da=Object.defineProperties,ya=Object.getOwnPropertyDescriptors,bi=Object.\r\ngetOwnPropertySymbols,ma=Object.prototype.hasOwnProperty,wa=Object.prototype.propertyIsEnumerable,vi=a(\r\n(r,e,t)=>e in r?pa(r,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):r[e]=t,\"__defNormalProp\"),\r\nga=a((r,e)=>{for(var t in e||(e={}))ma.call(e,t)&&vi(r,t,e[t]);if(bi)for(var t of bi(e))wa.call(e,t)&&\r\nvi(r,t,e[t]);return r},\"__spreadValues\"),ba=a((r,e)=>da(r,ya(e)),\"__spreadProps\"),va=1008e3,xi=new Uint8Array(\r\nnew Uint16Array([258]).buffer)[0]===2,xa=new TextDecoder,Jt=new TextEncoder,yt=Jt.encode(\"0123456789\\\r\nabcdef\"),mt=Jt.encode(\"0123456789ABCDEF\"),Sa=Jt.encode(\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqr\\\r\nstuvwxyz0123456789+/\");var Si=Sa.slice();Si[62]=45;Si[63]=95;var He,wt;function Ea(r,{alphabet:e,scratchArr:t}={}){if(!He)if(He=\r\nnew Uint16Array(256),wt=new Uint16Array(256),xi)for(let C=0;C<256;C++)He[C]=yt[C&15]<<8|yt[C>>>4],wt[C]=\r\nmt[C&15]<<8|mt[C>>>4];else for(let C=0;C<256;C++)He[C]=yt[C&15]|yt[C>>>4]<<8,wt[C]=mt[C&15]|mt[C>>>4]<<\r\n8;r.byteOffset%4!==0&&(r=new Uint8Array(r));let n=r.length,i=n>>>1,s=n>>>2,o=t||new Uint16Array(n),u=new Uint32Array(\r\nr.buffer,r.byteOffset,s),c=new Uint32Array(o.buffer,o.byteOffset,i),l=e===\"upper\"?wt:He,f=0,y=0,g;if(xi)\r\nfor(;f<s;)g=u[f++],c[y++]=l[g>>>8&255]<<16|l[g&255],c[y++]=l[g>>>24]<<16|l[g>>>16&255];else for(;f<s;)\r\ng=u[f++],c[y++]=l[g>>>24]<<16|l[g>>>16&255],c[y++]=l[g>>>8&255]<<16|l[g&255];for(f<<=2;f<n;)o[f]=l[r[f++]];\r\nreturn xa.decode(o.subarray(0,n))}a(Ea,\"_toHex\");function Aa(r,e={}){let t=\"\",n=r.length,i=va>>>1,s=Math.\r\nceil(n/i),o=new Uint16Array(s>1?i:n);for(let u=0;u<s;u++){let c=u*i,l=c+i;t+=Ea(r.subarray(c,l),ba(ga(\r\n{},e),{scratchArr:o}))}return t}a(Aa,\"_toHexChunked\");function Ei(r,e={}){return e.alphabet!==\"upper\"&&\r\ntypeof r.toHex==\"function\"?r.toHex():Aa(r,e)}a(Ei,\"toHex\");p();var gt=class gt{constructor(e,t){this.strings=e;this.values=t}toParameterizedQuery(e={query:\"\",params:[]}){\r\nlet{strings:t,values:n}=this;for(let i=0,s=t.length;i<s;i++)if(e.query+=t[i],i<n.length){let o=n[i];\r\nif(o instanceof Ge)e.query+=o.sql;else if(o instanceof Ce)if(o.queryData instanceof gt)o.queryData.toParameterizedQuery(\r\ne);else{if(o.queryData.params?.length)throw new Error(\"This query is not composable\");e.query+=o.queryData.\r\nquery}else{let{params:u}=e;u.push(o),e.query+=\"$\"+u.length,(o instanceof d||ArrayBuffer.isView(o))&&\r\n(e.query+=\"::bytea\")}}return e}};a(gt,\"SqlTemplate\");var $e=gt,Xt=class Xt{constructor(e){this.sql=e}};\r\na(Xt,\"UnsafeRawSql\");var Ge=Xt;p();function bt(){typeof window<\"u\"&&typeof document<\"u\"&&typeof console<\"u\"&&typeof console.warn==\"func\\\r\ntion\"&&console.warn(`          \r\n        ************************************************************\r\n        *                                                          *\r\n        *  WARNING: Running SQL directly from the browser can have *\r\n        *  security implications. Even if your database is         *\r\n        *  protected by Row-Level Security (RLS), use it at your   *\r\n        *  own risk. This approach is great for fast prototyping,  *\r\n        *  but ensure proper safeguards are in place to prevent    *\r\n        *  misuse or execution of expensive SQL queries by your    *\r\n        *  end users.                                              *\r\n        *                                                          *\r\n        *  If you've assessed the risks, suppress this message     *\r\n        *  using the disableWarningInBrowsers configuration        *\r\n        *  parameter.                                              *\r\n        *                                                          *\r\n        ************************************************************`)}a(bt,\"warnIfBrowser\");Fe();var as=Se(At()),us=Se(rt());var _t=class _t extends Error{constructor(t){super(t);E(this,\"name\",\"NeonDbError\");E(this,\"severity\");\r\nE(this,\"code\");E(this,\"detail\");E(this,\"hint\");E(this,\"position\");E(this,\"internalPosition\");E(this,\r\n\"internalQuery\");E(this,\"where\");E(this,\"schema\");E(this,\"table\");E(this,\"column\");E(this,\"dataType\");\r\nE(this,\"constraint\");E(this,\"file\");E(this,\"line\");E(this,\"routine\");E(this,\"sourceError\");\"captureS\\\r\ntackTrace\"in Error&&typeof Error.captureStackTrace==\"function\"&&Error.captureStackTrace(this,_t)}};a(\r\n_t,\"NeonDbError\");var be=_t,is=\"transaction() expects an array of queries, or a function returning a\\\r\nn array of queries\",Ru=[\"severity\",\"code\",\"detail\",\"hint\",\"position\",\"internalPosition\",\"internalQue\\\r\nry\",\"where\",\"schema\",\"table\",\"column\",\"dataType\",\"constraint\",\"file\",\"line\",\"routine\"];function Lu(r){\r\nreturn r instanceof d?\"\\\\x\"+Ei(r):r}a(Lu,\"encodeBuffersAsBytea\");function ss(r){let{query:e,params:t}=r instanceof\r\n$e?r.toParameterizedQuery():r;return{query:e,params:t.map(n=>Lu((0,us.prepareValue)(n)))}}a(ss,\"prep\\\r\nareQuery\");function cs(r,{arrayMode:e,fullResults:t,fetchOptions:n,isolationLevel:i,readOnly:s,deferrable:o,\r\nauthToken:u,disableWarningInBrowsers:c}={}){if(!r)throw new Error(\"No database connection string was\\\r\n provided to `neon()`. Perhaps an environment variable has not been set?\");let l;try{l=Yt(r)}catch{throw new Error(\r\n\"Database connection string provided to `neon()` is not a valid URL. Connection string: \"+String(r))}\r\nlet{protocol:f,username:y,hostname:g,port:A,pathname:C}=l;if(f!==\"postgres:\"&&f!==\"postgresql:\"||!y||\r\n!g||!C)throw new Error(\"Database connection string format for `neon()` should be: postgresql://user:\\\r\npassword@host.tld/dbname?option=value\");function D(P,...I){if(!(Array.isArray(P)&&Array.isArray(P.raw)&&\r\nArray.isArray(I)))throw new Error('This function can now be called only as a tagged-template functio\\\r\nn: sql`SELECT ${value}`, not sql(\"SELECT $1\", [value], options). For a conventional function call wi\\\r\nth value placeholders ($1, $2, etc.), use sql.query(\"SELECT $1\", [value], options).');return new Ce(\r\nY,new $e(P,I))}a(D,\"templateFn\"),D.query=(P,I,w)=>new Ce(Y,{query:P,params:I??[]},w),D.unsafe=P=>new Ge(\r\nP),D.transaction=async(P,I)=>{if(typeof P==\"function\"&&(P=P(D)),!Array.isArray(P))throw new Error(is);\r\nP.forEach(W=>{if(!(W instanceof Ce))throw new Error(is)});let w=P.map(W=>W.queryData),Z=P.map(W=>W.opts??\r\n{});return Y(w,Z,I)};async function Y(P,I,w){let{fetchEndpoint:Z,fetchFunction:W}=ce,J=Array.isArray(\r\nP)?{queries:P.map(ee=>ss(ee))}:ss(P),X=n??{},se=e??!1,oe=t??!1,R=i,j=s,le=o;w!==void 0&&(w.fetchOptions!==\r\nvoid 0&&(X={...X,...w.fetchOptions}),w.arrayMode!==void 0&&(se=w.arrayMode),w.fullResults!==void 0&&\r\n(oe=w.fullResults),w.isolationLevel!==void 0&&(R=w.isolationLevel),w.readOnly!==void 0&&(j=w.readOnly),\r\nw.deferrable!==void 0&&(le=w.deferrable)),I!==void 0&&!Array.isArray(I)&&I.fetchOptions!==void 0&&(X=\r\n{...X,...I.fetchOptions});let de=u;!Array.isArray(I)&&I?.authToken!==void 0&&(de=I.authToken);let We=typeof Z==\r\n\"function\"?Z(g,A,{jwtAuth:de!==void 0}):Z,fe={\"Neon-Connection-String\":r,\"Neon-Raw-Text-Output\":\"tru\\\r\ne\",\"Neon-Array-Mode\":\"true\"},_e=await Fu(de);_e&&(fe.Authorization=`Bearer ${_e}`),Array.isArray(P)&&\r\n(R!==void 0&&(fe[\"Neon-Batch-Isolation-Level\"]=R),j!==void 0&&(fe[\"Neon-Batch-Read-Only\"]=String(j)),\r\nle!==void 0&&(fe[\"Neon-Batch-Deferrable\"]=String(le))),c||ce.disableWarningInBrowsers||bt();let ye;try{\r\nye=await(W??fetch)(We,{method:\"POST\",body:JSON.stringify(J),headers:fe,...X})}catch(ee){let M=new be(\r\n`Error connecting to database: ${ee}`);throw M.sourceError=ee,M}if(ye.ok){let ee=await ye.json();if(Array.\r\nisArray(P)){let M=ee.results;if(!Array.isArray(M))throw new be(\"Neon internal error: unexpected resu\\\r\nlt format\");return M.map(($,me)=>{let Ot=I[me]??{},vo=Ot.arrayMode??se,xo=Ot.fullResults??oe;return os(\r\n$,{arrayMode:vo,fullResults:xo,types:Ot.types})})}else{let M=I??{},$=M.arrayMode??se,me=M.fullResults??\r\noe;return os(ee,{arrayMode:$,fullResults:me,types:M.types})}}else{let{status:ee}=ye;if(ee===400){let M=await ye.\r\njson(),$=new be(M.message);for(let me of Ru)$[me]=M[me]??void 0;throw $}else{let M=await ye.text();throw new be(\r\n`Server error (HTTP status ${ee}): ${M}`)}}}return a(Y,\"execute\"),D}a(cs,\"neon\");var dr=class dr{constructor(e,t,n){\r\nthis.execute=e;this.queryData=t;this.opts=n}then(e,t){return this.execute(this.queryData,this.opts).\r\nthen(e,t)}catch(e){return this.execute(this.queryData,this.opts).catch(e)}finally(e){return this.execute(\r\nthis.queryData,this.opts).finally(e)}};a(dr,\"NeonQueryPromise\");var Ce=dr;function os(r,{arrayMode:e,\r\nfullResults:t,types:n}){let i=new as.default(n),s=r.fields.map(c=>c.name),o=r.fields.map(c=>i.getTypeParser(\r\nc.dataTypeID)),u=e===!0?r.rows.map(c=>c.map((l,f)=>l===null?null:o[f](l))):r.rows.map(c=>Object.fromEntries(\r\nc.map((l,f)=>[s[f],l===null?null:o[f](l)])));return t?(r.viaNeonFetch=!0,r.rowAsArray=e,r.rows=u,r._parsers=\r\no,r._types=i,r):u}a(os,\"processQueryResult\");async function Fu(r){if(typeof r==\"string\")return r;if(typeof r==\r\n\"function\")try{return await Promise.resolve(r())}catch(e){let t=new be(\"Error getting auth token.\");\r\nthrow e instanceof Error&&(t=new be(`Error getting auth token: ${e.message}`)),t}}a(Fu,\"getAuthToken\");p();var go=Se(ot());p();var wo=Se(ot());var kn=class kn extends wo.Client{constructor(t){super(t);this.config=t}get neonConfig(){return this.\r\nconnection.stream}connect(t){let{neonConfig:n}=this;n.forceDisablePgSSL&&(this.ssl=this.connection.ssl=\r\n!1),this.ssl&&n.useSecureWebSocket&&console.warn(\"SSL is enabled for both Postgres (e.g. ?sslmode=re\\\r\nquire in the connection string + forceDisablePgSSL = false) and the WebSocket tunnel (useSecureWebSo\\\r\ncket = true). Double encryption will increase latency and CPU usage. It may be appropriate to disabl\\\r\ne SSL in the Postgres connection parameters or set forceDisablePgSSL = true.\");let i=typeof this.config!=\r\n\"string\"&&this.config?.host!==void 0||typeof this.config!=\"string\"&&this.config?.connectionString!==\r\nvoid 0||m.env.PGHOST!==void 0,s=m.env.USER??m.env.USERNAME;if(!i&&this.host===\"localhost\"&&this.user===\r\ns&&this.database===s&&this.password===null)throw new Error(`No database host or connection string wa\\\r\ns set, and key parameters have default values (host: localhost, user: ${s}, db: ${s}, password: null\\\r\n). Is an environment variable missing? Alternatively, if you intended to connect with these paramete\\\r\nrs, please set the host to 'localhost' explicitly.`);let o=super.connect(t),u=n.pipelineTLS&&this.ssl,\r\nc=n.pipelineConnect===\"password\";if(!u&&!n.pipelineConnect)return o;let l=this.connection;if(u&&l.on(\r\n\"connect\",()=>l.stream.emit(\"data\",\"S\")),c){l.removeAllListeners(\"authenticationCleartextPassword\"),\r\nl.removeAllListeners(\"readyForQuery\"),l.once(\"readyForQuery\",()=>l.on(\"readyForQuery\",this._handleReadyForQuery.\r\nbind(this)));let f=this.ssl?\"sslconnect\":\"connect\";l.on(f,()=>{this.neonConfig.disableWarningInBrowsers||\r\nbt(),this._handleAuthCleartextPassword(),this._handleReadyForQuery()})}return o}async _handleAuthSASLContinue(t){\r\nif(typeof crypto>\"u\"||crypto.subtle===void 0||crypto.subtle.importKey===void 0)throw new Error(\"Cann\\\r\not use SASL auth when `crypto.subtle` is not defined\");let n=crypto.subtle,i=this.saslSession,s=this.\r\npassword,o=t.data;if(i.message!==\"SASLInitialResponse\"||typeof s!=\"string\"||typeof o!=\"string\")throw new Error(\r\n\"SASL: protocol error\");let u=Object.fromEntries(o.split(\",\").map(M=>{if(!/^.=/.test(M))throw new Error(\r\n\"SASL: Invalid attribute pair entry\");let $=M[0],me=M.substring(2);return[$,me]})),c=u.r,l=u.s,f=u.i;\r\nif(!c||!/^[!-+--~]+$/.test(c))throw new Error(\"SASL: SCRAM-SERVER-FIRST-MESSAGE: nonce missing/unpri\\\r\nntable\");if(!l||!/^(?:[a-zA-Z0-9+/]{4})*(?:[a-zA-Z0-9+/]{2}==|[a-zA-Z0-9+/]{3}=)?$/.test(l))throw new Error(\r\n\"SASL: SCRAM-SERVER-FIRST-MESSAGE: salt missing/not base64\");if(!f||!/^[1-9][0-9]*$/.test(f))throw new Error(\r\n\"SASL: SCRAM-SERVER-FIRST-MESSAGE: missing/invalid iteration count\");if(!c.startsWith(i.clientNonce))\r\nthrow new Error(\"SASL: SCRAM-SERVER-FIRST-MESSAGE: server nonce does not start with client nonce\");if(c.\r\nlength===i.clientNonce.length)throw new Error(\"SASL: SCRAM-SERVER-FIRST-MESSAGE: server nonce is too\\\r\n short\");let y=parseInt(f,10),g=d.from(l,\"base64\"),A=new TextEncoder,C=A.encode(s),D=await n.importKey(\r\n\"raw\",C,{name:\"HMAC\",hash:{name:\"SHA-256\"}},!1,[\"sign\"]),Y=new Uint8Array(await n.sign(\"HMAC\",D,d.concat(\r\n[g,d.from([0,0,0,1])]))),P=Y;for(var I=0;I<y-1;I++)Y=new Uint8Array(await n.sign(\"HMAC\",D,Y)),P=d.from(\r\nP.map((M,$)=>P[$]^Y[$]));let w=P,Z=await n.importKey(\"raw\",w,{name:\"HMAC\",hash:{name:\"SHA-256\"}},!1,\r\n[\"sign\"]),W=new Uint8Array(await n.sign(\"HMAC\",Z,A.encode(\"Client Key\"))),J=await n.digest(\"SHA-256\",\r\nW),X=\"n=*,r=\"+i.clientNonce,se=\"r=\"+c+\",s=\"+l+\",i=\"+y,oe=\"c=biws,r=\"+c,R=X+\",\"+se+\",\"+oe,j=await n.importKey(\r\n\"raw\",J,{name:\"HMAC\",hash:{name:\"SHA-256\"}},!1,[\"sign\"]);var le=new Uint8Array(await n.sign(\"HMAC\",j,\r\nA.encode(R))),de=d.from(W.map((M,$)=>W[$]^le[$])),We=de.toString(\"base64\");let fe=await n.importKey(\r\n\"raw\",w,{name:\"HMAC\",hash:{name:\"SHA-256\"}},!1,[\"sign\"]),_e=await n.sign(\"HMAC\",fe,A.encode(\"Server \\\r\nKey\")),ye=await n.importKey(\"raw\",_e,{name:\"HMAC\",hash:{name:\"SHA-256\"}},!1,[\"sign\"]);var ee=d.from(\r\nawait n.sign(\"HMAC\",ye,A.encode(R)));i.message=\"SASLResponse\",i.serverSignature=ee.toString(\"base64\"),\r\ni.response=oe+\",p=\"+We,this.connection.sendSCRAMClientFinalMessage(this.saslSession.response)}};a(kn,\r\n\"NeonClient\");var ut=kn;Fe();var bo=Se(Bt());function vl(r,e){if(e)return{callback:e,result:void 0};let t,n,i=a(function(o,u){o?t(o):n(u)},\"cb\"),\r\ns=new r(function(o,u){n=o,t=u});return{callback:i,result:s}}a(vl,\"promisify\");var Un=class Un extends go.Pool{constructor(){\r\nsuper(...arguments);E(this,\"Client\",ut);E(this,\"hasFetchUnsupportedListeners\",!1);E(this,\"addListene\\\r\nr\",this.on)}on(t,n){return t!==\"error\"&&(this.hasFetchUnsupportedListeners=!0),super.on(t,n)}query(t,n,i){\r\nif(!ce.poolQueryViaFetch||this.hasFetchUnsupportedListeners||typeof t==\"function\")return super.query(\r\nt,n,i);typeof n==\"function\"&&(i=n,n=void 0);let s=vl(this.Promise,i);i=s.callback;try{let o=new bo.default(\r\nthis.options),u=encodeURIComponent,c=encodeURI,l=`postgresql://${u(o.user)}:${u(o.password)}@${u(o.host)}\\\r\n/${c(o.database)}`,f=typeof t==\"string\"?t:t.text,y=n??t.values??[];cs(l,{fullResults:!0,arrayMode:t.\r\nrowMode===\"array\"}).query(f,y,{types:t.types??this.options?.types}).then(A=>i(void 0,A)).catch(A=>i(\r\nA))}catch(o){i(o)}return s.result}};a(Un,\"NeonPool\");var Mn=Un;Fe();var ct=Se(ot()),kp=\"mjs\";var export_DatabaseError=ct.DatabaseError;var export_defaults=ct.defaults;var export_escapeIdentifier=ct.escapeIdentifier;\r\nvar export_escapeLiteral=ct.escapeLiteral;var export_types=ct.types;export{ut as Client,export_DatabaseError as DatabaseError,\r\nbe as NeonDbError,Ce as NeonQueryPromise,Mn as Pool,$e as SqlTemplate,Ge as UnsafeRawSql,kp as _bundleExt,\r\nexport_defaults as defaults,export_escapeIdentifier as escapeIdentifier,export_escapeLiteral as escapeLiteral,\r\ncs as neon,ce as neonConfig,export_types as types,bt as warnIfBrowser};\r\n/*! Bundled license information:\r\n\r\nieee754/index.js:\r\n  (*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> *)\r\n\r\nbuffer/index.js:\r\n  (*!\r\n   * The buffer module from node.js, for the browser.\r\n   *\r\n   * @author   Feross Aboukhadijeh <https://feross.org>\r\n   * @license  MIT\r\n   *)\r\n*/\r\n", "export const entityKind = Symbol.for('drizzle:entityKind');\nexport const hasOwnEntityKind = Symbol.for('drizzle:hasOwnEntityKind');\n\nexport interface DrizzleEntity {\n\t[entityKind]: string;\n}\n\nexport type DrizzleEntityClass<T> =\n\t& ((abstract new(...args: any[]) => T) | (new(...args: any[]) => T))\n\t& DrizzleEntity;\n\nexport function is<T extends DrizzleEntityClass<any>>(value: any, type: T): value is InstanceType<T> {\n\tif (!value || typeof value !== 'object') {\n\t\treturn false;\n\t}\n\n\tif (value instanceof type) { // eslint-disable-line no-instanceof/no-instanceof\n\t\treturn true;\n\t}\n\n\tif (!Object.prototype.hasOwnProperty.call(type, entityKind)) {\n\t\tthrow new Error(\n\t\t\t`Class \"${\n\t\t\t\ttype.name ?? '<unknown>'\n\t\t\t}\" doesn't look like a Drizzle entity. If this is incorrect and the class is provided by Drizzle, please report this as a bug.`,\n\t\t);\n\t}\n\n\tlet cls = Object.getPrototypeOf(value).constructor;\n\tif (cls) {\n\t\t// Traverse the prototype chain to find the entityKind\n\t\twhile (cls) {\n\t\t\tif (entityKind in cls && cls[entityKind] === type[entityKind]) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tcls = Object.getPrototypeOf(cls);\n\t\t}\n\t}\n\n\treturn false;\n}\n", "import { entityKind } from '~/entity.ts';\n\nexport interface Logger {\n\tlogQuery(query: string, params: unknown[]): void;\n}\n\nexport interface LogWriter {\n\twrite(message: string): void;\n}\n\nexport class ConsoleLogWriter implements LogWriter {\n\tstatic readonly [entityKind]: string = 'ConsoleLogWriter';\n\n\twrite(message: string) {\n\t\tconsole.log(message);\n\t}\n}\n\nexport class DefaultLogger implements Logger {\n\tstatic readonly [entityKind]: string = 'DefaultLogger';\n\n\treadonly writer: LogWriter;\n\n\tconstructor(config?: { writer: LogWriter }) {\n\t\tthis.writer = config?.writer ?? new ConsoleLogWriter();\n\t}\n\n\tlogQuery(query: string, params: unknown[]): void {\n\t\tconst stringifiedParams = params.map((p) => {\n\t\t\ttry {\n\t\t\t\treturn JSON.stringify(p);\n\t\t\t} catch {\n\t\t\t\treturn String(p);\n\t\t\t}\n\t\t});\n\t\tconst paramsStr = stringifiedParams.length ? ` -- params: [${stringifiedParams.join(', ')}]` : '';\n\t\tthis.writer.write(`Query: ${query}${paramsStr}`);\n\t}\n}\n\nexport class NoopLogger implements Logger {\n\tstatic readonly [entityKind]: string = 'NoopLogger';\n\n\tlogQuery(): void {\n\t\t// noop\n\t}\n}\n", "import type { Cache } from '~/cache/core/cache.ts';\nimport { entityKind } from '~/entity.ts';\nimport type { PgDialect } from '~/pg-core/dialect.ts';\nimport {\n\tPgDeleteBase,\n\tPgInsertBuilder,\n\tPgSelectBuilder,\n\tPgUpdateBuilder,\n\tQueryBuilder,\n} from '~/pg-core/query-builders/index.ts';\nimport type {\n\tPgQueryResultHKT,\n\tPgQueryResultKind,\n\tPgSession,\n\tPgTransaction,\n\tPgTransactionConfig,\n\tPreparedQueryConfig,\n} from '~/pg-core/session.ts';\nimport type { PgTable } from '~/pg-core/table.ts';\nimport type { TypedQueryBuilder } from '~/query-builders/query-builder.ts';\nimport type { ExtractTablesWithRelations, RelationalSchemaConfig, TablesRelationalConfig } from '~/relations.ts';\nimport { SelectionProxyHandler } from '~/selection-proxy.ts';\nimport { type ColumnsSelection, type SQL, sql, type SQLWrapper } from '~/sql/sql.ts';\nimport { WithSubquery } from '~/subquery.ts';\nimport type { DrizzleTypeError, NeonAuthToken } from '~/utils.ts';\nimport type { PgColumn } from './columns/index.ts';\nimport { PgCountBuilder } from './query-builders/count.ts';\nimport { RelationalQueryBuilder } from './query-builders/query.ts';\nimport { PgRaw } from './query-builders/raw.ts';\nimport { PgRefreshMaterializedView } from './query-builders/refresh-materialized-view.ts';\nimport type { SelectedFields } from './query-builders/select.types.ts';\nimport type { WithBuilder } from './subquery.ts';\nimport type { PgViewBase } from './view-base.ts';\nimport type { PgMaterializedView } from './view.ts';\n\nexport class PgDatabase<\n\tTQueryResult extends PgQueryResultHKT,\n\tTFullSchema extends Record<string, unknown> = Record<string, never>,\n\tTSchema extends TablesRelationalConfig = ExtractTablesWithRelations<TFullSchema>,\n> {\n\tstatic readonly [entityKind]: string = 'PgDatabase';\n\n\tdeclare readonly _: {\n\t\treadonly schema: TSchema | undefined;\n\t\treadonly fullSchema: TFullSchema;\n\t\treadonly tableNamesMap: Record<string, string>;\n\t\treadonly session: PgSession<TQueryResult, TFullSchema, TSchema>;\n\t};\n\n\tquery: TFullSchema extends Record<string, never>\n\t\t? DrizzleTypeError<'Seems like the schema generic is missing - did you forget to add it to your DB type?'>\n\t\t: {\n\t\t\t[K in keyof TSchema]: RelationalQueryBuilder<TSchema, TSchema[K]>;\n\t\t};\n\n\tconstructor(\n\t\t/** @internal */\n\t\treadonly dialect: PgDialect,\n\t\t/** @internal */\n\t\treadonly session: PgSession<any, any, any>,\n\t\tschema: RelationalSchemaConfig<TSchema> | undefined,\n\t) {\n\t\tthis._ = schema\n\t\t\t? {\n\t\t\t\tschema: schema.schema,\n\t\t\t\tfullSchema: schema.fullSchema as TFullSchema,\n\t\t\t\ttableNamesMap: schema.tableNamesMap,\n\t\t\t\tsession,\n\t\t\t}\n\t\t\t: {\n\t\t\t\tschema: undefined,\n\t\t\t\tfullSchema: {} as TFullSchema,\n\t\t\t\ttableNamesMap: {},\n\t\t\t\tsession,\n\t\t\t};\n\t\tthis.query = {} as typeof this['query'];\n\t\tif (this._.schema) {\n\t\t\tfor (const [tableName, columns] of Object.entries(this._.schema)) {\n\t\t\t\t(this.query as PgDatabase<TQueryResult, Record<string, any>>['query'])[tableName] = new RelationalQueryBuilder(\n\t\t\t\t\tschema!.fullSchema,\n\t\t\t\t\tthis._.schema,\n\t\t\t\t\tthis._.tableNamesMap,\n\t\t\t\t\tschema!.fullSchema[tableName] as PgTable,\n\t\t\t\t\tcolumns,\n\t\t\t\t\tdialect,\n\t\t\t\t\tsession,\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t\tthis.$cache = { invalidate: async (_params: any) => {} };\n\t}\n\n\t/**\n\t * Creates a subquery that defines a temporary named result set as a CTE.\n\t *\n\t * It is useful for breaking down complex queries into simpler parts and for reusing the result set in subsequent parts of the query.\n\t *\n\t * See docs: {@link https://orm.drizzle.team/docs/select#with-clause}\n\t *\n\t * @param alias The alias for the subquery.\n\t *\n\t * Failure to provide an alias will result in a DrizzleTypeError, preventing the subquery from being referenced in other queries.\n\t *\n\t * @example\n\t *\n\t * ```ts\n\t * // Create a subquery with alias 'sq' and use it in the select query\n\t * const sq = db.$with('sq').as(db.select().from(users).where(eq(users.id, 42)));\n\t *\n\t * const result = await db.with(sq).select().from(sq);\n\t * ```\n\t *\n\t * To select arbitrary SQL values as fields in a CTE and reference them in other CTEs or in the main query, you need to add aliases to them:\n\t *\n\t * ```ts\n\t * // Select an arbitrary SQL value as a field in a CTE and reference it in the main query\n\t * const sq = db.$with('sq').as(db.select({\n\t *   name: sql<string>`upper(${users.name})`.as('name'),\n\t * })\n\t * .from(users));\n\t *\n\t * const result = await db.with(sq).select({ name: sq.name }).from(sq);\n\t * ```\n\t */\n\t$with: WithBuilder = (alias: string, selection?: ColumnsSelection) => {\n\t\tconst self = this;\n\t\tconst as = (\n\t\t\tqb:\n\t\t\t\t| TypedQueryBuilder<ColumnsSelection | undefined>\n\t\t\t\t| SQL\n\t\t\t\t| ((qb: QueryBuilder) => TypedQueryBuilder<ColumnsSelection | undefined> | SQL),\n\t\t) => {\n\t\t\tif (typeof qb === 'function') {\n\t\t\t\tqb = qb(new QueryBuilder(self.dialect));\n\t\t\t}\n\n\t\t\treturn new Proxy(\n\t\t\t\tnew WithSubquery(\n\t\t\t\t\tqb.getSQL(),\n\t\t\t\t\tselection ?? ('getSelectedFields' in qb ? qb.getSelectedFields() ?? {} : {}) as SelectedFields,\n\t\t\t\t\talias,\n\t\t\t\t\ttrue,\n\t\t\t\t),\n\t\t\t\tnew SelectionProxyHandler({ alias, sqlAliasedBehavior: 'alias', sqlBehavior: 'error' }),\n\t\t\t);\n\t\t};\n\t\treturn { as };\n\t};\n\n\t$count(\n\t\tsource: PgTable | PgViewBase | SQL | SQLWrapper,\n\t\tfilters?: SQL<unknown>,\n\t) {\n\t\treturn new PgCountBuilder({ source, filters, session: this.session });\n\t}\n\n\t$cache: { invalidate: Cache['onMutate'] };\n\n\t/**\n\t * Incorporates a previously defined CTE (using `$with`) into the main query.\n\t *\n\t * This method allows the main query to reference a temporary named result set.\n\t *\n\t * See docs: {@link https://orm.drizzle.team/docs/select#with-clause}\n\t *\n\t * @param queries The CTEs to incorporate into the main query.\n\t *\n\t * @example\n\t *\n\t * ```ts\n\t * // Define a subquery 'sq' as a CTE using $with\n\t * const sq = db.$with('sq').as(db.select().from(users).where(eq(users.id, 42)));\n\t *\n\t * // Incorporate the CTE 'sq' into the main query and select from it\n\t * const result = await db.with(sq).select().from(sq);\n\t * ```\n\t */\n\twith(...queries: WithSubquery[]) {\n\t\tconst self = this;\n\n\t\t/**\n\t\t * Creates a select query.\n\t\t *\n\t\t * Calling this method with no arguments will select all columns from the table. Pass a selection object to specify the columns you want to select.\n\t\t *\n\t\t * Use `.from()` method to specify which table to select from.\n\t\t *\n\t\t * See docs: {@link https://orm.drizzle.team/docs/select}\n\t\t *\n\t\t * @param fields The selection object.\n\t\t *\n\t\t * @example\n\t\t *\n\t\t * ```ts\n\t\t * // Select all columns and all rows from the 'cars' table\n\t\t * const allCars: Car[] = await db.select().from(cars);\n\t\t *\n\t\t * // Select specific columns and all rows from the 'cars' table\n\t\t * const carsIdsAndBrands: { id: number; brand: string }[] = await db.select({\n\t\t *   id: cars.id,\n\t\t *   brand: cars.brand\n\t\t * })\n\t\t *   .from(cars);\n\t\t * ```\n\t\t *\n\t\t * Like in SQL, you can use arbitrary expressions as selection fields, not just table columns:\n\t\t *\n\t\t * ```ts\n\t\t * // Select specific columns along with expression and all rows from the 'cars' table\n\t\t * const carsIdsAndLowerNames: { id: number; lowerBrand: string }[] = await db.select({\n\t\t *   id: cars.id,\n\t\t *   lowerBrand: sql<string>`lower(${cars.brand})`,\n\t\t * })\n\t\t *   .from(cars);\n\t\t * ```\n\t\t */\n\t\tfunction select(): PgSelectBuilder<undefined>;\n\t\tfunction select<TSelection extends SelectedFields>(fields: TSelection): PgSelectBuilder<TSelection>;\n\t\tfunction select<TSelection extends SelectedFields>(fields?: TSelection): PgSelectBuilder<TSelection | undefined> {\n\t\t\treturn new PgSelectBuilder({\n\t\t\t\tfields: fields ?? undefined,\n\t\t\t\tsession: self.session,\n\t\t\t\tdialect: self.dialect,\n\t\t\t\twithList: queries,\n\t\t\t});\n\t\t}\n\n\t\t/**\n\t\t * Adds `distinct` expression to the select query.\n\t\t *\n\t\t * Calling this method will return only unique values. When multiple columns are selected, it returns rows with unique combinations of values in these columns.\n\t\t *\n\t\t * Use `.from()` method to specify which table to select from.\n\t\t *\n\t\t * See docs: {@link https://orm.drizzle.team/docs/select#distinct}\n\t\t *\n\t\t * @param fields The selection object.\n\t\t *\n\t\t * @example\n\t\t * ```ts\n\t\t * // Select all unique rows from the 'cars' table\n\t\t * await db.selectDistinct()\n\t\t *   .from(cars)\n\t\t *   .orderBy(cars.id, cars.brand, cars.color);\n\t\t *\n\t\t * // Select all unique brands from the 'cars' table\n\t\t * await db.selectDistinct({ brand: cars.brand })\n\t\t *   .from(cars)\n\t\t *   .orderBy(cars.brand);\n\t\t * ```\n\t\t */\n\t\tfunction selectDistinct(): PgSelectBuilder<undefined>;\n\t\tfunction selectDistinct<TSelection extends SelectedFields>(fields: TSelection): PgSelectBuilder<TSelection>;\n\t\tfunction selectDistinct<TSelection extends SelectedFields>(\n\t\t\tfields?: TSelection,\n\t\t): PgSelectBuilder<TSelection | undefined> {\n\t\t\treturn new PgSelectBuilder({\n\t\t\t\tfields: fields ?? undefined,\n\t\t\t\tsession: self.session,\n\t\t\t\tdialect: self.dialect,\n\t\t\t\twithList: queries,\n\t\t\t\tdistinct: true,\n\t\t\t});\n\t\t}\n\n\t\t/**\n\t\t * Adds `distinct on` expression to the select query.\n\t\t *\n\t\t * Calling this method will specify how the unique rows are determined.\n\t\t *\n\t\t * Use `.from()` method to specify which table to select from.\n\t\t *\n\t\t * See docs: {@link https://orm.drizzle.team/docs/select#distinct}\n\t\t *\n\t\t * @param on The expression defining uniqueness.\n\t\t * @param fields The selection object.\n\t\t *\n\t\t * @example\n\t\t * ```ts\n\t\t * // Select the first row for each unique brand from the 'cars' table\n\t\t * await db.selectDistinctOn([cars.brand])\n\t\t *   .from(cars)\n\t\t *   .orderBy(cars.brand);\n\t\t *\n\t\t * // Selects the first occurrence of each unique car brand along with its color from the 'cars' table\n\t\t * await db.selectDistinctOn([cars.brand], { brand: cars.brand, color: cars.color })\n\t\t *   .from(cars)\n\t\t *   .orderBy(cars.brand, cars.color);\n\t\t * ```\n\t\t */\n\t\tfunction selectDistinctOn(on: (PgColumn | SQLWrapper)[]): PgSelectBuilder<undefined>;\n\t\tfunction selectDistinctOn<TSelection extends SelectedFields>(\n\t\t\ton: (PgColumn | SQLWrapper)[],\n\t\t\tfields: TSelection,\n\t\t): PgSelectBuilder<TSelection>;\n\t\tfunction selectDistinctOn<TSelection extends SelectedFields>(\n\t\t\ton: (PgColumn | SQLWrapper)[],\n\t\t\tfields?: TSelection,\n\t\t): PgSelectBuilder<TSelection | undefined> {\n\t\t\treturn new PgSelectBuilder({\n\t\t\t\tfields: fields ?? undefined,\n\t\t\t\tsession: self.session,\n\t\t\t\tdialect: self.dialect,\n\t\t\t\twithList: queries,\n\t\t\t\tdistinct: { on },\n\t\t\t});\n\t\t}\n\n\t\t/**\n\t\t * Creates an update query.\n\t\t *\n\t\t * Calling this method without `.where()` clause will update all rows in a table. The `.where()` clause specifies which rows should be updated.\n\t\t *\n\t\t * Use `.set()` method to specify which values to update.\n\t\t *\n\t\t * See docs: {@link https://orm.drizzle.team/docs/update}\n\t\t *\n\t\t * @param table The table to update.\n\t\t *\n\t\t * @example\n\t\t *\n\t\t * ```ts\n\t\t * // Update all rows in the 'cars' table\n\t\t * await db.update(cars).set({ color: 'red' });\n\t\t *\n\t\t * // Update rows with filters and conditions\n\t\t * await db.update(cars).set({ color: 'red' }).where(eq(cars.brand, 'BMW'));\n\t\t *\n\t\t * // Update with returning clause\n\t\t * const updatedCar: Car[] = await db.update(cars)\n\t\t *   .set({ color: 'red' })\n\t\t *   .where(eq(cars.id, 1))\n\t\t *   .returning();\n\t\t * ```\n\t\t */\n\t\tfunction update<TTable extends PgTable>(table: TTable): PgUpdateBuilder<TTable, TQueryResult> {\n\t\t\treturn new PgUpdateBuilder(table, self.session, self.dialect, queries);\n\t\t}\n\n\t\t/**\n\t\t * Creates an insert query.\n\t\t *\n\t\t * Calling this method will create new rows in a table. Use `.values()` method to specify which values to insert.\n\t\t *\n\t\t * See docs: {@link https://orm.drizzle.team/docs/insert}\n\t\t *\n\t\t * @param table The table to insert into.\n\t\t *\n\t\t * @example\n\t\t *\n\t\t * ```ts\n\t\t * // Insert one row\n\t\t * await db.insert(cars).values({ brand: 'BMW' });\n\t\t *\n\t\t * // Insert multiple rows\n\t\t * await db.insert(cars).values([{ brand: 'BMW' }, { brand: 'Porsche' }]);\n\t\t *\n\t\t * // Insert with returning clause\n\t\t * const insertedCar: Car[] = await db.insert(cars)\n\t\t *   .values({ brand: 'BMW' })\n\t\t *   .returning();\n\t\t * ```\n\t\t */\n\t\tfunction insert<TTable extends PgTable>(table: TTable): PgInsertBuilder<TTable, TQueryResult> {\n\t\t\treturn new PgInsertBuilder(table, self.session, self.dialect, queries);\n\t\t}\n\n\t\t/**\n\t\t * Creates a delete query.\n\t\t *\n\t\t * Calling this method without `.where()` clause will delete all rows in a table. The `.where()` clause specifies which rows should be deleted.\n\t\t *\n\t\t * See docs: {@link https://orm.drizzle.team/docs/delete}\n\t\t *\n\t\t * @param table The table to delete from.\n\t\t *\n\t\t * @example\n\t\t *\n\t\t * ```ts\n\t\t * // Delete all rows in the 'cars' table\n\t\t * await db.delete(cars);\n\t\t *\n\t\t * // Delete rows with filters and conditions\n\t\t * await db.delete(cars).where(eq(cars.color, 'green'));\n\t\t *\n\t\t * // Delete with returning clause\n\t\t * const deletedCar: Car[] = await db.delete(cars)\n\t\t *   .where(eq(cars.id, 1))\n\t\t *   .returning();\n\t\t * ```\n\t\t */\n\t\tfunction delete_<TTable extends PgTable>(table: TTable): PgDeleteBase<TTable, TQueryResult> {\n\t\t\treturn new PgDeleteBase(table, self.session, self.dialect, queries);\n\t\t}\n\n\t\treturn { select, selectDistinct, selectDistinctOn, update, insert, delete: delete_ };\n\t}\n\n\t/**\n\t * Creates a select query.\n\t *\n\t * Calling this method with no arguments will select all columns from the table. Pass a selection object to specify the columns you want to select.\n\t *\n\t * Use `.from()` method to specify which table to select from.\n\t *\n\t * See docs: {@link https://orm.drizzle.team/docs/select}\n\t *\n\t * @param fields The selection object.\n\t *\n\t * @example\n\t *\n\t * ```ts\n\t * // Select all columns and all rows from the 'cars' table\n\t * const allCars: Car[] = await db.select().from(cars);\n\t *\n\t * // Select specific columns and all rows from the 'cars' table\n\t * const carsIdsAndBrands: { id: number; brand: string }[] = await db.select({\n\t *   id: cars.id,\n\t *   brand: cars.brand\n\t * })\n\t *   .from(cars);\n\t * ```\n\t *\n\t * Like in SQL, you can use arbitrary expressions as selection fields, not just table columns:\n\t *\n\t * ```ts\n\t * // Select specific columns along with expression and all rows from the 'cars' table\n\t * const carsIdsAndLowerNames: { id: number; lowerBrand: string }[] = await db.select({\n\t *   id: cars.id,\n\t *   lowerBrand: sql<string>`lower(${cars.brand})`,\n\t * })\n\t *   .from(cars);\n\t * ```\n\t */\n\tselect(): PgSelectBuilder<undefined>;\n\tselect<TSelection extends SelectedFields>(fields: TSelection): PgSelectBuilder<TSelection>;\n\tselect<TSelection extends SelectedFields>(fields?: TSelection): PgSelectBuilder<TSelection | undefined> {\n\t\treturn new PgSelectBuilder({\n\t\t\tfields: fields ?? undefined,\n\t\t\tsession: this.session,\n\t\t\tdialect: this.dialect,\n\t\t});\n\t}\n\n\t/**\n\t * Adds `distinct` expression to the select query.\n\t *\n\t * Calling this method will return only unique values. When multiple columns are selected, it returns rows with unique combinations of values in these columns.\n\t *\n\t * Use `.from()` method to specify which table to select from.\n\t *\n\t * See docs: {@link https://orm.drizzle.team/docs/select#distinct}\n\t *\n\t * @param fields The selection object.\n\t *\n\t * @example\n\t * ```ts\n\t * // Select all unique rows from the 'cars' table\n\t * await db.selectDistinct()\n\t *   .from(cars)\n\t *   .orderBy(cars.id, cars.brand, cars.color);\n\t *\n\t * // Select all unique brands from the 'cars' table\n\t * await db.selectDistinct({ brand: cars.brand })\n\t *   .from(cars)\n\t *   .orderBy(cars.brand);\n\t * ```\n\t */\n\tselectDistinct(): PgSelectBuilder<undefined>;\n\tselectDistinct<TSelection extends SelectedFields>(fields: TSelection): PgSelectBuilder<TSelection>;\n\tselectDistinct<TSelection extends SelectedFields>(fields?: TSelection): PgSelectBuilder<TSelection | undefined> {\n\t\treturn new PgSelectBuilder({\n\t\t\tfields: fields ?? undefined,\n\t\t\tsession: this.session,\n\t\t\tdialect: this.dialect,\n\t\t\tdistinct: true,\n\t\t});\n\t}\n\n\t/**\n\t * Adds `distinct on` expression to the select query.\n\t *\n\t * Calling this method will specify how the unique rows are determined.\n\t *\n\t * Use `.from()` method to specify which table to select from.\n\t *\n\t * See docs: {@link https://orm.drizzle.team/docs/select#distinct}\n\t *\n\t * @param on The expression defining uniqueness.\n\t * @param fields The selection object.\n\t *\n\t * @example\n\t * ```ts\n\t * // Select the first row for each unique brand from the 'cars' table\n\t * await db.selectDistinctOn([cars.brand])\n\t *   .from(cars)\n\t *   .orderBy(cars.brand);\n\t *\n\t * // Selects the first occurrence of each unique car brand along with its color from the 'cars' table\n\t * await db.selectDistinctOn([cars.brand], { brand: cars.brand, color: cars.color })\n\t *   .from(cars)\n\t *   .orderBy(cars.brand, cars.color);\n\t * ```\n\t */\n\tselectDistinctOn(on: (PgColumn | SQLWrapper)[]): PgSelectBuilder<undefined>;\n\tselectDistinctOn<TSelection extends SelectedFields>(\n\t\ton: (PgColumn | SQLWrapper)[],\n\t\tfields: TSelection,\n\t): PgSelectBuilder<TSelection>;\n\tselectDistinctOn<TSelection extends SelectedFields>(\n\t\ton: (PgColumn | SQLWrapper)[],\n\t\tfields?: TSelection,\n\t): PgSelectBuilder<TSelection | undefined> {\n\t\treturn new PgSelectBuilder({\n\t\t\tfields: fields ?? undefined,\n\t\t\tsession: this.session,\n\t\t\tdialect: this.dialect,\n\t\t\tdistinct: { on },\n\t\t});\n\t}\n\n\t/**\n\t * Creates an update query.\n\t *\n\t * Calling this method without `.where()` clause will update all rows in a table. The `.where()` clause specifies which rows should be updated.\n\t *\n\t * Use `.set()` method to specify which values to update.\n\t *\n\t * See docs: {@link https://orm.drizzle.team/docs/update}\n\t *\n\t * @param table The table to update.\n\t *\n\t * @example\n\t *\n\t * ```ts\n\t * // Update all rows in the 'cars' table\n\t * await db.update(cars).set({ color: 'red' });\n\t *\n\t * // Update rows with filters and conditions\n\t * await db.update(cars).set({ color: 'red' }).where(eq(cars.brand, 'BMW'));\n\t *\n\t * // Update with returning clause\n\t * const updatedCar: Car[] = await db.update(cars)\n\t *   .set({ color: 'red' })\n\t *   .where(eq(cars.id, 1))\n\t *   .returning();\n\t * ```\n\t */\n\tupdate<TTable extends PgTable>(table: TTable): PgUpdateBuilder<TTable, TQueryResult> {\n\t\treturn new PgUpdateBuilder(table, this.session, this.dialect);\n\t}\n\n\t/**\n\t * Creates an insert query.\n\t *\n\t * Calling this method will create new rows in a table. Use `.values()` method to specify which values to insert.\n\t *\n\t * See docs: {@link https://orm.drizzle.team/docs/insert}\n\t *\n\t * @param table The table to insert into.\n\t *\n\t * @example\n\t *\n\t * ```ts\n\t * // Insert one row\n\t * await db.insert(cars).values({ brand: 'BMW' });\n\t *\n\t * // Insert multiple rows\n\t * await db.insert(cars).values([{ brand: 'BMW' }, { brand: 'Porsche' }]);\n\t *\n\t * // Insert with returning clause\n\t * const insertedCar: Car[] = await db.insert(cars)\n\t *   .values({ brand: 'BMW' })\n\t *   .returning();\n\t * ```\n\t */\n\tinsert<TTable extends PgTable>(table: TTable): PgInsertBuilder<TTable, TQueryResult> {\n\t\treturn new PgInsertBuilder(table, this.session, this.dialect);\n\t}\n\n\t/**\n\t * Creates a delete query.\n\t *\n\t * Calling this method without `.where()` clause will delete all rows in a table. The `.where()` clause specifies which rows should be deleted.\n\t *\n\t * See docs: {@link https://orm.drizzle.team/docs/delete}\n\t *\n\t * @param table The table to delete from.\n\t *\n\t * @example\n\t *\n\t * ```ts\n\t * // Delete all rows in the 'cars' table\n\t * await db.delete(cars);\n\t *\n\t * // Delete rows with filters and conditions\n\t * await db.delete(cars).where(eq(cars.color, 'green'));\n\t *\n\t * // Delete with returning clause\n\t * const deletedCar: Car[] = await db.delete(cars)\n\t *   .where(eq(cars.id, 1))\n\t *   .returning();\n\t * ```\n\t */\n\tdelete<TTable extends PgTable>(table: TTable): PgDeleteBase<TTable, TQueryResult> {\n\t\treturn new PgDeleteBase(table, this.session, this.dialect);\n\t}\n\n\trefreshMaterializedView<TView extends PgMaterializedView>(view: TView): PgRefreshMaterializedView<TQueryResult> {\n\t\treturn new PgRefreshMaterializedView(view, this.session, this.dialect);\n\t}\n\n\tprotected authToken?: NeonAuthToken;\n\n\texecute<TRow extends Record<string, unknown> = Record<string, unknown>>(\n\t\tquery: SQLWrapper | string,\n\t): PgRaw<PgQueryResultKind<TQueryResult, TRow>> {\n\t\tconst sequel = typeof query === 'string' ? sql.raw(query) : query.getSQL();\n\t\tconst builtQuery = this.dialect.sqlToQuery(sequel);\n\t\tconst prepared = this.session.prepareQuery<\n\t\t\tPreparedQueryConfig & { execute: PgQueryResultKind<TQueryResult, TRow> }\n\t\t>(\n\t\t\tbuiltQuery,\n\t\t\tundefined,\n\t\t\tundefined,\n\t\t\tfalse,\n\t\t);\n\t\treturn new PgRaw(\n\t\t\t() => prepared.execute(undefined, this.authToken),\n\t\t\tsequel,\n\t\t\tbuiltQuery,\n\t\t\t(result) => prepared.mapResult(result, true),\n\t\t);\n\t}\n\n\ttransaction<T>(\n\t\ttransaction: (tx: PgTransaction<TQueryResult, TFullSchema, TSchema>) => Promise<T>,\n\t\tconfig?: PgTransactionConfig,\n\t): Promise<T> {\n\t\treturn this.session.transaction(transaction, config);\n\t}\n}\n\nexport type PgWithReplicas<Q> = Q & { $primary: Q };\n\nexport const withReplicas = <\n\tHKT extends PgQueryResultHKT,\n\tTFullSchema extends Record<string, unknown>,\n\tTSchema extends TablesRelationalConfig,\n\tQ extends PgDatabase<\n\t\tHKT,\n\t\tTFullSchema,\n\t\tTSchema extends Record<string, unknown> ? ExtractTablesWithRelations<TFullSchema> : TSchema\n\t>,\n>(\n\tprimary: Q,\n\treplicas: [Q, ...Q[]],\n\tgetReplica: (replicas: Q[]) => Q = () => replicas[Math.floor(Math.random() * replicas.length)]!,\n): PgWithReplicas<Q> => {\n\tconst select: Q['select'] = (...args: []) => getReplica(replicas).select(...args);\n\tconst selectDistinct: Q['selectDistinct'] = (...args: []) => getReplica(replicas).selectDistinct(...args);\n\tconst selectDistinctOn: Q['selectDistinctOn'] = (...args: [any]) => getReplica(replicas).selectDistinctOn(...args);\n\tconst $count: Q['$count'] = (...args: [any]) => getReplica(replicas).$count(...args);\n\tconst _with: Q['with'] = (...args: any) => getReplica(replicas).with(...args);\n\tconst $with: Q['$with'] = (arg: any) => getReplica(replicas).$with(arg) as any;\n\n\tconst update: Q['update'] = (...args: [any]) => primary.update(...args);\n\tconst insert: Q['insert'] = (...args: [any]) => primary.insert(...args);\n\tconst $delete: Q['delete'] = (...args: [any]) => primary.delete(...args);\n\tconst execute: Q['execute'] = (...args: [any]) => primary.execute(...args);\n\tconst transaction: Q['transaction'] = (...args: [any]) => primary.transaction(...args);\n\tconst refreshMaterializedView: Q['refreshMaterializedView'] = (...args: [any]) =>\n\t\tprimary.refreshMaterializedView(...args);\n\n\treturn {\n\t\t...primary,\n\t\tupdate,\n\t\tinsert,\n\t\tdelete: $delete,\n\t\texecute,\n\t\ttransaction,\n\t\trefreshMaterializedView,\n\t\t$primary: primary,\n\t\tselect,\n\t\tselectDistinct,\n\t\tselectDistinctOn,\n\t\t$count,\n\t\t$with,\n\t\twith: _with,\n\t\tget query() {\n\t\t\treturn getReplica(replicas).query;\n\t\t},\n\t};\n};\n", "import type { WithCacheConfig } from '~/cache/core/types.ts';\nimport { entityKind } from '~/entity.ts';\nimport type { PgDialect } from '~/pg-core/dialect.ts';\nimport type {\n\tPgPreparedQuery,\n\tPgQueryResultHKT,\n\tPgQueryResultKind,\n\tPgSession,\n\tPreparedQueryConfig,\n} from '~/pg-core/session.ts';\nimport type { PgTable } from '~/pg-core/table.ts';\nimport type { TypedQueryBuilder } from '~/query-builders/query-builder.ts';\nimport type { SelectResultFields } from '~/query-builders/select.types.ts';\nimport { QueryPromise } from '~/query-promise.ts';\nimport type { RunnableQuery } from '~/runnable-query.ts';\nimport { SelectionProxyHandler } from '~/selection-proxy.ts';\nimport type { ColumnsSelection, Query, SQL, SQLWrapper } from '~/sql/sql.ts';\nimport type { Subquery } from '~/subquery.ts';\nimport { getTableName, Table } from '~/table.ts';\nimport { tracer } from '~/tracing.ts';\nimport { type NeonAuthToken, orderSelectedFields } from '~/utils.ts';\nimport type { PgColumn } from '../columns/common.ts';\nimport { extractUsedTable } from '../utils.ts';\nimport type { SelectedFieldsFlat, SelectedFieldsOrdered } from './select.types.ts';\n\nexport type PgDeleteWithout<\n\tT extends AnyPgDeleteBase,\n\tTDynamic extends boolean,\n\tK extends keyof T & string,\n> = TDynamic extends true ? T\n\t: Omit<\n\t\tPgDeleteBase<\n\t\t\tT['_']['table'],\n\t\t\tT['_']['queryResult'],\n\t\t\tT['_']['selectedFields'],\n\t\t\tT['_']['returning'],\n\t\t\tTDynamic,\n\t\t\tT['_']['excludedMethods'] | K\n\t\t>,\n\t\tT['_']['excludedMethods'] | K\n\t>;\n\nexport type PgDelete<\n\tTTable extends PgTable = PgTable,\n\tTQueryResult extends PgQueryResultHKT = PgQueryResultHKT,\n\tTSelectedFields extends ColumnsSelection | undefined = undefined,\n\tTReturning extends Record<string, unknown> | undefined = Record<string, unknown> | undefined,\n> = PgDeleteBase<TTable, TQueryResult, TSelectedFields, TReturning, true, never>;\n\nexport interface PgDeleteConfig {\n\twhere?: SQL | undefined;\n\ttable: PgTable;\n\treturningFields?: SelectedFieldsFlat;\n\treturning?: SelectedFieldsOrdered;\n\twithList?: Subquery[];\n}\n\nexport type PgDeleteReturningAll<\n\tT extends AnyPgDeleteBase,\n\tTDynamic extends boolean,\n> = PgDeleteWithout<\n\tPgDeleteBase<\n\t\tT['_']['table'],\n\t\tT['_']['queryResult'],\n\t\tT['_']['table']['_']['columns'],\n\t\tT['_']['table']['$inferSelect'],\n\t\tTDynamic,\n\t\tT['_']['excludedMethods']\n\t>,\n\tTDynamic,\n\t'returning'\n>;\n\nexport type PgDeleteReturning<\n\tT extends AnyPgDeleteBase,\n\tTDynamic extends boolean,\n\tTSelectedFields extends SelectedFieldsFlat,\n> = PgDeleteWithout<\n\tPgDeleteBase<\n\t\tT['_']['table'],\n\t\tT['_']['queryResult'],\n\t\tTSelectedFields,\n\t\tSelectResultFields<TSelectedFields>,\n\t\tTDynamic,\n\t\tT['_']['excludedMethods']\n\t>,\n\tTDynamic,\n\t'returning'\n>;\n\nexport type PgDeletePrepare<T extends AnyPgDeleteBase> = PgPreparedQuery<\n\tPreparedQueryConfig & {\n\t\texecute: T['_']['returning'] extends undefined ? PgQueryResultKind<T['_']['queryResult'], never>\n\t\t\t: T['_']['returning'][];\n\t}\n>;\n\nexport type PgDeleteDynamic<T extends AnyPgDeleteBase> = PgDelete<\n\tT['_']['table'],\n\tT['_']['queryResult'],\n\tT['_']['selectedFields'],\n\tT['_']['returning']\n>;\n\nexport type AnyPgDeleteBase = PgDeleteBase<any, any, any, any, any, any>;\n\nexport interface PgDeleteBase<\n\tTTable extends PgTable,\n\tTQueryResult extends PgQueryResultHKT,\n\tTSelectedFields extends ColumnsSelection | undefined = undefined,\n\tTReturning extends Record<string, unknown> | undefined = undefined,\n\tTDynamic extends boolean = false,\n\tTExcludedMethods extends string = never,\n> extends\n\tTypedQueryBuilder<\n\t\tTSelectedFields,\n\t\tTReturning extends undefined ? PgQueryResultKind<TQueryResult, never> : TReturning[]\n\t>,\n\tQueryPromise<TReturning extends undefined ? PgQueryResultKind<TQueryResult, never> : TReturning[]>,\n\tRunnableQuery<TReturning extends undefined ? PgQueryResultKind<TQueryResult, never> : TReturning[], 'pg'>,\n\tSQLWrapper\n{\n\treadonly _: {\n\t\treadonly dialect: 'pg';\n\t\treadonly table: TTable;\n\t\treadonly queryResult: TQueryResult;\n\t\treadonly selectedFields: TSelectedFields;\n\t\treadonly returning: TReturning;\n\t\treadonly dynamic: TDynamic;\n\t\treadonly excludedMethods: TExcludedMethods;\n\t\treadonly result: TReturning extends undefined ? PgQueryResultKind<TQueryResult, never> : TReturning[];\n\t};\n}\n\nexport class PgDeleteBase<\n\tTTable extends PgTable,\n\tTQueryResult extends PgQueryResultHKT,\n\tTSelectedFields extends ColumnsSelection | undefined = undefined,\n\tTReturning extends Record<string, unknown> | undefined = undefined,\n\tTDynamic extends boolean = false,\n\t// eslint-disable-next-line @typescript-eslint/no-unused-vars\n\tTExcludedMethods extends string = never,\n> extends QueryPromise<TReturning extends undefined ? PgQueryResultKind<TQueryResult, never> : TReturning[]>\n\timplements\n\t\tTypedQueryBuilder<\n\t\t\tTSelectedFields,\n\t\t\tTReturning extends undefined ? PgQueryResultKind<TQueryResult, never> : TReturning[]\n\t\t>,\n\t\tRunnableQuery<TReturning extends undefined ? PgQueryResultKind<TQueryResult, never> : TReturning[], 'pg'>,\n\t\tSQLWrapper\n{\n\tstatic override readonly [entityKind]: string = 'PgDelete';\n\n\tprivate config: PgDeleteConfig;\n\tprotected cacheConfig?: WithCacheConfig;\n\n\tconstructor(\n\t\ttable: TTable,\n\t\tprivate session: PgSession,\n\t\tprivate dialect: PgDialect,\n\t\twithList?: Subquery[],\n\t) {\n\t\tsuper();\n\t\tthis.config = { table, withList };\n\t}\n\n\t/**\n\t * Adds a `where` clause to the query.\n\t *\n\t * Calling this method will delete only those rows that fulfill a specified condition.\n\t *\n\t * See docs: {@link https://orm.drizzle.team/docs/delete}\n\t *\n\t * @param where the `where` clause.\n\t *\n\t * @example\n\t * You can use conditional operators and `sql function` to filter the rows to be deleted.\n\t *\n\t * ```ts\n\t * // Delete all cars with green color\n\t * await db.delete(cars).where(eq(cars.color, 'green'));\n\t * // or\n\t * await db.delete(cars).where(sql`${cars.color} = 'green'`)\n\t * ```\n\t *\n\t * You can logically combine conditional operators with `and()` and `or()` operators:\n\t *\n\t * ```ts\n\t * // Delete all BMW cars with a green color\n\t * await db.delete(cars).where(and(eq(cars.color, 'green'), eq(cars.brand, 'BMW')));\n\t *\n\t * // Delete all cars with the green or blue color\n\t * await db.delete(cars).where(or(eq(cars.color, 'green'), eq(cars.color, 'blue')));\n\t * ```\n\t */\n\twhere(where: SQL | undefined): PgDeleteWithout<this, TDynamic, 'where'> {\n\t\tthis.config.where = where;\n\t\treturn this as any;\n\t}\n\n\t/**\n\t * Adds a `returning` clause to the query.\n\t *\n\t * Calling this method will return the specified fields of the deleted rows. If no fields are specified, all fields will be returned.\n\t *\n\t * See docs: {@link https://orm.drizzle.team/docs/delete#delete-with-return}\n\t *\n\t * @example\n\t * ```ts\n\t * // Delete all cars with the green color and return all fields\n\t * const deletedCars: Car[] = await db.delete(cars)\n\t *   .where(eq(cars.color, 'green'))\n\t *   .returning();\n\t *\n\t * // Delete all cars with the green color and return only their id and brand fields\n\t * const deletedCarsIdsAndBrands: { id: number, brand: string }[] = await db.delete(cars)\n\t *   .where(eq(cars.color, 'green'))\n\t *   .returning({ id: cars.id, brand: cars.brand });\n\t * ```\n\t */\n\treturning(): PgDeleteReturningAll<this, TDynamic>;\n\treturning<TSelectedFields extends SelectedFieldsFlat>(\n\t\tfields: TSelectedFields,\n\t): PgDeleteReturning<this, TDynamic, TSelectedFields>;\n\treturning(\n\t\tfields: SelectedFieldsFlat = this.config.table[Table.Symbol.Columns],\n\t): PgDeleteReturning<this, TDynamic, any> {\n\t\tthis.config.returningFields = fields;\n\t\tthis.config.returning = orderSelectedFields<PgColumn>(fields);\n\t\treturn this as any;\n\t}\n\n\t/** @internal */\n\tgetSQL(): SQL {\n\t\treturn this.dialect.buildDeleteQuery(this.config);\n\t}\n\n\ttoSQL(): Query {\n\t\tconst { typings: _typings, ...rest } = this.dialect.sqlToQuery(this.getSQL());\n\t\treturn rest;\n\t}\n\n\t/** @internal */\n\t_prepare(name?: string): PgDeletePrepare<this> {\n\t\treturn tracer.startActiveSpan('drizzle.prepareQuery', () => {\n\t\t\treturn this.session.prepareQuery<\n\t\t\t\tPreparedQueryConfig & {\n\t\t\t\t\texecute: TReturning extends undefined ? PgQueryResultKind<TQueryResult, never> : TReturning[];\n\t\t\t\t}\n\t\t\t>(this.dialect.sqlToQuery(this.getSQL()), this.config.returning, name, true, undefined, {\n\t\t\t\ttype: 'delete',\n\t\t\t\ttables: extractUsedTable(this.config.table),\n\t\t\t}, this.cacheConfig);\n\t\t});\n\t}\n\n\tprepare(name: string): PgDeletePrepare<this> {\n\t\treturn this._prepare(name);\n\t}\n\n\tprivate authToken?: NeonAuthToken;\n\t/** @internal */\n\tsetToken(token?: NeonAuthToken) {\n\t\tthis.authToken = token;\n\t\treturn this;\n\t}\n\n\toverride execute: ReturnType<this['prepare']>['execute'] = (placeholderValues) => {\n\t\treturn tracer.startActiveSpan('drizzle.operation', () => {\n\t\t\treturn this._prepare().execute(placeholderValues, this.authToken);\n\t\t});\n\t};\n\n\t/** @internal */\n\tgetSelectedFields(): this['_']['selectedFields'] {\n\t\treturn (\n\t\t\tthis.config.returningFields\n\t\t\t\t? new Proxy(\n\t\t\t\t\tthis.config.returningFields,\n\t\t\t\t\tnew SelectionProxyHandler({\n\t\t\t\t\t\talias: getTableName(this.config.table),\n\t\t\t\t\t\tsqlAliasedBehavior: 'alias',\n\t\t\t\t\t\tsqlBehavior: 'error',\n\t\t\t\t\t}),\n\t\t\t\t)\n\t\t\t\t: undefined\n\t\t) as this['_']['selectedFields'];\n\t}\n\n\t$dynamic(): PgDeleteDynamic<this> {\n\t\treturn this as any;\n\t}\n}\n", "import { entityKind } from '~/entity.ts';\n\nexport abstract class QueryPromise<T> implements Promise<T> {\n\tstatic readonly [entityKind]: string = 'QueryPromise';\n\n\t[Symbol.toStringTag] = 'QueryPromise';\n\n\tcatch<TResult = never>(\n\t\tonRejected?: ((reason: any) => TResult | PromiseLike<TResult>) | null | undefined,\n\t): Promise<T | TResult> {\n\t\treturn this.then(undefined, onRejected);\n\t}\n\n\tfinally(onFinally?: (() => void) | null | undefined): Promise<T> {\n\t\treturn this.then(\n\t\t\t(value) => {\n\t\t\t\tonFinally?.();\n\t\t\t\treturn value;\n\t\t\t},\n\t\t\t(reason) => {\n\t\t\t\tonFinally?.();\n\t\t\t\tthrow reason;\n\t\t\t},\n\t\t);\n\t}\n\n\tthen<TResult1 = T, TResult2 = never>(\n\t\tonFulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null,\n\t\tonRejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null,\n\t): Promise<TResult1 | TResult2> {\n\t\treturn this.execute().then(onFulfilled, onRejected);\n\t}\n\n\tabstract execute(): Promise<T>;\n}\n", "import { ColumnAliasProxyHandler, TableAliasProxyHandler } from './alias.ts';\nimport { Column } from './column.ts';\nimport { entityKind, is } from './entity.ts';\nimport { SQL, View } from './sql/sql.ts';\nimport { Subquery } from './subquery.ts';\nimport { ViewBaseConfig } from './view-common.ts';\n\nexport class SelectionProxyHandler<T extends Subquery | Record<string, unknown> | View>\n\timplements ProxyHandler<Subquery | Record<string, unknown> | View>\n{\n\tstatic readonly [entityKind]: string = 'SelectionProxyHandler';\n\n\tprivate config: {\n\t\t/**\n\t\t * Table alias for the columns\n\t\t */\n\t\talias?: string;\n\t\t/**\n\t\t * What to do when a field is an instance of `SQL.Aliased` and it's not a selection field (from a subquery)\n\t\t *\n\t\t * `sql` - return the underlying SQL expression\n\t\t *\n\t\t * `alias` - return the field alias\n\t\t */\n\t\tsqlAliasedBehavior: 'sql' | 'alias';\n\t\t/**\n\t\t * What to do when a field is an instance of `SQL` and it doesn't have an alias declared\n\t\t *\n\t\t * `sql` - return the underlying SQL expression\n\t\t *\n\t\t * `error` - return a DrizzleTypeError on type level and throw an error on runtime\n\t\t */\n\t\tsqlBehavior: 'sql' | 'error';\n\n\t\t/**\n\t\t * Whether to replace the original name of the column with the alias\n\t\t * Should be set to `true` for views creation\n\t\t * @default false\n\t\t */\n\t\treplaceOriginalName?: boolean;\n\t};\n\n\tconstructor(config: SelectionProxyHandler<T>['config']) {\n\t\tthis.config = { ...config };\n\t}\n\n\tget(subquery: T, prop: string | symbol): any {\n\t\tif (prop === '_') {\n\t\t\treturn {\n\t\t\t\t...subquery['_' as keyof typeof subquery],\n\t\t\t\tselectedFields: new Proxy(\n\t\t\t\t\t(subquery as Subquery)._.selectedFields,\n\t\t\t\t\tthis as ProxyHandler<Record<string, unknown>>,\n\t\t\t\t),\n\t\t\t};\n\t\t}\n\n\t\tif (prop === ViewBaseConfig) {\n\t\t\treturn {\n\t\t\t\t...subquery[ViewBaseConfig as keyof typeof subquery],\n\t\t\t\tselectedFields: new Proxy(\n\t\t\t\t\t(subquery as View)[ViewBaseConfig].selectedFields,\n\t\t\t\t\tthis as ProxyHandler<Record<string, unknown>>,\n\t\t\t\t),\n\t\t\t};\n\t\t}\n\n\t\tif (typeof prop === 'symbol') {\n\t\t\treturn subquery[prop as keyof typeof subquery];\n\t\t}\n\n\t\tconst columns = is(subquery, Subquery)\n\t\t\t? subquery._.selectedFields\n\t\t\t: is(subquery, View)\n\t\t\t? subquery[ViewBaseConfig].selectedFields\n\t\t\t: subquery;\n\t\tconst value: unknown = columns[prop as keyof typeof columns];\n\n\t\tif (is(value, SQL.Aliased)) {\n\t\t\t// Never return the underlying SQL expression for a field previously selected in a subquery\n\t\t\tif (this.config.sqlAliasedBehavior === 'sql' && !value.isSelectionField) {\n\t\t\t\treturn value.sql;\n\t\t\t}\n\n\t\t\tconst newValue = value.clone();\n\t\t\tnewValue.isSelectionField = true;\n\t\t\treturn newValue;\n\t\t}\n\n\t\tif (is(value, SQL)) {\n\t\t\tif (this.config.sqlBehavior === 'sql') {\n\t\t\t\treturn value;\n\t\t\t}\n\n\t\t\tthrow new Error(\n\t\t\t\t`You tried to reference \"${prop}\" field from a subquery, which is a raw SQL field, but it doesn't have an alias declared. Please add an alias to the field using \".as('alias')\" method.`,\n\t\t\t);\n\t\t}\n\n\t\tif (is(value, Column)) {\n\t\t\tif (this.config.alias) {\n\t\t\t\treturn new Proxy(\n\t\t\t\t\tvalue,\n\t\t\t\t\tnew ColumnAliasProxyHandler(\n\t\t\t\t\t\tnew Proxy(\n\t\t\t\t\t\t\tvalue.table,\n\t\t\t\t\t\t\tnew TableAliasProxyHandler(this.config.alias, this.config.replaceOriginalName ?? false),\n\t\t\t\t\t\t),\n\t\t\t\t\t),\n\t\t\t\t);\n\t\t\t}\n\t\t\treturn value;\n\t\t}\n\n\t\tif (typeof value !== 'object' || value === null) {\n\t\t\treturn value;\n\t\t}\n\n\t\treturn new Proxy(value, new SelectionProxyHandler(this.config));\n\t}\n}\n", "import type { AnyColumn } from './column.ts';\nimport { Column } from './column.ts';\nimport { entityKind, is } from './entity.ts';\nimport type { Relation } from './relations.ts';\nimport type { View } from './sql/sql.ts';\nimport { SQL, sql } from './sql/sql.ts';\nimport { Table } from './table.ts';\nimport { ViewBaseConfig } from './view-common.ts';\n\nexport class ColumnAliasProxyHandler<TColumn extends Column> implements ProxyHandler<TColumn> {\n\tstatic readonly [entityKind]: string = 'ColumnAliasProxyHandler';\n\n\tconstructor(private table: Table | View) {}\n\n\tget(columnObj: TColumn, prop: string | symbol): any {\n\t\tif (prop === 'table') {\n\t\t\treturn this.table;\n\t\t}\n\n\t\treturn columnObj[prop as keyof TColumn];\n\t}\n}\n\nexport class TableAliasProxyHandler<T extends Table | View> implements ProxyHandler<T> {\n\tstatic readonly [entityKind]: string = 'TableAliasProxyHandler';\n\n\tconstructor(private alias: string, private replaceOriginalName: boolean) {}\n\n\tget(target: T, prop: string | symbol): any {\n\t\tif (prop === Table.Symbol.IsAlias) {\n\t\t\treturn true;\n\t\t}\n\n\t\tif (prop === Table.Symbol.Name) {\n\t\t\treturn this.alias;\n\t\t}\n\n\t\tif (this.replaceOriginalName && prop === Table.Symbol.OriginalName) {\n\t\t\treturn this.alias;\n\t\t}\n\n\t\tif (prop === ViewBaseConfig) {\n\t\t\treturn {\n\t\t\t\t...target[ViewBaseConfig as keyof typeof target],\n\t\t\t\tname: this.alias,\n\t\t\t\tisAlias: true,\n\t\t\t};\n\t\t}\n\n\t\tif (prop === Table.Symbol.Columns) {\n\t\t\tconst columns = (target as Table)[Table.Symbol.Columns];\n\t\t\tif (!columns) {\n\t\t\t\treturn columns;\n\t\t\t}\n\n\t\t\tconst proxiedColumns: { [key: string]: any } = {};\n\n\t\t\tObject.keys(columns).map((key) => {\n\t\t\t\tproxiedColumns[key] = new Proxy(\n\t\t\t\t\tcolumns[key]!,\n\t\t\t\t\tnew ColumnAliasProxyHandler(new Proxy(target, this)),\n\t\t\t\t);\n\t\t\t});\n\n\t\t\treturn proxiedColumns;\n\t\t}\n\n\t\tconst value = target[prop as keyof typeof target];\n\t\tif (is(value, Column)) {\n\t\t\treturn new Proxy(value as AnyColumn, new ColumnAliasProxyHandler(new Proxy(target, this)));\n\t\t}\n\n\t\treturn value;\n\t}\n}\n\nexport class RelationTableAliasProxyHandler<T extends Relation> implements ProxyHandler<T> {\n\tstatic readonly [entityKind]: string = 'RelationTableAliasProxyHandler';\n\n\tconstructor(private alias: string) {}\n\n\tget(target: T, prop: string | symbol): any {\n\t\tif (prop === 'sourceTable') {\n\t\t\treturn aliasedTable(target.sourceTable, this.alias);\n\t\t}\n\n\t\treturn target[prop as keyof typeof target];\n\t}\n}\n\nexport function aliasedTable<T extends Table | View>(\n\ttable: T,\n\ttableAlias: string,\n): T {\n\treturn new Proxy(table, new TableAliasProxyHandler(tableAlias, false)) as any;\n}\n\nexport function aliasedRelation<T extends Relation>(relation: T, tableAlias: string): T {\n\treturn new Proxy(relation, new RelationTableAliasProxyHandler(tableAlias));\n}\n\nexport function aliasedTableColumn<T extends AnyColumn>(column: T, tableAlias: string): T {\n\treturn new Proxy(\n\t\tcolumn,\n\t\tnew ColumnAliasProxyHandler(new Proxy(column.table, new TableAliasProxyHandler(tableAlias, false))),\n\t);\n}\n\nexport function mapColumnsInAliasedSQLToAlias(query: SQL.Aliased, alias: string): SQL.Aliased {\n\treturn new SQL.Aliased(mapColumnsInSQLToAlias(query.sql, alias), query.fieldAlias);\n}\n\nexport function mapColumnsInSQLToAlias(query: SQL, alias: string): SQL {\n\treturn sql.join(query.queryChunks.map((c) => {\n\t\tif (is(c, Column)) {\n\t\t\treturn aliasedTableColumn(c, alias);\n\t\t}\n\t\tif (is(c, SQL)) {\n\t\t\treturn mapColumnsInSQLToAlias(c, alias);\n\t\t}\n\t\tif (is(c, SQL.Aliased)) {\n\t\t\treturn mapColumnsInAliasedSQLToAlias(c, alias);\n\t\t}\n\t\treturn c;\n\t}));\n}\n", "import type {\n\tColumnBuilderBaseConfig,\n\tColumnBuilderRuntimeConfig,\n\tColumnDataType,\n\tGeneratedColumnConfig,\n\tGeneratedIdentityConfig,\n} from './column-builder.ts';\nimport { entityKind } from './entity.ts';\nimport type { DriverValueMapper, SQL, SQLWrapper } from './sql/sql.ts';\nimport type { Table } from './table.ts';\nimport type { Update } from './utils.ts';\n\nexport interface ColumnBaseConfig<\n\tTDataType extends ColumnDataType,\n\tTColumnType extends string,\n> extends ColumnBuilderBaseConfig<TDataType, TColumnType> {\n\ttableName: string;\n\tnotNull: boolean;\n\thasDefault: boolean;\n\tisPrimaryKey: boolean;\n\tisAutoincrement: boolean;\n\thasRuntimeDefault: boolean;\n}\n\nexport type ColumnTypeConfig<T extends ColumnBaseConfig<ColumnDataType, string>, TTypeConfig extends object> = T & {\n\tbrand: 'Column';\n\ttableName: T['tableName'];\n\tname: T['name'];\n\tdataType: T['dataType'];\n\tcolumnType: T['columnType'];\n\tdata: T['data'];\n\tdriverParam: T['driverParam'];\n\tnotNull: T['notNull'];\n\thasDefault: T['hasDefault'];\n\tisPrimaryKey: T['isPrimaryKey'];\n\tisAutoincrement: T['isAutoincrement'];\n\thasRuntimeDefault: T['hasRuntimeDefault'];\n\tenumValues: T['enumValues'];\n\tbaseColumn: T extends { baseColumn: infer U } ? U : unknown;\n\tgenerated: GeneratedColumnConfig<T['data']> | undefined;\n\tidentity: undefined | 'always' | 'byDefault';\n} & TTypeConfig;\n\nexport type ColumnRuntimeConfig<TData, TRuntimeConfig extends object> = ColumnBuilderRuntimeConfig<\n\tTData,\n\tTRuntimeConfig\n>;\n\nexport interface Column<\n\tT extends ColumnBaseConfig<ColumnDataType, string> = ColumnBaseConfig<ColumnDataType, string>,\n\t// eslint-disable-next-line @typescript-eslint/no-unused-vars\n\tTRuntimeConfig extends object = object,\n\t// eslint-disable-next-line @typescript-eslint/no-unused-vars\n\tTTypeConfig extends object = object,\n> extends DriverValueMapper<T['data'], T['driverParam']>, SQLWrapper {\n\t// SQLWrapper runtime implementation is defined in 'sql/sql.ts'\n}\n/*\n\t`Column` only accepts a full `ColumnConfig` as its generic.\n\tTo infer parts of the config, use `AnyColumn` that accepts a partial config.\n\tSee `GetColumnData` for example usage of inferring.\n*/\nexport abstract class Column<\n\tT extends ColumnBaseConfig<ColumnDataType, string> = ColumnBaseConfig<ColumnDataType, string>,\n\tTRuntimeConfig extends object = object,\n\tTTypeConfig extends object = object,\n> implements DriverValueMapper<T['data'], T['driverParam']>, SQLWrapper {\n\tstatic readonly [entityKind]: string = 'Column';\n\n\tdeclare readonly _: ColumnTypeConfig<T, TTypeConfig>;\n\n\treadonly name: string;\n\treadonly keyAsName: boolean;\n\treadonly primary: boolean;\n\treadonly notNull: boolean;\n\treadonly default: T['data'] | SQL | undefined;\n\treadonly defaultFn: (() => T['data'] | SQL) | undefined;\n\treadonly onUpdateFn: (() => T['data'] | SQL) | undefined;\n\treadonly hasDefault: boolean;\n\treadonly isUnique: boolean;\n\treadonly uniqueName: string | undefined;\n\treadonly uniqueType: string | undefined;\n\treadonly dataType: T['dataType'];\n\treadonly columnType: T['columnType'];\n\treadonly enumValues: T['enumValues'] = undefined;\n\treadonly generated: GeneratedColumnConfig<T['data']> | undefined = undefined;\n\treadonly generatedIdentity: GeneratedIdentityConfig | undefined = undefined;\n\n\tprotected config: ColumnRuntimeConfig<T['data'], TRuntimeConfig>;\n\n\tconstructor(\n\t\treadonly table: Table,\n\t\tconfig: ColumnRuntimeConfig<T['data'], TRuntimeConfig>,\n\t) {\n\t\tthis.config = config;\n\t\tthis.name = config.name;\n\t\tthis.keyAsName = config.keyAsName;\n\t\tthis.notNull = config.notNull;\n\t\tthis.default = config.default;\n\t\tthis.defaultFn = config.defaultFn;\n\t\tthis.onUpdateFn = config.onUpdateFn;\n\t\tthis.hasDefault = config.hasDefault;\n\t\tthis.primary = config.primaryKey;\n\t\tthis.isUnique = config.isUnique;\n\t\tthis.uniqueName = config.uniqueName;\n\t\tthis.uniqueType = config.uniqueType;\n\t\tthis.dataType = config.dataType as T['dataType'];\n\t\tthis.columnType = config.columnType;\n\t\tthis.generated = config.generated;\n\t\tthis.generatedIdentity = config.generatedIdentity;\n\t}\n\n\tabstract getSQLType(): string;\n\n\tmapFromDriverValue(value: unknown): unknown {\n\t\treturn value;\n\t}\n\n\tmapToDriverValue(value: unknown): unknown {\n\t\treturn value;\n\t}\n\n\t// ** @internal */\n\tshouldDisableInsert(): boolean {\n\t\treturn this.config.generated !== undefined && this.config.generated.type !== 'byDefault';\n\t}\n}\n\nexport type UpdateColConfig<\n\tT extends ColumnBaseConfig<ColumnDataType, string>,\n\tTUpdate extends Partial<ColumnBaseConfig<ColumnDataType, string>>,\n> = Update<T, TUpdate>;\n\nexport type AnyColumn<TPartial extends Partial<ColumnBaseConfig<ColumnDataType, string>> = {}> = Column<\n\tRequired<Update<ColumnBaseConfig<ColumnDataType, string>, TPartial>>\n>;\n\nexport type GetColumnData<TColumn extends Column, TInferMode extends 'query' | 'raw' = 'query'> =\n\t// dprint-ignore\n\tTInferMode extends 'raw' // Raw mode\n\t\t? TColumn['_']['data'] // Just return the underlying type\n\t\t: TColumn['_']['notNull'] extends true // Query mode\n\t\t? TColumn['_']['data'] // Query mode, not null\n\t\t: TColumn['_']['data'] | null; // Query mode, nullable\n\nexport type InferColumnsDataTypes<TColumns extends Record<string, Column>> = {\n\t[Key in keyof TColumns]: GetColumnData<TColumns[Key], 'query'>;\n};\n", "import type { CasingCache } from '~/casing.ts';\nimport { entityKind, is } from '~/entity.ts';\nimport { isPgEnum } from '~/pg-core/columns/enum.ts';\nimport type { SelectResult } from '~/query-builders/select.types.ts';\nimport { Subquery } from '~/subquery.ts';\nimport { tracer } from '~/tracing.ts';\nimport type { Assume, Equal } from '~/utils.ts';\nimport { ViewBaseConfig } from '~/view-common.ts';\nimport type { AnyColumn } from '../column.ts';\nimport { Column } from '../column.ts';\nimport { IsAlias, Table } from '../table.ts';\n\n/**\n * This class is used to indicate a primitive param value that is used in `sql` tag.\n * It is only used on type level and is never instantiated at runtime.\n * If you see a value of this type in the code, its runtime value is actually the primitive param value.\n */\nexport class FakePrimitiveParam {\n\tstatic readonly [entityKind]: string = 'FakePrimitiveParam';\n}\n\nexport type Chunk =\n\t| string\n\t| Table\n\t| View\n\t| AnyColumn\n\t| Name\n\t| Param\n\t| Placeholder\n\t| SQL;\n\nexport interface BuildQueryConfig {\n\tcasing: CasingCache;\n\tescapeName(name: string): string;\n\tescapeParam(num: number, value: unknown): string;\n\tescapeString(str: string): string;\n\tprepareTyping?: (encoder: DriverValueEncoder<unknown, unknown>) => QueryTypingsValue;\n\tparamStartIndex?: { value: number };\n\tinlineParams?: boolean;\n\tinvokeSource?: 'indexes' | undefined;\n}\n\nexport type QueryTypingsValue = 'json' | 'decimal' | 'time' | 'timestamp' | 'uuid' | 'date' | 'none';\n\nexport interface Query {\n\tsql: string;\n\tparams: unknown[];\n}\n\nexport interface QueryWithTypings extends Query {\n\ttypings?: QueryTypingsValue[];\n}\n\n/**\n * Any value that implements the `getSQL` method. The implementations include:\n * - `Table`\n * - `Column`\n * - `View`\n * - `Subquery`\n * - `SQL`\n * - `SQL.Aliased`\n * - `Placeholder`\n * - `Param`\n */\nexport interface SQLWrapper {\n\tgetSQL(): SQL;\n\tshouldOmitSQLParens?(): boolean;\n}\n\nexport function isSQLWrapper(value: unknown): value is SQLWrapper {\n\treturn value !== null && value !== undefined && typeof (value as any).getSQL === 'function';\n}\n\nfunction mergeQueries(queries: QueryWithTypings[]): QueryWithTypings {\n\tconst result: QueryWithTypings = { sql: '', params: [] };\n\tfor (const query of queries) {\n\t\tresult.sql += query.sql;\n\t\tresult.params.push(...query.params);\n\t\tif (query.typings?.length) {\n\t\t\tif (!result.typings) {\n\t\t\t\tresult.typings = [];\n\t\t\t}\n\t\t\tresult.typings.push(...query.typings);\n\t\t}\n\t}\n\treturn result;\n}\n\nexport class StringChunk implements SQLWrapper {\n\tstatic readonly [entityKind]: string = 'StringChunk';\n\n\treadonly value: string[];\n\n\tconstructor(value: string | string[]) {\n\t\tthis.value = Array.isArray(value) ? value : [value];\n\t}\n\n\tgetSQL(): SQL<unknown> {\n\t\treturn new SQL([this]);\n\t}\n}\n\nexport class SQL<T = unknown> implements SQLWrapper {\n\tstatic readonly [entityKind]: string = 'SQL';\n\n\tdeclare _: {\n\t\tbrand: 'SQL';\n\t\ttype: T;\n\t};\n\n\t/** @internal */\n\tdecoder: DriverValueDecoder<T, any> = noopDecoder;\n\tprivate shouldInlineParams = false;\n\n\t/** @internal */\n\tusedTables: string[] = [];\n\n\tconstructor(readonly queryChunks: SQLChunk[]) {\n\t\tfor (const chunk of queryChunks) {\n\t\t\tif (is(chunk, Table)) {\n\t\t\t\tconst schemaName = chunk[Table.Symbol.Schema];\n\n\t\t\t\tthis.usedTables.push(\n\t\t\t\t\tschemaName === undefined\n\t\t\t\t\t\t? chunk[Table.Symbol.Name]\n\t\t\t\t\t\t: schemaName + '.' + chunk[Table.Symbol.Name],\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t}\n\n\tappend(query: SQL): this {\n\t\tthis.queryChunks.push(...query.queryChunks);\n\t\treturn this;\n\t}\n\n\ttoQuery(config: BuildQueryConfig): QueryWithTypings {\n\t\treturn tracer.startActiveSpan('drizzle.buildSQL', (span) => {\n\t\t\tconst query = this.buildQueryFromSourceParams(this.queryChunks, config);\n\t\t\tspan?.setAttributes({\n\t\t\t\t'drizzle.query.text': query.sql,\n\t\t\t\t'drizzle.query.params': JSON.stringify(query.params),\n\t\t\t});\n\t\t\treturn query;\n\t\t});\n\t}\n\n\tbuildQueryFromSourceParams(chunks: SQLChunk[], _config: BuildQueryConfig): Query {\n\t\tconst config = Object.assign({}, _config, {\n\t\t\tinlineParams: _config.inlineParams || this.shouldInlineParams,\n\t\t\tparamStartIndex: _config.paramStartIndex || { value: 0 },\n\t\t});\n\n\t\tconst {\n\t\t\tcasing,\n\t\t\tescapeName,\n\t\t\tescapeParam,\n\t\t\tprepareTyping,\n\t\t\tinlineParams,\n\t\t\tparamStartIndex,\n\t\t} = config;\n\n\t\treturn mergeQueries(chunks.map((chunk): QueryWithTypings => {\n\t\t\tif (is(chunk, StringChunk)) {\n\t\t\t\treturn { sql: chunk.value.join(''), params: [] };\n\t\t\t}\n\n\t\t\tif (is(chunk, Name)) {\n\t\t\t\treturn { sql: escapeName(chunk.value), params: [] };\n\t\t\t}\n\n\t\t\tif (chunk === undefined) {\n\t\t\t\treturn { sql: '', params: [] };\n\t\t\t}\n\n\t\t\tif (Array.isArray(chunk)) {\n\t\t\t\tconst result: SQLChunk[] = [new StringChunk('(')];\n\t\t\t\tfor (const [i, p] of chunk.entries()) {\n\t\t\t\t\tresult.push(p);\n\t\t\t\t\tif (i < chunk.length - 1) {\n\t\t\t\t\t\tresult.push(new StringChunk(', '));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tresult.push(new StringChunk(')'));\n\t\t\t\treturn this.buildQueryFromSourceParams(result, config);\n\t\t\t}\n\n\t\t\tif (is(chunk, SQL)) {\n\t\t\t\treturn this.buildQueryFromSourceParams(chunk.queryChunks, {\n\t\t\t\t\t...config,\n\t\t\t\t\tinlineParams: inlineParams || chunk.shouldInlineParams,\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tif (is(chunk, Table)) {\n\t\t\t\tconst schemaName = chunk[Table.Symbol.Schema];\n\t\t\t\tconst tableName = chunk[Table.Symbol.Name];\n\t\t\t\treturn {\n\t\t\t\t\tsql: schemaName === undefined || chunk[IsAlias]\n\t\t\t\t\t\t? escapeName(tableName)\n\t\t\t\t\t\t: escapeName(schemaName) + '.' + escapeName(tableName),\n\t\t\t\t\tparams: [],\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tif (is(chunk, Column)) {\n\t\t\t\tconst columnName = casing.getColumnCasing(chunk);\n\t\t\t\tif (_config.invokeSource === 'indexes') {\n\t\t\t\t\treturn { sql: escapeName(columnName), params: [] };\n\t\t\t\t}\n\n\t\t\t\tconst schemaName = chunk.table[Table.Symbol.Schema];\n\t\t\t\treturn {\n\t\t\t\t\tsql: chunk.table[IsAlias] || schemaName === undefined\n\t\t\t\t\t\t? escapeName(chunk.table[Table.Symbol.Name]) + '.' + escapeName(columnName)\n\t\t\t\t\t\t: escapeName(schemaName) + '.' + escapeName(chunk.table[Table.Symbol.Name]) + '.'\n\t\t\t\t\t\t\t+ escapeName(columnName),\n\t\t\t\t\tparams: [],\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tif (is(chunk, View)) {\n\t\t\t\tconst schemaName = chunk[ViewBaseConfig].schema;\n\t\t\t\tconst viewName = chunk[ViewBaseConfig].name;\n\t\t\t\treturn {\n\t\t\t\t\tsql: schemaName === undefined || chunk[ViewBaseConfig].isAlias\n\t\t\t\t\t\t? escapeName(viewName)\n\t\t\t\t\t\t: escapeName(schemaName) + '.' + escapeName(viewName),\n\t\t\t\t\tparams: [],\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tif (is(chunk, Param)) {\n\t\t\t\tif (is(chunk.value, Placeholder)) {\n\t\t\t\t\treturn { sql: escapeParam(paramStartIndex.value++, chunk), params: [chunk], typings: ['none'] };\n\t\t\t\t}\n\n\t\t\t\tconst mappedValue = chunk.value === null ? null : chunk.encoder.mapToDriverValue(chunk.value);\n\n\t\t\t\tif (is(mappedValue, SQL)) {\n\t\t\t\t\treturn this.buildQueryFromSourceParams([mappedValue], config);\n\t\t\t\t}\n\n\t\t\t\tif (inlineParams) {\n\t\t\t\t\treturn { sql: this.mapInlineParam(mappedValue, config), params: [] };\n\t\t\t\t}\n\n\t\t\t\tlet typings: QueryTypingsValue[] = ['none'];\n\t\t\t\tif (prepareTyping) {\n\t\t\t\t\ttypings = [prepareTyping(chunk.encoder)];\n\t\t\t\t}\n\n\t\t\t\treturn { sql: escapeParam(paramStartIndex.value++, mappedValue), params: [mappedValue], typings };\n\t\t\t}\n\n\t\t\tif (is(chunk, Placeholder)) {\n\t\t\t\treturn { sql: escapeParam(paramStartIndex.value++, chunk), params: [chunk], typings: ['none'] };\n\t\t\t}\n\n\t\t\tif (is(chunk, SQL.Aliased) && chunk.fieldAlias !== undefined) {\n\t\t\t\treturn { sql: escapeName(chunk.fieldAlias), params: [] };\n\t\t\t}\n\n\t\t\tif (is(chunk, Subquery)) {\n\t\t\t\tif (chunk._.isWith) {\n\t\t\t\t\treturn { sql: escapeName(chunk._.alias), params: [] };\n\t\t\t\t}\n\t\t\t\treturn this.buildQueryFromSourceParams([\n\t\t\t\t\tnew StringChunk('('),\n\t\t\t\t\tchunk._.sql,\n\t\t\t\t\tnew StringChunk(') '),\n\t\t\t\t\tnew Name(chunk._.alias),\n\t\t\t\t], config);\n\t\t\t}\n\n\t\t\tif (isPgEnum(chunk)) {\n\t\t\t\tif (chunk.schema) {\n\t\t\t\t\treturn { sql: escapeName(chunk.schema) + '.' + escapeName(chunk.enumName), params: [] };\n\t\t\t\t}\n\t\t\t\treturn { sql: escapeName(chunk.enumName), params: [] };\n\t\t\t}\n\n\t\t\tif (isSQLWrapper(chunk)) {\n\t\t\t\tif (chunk.shouldOmitSQLParens?.()) {\n\t\t\t\t\treturn this.buildQueryFromSourceParams([chunk.getSQL()], config);\n\t\t\t\t}\n\t\t\t\treturn this.buildQueryFromSourceParams([\n\t\t\t\t\tnew StringChunk('('),\n\t\t\t\t\tchunk.getSQL(),\n\t\t\t\t\tnew StringChunk(')'),\n\t\t\t\t], config);\n\t\t\t}\n\n\t\t\tif (inlineParams) {\n\t\t\t\treturn { sql: this.mapInlineParam(chunk, config), params: [] };\n\t\t\t}\n\n\t\t\treturn { sql: escapeParam(paramStartIndex.value++, chunk), params: [chunk], typings: ['none'] };\n\t\t}));\n\t}\n\n\tprivate mapInlineParam(\n\t\tchunk: unknown,\n\t\t{ escapeString }: BuildQueryConfig,\n\t): string {\n\t\tif (chunk === null) {\n\t\t\treturn 'null';\n\t\t}\n\t\tif (typeof chunk === 'number' || typeof chunk === 'boolean') {\n\t\t\treturn chunk.toString();\n\t\t}\n\t\tif (typeof chunk === 'string') {\n\t\t\treturn escapeString(chunk);\n\t\t}\n\t\tif (typeof chunk === 'object') {\n\t\t\tconst mappedValueAsString = chunk.toString();\n\t\t\tif (mappedValueAsString === '[object Object]') {\n\t\t\t\treturn escapeString(JSON.stringify(chunk));\n\t\t\t}\n\t\t\treturn escapeString(mappedValueAsString);\n\t\t}\n\t\tthrow new Error('Unexpected param value: ' + chunk);\n\t}\n\n\tgetSQL(): SQL {\n\t\treturn this;\n\t}\n\n\tas(alias: string): SQL.Aliased<T>;\n\t/**\n\t * @deprecated\n\t * Use ``sql<DataType>`query`.as(alias)`` instead.\n\t */\n\tas<TData>(): SQL<TData>;\n\t/**\n\t * @deprecated\n\t * Use ``sql<DataType>`query`.as(alias)`` instead.\n\t */\n\tas<TData>(alias: string): SQL.Aliased<TData>;\n\tas(alias?: string): SQL<T> | SQL.Aliased<T> {\n\t\t// TODO: remove with deprecated overloads\n\t\tif (alias === undefined) {\n\t\t\treturn this;\n\t\t}\n\n\t\treturn new SQL.Aliased(this, alias);\n\t}\n\n\tmapWith<\n\t\tTDecoder extends\n\t\t\t| DriverValueDecoder<any, any>\n\t\t\t| DriverValueDecoder<any, any>['mapFromDriverValue'],\n\t>(decoder: TDecoder): SQL<GetDecoderResult<TDecoder>> {\n\t\tthis.decoder = typeof decoder === 'function' ? { mapFromDriverValue: decoder } : decoder;\n\t\treturn this as SQL<GetDecoderResult<TDecoder>>;\n\t}\n\n\tinlineParams(): this {\n\t\tthis.shouldInlineParams = true;\n\t\treturn this;\n\t}\n\n\t/**\n\t * This method is used to conditionally include a part of the query.\n\t *\n\t * @param condition - Condition to check\n\t * @returns itself if the condition is `true`, otherwise `undefined`\n\t */\n\tif(condition: any | undefined): this | undefined {\n\t\treturn condition ? this : undefined;\n\t}\n}\n\nexport type GetDecoderResult<T> = T extends Column ? T['_']['data'] : T extends\n\t| DriverValueDecoder<infer TData, any>\n\t| DriverValueDecoder<infer TData, any>['mapFromDriverValue'] ? TData\n: never;\n\n/**\n * Any DB name (table, column, index etc.)\n */\nexport class Name implements SQLWrapper {\n\tstatic readonly [entityKind]: string = 'Name';\n\n\tprotected brand!: 'Name';\n\n\tconstructor(readonly value: string) {}\n\n\tgetSQL(): SQL<unknown> {\n\t\treturn new SQL([this]);\n\t}\n}\n\n/**\n * Any DB name (table, column, index etc.)\n * @deprecated Use `sql.identifier` instead.\n */\nexport function name(value: string): Name {\n\treturn new Name(value);\n}\n\nexport interface DriverValueDecoder<TData, TDriverParam> {\n\tmapFromDriverValue(value: TDriverParam): TData;\n}\n\nexport interface DriverValueEncoder<TData, TDriverParam> {\n\tmapToDriverValue(value: TData): TDriverParam | SQL;\n}\n\nexport function isDriverValueEncoder(value: unknown): value is DriverValueEncoder<any, any> {\n\treturn typeof value === 'object' && value !== null && 'mapToDriverValue' in value\n\t\t&& typeof (value as any).mapToDriverValue === 'function';\n}\n\nexport const noopDecoder: DriverValueDecoder<any, any> = {\n\tmapFromDriverValue: (value) => value,\n};\n\nexport const noopEncoder: DriverValueEncoder<any, any> = {\n\tmapToDriverValue: (value) => value,\n};\n\nexport interface DriverValueMapper<TData, TDriverParam>\n\textends DriverValueDecoder<TData, TDriverParam>, DriverValueEncoder<TData, TDriverParam>\n{}\n\nexport const noopMapper: DriverValueMapper<any, any> = {\n\t...noopDecoder,\n\t...noopEncoder,\n};\n\n/** Parameter value that is optionally bound to an encoder (for example, a column). */\nexport class Param<TDataType = unknown, TDriverParamType = TDataType> implements SQLWrapper {\n\tstatic readonly [entityKind]: string = 'Param';\n\n\tprotected brand!: 'BoundParamValue';\n\n\t/**\n\t * @param value - Parameter value\n\t * @param encoder - Encoder to convert the value to a driver parameter\n\t */\n\tconstructor(\n\t\treadonly value: TDataType,\n\t\treadonly encoder: DriverValueEncoder<TDataType, TDriverParamType> = noopEncoder,\n\t) {}\n\n\tgetSQL(): SQL<unknown> {\n\t\treturn new SQL([this]);\n\t}\n}\n\n/** @deprecated Use `sql.param` instead. */\nexport function param<TData, TDriver>(\n\tvalue: TData,\n\tencoder?: DriverValueEncoder<TData, TDriver>,\n): Param<TData, TDriver> {\n\treturn new Param(value, encoder);\n}\n\n/**\n * Anything that can be passed to the `` sql`...` `` tagged function.\n */\nexport type SQLChunk =\n\t| StringChunk\n\t| SQLChunk[]\n\t| SQLWrapper\n\t| SQL\n\t| Table\n\t| View\n\t| Subquery\n\t| AnyColumn\n\t| Param\n\t| Name\n\t| undefined\n\t| FakePrimitiveParam\n\t| Placeholder;\n\nexport function sql<T>(strings: TemplateStringsArray, ...params: any[]): SQL<T>;\n/*\n\tThe type of `params` is specified as `SQLChunk[]`, but that's slightly incorrect -\n\tin runtime, users won't pass `FakePrimitiveParam` instances as `params` - they will pass primitive values\n\twhich will be wrapped in `Param`. That's why the overload specifies `params` as `any[]` and not as `SQLSourceParam[]`.\n\tThis type is used to make our lives easier and the type checker happy.\n*/\nexport function sql(strings: TemplateStringsArray, ...params: SQLChunk[]): SQL {\n\tconst queryChunks: SQLChunk[] = [];\n\tif (params.length > 0 || (strings.length > 0 && strings[0] !== '')) {\n\t\tqueryChunks.push(new StringChunk(strings[0]!));\n\t}\n\tfor (const [paramIndex, param] of params.entries()) {\n\t\tqueryChunks.push(param, new StringChunk(strings[paramIndex + 1]!));\n\t}\n\n\treturn new SQL(queryChunks);\n}\n\nexport namespace sql {\n\texport function empty(): SQL {\n\t\treturn new SQL([]);\n\t}\n\n\t/** @deprecated - use `sql.join()` */\n\texport function fromList(list: SQLChunk[]): SQL {\n\t\treturn new SQL(list);\n\t}\n\n\t/**\n\t * Convenience function to create an SQL query from a raw string.\n\t * @param str The raw SQL query string.\n\t */\n\texport function raw(str: string): SQL {\n\t\treturn new SQL([new StringChunk(str)]);\n\t}\n\n\t/**\n\t * Join a list of SQL chunks with a separator.\n\t * @example\n\t * ```ts\n\t * const query = sql.join([sql`a`, sql`b`, sql`c`]);\n\t * // sql`abc`\n\t * ```\n\t * @example\n\t * ```ts\n\t * const query = sql.join([sql`a`, sql`b`, sql`c`], sql`, `);\n\t * // sql`a, b, c`\n\t * ```\n\t */\n\texport function join(chunks: SQLChunk[], separator?: SQLChunk): SQL {\n\t\tconst result: SQLChunk[] = [];\n\t\tfor (const [i, chunk] of chunks.entries()) {\n\t\t\tif (i > 0 && separator !== undefined) {\n\t\t\t\tresult.push(separator);\n\t\t\t}\n\t\t\tresult.push(chunk);\n\t\t}\n\t\treturn new SQL(result);\n\t}\n\n\t/**\n\t * Create a SQL chunk that represents a DB identifier (table, column, index etc.).\n\t * When used in a query, the identifier will be escaped based on the DB engine.\n\t * For example, in PostgreSQL, identifiers are escaped with double quotes.\n\t *\n\t * **WARNING: This function does not offer any protection against SQL injections, so you must validate any user input beforehand.**\n\t *\n\t * @example ```ts\n\t * const query = sql`SELECT * FROM ${sql.identifier('my-table')}`;\n\t * // 'SELECT * FROM \"my-table\"'\n\t * ```\n\t */\n\texport function identifier(value: string): Name {\n\t\treturn new Name(value);\n\t}\n\n\texport function placeholder<TName extends string>(name: TName): Placeholder<TName> {\n\t\treturn new Placeholder(name);\n\t}\n\n\texport function param<TData, TDriver>(\n\t\tvalue: TData,\n\t\tencoder?: DriverValueEncoder<TData, TDriver>,\n\t): Param<TData, TDriver> {\n\t\treturn new Param(value, encoder);\n\t}\n}\n\nexport namespace SQL {\n\texport class Aliased<T = unknown> implements SQLWrapper {\n\t\tstatic readonly [entityKind]: string = 'SQL.Aliased';\n\n\t\tdeclare _: {\n\t\t\tbrand: 'SQL.Aliased';\n\t\t\ttype: T;\n\t\t};\n\n\t\t/** @internal */\n\t\tisSelectionField = false;\n\n\t\tconstructor(\n\t\t\treadonly sql: SQL,\n\t\t\treadonly fieldAlias: string,\n\t\t) {}\n\n\t\tgetSQL(): SQL {\n\t\t\treturn this.sql;\n\t\t}\n\n\t\t/** @internal */\n\t\tclone() {\n\t\t\treturn new Aliased(this.sql, this.fieldAlias);\n\t\t}\n\t}\n}\n\nexport class Placeholder<TName extends string = string, TValue = any> implements SQLWrapper {\n\tstatic readonly [entityKind]: string = 'Placeholder';\n\n\tdeclare protected: TValue;\n\n\tconstructor(readonly name: TName) {}\n\n\tgetSQL(): SQL {\n\t\treturn new SQL([this]);\n\t}\n}\n\n/** @deprecated Use `sql.placeholder` instead. */\nexport function placeholder<TName extends string>(name: TName): Placeholder<TName> {\n\treturn new Placeholder(name);\n}\n\nexport function fillPlaceholders(params: unknown[], values: Record<string, unknown>): unknown[] {\n\treturn params.map((p) => {\n\t\tif (is(p, Placeholder)) {\n\t\t\tif (!(p.name in values)) {\n\t\t\t\tthrow new Error(`No value for placeholder \"${p.name}\" was provided`);\n\t\t\t}\n\n\t\t\treturn values[p.name];\n\t\t}\n\n\t\tif (is(p, Param) && is(p.value, Placeholder)) {\n\t\t\tif (!(p.value.name in values)) {\n\t\t\t\tthrow new Error(`No value for placeholder \"${p.value.name}\" was provided`);\n\t\t\t}\n\n\t\t\treturn p.encoder.mapToDriverValue(values[p.value.name]);\n\t\t}\n\n\t\treturn p;\n\t});\n}\n\nexport type ColumnsSelection = Record<string, unknown>;\n\nconst IsDrizzleView = Symbol.for('drizzle:IsDrizzleView');\n\nexport abstract class View<\n\tTName extends string = string,\n\tTExisting extends boolean = boolean,\n\tTSelection extends ColumnsSelection = ColumnsSelection,\n> implements SQLWrapper {\n\tstatic readonly [entityKind]: string = 'View';\n\n\tdeclare _: {\n\t\tbrand: 'View';\n\t\tviewBrand: string;\n\t\tname: TName;\n\t\texisting: TExisting;\n\t\tselectedFields: TSelection;\n\t};\n\n\t/** @internal */\n\t[ViewBaseConfig]: {\n\t\tname: TName;\n\t\toriginalName: TName;\n\t\tschema: string | undefined;\n\t\tselectedFields: ColumnsSelection;\n\t\tisExisting: TExisting;\n\t\tquery: TExisting extends true ? undefined : SQL;\n\t\tisAlias: boolean;\n\t};\n\n\t/** @internal */\n\t[IsDrizzleView] = true;\n\n\tdeclare readonly $inferSelect: InferSelectViewModel<View<Assume<TName, string>, TExisting, TSelection>>;\n\n\tconstructor(\n\t\t{ name, schema, selectedFields, query }: {\n\t\t\tname: TName;\n\t\t\tschema: string | undefined;\n\t\t\tselectedFields: ColumnsSelection;\n\t\t\tquery: SQL | undefined;\n\t\t},\n\t) {\n\t\tthis[ViewBaseConfig] = {\n\t\t\tname,\n\t\t\toriginalName: name,\n\t\t\tschema,\n\t\t\tselectedFields,\n\t\t\tquery: query as (TExisting extends true ? undefined : SQL),\n\t\t\tisExisting: !query as TExisting,\n\t\t\tisAlias: false,\n\t\t};\n\t}\n\n\tgetSQL(): SQL<unknown> {\n\t\treturn new SQL([this]);\n\t}\n}\n\nexport function isView(view: unknown): view is View {\n\treturn typeof view === 'object' && view !== null && IsDrizzleView in view;\n}\n\nexport function getViewName<T extends View>(view: T): T['_']['name'] {\n\treturn view[ViewBaseConfig].name;\n}\n\nexport type InferSelectViewModel<TView extends View> =\n\tEqual<TView['_']['selectedFields'], { [x: string]: unknown }> extends true ? { [x: string]: unknown }\n\t\t: SelectResult<\n\t\t\tTView['_']['selectedFields'],\n\t\t\t'single',\n\t\t\tRecord<TView['_']['name'], 'not-null'>\n\t\t>;\n\n// Defined separately from the Column class to resolve circular dependency\nColumn.prototype.getSQL = function() {\n\treturn new SQL([this]);\n};\n\n// Defined separately from the Table class to resolve circular dependency\nTable.prototype.getSQL = function() {\n\treturn new SQL([this]);\n};\n\n// Defined separately from the Column class to resolve circular dependency\nSubquery.prototype.getSQL = function() {\n\treturn new SQL([this]);\n};\n", "import type { ColumnBuilderBaseConfig, ColumnBuilderRuntimeConfig, MakeColumnConfig } from '~/column-builder.ts';\nimport type { ColumnBaseConfig } from '~/column.ts';\nimport { entityKind } from '~/entity.ts';\nimport type { AnyPgTable } from '~/pg-core/table.ts';\nimport type { NonArray, Writable } from '~/utils.ts';\nimport { PgColumn, PgColumnBuilder } from './common.ts';\n\n// Enum as ts enum\n\nexport type PgEnumObjectColumnBuilderInitial<TName extends string, TValues extends object> = PgEnumObjectColumnBuilder<{\n\tname: TName;\n\tdataType: 'string';\n\tcolumnType: 'PgEnumObjectColumn';\n\tdata: TValues[keyof TValues];\n\tenumValues: string[];\n\tdriverParam: string;\n}>;\n\nexport interface PgEnumObject<TValues extends object> {\n\t(): PgEnumObjectColumnBuilderInitial<'', TValues>;\n\t<TName extends string>(name: TName): PgEnumObjectColumnBuilderInitial<TName, TValues>;\n\t<TName extends string>(name?: TName): PgEnumObjectColumnBuilderInitial<TName, TValues>;\n\n\treadonly enumName: string;\n\treadonly enumValues: string[];\n\treadonly schema: string | undefined;\n\t/** @internal */\n\t[isPgEnumSym]: true;\n}\n\nexport class PgEnumObjectColumnBuilder<\n\tT extends ColumnBuilderBaseConfig<'string', 'PgEnumObjectColumn'> & { enumValues: string[] },\n> extends PgColumnBuilder<T, { enum: PgEnumObject<any> }> {\n\tstatic override readonly [entityKind]: string = 'PgEnumObjectColumnBuilder';\n\n\tconstructor(name: T['name'], enumInstance: PgEnumObject<any>) {\n\t\tsuper(name, 'string', 'PgEnumObjectColumn');\n\t\tthis.config.enum = enumInstance;\n\t}\n\n\t/** @internal */\n\toverride build<TTableName extends string>(\n\t\ttable: AnyPgTable<{ name: TTableName }>,\n\t): PgEnumObjectColumn<MakeColumnConfig<T, TTableName>> {\n\t\treturn new PgEnumObjectColumn<MakeColumnConfig<T, TTableName>>(\n\t\t\ttable,\n\t\t\tthis.config as ColumnBuilderRuntimeConfig<any, any>,\n\t\t);\n\t}\n}\n\nexport class PgEnumObjectColumn<T extends ColumnBaseConfig<'string', 'PgEnumObjectColumn'> & { enumValues: object }>\n\textends PgColumn<T, { enum: PgEnumObject<object> }>\n{\n\tstatic override readonly [entityKind]: string = 'PgEnumObjectColumn';\n\n\treadonly enum;\n\toverride readonly enumValues = this.config.enum.enumValues;\n\n\tconstructor(\n\t\ttable: AnyPgTable<{ name: T['tableName'] }>,\n\t\tconfig: PgEnumObjectColumnBuilder<T>['config'],\n\t) {\n\t\tsuper(table, config);\n\t\tthis.enum = config.enum;\n\t}\n\n\tgetSQLType(): string {\n\t\treturn this.enum.enumName;\n\t}\n}\n\n// Enum as string union\n\nexport type PgEnumColumnBuilderInitial<TName extends string, TValues extends [string, ...string[]]> =\n\tPgEnumColumnBuilder<{\n\t\tname: TName;\n\t\tdataType: 'string';\n\t\tcolumnType: 'PgEnumColumn';\n\t\tdata: TValues[number];\n\t\tenumValues: TValues;\n\t\tdriverParam: string;\n\t}>;\n\nconst isPgEnumSym = Symbol.for('drizzle:isPgEnum');\nexport interface PgEnum<TValues extends [string, ...string[]]> {\n\t(): PgEnumColumnBuilderInitial<'', TValues>;\n\t<TName extends string>(name: TName): PgEnumColumnBuilderInitial<TName, TValues>;\n\t<TName extends string>(name?: TName): PgEnumColumnBuilderInitial<TName, TValues>;\n\n\treadonly enumName: string;\n\treadonly enumValues: TValues;\n\treadonly schema: string | undefined;\n\t/** @internal */\n\t[isPgEnumSym]: true;\n}\n\nexport function isPgEnum(obj: unknown): obj is PgEnum<[string, ...string[]]> {\n\treturn !!obj && typeof obj === 'function' && isPgEnumSym in obj && obj[isPgEnumSym] === true;\n}\n\nexport class PgEnumColumnBuilder<\n\tT extends ColumnBuilderBaseConfig<'string', 'PgEnumColumn'> & { enumValues: [string, ...string[]] },\n> extends PgColumnBuilder<T, { enum: PgEnum<T['enumValues']> }> {\n\tstatic override readonly [entityKind]: string = 'PgEnumColumnBuilder';\n\n\tconstructor(name: T['name'], enumInstance: PgEnum<T['enumValues']>) {\n\t\tsuper(name, 'string', 'PgEnumColumn');\n\t\tthis.config.enum = enumInstance;\n\t}\n\n\t/** @internal */\n\toverride build<TTableName extends string>(\n\t\ttable: AnyPgTable<{ name: TTableName }>,\n\t): PgEnumColumn<MakeColumnConfig<T, TTableName>> {\n\t\treturn new PgEnumColumn<MakeColumnConfig<T, TTableName>>(\n\t\t\ttable,\n\t\t\tthis.config as ColumnBuilderRuntimeConfig<any, any>,\n\t\t);\n\t}\n}\n\nexport class PgEnumColumn<T extends ColumnBaseConfig<'string', 'PgEnumColumn'> & { enumValues: [string, ...string[]] }>\n\textends PgColumn<T, { enum: PgEnum<T['enumValues']> }>\n{\n\tstatic override readonly [entityKind]: string = 'PgEnumColumn';\n\n\treadonly enum = this.config.enum;\n\toverride readonly enumValues = this.config.enum.enumValues;\n\n\tconstructor(\n\t\ttable: AnyPgTable<{ name: T['tableName'] }>,\n\t\tconfig: PgEnumColumnBuilder<T>['config'],\n\t) {\n\t\tsuper(table, config);\n\t\tthis.enum = config.enum;\n\t}\n\n\tgetSQLType(): string {\n\t\treturn this.enum.enumName;\n\t}\n}\n\nexport function pgEnum<U extends string, T extends Readonly<[U, ...U[]]>>(\n\tenumName: string,\n\tvalues: T | Writable<T>,\n): PgEnum<Writable<T>>;\n\nexport function pgEnum<E extends Record<string, string>>(\n\tenumName: string,\n\tenumObj: NonArray<E>,\n): PgEnumObject<E>;\n\nexport function pgEnum(\n\tenumName: any,\n\tinput: any,\n): any {\n\treturn Array.isArray(input)\n\t\t? pgEnumWithSchema(enumName, [...input] as [string, ...string[]], undefined)\n\t\t: pgEnumObjectWithSchema(enumName, input, undefined);\n}\n\n/** @internal */\nexport function pgEnumWithSchema<U extends string, T extends Readonly<[U, ...U[]]>>(\n\tenumName: string,\n\tvalues: T | Writable<T>,\n\tschema?: string,\n): PgEnum<Writable<T>> {\n\tconst enumInstance: PgEnum<Writable<T>> = Object.assign(\n\t\t<TName extends string>(name?: TName): PgEnumColumnBuilderInitial<TName, Writable<T>> =>\n\t\t\tnew PgEnumColumnBuilder(name ?? '' as TName, enumInstance),\n\t\t{\n\t\t\tenumName,\n\t\t\tenumValues: values,\n\t\t\tschema,\n\t\t\t[isPgEnumSym]: true,\n\t\t} as const,\n\t);\n\n\treturn enumInstance;\n}\n\n/** @internal */\nexport function pgEnumObjectWithSchema<T extends object>(\n\tenumName: string,\n\tvalues: T,\n\tschema?: string,\n): PgEnumObject<T> {\n\tconst enumInstance: PgEnumObject<T> = Object.assign(\n\t\t<TName extends string>(name?: TName): PgEnumObjectColumnBuilderInitial<TName, T> =>\n\t\t\tnew PgEnumObjectColumnBuilder(name ?? '' as TName, enumInstance),\n\t\t{\n\t\t\tenumName,\n\t\t\tenumValues: Object.values(values),\n\t\t\tschema,\n\t\t\t[isPgEnumSym]: true,\n\t\t} as const,\n\t);\n\n\treturn enumInstance;\n}\n", "import type {\n\tColumnBuilderBase,\n\tColumnBuilderBaseConfig,\n\tColumnBuilderExtraConfig,\n\tColumnBuilderRuntimeConfig,\n\tColumnDataType,\n\tHasGenerated,\n\tMakeColumnConfig,\n} from '~/column-builder.ts';\nimport { ColumnBuilder } from '~/column-builder.ts';\nimport type { ColumnBaseConfig } from '~/column.ts';\nimport { Column } from '~/column.ts';\nimport { entityKind, is } from '~/entity.ts';\nimport type { Simplify, Update } from '~/utils.ts';\n\nimport type { ForeignKey, UpdateDeleteAction } from '~/pg-core/foreign-keys.ts';\nimport { ForeignKeyBuilder } from '~/pg-core/foreign-keys.ts';\nimport type { AnyPgTable, PgTable } from '~/pg-core/table.ts';\nimport type { SQL } from '~/sql/sql.ts';\nimport { iife } from '~/tracing-utils.ts';\nimport type { PgIndexOpClass } from '../indexes.ts';\nimport { uniqueKeyName } from '../unique-constraint.ts';\nimport { makePgArray, parsePgArray } from '../utils/array.ts';\n\nexport interface ReferenceConfig {\n\tref: () => PgColumn;\n\tactions: {\n\t\tonUpdate?: UpdateDeleteAction;\n\t\tonDelete?: UpdateDeleteAction;\n\t};\n}\n\nexport interface PgColumnBuilderBase<\n\tT extends ColumnBuilderBaseConfig<ColumnDataType, string> = ColumnBuilderBaseConfig<ColumnDataType, string>,\n\tTTypeConfig extends object = object,\n> extends ColumnBuilderBase<T, TTypeConfig & { dialect: 'pg' }> {}\n\nexport abstract class PgColumnBuilder<\n\tT extends ColumnBuilderBaseConfig<ColumnDataType, string> = ColumnBuilderBaseConfig<ColumnDataType, string>,\n\tTRuntimeConfig extends object = object,\n\tTTypeConfig extends object = object,\n\tTExtraConfig extends ColumnBuilderExtraConfig = ColumnBuilderExtraConfig,\n> extends ColumnBuilder<T, TRuntimeConfig, TTypeConfig & { dialect: 'pg' }, TExtraConfig>\n\timplements PgColumnBuilderBase<T, TTypeConfig>\n{\n\tprivate foreignKeyConfigs: ReferenceConfig[] = [];\n\n\tstatic override readonly [entityKind]: string = 'PgColumnBuilder';\n\n\tarray<TSize extends number | undefined = undefined>(size?: TSize): PgArrayBuilder<\n\t\t& {\n\t\t\tname: T['name'];\n\t\t\tdataType: 'array';\n\t\t\tcolumnType: 'PgArray';\n\t\t\tdata: T['data'][];\n\t\t\tdriverParam: T['driverParam'][] | string;\n\t\t\tenumValues: T['enumValues'];\n\t\t\tsize: TSize;\n\t\t\tbaseBuilder: T;\n\t\t}\n\t\t& (T extends { notNull: true } ? { notNull: true } : {})\n\t\t& (T extends { hasDefault: true } ? { hasDefault: true } : {}),\n\t\tT\n\t> {\n\t\treturn new PgArrayBuilder(this.config.name, this as PgColumnBuilder<any, any>, size as any);\n\t}\n\n\treferences(\n\t\tref: ReferenceConfig['ref'],\n\t\tactions: ReferenceConfig['actions'] = {},\n\t): this {\n\t\tthis.foreignKeyConfigs.push({ ref, actions });\n\t\treturn this;\n\t}\n\n\tunique(\n\t\tname?: string,\n\t\tconfig?: { nulls: 'distinct' | 'not distinct' },\n\t): this {\n\t\tthis.config.isUnique = true;\n\t\tthis.config.uniqueName = name;\n\t\tthis.config.uniqueType = config?.nulls;\n\t\treturn this;\n\t}\n\n\tgeneratedAlwaysAs(as: SQL | T['data'] | (() => SQL)): HasGenerated<this, {\n\t\ttype: 'always';\n\t}> {\n\t\tthis.config.generated = {\n\t\t\tas,\n\t\t\ttype: 'always',\n\t\t\tmode: 'stored',\n\t\t};\n\t\treturn this as HasGenerated<this, {\n\t\t\ttype: 'always';\n\t\t}>;\n\t}\n\n\t/** @internal */\n\tbuildForeignKeys(column: PgColumn, table: PgTable): ForeignKey[] {\n\t\treturn this.foreignKeyConfigs.map(({ ref, actions }) => {\n\t\t\treturn iife(\n\t\t\t\t(ref, actions) => {\n\t\t\t\t\tconst builder = new ForeignKeyBuilder(() => {\n\t\t\t\t\t\tconst foreignColumn = ref();\n\t\t\t\t\t\treturn { columns: [column], foreignColumns: [foreignColumn] };\n\t\t\t\t\t});\n\t\t\t\t\tif (actions.onUpdate) {\n\t\t\t\t\t\tbuilder.onUpdate(actions.onUpdate);\n\t\t\t\t\t}\n\t\t\t\t\tif (actions.onDelete) {\n\t\t\t\t\t\tbuilder.onDelete(actions.onDelete);\n\t\t\t\t\t}\n\t\t\t\t\treturn builder.build(table);\n\t\t\t\t},\n\t\t\t\tref,\n\t\t\t\tactions,\n\t\t\t);\n\t\t});\n\t}\n\n\t/** @internal */\n\tabstract build<TTableName extends string>(\n\t\ttable: AnyPgTable<{ name: TTableName }>,\n\t): PgColumn<MakeColumnConfig<T, TTableName>>;\n\n\t/** @internal */\n\tbuildExtraConfigColumn<TTableName extends string>(\n\t\ttable: AnyPgTable<{ name: TTableName }>,\n\t): ExtraConfigColumn {\n\t\treturn new ExtraConfigColumn(table, this.config);\n\t}\n}\n\n// To understand how to use `PgColumn` and `PgColumn`, see `Column` and `AnyColumn` documentation.\nexport abstract class PgColumn<\n\tT extends ColumnBaseConfig<ColumnDataType, string> = ColumnBaseConfig<ColumnDataType, string>,\n\tTRuntimeConfig extends object = {},\n\tTTypeConfig extends object = {},\n> extends Column<T, TRuntimeConfig, TTypeConfig & { dialect: 'pg' }> {\n\tstatic override readonly [entityKind]: string = 'PgColumn';\n\n\tconstructor(\n\t\toverride readonly table: PgTable,\n\t\tconfig: ColumnBuilderRuntimeConfig<T['data'], TRuntimeConfig>,\n\t) {\n\t\tif (!config.uniqueName) {\n\t\t\tconfig.uniqueName = uniqueKeyName(table, [config.name]);\n\t\t}\n\t\tsuper(table, config);\n\t}\n}\n\nexport type IndexedExtraConfigType = { order?: 'asc' | 'desc'; nulls?: 'first' | 'last'; opClass?: string };\n\nexport class ExtraConfigColumn<\n\tT extends ColumnBaseConfig<ColumnDataType, string> = ColumnBaseConfig<ColumnDataType, string>,\n> extends PgColumn<T, IndexedExtraConfigType> {\n\tstatic override readonly [entityKind]: string = 'ExtraConfigColumn';\n\n\toverride getSQLType(): string {\n\t\treturn this.getSQLType();\n\t}\n\n\tindexConfig: IndexedExtraConfigType = {\n\t\torder: this.config.order ?? 'asc',\n\t\tnulls: this.config.nulls ?? 'last',\n\t\topClass: this.config.opClass,\n\t};\n\tdefaultConfig: IndexedExtraConfigType = {\n\t\torder: 'asc',\n\t\tnulls: 'last',\n\t\topClass: undefined,\n\t};\n\n\tasc(): Omit<this, 'asc' | 'desc'> {\n\t\tthis.indexConfig.order = 'asc';\n\t\treturn this;\n\t}\n\n\tdesc(): Omit<this, 'asc' | 'desc'> {\n\t\tthis.indexConfig.order = 'desc';\n\t\treturn this;\n\t}\n\n\tnullsFirst(): Omit<this, 'nullsFirst' | 'nullsLast'> {\n\t\tthis.indexConfig.nulls = 'first';\n\t\treturn this;\n\t}\n\n\tnullsLast(): Omit<this, 'nullsFirst' | 'nullsLast'> {\n\t\tthis.indexConfig.nulls = 'last';\n\t\treturn this;\n\t}\n\n\t/**\n\t * ### PostgreSQL documentation quote\n\t *\n\t * > An operator class with optional parameters can be specified for each column of an index.\n\t * The operator class identifies the operators to be used by the index for that column.\n\t * For example, a B-tree index on four-byte integers would use the int4_ops class;\n\t * this operator class includes comparison functions for four-byte integers.\n\t * In practice the default operator class for the column's data type is usually sufficient.\n\t * The main point of having operator classes is that for some data types, there could be more than one meaningful ordering.\n\t * For example, we might want to sort a complex-number data type either by absolute value or by real part.\n\t * We could do this by defining two operator classes for the data type and then selecting the proper class when creating an index.\n\t * More information about operator classes check:\n\t *\n\t * ### Useful links\n\t * https://www.postgresql.org/docs/current/sql-createindex.html\n\t *\n\t * https://www.postgresql.org/docs/current/indexes-opclass.html\n\t *\n\t * https://www.postgresql.org/docs/current/xindex.html\n\t *\n\t * ### Additional types\n\t * If you have the `pg_vector` extension installed in your database, you can use the\n\t * `vector_l2_ops`, `vector_ip_ops`, `vector_cosine_ops`, `vector_l1_ops`, `bit_hamming_ops`, `bit_jaccard_ops`, `halfvec_l2_ops`, `sparsevec_l2_ops` options, which are predefined types.\n\t *\n\t * **You can always specify any string you want in the operator class, in case Drizzle doesn't have it natively in its types**\n\t *\n\t * @param opClass\n\t * @returns\n\t */\n\top(opClass: PgIndexOpClass): Omit<this, 'op'> {\n\t\tthis.indexConfig.opClass = opClass;\n\t\treturn this;\n\t}\n}\n\nexport class IndexedColumn {\n\tstatic readonly [entityKind]: string = 'IndexedColumn';\n\tconstructor(\n\t\tname: string | undefined,\n\t\tkeyAsName: boolean,\n\t\ttype: string,\n\t\tindexConfig: IndexedExtraConfigType,\n\t) {\n\t\tthis.name = name;\n\t\tthis.keyAsName = keyAsName;\n\t\tthis.type = type;\n\t\tthis.indexConfig = indexConfig;\n\t}\n\n\tname: string | undefined;\n\tkeyAsName: boolean;\n\ttype: string;\n\tindexConfig: IndexedExtraConfigType;\n}\n\nexport type AnyPgColumn<TPartial extends Partial<ColumnBaseConfig<ColumnDataType, string>> = {}> = PgColumn<\n\tRequired<Update<ColumnBaseConfig<ColumnDataType, string>, TPartial>>\n>;\n\nexport type PgArrayColumnBuilderBaseConfig = ColumnBuilderBaseConfig<'array', 'PgArray'> & {\n\tsize: number | undefined;\n\tbaseBuilder: ColumnBuilderBaseConfig<ColumnDataType, string>;\n};\n\nexport class PgArrayBuilder<\n\tT extends PgArrayColumnBuilderBaseConfig,\n\tTBase extends ColumnBuilderBaseConfig<ColumnDataType, string> | PgArrayColumnBuilderBaseConfig,\n> extends PgColumnBuilder<\n\tT,\n\t{\n\t\tbaseBuilder: TBase extends PgArrayColumnBuilderBaseConfig ? PgArrayBuilder<\n\t\t\t\tTBase,\n\t\t\t\tTBase extends { baseBuilder: infer TBaseBuilder extends ColumnBuilderBaseConfig<any, any> } ? TBaseBuilder\n\t\t\t\t\t: never\n\t\t\t>\n\t\t\t: PgColumnBuilder<TBase, {}, Simplify<Omit<TBase, keyof ColumnBuilderBaseConfig<any, any>>>>;\n\t\tsize: T['size'];\n\t},\n\t{\n\t\tbaseBuilder: TBase extends PgArrayColumnBuilderBaseConfig ? PgArrayBuilder<\n\t\t\t\tTBase,\n\t\t\t\tTBase extends { baseBuilder: infer TBaseBuilder extends ColumnBuilderBaseConfig<any, any> } ? TBaseBuilder\n\t\t\t\t\t: never\n\t\t\t>\n\t\t\t: PgColumnBuilder<TBase, {}, Simplify<Omit<TBase, keyof ColumnBuilderBaseConfig<any, any>>>>;\n\t\tsize: T['size'];\n\t}\n> {\n\tstatic override readonly [entityKind] = 'PgArrayBuilder';\n\n\tconstructor(\n\t\tname: string,\n\t\tbaseBuilder: PgArrayBuilder<T, TBase>['config']['baseBuilder'],\n\t\tsize: T['size'],\n\t) {\n\t\tsuper(name, 'array', 'PgArray');\n\t\tthis.config.baseBuilder = baseBuilder;\n\t\tthis.config.size = size;\n\t}\n\n\t/** @internal */\n\toverride build<TTableName extends string>(\n\t\ttable: AnyPgTable<{ name: TTableName }>,\n\t): PgArray<MakeColumnConfig<T, TTableName> & { size: T['size']; baseBuilder: T['baseBuilder'] }, TBase> {\n\t\tconst baseColumn = this.config.baseBuilder.build(table);\n\t\treturn new PgArray<MakeColumnConfig<T, TTableName> & { size: T['size']; baseBuilder: T['baseBuilder'] }, TBase>(\n\t\t\ttable as AnyPgTable<{ name: MakeColumnConfig<T, TTableName>['tableName'] }>,\n\t\t\tthis.config as ColumnBuilderRuntimeConfig<any, any>,\n\t\t\tbaseColumn,\n\t\t);\n\t}\n}\n\nexport class PgArray<\n\tT extends ColumnBaseConfig<'array', 'PgArray'> & {\n\t\tsize: number | undefined;\n\t\tbaseBuilder: ColumnBuilderBaseConfig<ColumnDataType, string>;\n\t},\n\tTBase extends ColumnBuilderBaseConfig<ColumnDataType, string>,\n> extends PgColumn<T, {}, { size: T['size']; baseBuilder: T['baseBuilder'] }> {\n\treadonly size: T['size'];\n\n\tstatic override readonly [entityKind]: string = 'PgArray';\n\n\tconstructor(\n\t\ttable: AnyPgTable<{ name: T['tableName'] }>,\n\t\tconfig: PgArrayBuilder<T, TBase>['config'],\n\t\treadonly baseColumn: PgColumn,\n\t\treadonly range?: [number | undefined, number | undefined],\n\t) {\n\t\tsuper(table, config);\n\t\tthis.size = config.size;\n\t}\n\n\tgetSQLType(): string {\n\t\treturn `${this.baseColumn.getSQLType()}[${typeof this.size === 'number' ? this.size : ''}]`;\n\t}\n\n\toverride mapFromDriverValue(value: unknown[] | string): T['data'] {\n\t\tif (typeof value === 'string') {\n\t\t\t// Thank you node-postgres for not parsing enum arrays\n\t\t\tvalue = parsePgArray(value);\n\t\t}\n\t\treturn value.map((v) => this.baseColumn.mapFromDriverValue(v));\n\t}\n\n\toverride mapToDriverValue(value: unknown[], isNestedArray = false): unknown[] | string {\n\t\tconst a = value.map((v) =>\n\t\t\tv === null\n\t\t\t\t? null\n\t\t\t\t: is(this.baseColumn, PgArray)\n\t\t\t\t? this.baseColumn.mapToDriverValue(v as unknown[], true)\n\t\t\t\t: this.baseColumn.mapToDriverValue(v)\n\t\t);\n\t\tif (isNestedArray) return a;\n\t\treturn makePgArray(a);\n\t}\n}\n", "import { entityKind } from '~/entity.ts';\nimport type { Column } from './column.ts';\nimport type { GelColumn, GelExtraConfigColumn } from './gel-core/index.ts';\nimport type { MySqlColumn } from './mysql-core/index.ts';\nimport type { ExtraConfigColumn, PgColumn, PgSequenceOptions } from './pg-core/index.ts';\nimport type { SingleStoreColumn } from './singlestore-core/index.ts';\nimport type { SQL } from './sql/sql.ts';\nimport type { SQLiteColumn } from './sqlite-core/index.ts';\nimport type { Assume, Simplify } from './utils.ts';\n\nexport type ColumnDataType =\n\t| 'string'\n\t| 'number'\n\t| 'boolean'\n\t| 'array'\n\t| 'json'\n\t| 'date'\n\t| 'bigint'\n\t| 'custom'\n\t| 'buffer'\n\t| 'dateDuration'\n\t| 'duration'\n\t| 'relDuration'\n\t| 'localTime'\n\t| 'localDate'\n\t| 'localDateTime';\n\nexport type Dialect = 'pg' | 'mysql' | 'sqlite' | 'singlestore' | 'common' | 'gel';\n\nexport type GeneratedStorageMode = 'virtual' | 'stored';\n\nexport type GeneratedType = 'always' | 'byDefault';\n\nexport type GeneratedColumnConfig<TDataType> = {\n\tas: TDataType | SQL | (() => SQL);\n\ttype?: GeneratedType;\n\tmode?: GeneratedStorageMode;\n};\n\nexport type GeneratedIdentityConfig = {\n\tsequenceName?: string;\n\tsequenceOptions?: PgSequenceOptions;\n\ttype: 'always' | 'byDefault';\n};\n\nexport interface ColumnBuilderBaseConfig<TDataType extends ColumnDataType, TColumnType extends string> {\n\tname: string;\n\tdataType: TDataType;\n\tcolumnType: TColumnType;\n\tdata: unknown;\n\tdriverParam: unknown;\n\tenumValues: string[] | undefined;\n}\n\nexport type MakeColumnConfig<\n\tT extends ColumnBuilderBaseConfig<ColumnDataType, string>,\n\tTTableName extends string,\n\tTData = T extends { $type: infer U } ? U : T['data'],\n> = {\n\tname: T['name'];\n\ttableName: TTableName;\n\tdataType: T['dataType'];\n\tcolumnType: T['columnType'];\n\tdata: TData;\n\tdriverParam: T['driverParam'];\n\tnotNull: T extends { notNull: true } ? true : false;\n\thasDefault: T extends { hasDefault: true } ? true : false;\n\tisPrimaryKey: T extends { isPrimaryKey: true } ? true : false;\n\tisAutoincrement: T extends { isAutoincrement: true } ? true : false;\n\thasRuntimeDefault: T extends { hasRuntimeDefault: true } ? true : false;\n\tenumValues: T['enumValues'];\n\tbaseColumn: T extends { baseBuilder: infer U extends ColumnBuilderBase } ? BuildColumn<TTableName, U, 'common'>\n\t\t: never;\n\tidentity: T extends { identity: 'always' } ? 'always' : T extends { identity: 'byDefault' } ? 'byDefault' : undefined;\n\tgenerated: T extends { generated: infer G } ? unknown extends G ? undefined\n\t\t: G extends undefined ? undefined\n\t\t: G\n\t\t: undefined;\n} & {};\n\nexport type ColumnBuilderTypeConfig<\n\t// eslint-disable-next-line @typescript-eslint/no-unused-vars\n\tT extends ColumnBuilderBaseConfig<ColumnDataType, string>,\n\tTTypeConfig extends object = object,\n> = Simplify<\n\t& {\n\t\tbrand: 'ColumnBuilder';\n\t\tname: T['name'];\n\t\tdataType: T['dataType'];\n\t\tcolumnType: T['columnType'];\n\t\tdata: T['data'];\n\t\tdriverParam: T['driverParam'];\n\t\tnotNull: T extends { notNull: infer U } ? U : boolean;\n\t\thasDefault: T extends { hasDefault: infer U } ? U : boolean;\n\t\tenumValues: T['enumValues'];\n\t\tidentity: T extends { identity: infer U } ? U : unknown;\n\t\tgenerated: T extends { generated: infer G } ? G extends undefined ? unknown : G : unknown;\n\t}\n\t& TTypeConfig\n>;\n\nexport type ColumnBuilderRuntimeConfig<TData, TRuntimeConfig extends object = object> = {\n\tname: string;\n\tkeyAsName: boolean;\n\tnotNull: boolean;\n\tdefault: TData | SQL | undefined;\n\tdefaultFn: (() => TData | SQL) | undefined;\n\tonUpdateFn: (() => TData | SQL) | undefined;\n\thasDefault: boolean;\n\tprimaryKey: boolean;\n\tisUnique: boolean;\n\tuniqueName: string | undefined;\n\tuniqueType: string | undefined;\n\tdataType: string;\n\tcolumnType: string;\n\tgenerated: GeneratedColumnConfig<TData> | undefined;\n\tgeneratedIdentity: GeneratedIdentityConfig | undefined;\n} & TRuntimeConfig;\n\nexport interface ColumnBuilderExtraConfig {\n\tprimaryKeyHasDefault?: boolean;\n}\n\nexport type NotNull<T extends ColumnBuilderBase> = T & {\n\t_: {\n\t\tnotNull: true;\n\t};\n};\n\nexport type HasDefault<T extends ColumnBuilderBase> = T & {\n\t_: {\n\t\thasDefault: true;\n\t};\n};\n\nexport type IsPrimaryKey<T extends ColumnBuilderBase> = T & {\n\t_: {\n\t\tisPrimaryKey: true;\n\t};\n};\n\nexport type IsAutoincrement<T extends ColumnBuilderBase> = T & {\n\t_: {\n\t\tisAutoincrement: true;\n\t};\n};\n\nexport type HasRuntimeDefault<T extends ColumnBuilderBase> = T & {\n\t_: {\n\t\thasRuntimeDefault: true;\n\t};\n};\n\nexport type $Type<T extends ColumnBuilderBase, TType> = T & {\n\t_: {\n\t\t$type: TType;\n\t};\n};\n\nexport type HasGenerated<T extends ColumnBuilderBase, TGenerated extends {} = {}> = T & {\n\t_: {\n\t\thasDefault: true;\n\t\tgenerated: TGenerated;\n\t};\n};\n\nexport type IsIdentity<\n\tT extends ColumnBuilderBase,\n\tTType extends 'always' | 'byDefault',\n> = T & {\n\t_: {\n\t\tnotNull: true;\n\t\thasDefault: true;\n\t\tidentity: TType;\n\t};\n};\nexport interface ColumnBuilderBase<\n\tT extends ColumnBuilderBaseConfig<ColumnDataType, string> = ColumnBuilderBaseConfig<ColumnDataType, string>,\n\tTTypeConfig extends object = object,\n> {\n\t_: ColumnBuilderTypeConfig<T, TTypeConfig>;\n}\n\n// To understand how to use `ColumnBuilder` and `AnyColumnBuilder`, see `Column` and `AnyColumn` documentation.\nexport abstract class ColumnBuilder<\n\tT extends ColumnBuilderBaseConfig<ColumnDataType, string> = ColumnBuilderBaseConfig<ColumnDataType, string>,\n\tTRuntimeConfig extends object = object,\n\tTTypeConfig extends object = object,\n\tTExtraConfig extends ColumnBuilderExtraConfig = ColumnBuilderExtraConfig,\n> implements ColumnBuilderBase<T, TTypeConfig> {\n\tstatic readonly [entityKind]: string = 'ColumnBuilder';\n\n\tdeclare _: ColumnBuilderTypeConfig<T, TTypeConfig>;\n\n\tprotected config: ColumnBuilderRuntimeConfig<T['data'], TRuntimeConfig>;\n\n\tconstructor(name: T['name'], dataType: T['dataType'], columnType: T['columnType']) {\n\t\tthis.config = {\n\t\t\tname,\n\t\t\tkeyAsName: name === '',\n\t\t\tnotNull: false,\n\t\t\tdefault: undefined,\n\t\t\thasDefault: false,\n\t\t\tprimaryKey: false,\n\t\t\tisUnique: false,\n\t\t\tuniqueName: undefined,\n\t\t\tuniqueType: undefined,\n\t\t\tdataType,\n\t\t\tcolumnType,\n\t\t\tgenerated: undefined,\n\t\t} as ColumnBuilderRuntimeConfig<T['data'], TRuntimeConfig>;\n\t}\n\n\t/**\n\t * Changes the data type of the column. Commonly used with `json` columns. Also, useful for branded types.\n\t *\n\t * @example\n\t * ```ts\n\t * const users = pgTable('users', {\n\t * \tid: integer('id').$type<UserId>().primaryKey(),\n\t * \tdetails: json('details').$type<UserDetails>().notNull(),\n\t * });\n\t * ```\n\t */\n\t$type<TType>(): $Type<this, TType> {\n\t\treturn this as $Type<this, TType>;\n\t}\n\n\t/**\n\t * Adds a `not null` clause to the column definition.\n\t *\n\t * Affects the `select` model of the table - columns *without* `not null` will be nullable on select.\n\t */\n\tnotNull(): NotNull<this> {\n\t\tthis.config.notNull = true;\n\t\treturn this as NotNull<this>;\n\t}\n\n\t/**\n\t * Adds a `default <value>` clause to the column definition.\n\t *\n\t * Affects the `insert` model of the table - columns *with* `default` are optional on insert.\n\t *\n\t * If you need to set a dynamic default value, use {@link $defaultFn} instead.\n\t */\n\tdefault(value: (this['_'] extends { $type: infer U } ? U : this['_']['data']) | SQL): HasDefault<this> {\n\t\tthis.config.default = value;\n\t\tthis.config.hasDefault = true;\n\t\treturn this as HasDefault<this>;\n\t}\n\n\t/**\n\t * Adds a dynamic default value to the column.\n\t * The function will be called when the row is inserted, and the returned value will be used as the column value.\n\t *\n\t * **Note:** This value does not affect the `drizzle-kit` behavior, it is only used at runtime in `drizzle-orm`.\n\t */\n\t$defaultFn(\n\t\tfn: () => (this['_'] extends { $type: infer U } ? U : this['_']['data']) | SQL,\n\t): HasRuntimeDefault<HasDefault<this>> {\n\t\tthis.config.defaultFn = fn;\n\t\tthis.config.hasDefault = true;\n\t\treturn this as HasRuntimeDefault<HasDefault<this>>;\n\t}\n\n\t/**\n\t * Alias for {@link $defaultFn}.\n\t */\n\t$default = this.$defaultFn;\n\n\t/**\n\t * Adds a dynamic update value to the column.\n\t * The function will be called when the row is updated, and the returned value will be used as the column value if none is provided.\n\t * If no `default` (or `$defaultFn`) value is provided, the function will be called when the row is inserted as well, and the returned value will be used as the column value.\n\t *\n\t * **Note:** This value does not affect the `drizzle-kit` behavior, it is only used at runtime in `drizzle-orm`.\n\t */\n\t$onUpdateFn(\n\t\tfn: () => (this['_'] extends { $type: infer U } ? U : this['_']['data']) | SQL,\n\t): HasDefault<this> {\n\t\tthis.config.onUpdateFn = fn;\n\t\tthis.config.hasDefault = true;\n\t\treturn this as HasDefault<this>;\n\t}\n\n\t/**\n\t * Alias for {@link $onUpdateFn}.\n\t */\n\t$onUpdate = this.$onUpdateFn;\n\n\t/**\n\t * Adds a `primary key` clause to the column definition. This implicitly makes the column `not null`.\n\t *\n\t * In SQLite, `integer primary key` implicitly makes the column auto-incrementing.\n\t */\n\tprimaryKey(): TExtraConfig['primaryKeyHasDefault'] extends true ? IsPrimaryKey<HasDefault<NotNull<this>>>\n\t\t: IsPrimaryKey<NotNull<this>>\n\t{\n\t\tthis.config.primaryKey = true;\n\t\tthis.config.notNull = true;\n\t\treturn this as TExtraConfig['primaryKeyHasDefault'] extends true ? IsPrimaryKey<HasDefault<NotNull<this>>>\n\t\t\t: IsPrimaryKey<NotNull<this>>;\n\t}\n\n\tabstract generatedAlwaysAs(\n\t\tas: SQL | T['data'] | (() => SQL),\n\t\tconfig?: Partial<GeneratedColumnConfig<unknown>>,\n\t): HasGenerated<this, {\n\t\ttype: 'always';\n\t}>;\n\n\t/** @internal Sets the name of the column to the key within the table definition if a name was not given. */\n\tsetName(name: string) {\n\t\tif (this.config.name !== '') return;\n\t\tthis.config.name = name;\n\t}\n}\n\nexport type BuildColumn<\n\tTTableName extends string,\n\tTBuilder extends ColumnBuilderBase,\n\tTDialect extends Dialect,\n> = TDialect extends 'pg' ? PgColumn<\n\t\tMakeColumnConfig<TBuilder['_'], TTableName>,\n\t\t{},\n\t\tSimplify<Omit<TBuilder['_'], keyof MakeColumnConfig<TBuilder['_'], TTableName> | 'brand' | 'dialect'>>\n\t>\n\t: TDialect extends 'mysql' ? MySqlColumn<\n\t\t\tMakeColumnConfig<TBuilder['_'], TTableName>,\n\t\t\t{},\n\t\t\tSimplify<\n\t\t\t\tOmit<\n\t\t\t\t\tTBuilder['_'],\n\t\t\t\t\t| keyof MakeColumnConfig<TBuilder['_'], TTableName>\n\t\t\t\t\t| 'brand'\n\t\t\t\t\t| 'dialect'\n\t\t\t\t\t| 'primaryKeyHasDefault'\n\t\t\t\t\t| 'mysqlColumnBuilderBrand'\n\t\t\t\t>\n\t\t\t>\n\t\t>\n\t: TDialect extends 'sqlite' ? SQLiteColumn<\n\t\t\tMakeColumnConfig<TBuilder['_'], TTableName>,\n\t\t\t{},\n\t\t\tSimplify<Omit<TBuilder['_'], keyof MakeColumnConfig<TBuilder['_'], TTableName> | 'brand' | 'dialect'>>\n\t\t>\n\t: TDialect extends 'common' ? Column<\n\t\t\tMakeColumnConfig<TBuilder['_'], TTableName>,\n\t\t\t{},\n\t\t\tSimplify<Omit<TBuilder['_'], keyof MakeColumnConfig<TBuilder['_'], TTableName> | 'brand' | 'dialect'>>\n\t\t>\n\t: TDialect extends 'singlestore' ? SingleStoreColumn<\n\t\t\tMakeColumnConfig<TBuilder['_'], TTableName>,\n\t\t\t{},\n\t\t\tSimplify<\n\t\t\t\tOmit<\n\t\t\t\t\tTBuilder['_'],\n\t\t\t\t\t| keyof MakeColumnConfig<TBuilder['_'], TTableName>\n\t\t\t\t\t| 'brand'\n\t\t\t\t\t| 'dialect'\n\t\t\t\t\t| 'primaryKeyHasDefault'\n\t\t\t\t\t| 'singlestoreColumnBuilderBrand'\n\t\t\t\t>\n\t\t\t>\n\t\t>\n\t: TDialect extends 'gel' ? GelColumn<\n\t\t\tMakeColumnConfig<TBuilder['_'], TTableName>,\n\t\t\t{},\n\t\t\tSimplify<Omit<TBuilder['_'], keyof MakeColumnConfig<TBuilder['_'], TTableName> | 'brand' | 'dialect'>>\n\t\t>\n\t: never;\n\nexport type BuildIndexColumn<\n\tTDialect extends Dialect,\n> = TDialect extends 'pg' ? ExtraConfigColumn\n\t: TDialect extends 'gel' ? GelExtraConfigColumn\n\t: never;\n\n// TODO\n// try to make sql as well + indexRaw\n\n// optional after everything will be working as expected\n// also try to leave only needed methods for extraConfig\n// make an error if I pass .asc() to fk and so on\n\nexport type BuildColumns<\n\tTTableName extends string,\n\tTConfigMap extends Record<string, ColumnBuilderBase>,\n\tTDialect extends Dialect,\n> =\n\t& {\n\t\t[Key in keyof TConfigMap]: BuildColumn<TTableName, {\n\t\t\t_:\n\t\t\t\t& Omit<TConfigMap[Key]['_'], 'name'>\n\t\t\t\t& { name: TConfigMap[Key]['_']['name'] extends '' ? Assume<Key, string> : TConfigMap[Key]['_']['name'] };\n\t\t}, TDialect>;\n\t}\n\t& {};\n\nexport type BuildExtraConfigColumns<\n\t_TTableName extends string,\n\tTConfigMap extends Record<string, ColumnBuilderBase>,\n\tTDialect extends Dialect,\n> =\n\t& {\n\t\t[Key in keyof TConfigMap]: BuildIndexColumn<TDialect>;\n\t}\n\t& {};\n\nexport type ChangeColumnTableName<TColumn extends Column, TAlias extends string, TDialect extends Dialect> =\n\tTDialect extends 'pg' ? PgColumn<MakeColumnConfig<TColumn['_'], TAlias>>\n\t\t: TDialect extends 'mysql' ? MySqlColumn<MakeColumnConfig<TColumn['_'], TAlias>>\n\t\t: TDialect extends 'singlestore' ? SingleStoreColumn<MakeColumnConfig<TColumn['_'], TAlias>>\n\t\t: TDialect extends 'sqlite' ? SQLiteColumn<MakeColumnConfig<TColumn['_'], TAlias>>\n\t\t: TDialect extends 'gel' ? GelColumn<MakeColumnConfig<TColumn['_'], TAlias>>\n\t\t: never;\n", "import { entityKind } from '~/entity.ts';\nimport { TableName } from '~/table.utils.ts';\nimport type { AnyPgColumn, PgColumn } from './columns/index.ts';\nimport type { PgTable } from './table.ts';\n\nexport type UpdateDeleteAction = 'cascade' | 'restrict' | 'no action' | 'set null' | 'set default';\n\nexport type Reference = () => {\n\treadonly name?: string;\n\treadonly columns: PgColumn[];\n\treadonly foreignTable: PgTable;\n\treadonly foreignColumns: PgColumn[];\n};\n\nexport class ForeignKeyBuilder {\n\tstatic readonly [entityKind]: string = 'PgForeignKeyBuilder';\n\n\t/** @internal */\n\treference: Reference;\n\n\t/** @internal */\n\t_onUpdate: UpdateDeleteAction | undefined = 'no action';\n\n\t/** @internal */\n\t_onDelete: UpdateDeleteAction | undefined = 'no action';\n\n\tconstructor(\n\t\tconfig: () => {\n\t\t\tname?: string;\n\t\t\tcolumns: PgColumn[];\n\t\t\tforeignColumns: PgColumn[];\n\t\t},\n\t\tactions?: {\n\t\t\tonUpdate?: UpdateDeleteAction;\n\t\t\tonDelete?: UpdateDeleteAction;\n\t\t} | undefined,\n\t) {\n\t\tthis.reference = () => {\n\t\t\tconst { name, columns, foreignColumns } = config();\n\t\t\treturn { name, columns, foreignTable: foreignColumns[0]!.table as PgTable, foreignColumns };\n\t\t};\n\t\tif (actions) {\n\t\t\tthis._onUpdate = actions.onUpdate;\n\t\t\tthis._onDelete = actions.onDelete;\n\t\t}\n\t}\n\n\tonUpdate(action: UpdateDeleteAction): this {\n\t\tthis._onUpdate = action === undefined ? 'no action' : action;\n\t\treturn this;\n\t}\n\n\tonDelete(action: UpdateDeleteAction): this {\n\t\tthis._onDelete = action === undefined ? 'no action' : action;\n\t\treturn this;\n\t}\n\n\t/** @internal */\n\tbuild(table: PgTable): ForeignKey {\n\t\treturn new ForeignKey(table, this);\n\t}\n}\n\nexport type AnyForeignKeyBuilder = ForeignKeyBuilder;\n\nexport class ForeignKey {\n\tstatic readonly [entityKind]: string = 'PgForeignKey';\n\n\treadonly reference: Reference;\n\treadonly onUpdate: UpdateDeleteAction | undefined;\n\treadonly onDelete: UpdateDeleteAction | undefined;\n\n\tconstructor(readonly table: PgTable, builder: ForeignKeyBuilder) {\n\t\tthis.reference = builder.reference;\n\t\tthis.onUpdate = builder._onUpdate;\n\t\tthis.onDelete = builder._onDelete;\n\t}\n\n\tgetName(): string {\n\t\tconst { name, columns, foreignColumns } = this.reference();\n\t\tconst columnNames = columns.map((column) => column.name);\n\t\tconst foreignColumnNames = foreignColumns.map((column) => column.name);\n\t\tconst chunks = [\n\t\t\tthis.table[TableName],\n\t\t\t...columnNames,\n\t\t\tforeignColumns[0]!.table[TableName],\n\t\t\t...foreignColumnNames,\n\t\t];\n\t\treturn name ?? `${chunks.join('_')}_fk`;\n\t}\n}\n\ntype ColumnsWithTable<\n\tTTableName extends string,\n\tTColumns extends PgColumn[],\n> = { [Key in keyof TColumns]: AnyPgColumn<{ tableName: TTableName }> };\n\nexport function foreignKey<\n\tTTableName extends string,\n\tTForeignTableName extends string,\n\tTColumns extends [AnyPgColumn<{ tableName: TTableName }>, ...AnyPgColumn<{ tableName: TTableName }>[]],\n>(\n\tconfig: {\n\t\tname?: string;\n\t\tcolumns: TColumns;\n\t\tforeignColumns: ColumnsWithTable<TForeignTableName, TColumns>;\n\t},\n): ForeignKeyBuilder {\n\tfunction mappedConfig() {\n\t\tconst { name, columns, foreignColumns } = config;\n\t\treturn {\n\t\t\tname,\n\t\t\tcolumns,\n\t\t\tforeignColumns,\n\t\t};\n\t}\n\n\treturn new ForeignKeyBuilder(mappedConfig);\n}\n", "/** @internal */\nexport const TableName = Symbol.for('drizzle:Name');\n", "export function iife<T extends unknown[], U>(fn: (...args: T) => U, ...args: T): U {\n\treturn fn(...args);\n}\n", "import { entityKind } from '~/entity.ts';\nimport { TableName } from '~/table.utils.ts';\nimport type { PgColumn } from './columns/index.ts';\nimport type { PgTable } from './table.ts';\n\nexport function unique(name?: string): UniqueOnConstraintBuilder {\n\treturn new UniqueOnConstraintBuilder(name);\n}\n\nexport function uniqueKeyName(table: PgTable, columns: string[]) {\n\treturn `${table[TableName]}_${columns.join('_')}_unique`;\n}\n\nexport class UniqueConstraintBuilder {\n\tstatic readonly [entityKind]: string = 'PgUniqueConstraintBuilder';\n\n\t/** @internal */\n\tcolumns: PgColumn[];\n\t/** @internal */\n\tnullsNotDistinctConfig = false;\n\n\tconstructor(\n\t\tcolumns: PgColumn[],\n\t\tprivate name?: string,\n\t) {\n\t\tthis.columns = columns;\n\t}\n\n\tnullsNotDistinct() {\n\t\tthis.nullsNotDistinctConfig = true;\n\t\treturn this;\n\t}\n\n\t/** @internal */\n\tbuild(table: PgTable): UniqueConstraint {\n\t\treturn new UniqueConstraint(table, this.columns, this.nullsNotDistinctConfig, this.name);\n\t}\n}\n\nexport class UniqueOnConstraintBuilder {\n\tstatic readonly [entityKind]: string = 'PgUniqueOnConstraintBuilder';\n\n\t/** @internal */\n\tname?: string;\n\n\tconstructor(\n\t\tname?: string,\n\t) {\n\t\tthis.name = name;\n\t}\n\n\ton(...columns: [PgColumn, ...PgColumn[]]) {\n\t\treturn new UniqueConstraintBuilder(columns, this.name);\n\t}\n}\n\nexport class UniqueConstraint {\n\tstatic readonly [entityKind]: string = 'PgUniqueConstraint';\n\n\treadonly columns: PgColumn[];\n\treadonly name?: string;\n\treadonly nullsNotDistinct: boolean = false;\n\n\tconstructor(readonly table: PgTable, columns: PgColumn[], nullsNotDistinct: boolean, name?: string) {\n\t\tthis.columns = columns;\n\t\tthis.name = name ?? uniqueKeyName(this.table, this.columns.map((column) => column.name));\n\t\tthis.nullsNotDistinct = nullsNotDistinct;\n\t}\n\n\tgetName() {\n\t\treturn this.name;\n\t}\n}\n", "function parsePgArrayValue(arrayString: string, startFrom: number, inQuotes: boolean): [string, number] {\n\tfor (let i = startFrom; i < arrayString.length; i++) {\n\t\tconst char = arrayString[i];\n\n\t\tif (char === '\\\\') {\n\t\t\ti++;\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (char === '\"') {\n\t\t\treturn [arrayString.slice(startFrom, i).replace(/\\\\/g, ''), i + 1];\n\t\t}\n\n\t\tif (inQuotes) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (char === ',' || char === '}') {\n\t\t\treturn [arrayString.slice(startFrom, i).replace(/\\\\/g, ''), i];\n\t\t}\n\t}\n\n\treturn [arrayString.slice(startFrom).replace(/\\\\/g, ''), arrayString.length];\n}\n\nexport function parsePgNestedArray(arrayString: string, startFrom = 0): [any[], number] {\n\tconst result: any[] = [];\n\tlet i = startFrom;\n\tlet lastCharIsComma = false;\n\n\twhile (i < arrayString.length) {\n\t\tconst char = arrayString[i];\n\n\t\tif (char === ',') {\n\t\t\tif (lastCharIsComma || i === startFrom) {\n\t\t\t\tresult.push('');\n\t\t\t}\n\t\t\tlastCharIsComma = true;\n\t\t\ti++;\n\t\t\tcontinue;\n\t\t}\n\n\t\tlastCharIsComma = false;\n\n\t\tif (char === '\\\\') {\n\t\t\ti += 2;\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (char === '\"') {\n\t\t\tconst [value, startFrom] = parsePgArrayValue(arrayString, i + 1, true);\n\t\t\tresult.push(value);\n\t\t\ti = startFrom;\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (char === '}') {\n\t\t\treturn [result, i + 1];\n\t\t}\n\n\t\tif (char === '{') {\n\t\t\tconst [value, startFrom] = parsePgNestedArray(arrayString, i + 1);\n\t\t\tresult.push(value);\n\t\t\ti = startFrom;\n\t\t\tcontinue;\n\t\t}\n\n\t\tconst [value, newStartFrom] = parsePgArrayValue(arrayString, i, false);\n\t\tresult.push(value);\n\t\ti = newStartFrom;\n\t}\n\n\treturn [result, i];\n}\n\nexport function parsePgArray(arrayString: string): any[] {\n\tconst [result] = parsePgNestedArray(arrayString, 1);\n\treturn result;\n}\n\nexport function makePgArray(array: any[]): string {\n\treturn `{${\n\t\tarray.map((item) => {\n\t\t\tif (Array.isArray(item)) {\n\t\t\t\treturn makePgArray(item);\n\t\t\t}\n\n\t\t\tif (typeof item === 'string') {\n\t\t\t\treturn `\"${item.replace(/\\\\/g, '\\\\\\\\').replace(/\"/g, '\\\\\"')}\"`;\n\t\t\t}\n\n\t\t\treturn `${item}`;\n\t\t}).join(',')\n\t}}`;\n}\n", "import { entityKind } from './entity.ts';\nimport type { SQL, SQLWrapper } from './sql/sql.ts';\n\nexport interface Subquery<\n\t// eslint-disable-next-line @typescript-eslint/no-unused-vars\n\tTAlias extends string = string,\n\t// eslint-disable-next-line @typescript-eslint/no-unused-vars\n\tTSelectedFields extends Record<string, unknown> = Record<string, unknown>,\n> extends SQLWrapper {\n\t// SQLWrapper runtime implementation is defined in 'sql/sql.ts'\n}\nexport class Subquery<\n\tTAlias extends string = string,\n\tTSelectedFields extends Record<string, unknown> = Record<string, unknown>,\n> implements SQLWrapper {\n\tstatic readonly [entityKind]: string = 'Subquery';\n\n\tdeclare _: {\n\t\tbrand: 'Subquery';\n\t\tsql: SQL;\n\t\tselectedFields: TSelectedFields;\n\t\talias: TAlias;\n\t\tisWith: boolean;\n\t\tusedTables?: string[];\n\t};\n\n\tconstructor(sql: SQL, fields: TSelectedFields, alias: string, isWith = false, usedTables: string[] = []) {\n\t\tthis._ = {\n\t\t\tbrand: 'Subquery',\n\t\t\tsql,\n\t\t\tselectedFields: fields as TSelectedFields,\n\t\t\talias: alias as TAlias,\n\t\t\tisWith,\n\t\t\tusedTables,\n\t\t};\n\t}\n\n\t// getSQL(): SQL<unknown> {\n\t// \treturn new SQL([this]);\n\t// }\n}\n\nexport class WithSubquery<\n\tTAlias extends string = string,\n\tTSelection extends Record<string, unknown> = Record<string, unknown>,\n> extends Subquery<TAlias, TSelection> {\n\tstatic override readonly [entityKind]: string = 'WithSubquery';\n}\n\nexport type WithSubqueryWithoutSelection<TAlias extends string> = WithSubquery<TAlias, {}>;\n", "import type { Span, Tracer } from '@opentelemetry/api';\nimport { iife } from '~/tracing-utils.ts';\nimport { npmVersion } from '~/version.ts';\n\nlet otel: typeof import('@opentelemetry/api') | undefined;\nlet rawTracer: Tracer | undefined;\n// try {\n// \totel = await import('@opentelemetry/api');\n// } catch (err: any) {\n// \tif (err.code !== 'MODULE_NOT_FOUND' && err.code !== 'ERR_MODULE_NOT_FOUND') {\n// \t\tthrow err;\n// \t}\n// }\n\ntype SpanName =\n\t| 'drizzle.operation'\n\t| 'drizzle.prepareQuery'\n\t| 'drizzle.buildSQL'\n\t| 'drizzle.execute'\n\t| 'drizzle.driver.execute'\n\t| 'drizzle.mapResponse';\n\n/** @internal */\nexport const tracer = {\n\tstartActiveSpan<F extends (span?: Span) => unknown>(name: SpanName, fn: F): ReturnType<F> {\n\t\tif (!otel) {\n\t\t\treturn fn() as ReturnType<F>;\n\t\t}\n\n\t\tif (!rawTracer) {\n\t\t\trawTracer = otel.trace.getTracer('drizzle-orm', npmVersion);\n\t\t}\n\n\t\treturn iife(\n\t\t\t(otel, rawTracer) =>\n\t\t\t\trawTracer.startActiveSpan(\n\t\t\t\t\tname,\n\t\t\t\t\t((span: Span) => {\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\treturn fn(span);\n\t\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\t\tspan.setStatus({\n\t\t\t\t\t\t\t\tcode: otel.SpanStatusCode.ERROR,\n\t\t\t\t\t\t\t\tmessage: e instanceof Error ? e.message : 'Unknown error', // eslint-disable-line no-instanceof/no-instanceof\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tthrow e;\n\t\t\t\t\t\t} finally {\n\t\t\t\t\t\t\tspan.end();\n\t\t\t\t\t\t}\n\t\t\t\t\t}) as F,\n\t\t\t\t),\n\t\t\totel,\n\t\t\trawTracer,\n\t\t);\n\t},\n};\n", "// package.json\r\nvar version = \"0.44.5\";\r\n\r\n// src/version.ts\r\nvar compatibilityVersion = 10;\r\nexport {\r\n  compatibilityVersion,\r\n  version as npmVersion\r\n};\r\n", "export const ViewBaseConfig = Symbol.for('drizzle:ViewBaseConfig');\n", "import type { Column, GetColumnData } from './column.ts';\nimport { entityKind } from './entity.ts';\nimport type { OptionalKeyOnly, RequiredKeyOnly } from './operations.ts';\nimport type { SQLWrapper } from './sql/sql.ts';\nimport { TableName } from './table.utils.ts';\nimport type { Simplify, Update } from './utils.ts';\n\nexport interface TableConfig<TColumn extends Column = Column<any>> {\n\tname: string;\n\tschema: string | undefined;\n\tcolumns: Record<string, TColumn>;\n\tdialect: string;\n}\n\nexport type UpdateTableConfig<T extends TableConfig, TUpdate extends Partial<TableConfig>> = Required<\n\tUpdate<T, TUpdate>\n>;\n\n/** @internal */\nexport const Schema = Symbol.for('drizzle:Schema');\n\n/** @internal */\nexport const Columns = Symbol.for('drizzle:Columns');\n\n/** @internal */\nexport const ExtraConfigColumns = Symbol.for('drizzle:ExtraConfigColumns');\n\n/** @internal */\nexport const OriginalName = Symbol.for('drizzle:OriginalName');\n\n/** @internal */\nexport const BaseName = Symbol.for('drizzle:BaseName');\n\n/** @internal */\nexport const IsAlias = Symbol.for('drizzle:IsAlias');\n\n/** @internal */\nexport const ExtraConfigBuilder = Symbol.for('drizzle:ExtraConfigBuilder');\n\nconst IsDrizzleTable = Symbol.for('drizzle:IsDrizzleTable');\n\nexport interface Table<\n\t// eslint-disable-next-line @typescript-eslint/no-unused-vars\n\tT extends TableConfig = TableConfig,\n> extends SQLWrapper {\n\t// SQLWrapper runtime implementation is defined in 'sql/sql.ts'\n}\n\nexport class Table<T extends TableConfig = TableConfig> implements SQLWrapper {\n\tstatic readonly [entityKind]: string = 'Table';\n\n\tdeclare readonly _: {\n\t\treadonly brand: 'Table';\n\t\treadonly config: T;\n\t\treadonly name: T['name'];\n\t\treadonly schema: T['schema'];\n\t\treadonly columns: T['columns'];\n\t\treadonly inferSelect: InferSelectModel<Table<T>>;\n\t\treadonly inferInsert: InferInsertModel<Table<T>>;\n\t};\n\n\tdeclare readonly $inferSelect: InferSelectModel<Table<T>>;\n\tdeclare readonly $inferInsert: InferInsertModel<Table<T>>;\n\n\t/** @internal */\n\tstatic readonly Symbol = {\n\t\tName: TableName as typeof TableName,\n\t\tSchema: Schema as typeof Schema,\n\t\tOriginalName: OriginalName as typeof OriginalName,\n\t\tColumns: Columns as typeof Columns,\n\t\tExtraConfigColumns: ExtraConfigColumns as typeof ExtraConfigColumns,\n\t\tBaseName: BaseName as typeof BaseName,\n\t\tIsAlias: IsAlias as typeof IsAlias,\n\t\tExtraConfigBuilder: ExtraConfigBuilder as typeof ExtraConfigBuilder,\n\t};\n\n\t/**\n\t * @internal\n\t * Can be changed if the table is aliased.\n\t */\n\t[TableName]: string;\n\n\t/**\n\t * @internal\n\t * Used to store the original name of the table, before any aliasing.\n\t */\n\t[OriginalName]: string;\n\n\t/** @internal */\n\t[Schema]: string | undefined;\n\n\t/** @internal */\n\t[Columns]!: T['columns'];\n\n\t/** @internal */\n\t[ExtraConfigColumns]!: Record<string, unknown>;\n\n\t/**\n\t *  @internal\n\t * Used to store the table name before the transformation via the `tableCreator` functions.\n\t */\n\t[BaseName]: string;\n\n\t/** @internal */\n\t[IsAlias] = false;\n\n\t/** @internal */\n\t[IsDrizzleTable] = true;\n\n\t/** @internal */\n\t[ExtraConfigBuilder]: ((self: any) => Record<string, unknown> | unknown[]) | undefined = undefined;\n\n\tconstructor(name: string, schema: string | undefined, baseName: string) {\n\t\tthis[TableName] = this[OriginalName] = name;\n\t\tthis[Schema] = schema;\n\t\tthis[BaseName] = baseName;\n\t}\n}\n\nexport function isTable(table: unknown): table is Table {\n\treturn typeof table === 'object' && table !== null && IsDrizzleTable in table;\n}\n\n/**\n * Any table with a specified boundary.\n *\n * @example\n\t```ts\n\t// Any table with a specific name\n\ttype AnyUsersTable = AnyTable<{ name: 'users' }>;\n\t```\n *\n * To describe any table with any config, simply use `Table` without any type arguments, like this:\n *\n\t```ts\n\tfunction needsTable(table: Table) {\n\t\t...\n\t}\n\t```\n */\nexport type AnyTable<TPartial extends Partial<TableConfig>> = Table<UpdateTableConfig<TableConfig, TPartial>>;\n\nexport function getTableName<T extends Table>(table: T): T['_']['name'] {\n\treturn table[TableName];\n}\n\nexport function getTableUniqueName<T extends Table>(table: T): `${T['_']['schema']}.${T['_']['name']}` {\n\treturn `${table[Schema] ?? 'public'}.${table[TableName]}`;\n}\n\nexport type MapColumnName<TName extends string, TColumn extends Column, TDBColumNames extends boolean> =\n\tTDBColumNames extends true ? TColumn['_']['name']\n\t\t: TName;\n\nexport type InferModelFromColumns<\n\tTColumns extends Record<string, Column>,\n\tTInferMode extends 'select' | 'insert' = 'select',\n\tTConfig extends { dbColumnNames: boolean; override?: boolean } = { dbColumnNames: false; override: false },\n> = Simplify<\n\tTInferMode extends 'insert' ?\n\t\t\t& {\n\t\t\t\t[\n\t\t\t\t\tKey in keyof TColumns & string as RequiredKeyOnly<\n\t\t\t\t\t\tMapColumnName<Key, TColumns[Key], TConfig['dbColumnNames']>,\n\t\t\t\t\t\tTColumns[Key]\n\t\t\t\t\t>\n\t\t\t\t]: GetColumnData<TColumns[Key], 'query'>;\n\t\t\t}\n\t\t\t& {\n\t\t\t\t[\n\t\t\t\t\tKey in keyof TColumns & string as OptionalKeyOnly<\n\t\t\t\t\t\tMapColumnName<Key, TColumns[Key], TConfig['dbColumnNames']>,\n\t\t\t\t\t\tTColumns[Key],\n\t\t\t\t\t\tTConfig['override']\n\t\t\t\t\t>\n\t\t\t\t]?: GetColumnData<TColumns[Key], 'query'> | undefined;\n\t\t\t}\n\t\t: {\n\t\t\t[\n\t\t\t\tKey in keyof TColumns & string as MapColumnName<\n\t\t\t\t\tKey,\n\t\t\t\t\tTColumns[Key],\n\t\t\t\t\tTConfig['dbColumnNames']\n\t\t\t\t>\n\t\t\t]: GetColumnData<TColumns[Key], 'query'>;\n\t\t}\n>;\n\n/** @deprecated Use one of the alternatives: {@link InferSelectModel} / {@link InferInsertModel}, or `table.$inferSelect` / `table.$inferInsert`\n */\nexport type InferModel<\n\tTTable extends Table,\n\tTInferMode extends 'select' | 'insert' = 'select',\n\tTConfig extends { dbColumnNames: boolean } = { dbColumnNames: false },\n> = InferModelFromColumns<TTable['_']['columns'], TInferMode, TConfig>;\n\nexport type InferSelectModel<\n\tTTable extends Table,\n\tTConfig extends { dbColumnNames: boolean } = { dbColumnNames: false },\n> = InferModelFromColumns<TTable['_']['columns'], 'select', TConfig>;\n\nexport type InferInsertModel<\n\tTTable extends Table,\n\tTConfig extends { dbColumnNames: boolean; override?: boolean } = { dbColumnNames: false; override: false },\n> = InferModelFromColumns<TTable['_']['columns'], 'insert', TConfig>;\n\nexport type InferEnum<T> = T extends { enumValues: readonly (infer U)[] } ? U\n\t: never;\n", "import type { Cache } from './cache/core/cache.ts';\nimport type { AnyColumn } from './column.ts';\nimport { Column } from './column.ts';\nimport { is } from './entity.ts';\nimport type { Logger } from './logger.ts';\nimport type { SelectedFieldsOrdered } from './operations.ts';\nimport type { TableLike } from './query-builders/select.types.ts';\nimport { Param, SQL, View } from './sql/sql.ts';\nimport type { DriverValueDecoder } from './sql/sql.ts';\nimport { Subquery } from './subquery.ts';\nimport { getTableName, Table } from './table.ts';\nimport { ViewBaseConfig } from './view-common.ts';\n\n/** @internal */\nexport function mapResultRow<TResult>(\n\tcolumns: SelectedFieldsOrdered<AnyColumn>,\n\trow: unknown[],\n\tjoinsNotNullableMap: Record<string, boolean> | undefined,\n): TResult {\n\t// Key -> nested object key, value -> table name if all fields in the nested object are from the same table, false otherwise\n\tconst nullifyMap: Record<string, string | false> = {};\n\n\tconst result = columns.reduce<Record<string, any>>(\n\t\t(result, { path, field }, columnIndex) => {\n\t\t\tlet decoder: DriverValueDecoder<unknown, unknown>;\n\t\t\tif (is(field, Column)) {\n\t\t\t\tdecoder = field;\n\t\t\t} else if (is(field, SQL)) {\n\t\t\t\tdecoder = field.decoder;\n\t\t\t} else {\n\t\t\t\tdecoder = field.sql.decoder;\n\t\t\t}\n\t\t\tlet node = result;\n\t\t\tfor (const [pathChunkIndex, pathChunk] of path.entries()) {\n\t\t\t\tif (pathChunkIndex < path.length - 1) {\n\t\t\t\t\tif (!(pathChunk in node)) {\n\t\t\t\t\t\tnode[pathChunk] = {};\n\t\t\t\t\t}\n\t\t\t\t\tnode = node[pathChunk];\n\t\t\t\t} else {\n\t\t\t\t\tconst rawValue = row[columnIndex]!;\n\t\t\t\t\tconst value = node[pathChunk] = rawValue === null ? null : decoder.mapFromDriverValue(rawValue);\n\n\t\t\t\t\tif (joinsNotNullableMap && is(field, Column) && path.length === 2) {\n\t\t\t\t\t\tconst objectName = path[0]!;\n\t\t\t\t\t\tif (!(objectName in nullifyMap)) {\n\t\t\t\t\t\t\tnullifyMap[objectName] = value === null ? getTableName(field.table) : false;\n\t\t\t\t\t\t} else if (\n\t\t\t\t\t\t\ttypeof nullifyMap[objectName] === 'string' && nullifyMap[objectName] !== getTableName(field.table)\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tnullifyMap[objectName] = false;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn result;\n\t\t},\n\t\t{},\n\t);\n\n\t// Nullify all nested objects from nullifyMap that are nullable\n\tif (joinsNotNullableMap && Object.keys(nullifyMap).length > 0) {\n\t\tfor (const [objectName, tableName] of Object.entries(nullifyMap)) {\n\t\t\tif (typeof tableName === 'string' && !joinsNotNullableMap[tableName]) {\n\t\t\t\tresult[objectName] = null;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn result as TResult;\n}\n\n/** @internal */\nexport function orderSelectedFields<TColumn extends AnyColumn>(\n\tfields: Record<string, unknown>,\n\tpathPrefix?: string[],\n): SelectedFieldsOrdered<TColumn> {\n\treturn Object.entries(fields).reduce<SelectedFieldsOrdered<AnyColumn>>((result, [name, field]) => {\n\t\tif (typeof name !== 'string') {\n\t\t\treturn result;\n\t\t}\n\n\t\tconst newPath = pathPrefix ? [...pathPrefix, name] : [name];\n\t\tif (is(field, Column) || is(field, SQL) || is(field, SQL.Aliased)) {\n\t\t\tresult.push({ path: newPath, field });\n\t\t} else if (is(field, Table)) {\n\t\t\tresult.push(...orderSelectedFields(field[Table.Symbol.Columns], newPath));\n\t\t} else {\n\t\t\tresult.push(...orderSelectedFields(field as Record<string, unknown>, newPath));\n\t\t}\n\t\treturn result;\n\t}, []) as SelectedFieldsOrdered<TColumn>;\n}\n\nexport function haveSameKeys(left: Record<string, unknown>, right: Record<string, unknown>) {\n\tconst leftKeys = Object.keys(left);\n\tconst rightKeys = Object.keys(right);\n\n\tif (leftKeys.length !== rightKeys.length) {\n\t\treturn false;\n\t}\n\n\tfor (const [index, key] of leftKeys.entries()) {\n\t\tif (key !== rightKeys[index]) {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\treturn true;\n}\n\n/** @internal */\nexport function mapUpdateSet(table: Table, values: Record<string, unknown>): UpdateSet {\n\tconst entries: [string, UpdateSet[string]][] = Object.entries(values)\n\t\t.filter(([, value]) => value !== undefined)\n\t\t.map(([key, value]) => {\n\t\t\t// eslint-disable-next-line unicorn/prefer-ternary\n\t\t\tif (is(value, SQL) || is(value, Column)) {\n\t\t\t\treturn [key, value];\n\t\t\t} else {\n\t\t\t\treturn [key, new Param(value, table[Table.Symbol.Columns][key])];\n\t\t\t}\n\t\t});\n\n\tif (entries.length === 0) {\n\t\tthrow new Error('No values to set');\n\t}\n\n\treturn Object.fromEntries(entries);\n}\n\nexport type UpdateSet = Record<string, SQL | Param | AnyColumn | null | undefined>;\n\nexport type OneOrMany<T> = T | T[];\n\nexport type Update<T, TUpdate> =\n\t& {\n\t\t[K in Exclude<keyof T, keyof TUpdate>]: T[K];\n\t}\n\t& TUpdate;\n\nexport type Simplify<T> =\n\t& {\n\t\t// @ts-ignore - \"Type parameter 'K' has a circular constraint\", not sure why\n\t\t[K in keyof T]: T[K];\n\t}\n\t& {};\n\nexport type SimplifyMappedType<T> = [T] extends [unknown] ? T : never;\n\nexport type ShallowRecord<K extends keyof any, T> = SimplifyMappedType<{ [P in K]: T }>;\n\nexport type Assume<T, U> = T extends U ? T : U;\n\nexport type Equal<X, Y> = (<T>() => T extends X ? 1 : 2) extends (<T>() => T extends Y ? 1 : 2) ? true : false;\n\nexport interface DrizzleTypeError<T extends string> {\n\t$drizzleTypeError: T;\n}\n\nexport type ValueOrArray<T> = T | T[];\n\n/** @internal */\nexport function applyMixins(baseClass: any, extendedClasses: any[]) {\n\tfor (const extendedClass of extendedClasses) {\n\t\tfor (const name of Object.getOwnPropertyNames(extendedClass.prototype)) {\n\t\t\tif (name === 'constructor') continue;\n\n\t\t\tObject.defineProperty(\n\t\t\t\tbaseClass.prototype,\n\t\t\t\tname,\n\t\t\t\tObject.getOwnPropertyDescriptor(extendedClass.prototype, name) || Object.create(null),\n\t\t\t);\n\t\t}\n\t}\n}\n\nexport type Or<T1, T2> = T1 extends true ? true : T2 extends true ? true : false;\n\nexport type IfThenElse<If, Then, Else> = If extends true ? Then : Else;\n\nexport type PromiseOf<T> = T extends Promise<infer U> ? U : T;\n\nexport type Writable<T> = {\n\t-readonly [P in keyof T]: T[P];\n};\n\nexport type NonArray<T> = T extends any[] ? never : T;\n\nexport function getTableColumns<T extends Table>(table: T): T['_']['columns'] {\n\treturn table[Table.Symbol.Columns];\n}\n\nexport function getViewSelectedFields<T extends View>(view: T): T['_']['selectedFields'] {\n\treturn view[ViewBaseConfig].selectedFields;\n}\n\n/** @internal */\nexport function getTableLikeName(table: TableLike): string | undefined {\n\treturn is(table, Subquery)\n\t\t? table._.alias\n\t\t: is(table, View)\n\t\t? table[ViewBaseConfig].name\n\t\t: is(table, SQL)\n\t\t? undefined\n\t\t: table[Table.Symbol.IsAlias]\n\t\t? table[Table.Symbol.Name]\n\t\t: table[Table.Symbol.BaseName];\n}\n\nexport type ColumnsWithTable<\n\tTTableName extends string,\n\tTForeignTableName extends string,\n\tTColumns extends AnyColumn<{ tableName: TTableName }>[],\n> = { [Key in keyof TColumns]: AnyColumn<{ tableName: TForeignTableName }> };\n\nexport type Casing = 'snake_case' | 'camelCase';\n\nexport interface DrizzleConfig<TSchema extends Record<string, unknown> = Record<string, never>> {\n\tlogger?: boolean | Logger;\n\tschema?: TSchema;\n\tcasing?: Casing;\n\tcache?: Cache;\n}\nexport type ValidateShape<T, ValidShape, TResult = T> = T extends ValidShape\n\t? Exclude<keyof T, keyof ValidShape> extends never ? TResult\n\t: DrizzleTypeError<\n\t\t`Invalid key(s): ${Exclude<(keyof T) & (string | number | bigint | boolean | null | undefined), keyof ValidShape>}`\n\t>\n\t: never;\n\nexport type KnownKeysOnly<T, U> = {\n\t[K in keyof T]: K extends keyof U ? T[K] : never;\n};\n\nexport type IsAny<T> = 0 extends (1 & T) ? true : false;\n\n/** @internal */\nexport function getColumnNameAndConfig<\n\tTConfig extends Record<string, any> | undefined,\n>(a: string | TConfig | undefined, b: TConfig | undefined) {\n\treturn {\n\t\tname: typeof a === 'string' && a.length > 0 ? a : '' as string,\n\t\tconfig: typeof a === 'object' ? a : b as TConfig,\n\t};\n}\n\nexport type IfNotImported<T, Y, N> = unknown extends T ? Y : N;\n\nexport type ImportTypeError<TPackageName extends string> =\n\t`Please install \\`${TPackageName}\\` to allow Drizzle ORM to connect to the database`;\n\nexport type RequireAtLeastOne<T, Keys extends keyof T = keyof T> = Keys extends any\n\t? Required<Pick<T, Keys>> & Partial<Omit<T, Keys>>\n\t: never;\n\ntype ExpectedConfigShape = {\n\tlogger?: boolean | {\n\t\tlogQuery(query: string, params: unknown[]): void;\n\t};\n\tschema?: Record<string, never>;\n\tcasing?: 'snake_case' | 'camelCase';\n};\n\n// If this errors, you must update config shape checker function with new config specs\nconst _: DrizzleConfig = {} as ExpectedConfigShape;\nconst __: ExpectedConfigShape = {} as DrizzleConfig;\n\nexport function isConfig(data: any): boolean {\n\tif (typeof data !== 'object' || data === null) return false;\n\n\tif (data.constructor.name !== 'Object') return false;\n\n\tif ('logger' in data) {\n\t\tconst type = typeof data['logger'];\n\t\tif (\n\t\t\ttype !== 'boolean' && (type !== 'object' || typeof data['logger']['logQuery'] !== 'function')\n\t\t\t&& type !== 'undefined'\n\t\t) return false;\n\n\t\treturn true;\n\t}\n\n\tif ('schema' in data) {\n\t\tconst type = typeof data['schema'];\n\t\tif (type !== 'object' && type !== 'undefined') return false;\n\n\t\treturn true;\n\t}\n\n\tif ('casing' in data) {\n\t\tconst type = typeof data['casing'];\n\t\tif (type !== 'string' && type !== 'undefined') return false;\n\n\t\treturn true;\n\t}\n\n\tif ('mode' in data) {\n\t\tif (data['mode'] !== 'default' || data['mode'] !== 'planetscale' || data['mode'] !== undefined) return false;\n\n\t\treturn true;\n\t}\n\n\tif ('connection' in data) {\n\t\tconst type = typeof data['connection'];\n\t\tif (type !== 'string' && type !== 'object' && type !== 'undefined') return false;\n\n\t\treturn true;\n\t}\n\n\tif ('client' in data) {\n\t\tconst type = typeof data['client'];\n\t\tif (type !== 'object' && type !== 'function' && type !== 'undefined') return false;\n\n\t\treturn true;\n\t}\n\n\tif (Object.keys(data).length === 0) return true;\n\n\treturn false;\n}\n\nexport type NeonAuthToken = string | (() => string | Promise<string>);\n\nexport const textDecoder = typeof TextDecoder === 'undefined' ? null : new TextDecoder();\n", "import { is } from '~/entity.ts';\nimport { PgTable } from '~/pg-core/table.ts';\nimport { SQL } from '~/sql/sql.ts';\nimport { Subquery } from '~/subquery.ts';\nimport { Schema, Table } from '~/table.ts';\nimport { ViewBaseConfig } from '~/view-common.ts';\nimport { type Check, CheckBuilder } from './checks.ts';\nimport type { AnyPgColumn } from './columns/index.ts';\nimport { type ForeignKey, ForeignKeyBuilder } from './foreign-keys.ts';\nimport type { Index } from './indexes.ts';\nimport { IndexBuilder } from './indexes.ts';\nimport { PgPolicy } from './policies.ts';\nimport { type PrimaryKey, PrimaryKeyBuilder } from './primary-keys.ts';\nimport { type UniqueConstraint, UniqueConstraintBuilder } from './unique-constraint.ts';\nimport type { PgViewBase } from './view-base.ts';\nimport { PgViewConfig } from './view-common.ts';\nimport { type PgMaterializedView, PgMaterializedViewConfig, type PgView } from './view.ts';\n\nexport function getTableConfig<TTable extends PgTable>(table: TTable) {\n\tconst columns = Object.values(table[Table.Symbol.Columns]);\n\tconst indexes: Index[] = [];\n\tconst checks: Check[] = [];\n\tconst primaryKeys: PrimaryKey[] = [];\n\tconst foreignKeys: ForeignKey[] = Object.values(table[PgTable.Symbol.InlineForeignKeys]);\n\tconst uniqueConstraints: UniqueConstraint[] = [];\n\tconst name = table[Table.Symbol.Name];\n\tconst schema = table[Table.Symbol.Schema];\n\tconst policies: PgPolicy[] = [];\n\tconst enableRLS: boolean = table[PgTable.Symbol.EnableRLS];\n\n\tconst extraConfigBuilder = table[PgTable.Symbol.ExtraConfigBuilder];\n\n\tif (extraConfigBuilder !== undefined) {\n\t\tconst extraConfig = extraConfigBuilder(table[Table.Symbol.ExtraConfigColumns]);\n\t\tconst extraValues = Array.isArray(extraConfig) ? extraConfig.flat(1) as any[] : Object.values(extraConfig);\n\t\tfor (const builder of extraValues) {\n\t\t\tif (is(builder, IndexBuilder)) {\n\t\t\t\tindexes.push(builder.build(table));\n\t\t\t} else if (is(builder, CheckBuilder)) {\n\t\t\t\tchecks.push(builder.build(table));\n\t\t\t} else if (is(builder, UniqueConstraintBuilder)) {\n\t\t\t\tuniqueConstraints.push(builder.build(table));\n\t\t\t} else if (is(builder, PrimaryKeyBuilder)) {\n\t\t\t\tprimaryKeys.push(builder.build(table));\n\t\t\t} else if (is(builder, ForeignKeyBuilder)) {\n\t\t\t\tforeignKeys.push(builder.build(table));\n\t\t\t} else if (is(builder, PgPolicy)) {\n\t\t\t\tpolicies.push(builder);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn {\n\t\tcolumns,\n\t\tindexes,\n\t\tforeignKeys,\n\t\tchecks,\n\t\tprimaryKeys,\n\t\tuniqueConstraints,\n\t\tname,\n\t\tschema,\n\t\tpolicies,\n\t\tenableRLS,\n\t};\n}\n\nexport function extractUsedTable(table: PgTable | Subquery | PgViewBase | SQL): string[] {\n\tif (is(table, PgTable)) {\n\t\treturn [table[Schema] ? `${table[Schema]}.${table[Table.Symbol.BaseName]}` : table[Table.Symbol.BaseName]];\n\t}\n\tif (is(table, Subquery)) {\n\t\treturn table._.usedTables ?? [];\n\t}\n\tif (is(table, SQL)) {\n\t\treturn table.usedTables ?? [];\n\t}\n\treturn [];\n}\n\nexport function getViewConfig<\n\tTName extends string = string,\n\tTExisting extends boolean = boolean,\n>(view: PgView<TName, TExisting>) {\n\treturn {\n\t\t...view[ViewBaseConfig],\n\t\t...view[PgViewConfig],\n\t};\n}\n\nexport function getMaterializedViewConfig<\n\tTName extends string = string,\n\tTExisting extends boolean = boolean,\n>(view: PgMaterializedView<TName, TExisting>) {\n\treturn {\n\t\t...view[ViewBaseConfig],\n\t\t...view[PgMaterializedViewConfig],\n\t};\n}\n\nexport type ColumnsWithTable<\n\tTTableName extends string,\n\tTForeignTableName extends string,\n\tTColumns extends AnyPgColumn<{ tableName: TTableName }>[],\n> = { [Key in keyof TColumns]: AnyPgColumn<{ tableName: TForeignTableName }> };\n", "import type { BuildColumns, BuildExtraConfigColumns } from '~/column-builder.ts';\nimport { entityKind } from '~/entity.ts';\nimport { Table, type TableConfig as TableConfigBase, type UpdateTableConfig } from '~/table.ts';\nimport type { CheckBuilder } from './checks.ts';\nimport { getPgColumnBuilders, type PgColumnsBuilders } from './columns/all.ts';\nimport type { ExtraConfigColumn, PgColumn, PgColumnBuilder, PgColumnBuilderBase } from './columns/common.ts';\nimport type { ForeignKey, ForeignKeyBuilder } from './foreign-keys.ts';\nimport type { AnyIndexBuilder } from './indexes.ts';\nimport type { PgPolicy } from './policies.ts';\nimport type { PrimaryKeyBuilder } from './primary-keys.ts';\nimport type { UniqueConstraintBuilder } from './unique-constraint.ts';\n\nexport type PgTableExtraConfigValue =\n\t| AnyIndexBuilder\n\t| CheckBuilder\n\t| ForeignKeyBuilder\n\t| PrimaryKeyBuilder\n\t| UniqueConstraintBuilder\n\t| PgPolicy;\n\nexport type PgTableExtraConfig = Record<\n\tstring,\n\tPgTableExtraConfigValue\n>;\n\nexport type TableConfig = TableConfigBase<PgColumn>;\n\n/** @internal */\nexport const InlineForeignKeys = Symbol.for('drizzle:PgInlineForeignKeys');\n/** @internal */\nexport const EnableRLS = Symbol.for('drizzle:EnableRLS');\n\nexport class PgTable<T extends TableConfig = TableConfig> extends Table<T> {\n\tstatic override readonly [entityKind]: string = 'PgTable';\n\n\t/** @internal */\n\tstatic override readonly Symbol = Object.assign({}, Table.Symbol, {\n\t\tInlineForeignKeys: InlineForeignKeys as typeof InlineForeignKeys,\n\t\tEnableRLS: EnableRLS as typeof EnableRLS,\n\t});\n\n\t/**@internal */\n\t[InlineForeignKeys]: ForeignKey[] = [];\n\n\t/** @internal */\n\t[EnableRLS]: boolean = false;\n\n\t/** @internal */\n\toverride [Table.Symbol.ExtraConfigBuilder]: ((self: Record<string, PgColumn>) => PgTableExtraConfig) | undefined =\n\t\tundefined;\n\n\t/** @internal */\n\toverride [Table.Symbol.ExtraConfigColumns]: Record<string, ExtraConfigColumn> = {};\n}\n\nexport type AnyPgTable<TPartial extends Partial<TableConfig> = {}> = PgTable<UpdateTableConfig<TableConfig, TPartial>>;\n\nexport type PgTableWithColumns<T extends TableConfig> =\n\t& PgTable<T>\n\t& {\n\t\t[Key in keyof T['columns']]: T['columns'][Key];\n\t}\n\t& {\n\t\tenableRLS: () => Omit<\n\t\t\tPgTableWithColumns<T>,\n\t\t\t'enableRLS'\n\t\t>;\n\t};\n\n/** @internal */\nexport function pgTableWithSchema<\n\tTTableName extends string,\n\tTSchemaName extends string | undefined,\n\tTColumnsMap extends Record<string, PgColumnBuilderBase>,\n>(\n\tname: TTableName,\n\tcolumns: TColumnsMap | ((columnTypes: PgColumnsBuilders) => TColumnsMap),\n\textraConfig:\n\t\t| ((self: BuildExtraConfigColumns<TTableName, TColumnsMap, 'pg'>) => PgTableExtraConfig | PgTableExtraConfigValue[])\n\t\t| undefined,\n\tschema: TSchemaName,\n\tbaseName = name,\n): PgTableWithColumns<{\n\tname: TTableName;\n\tschema: TSchemaName;\n\tcolumns: BuildColumns<TTableName, TColumnsMap, 'pg'>;\n\tdialect: 'pg';\n}> {\n\tconst rawTable = new PgTable<{\n\t\tname: TTableName;\n\t\tschema: TSchemaName;\n\t\tcolumns: BuildColumns<TTableName, TColumnsMap, 'pg'>;\n\t\tdialect: 'pg';\n\t}>(name, schema, baseName);\n\n\tconst parsedColumns: TColumnsMap = typeof columns === 'function' ? columns(getPgColumnBuilders()) : columns;\n\n\tconst builtColumns = Object.fromEntries(\n\t\tObject.entries(parsedColumns).map(([name, colBuilderBase]) => {\n\t\t\tconst colBuilder = colBuilderBase as PgColumnBuilder;\n\t\t\tcolBuilder.setName(name);\n\t\t\tconst column = colBuilder.build(rawTable);\n\t\t\trawTable[InlineForeignKeys].push(...colBuilder.buildForeignKeys(column, rawTable));\n\t\t\treturn [name, column];\n\t\t}),\n\t) as unknown as BuildColumns<TTableName, TColumnsMap, 'pg'>;\n\n\tconst builtColumnsForExtraConfig = Object.fromEntries(\n\t\tObject.entries(parsedColumns).map(([name, colBuilderBase]) => {\n\t\t\tconst colBuilder = colBuilderBase as PgColumnBuilder;\n\t\t\tcolBuilder.setName(name);\n\t\t\tconst column = colBuilder.buildExtraConfigColumn(rawTable);\n\t\t\treturn [name, column];\n\t\t}),\n\t) as unknown as BuildExtraConfigColumns<TTableName, TColumnsMap, 'pg'>;\n\n\tconst table = Object.assign(rawTable, builtColumns);\n\n\ttable[Table.Symbol.Columns] = builtColumns;\n\ttable[Table.Symbol.ExtraConfigColumns] = builtColumnsForExtraConfig;\n\n\tif (extraConfig) {\n\t\ttable[PgTable.Symbol.ExtraConfigBuilder] = extraConfig as any;\n\t}\n\n\treturn Object.assign(table, {\n\t\tenableRLS: () => {\n\t\t\ttable[PgTable.Symbol.EnableRLS] = true;\n\t\t\treturn table as PgTableWithColumns<{\n\t\t\t\tname: TTableName;\n\t\t\t\tschema: TSchemaName;\n\t\t\t\tcolumns: BuildColumns<TTableName, TColumnsMap, 'pg'>;\n\t\t\t\tdialect: 'pg';\n\t\t\t}>;\n\t\t},\n\t});\n}\n\nexport interface PgTableFn<TSchema extends string | undefined = undefined> {\n\t<\n\t\tTTableName extends string,\n\t\tTColumnsMap extends Record<string, PgColumnBuilderBase>,\n\t>(\n\t\tname: TTableName,\n\t\tcolumns: TColumnsMap,\n\t\textraConfig?: (\n\t\t\tself: BuildExtraConfigColumns<TTableName, TColumnsMap, 'pg'>,\n\t\t) => PgTableExtraConfigValue[],\n\t): PgTableWithColumns<{\n\t\tname: TTableName;\n\t\tschema: TSchema;\n\t\tcolumns: BuildColumns<TTableName, TColumnsMap, 'pg'>;\n\t\tdialect: 'pg';\n\t}>;\n\n\t<\n\t\tTTableName extends string,\n\t\tTColumnsMap extends Record<string, PgColumnBuilderBase>,\n\t>(\n\t\tname: TTableName,\n\t\tcolumns: (columnTypes: PgColumnsBuilders) => TColumnsMap,\n\t\textraConfig?: (self: BuildExtraConfigColumns<TTableName, TColumnsMap, 'pg'>) => PgTableExtraConfigValue[],\n\t): PgTableWithColumns<{\n\t\tname: TTableName;\n\t\tschema: TSchema;\n\t\tcolumns: BuildColumns<TTableName, TColumnsMap, 'pg'>;\n\t\tdialect: 'pg';\n\t}>;\n\t/**\n\t * @deprecated The third parameter of pgTable is changing and will only accept an array instead of an object\n\t *\n\t * @example\n\t * Deprecated version:\n\t * ```ts\n\t * export const users = pgTable(\"users\", {\n\t * \tid: integer(),\n\t * }, (t) => ({\n\t * \tidx: index('custom_name').on(t.id)\n\t * }));\n\t * ```\n\t *\n\t * New API:\n\t * ```ts\n\t * export const users = pgTable(\"users\", {\n\t * \tid: integer(),\n\t * }, (t) => [\n\t * \tindex('custom_name').on(t.id)\n\t * ]);\n\t * ```\n\t */\n\t<\n\t\tTTableName extends string,\n\t\tTColumnsMap extends Record<string, PgColumnBuilderBase>,\n\t>(\n\t\tname: TTableName,\n\t\tcolumns: TColumnsMap,\n\t\textraConfig: (\n\t\t\tself: BuildExtraConfigColumns<TTableName, TColumnsMap, 'pg'>,\n\t\t) => PgTableExtraConfig,\n\t): PgTableWithColumns<{\n\t\tname: TTableName;\n\t\tschema: TSchema;\n\t\tcolumns: BuildColumns<TTableName, TColumnsMap, 'pg'>;\n\t\tdialect: 'pg';\n\t}>;\n\n\t/**\n\t * @deprecated The third parameter of pgTable is changing and will only accept an array instead of an object\n\t *\n\t * @example\n\t * Deprecated version:\n\t * ```ts\n\t * export const users = pgTable(\"users\", {\n\t * \tid: integer(),\n\t * }, (t) => ({\n\t * \tidx: index('custom_name').on(t.id)\n\t * }));\n\t * ```\n\t *\n\t * New API:\n\t * ```ts\n\t * export const users = pgTable(\"users\", {\n\t * \tid: integer(),\n\t * }, (t) => [\n\t * \tindex('custom_name').on(t.id)\n\t * ]);\n\t * ```\n\t */\n\t<\n\t\tTTableName extends string,\n\t\tTColumnsMap extends Record<string, PgColumnBuilderBase>,\n\t>(\n\t\tname: TTableName,\n\t\tcolumns: (columnTypes: PgColumnsBuilders) => TColumnsMap,\n\t\textraConfig: (self: BuildExtraConfigColumns<TTableName, TColumnsMap, 'pg'>) => PgTableExtraConfig,\n\t): PgTableWithColumns<{\n\t\tname: TTableName;\n\t\tschema: TSchema;\n\t\tcolumns: BuildColumns<TTableName, TColumnsMap, 'pg'>;\n\t\tdialect: 'pg';\n\t}>;\n}\n\nexport const pgTable: PgTableFn = (name, columns, extraConfig) => {\n\treturn pgTableWithSchema(name, columns, extraConfig, undefined);\n};\n\nexport function pgTableCreator(customizeTableName: (name: string) => string): PgTableFn {\n\treturn (name, columns, extraConfig) => {\n\t\treturn pgTableWithSchema(customizeTableName(name) as typeof name, columns, extraConfig, undefined, name);\n\t};\n}\n", "import { bigint } from './bigint.ts';\nimport { bigserial } from './bigserial.ts';\nimport { boolean } from './boolean.ts';\nimport { char } from './char.ts';\nimport { cidr } from './cidr.ts';\nimport { customType } from './custom.ts';\nimport { date } from './date.ts';\nimport { doublePrecision } from './double-precision.ts';\nimport { inet } from './inet.ts';\nimport { integer } from './integer.ts';\nimport { interval } from './interval.ts';\nimport { json } from './json.ts';\nimport { jsonb } from './jsonb.ts';\nimport { line } from './line.ts';\nimport { macaddr } from './macaddr.ts';\nimport { macaddr8 } from './macaddr8.ts';\nimport { numeric } from './numeric.ts';\nimport { point } from './point.ts';\nimport { geometry } from './postgis_extension/geometry.ts';\nimport { real } from './real.ts';\nimport { serial } from './serial.ts';\nimport { smallint } from './smallint.ts';\nimport { smallserial } from './smallserial.ts';\nimport { text } from './text.ts';\nimport { time } from './time.ts';\nimport { timestamp } from './timestamp.ts';\nimport { uuid } from './uuid.ts';\nimport { varchar } from './varchar.ts';\nimport { bit } from './vector_extension/bit.ts';\nimport { halfvec } from './vector_extension/halfvec.ts';\nimport { sparsevec } from './vector_extension/sparsevec.ts';\nimport { vector } from './vector_extension/vector.ts';\n\nexport function getPgColumnBuilders() {\n\treturn {\n\t\tbigint,\n\t\tbigserial,\n\t\tboolean,\n\t\tchar,\n\t\tcidr,\n\t\tcustomType,\n\t\tdate,\n\t\tdoublePrecision,\n\t\tinet,\n\t\tinteger,\n\t\tinterval,\n\t\tjson,\n\t\tjsonb,\n\t\tline,\n\t\tmacaddr,\n\t\tmacaddr8,\n\t\tnumeric,\n\t\tpoint,\n\t\tgeometry,\n\t\treal,\n\t\tserial,\n\t\tsmallint,\n\t\tsmallserial,\n\t\ttext,\n\t\ttime,\n\t\ttimestamp,\n\t\tuuid,\n\t\tvarchar,\n\t\tbit,\n\t\thalfvec,\n\t\tsparsevec,\n\t\tvector,\n\t};\n}\n\nexport type PgColumnsBuilders = ReturnType<typeof getPgColumnBuilders>;\n", "import type { ColumnBuilderBaseConfig, ColumnBuilderRuntimeConfig, MakeColumnConfig } from '~/column-builder.ts';\nimport type { ColumnBaseConfig } from '~/column.ts';\nimport { entityKind } from '~/entity.ts';\nimport type { AnyPgTable } from '~/pg-core/table.ts';\n\nimport { getColumnNameAndConfig } from '~/utils.ts';\nimport { PgColumn } from './common.ts';\nimport { PgIntColumnBaseBuilder } from './int.common.ts';\n\nexport type PgBigInt53BuilderInitial<TName extends string> = PgBigInt53Builder<{\n\tname: TName;\n\tdataType: 'number';\n\tcolumnType: 'PgBigInt53';\n\tdata: number;\n\tdriverParam: number | string;\n\tenumValues: undefined;\n}>;\n\nexport class PgBigInt53Builder<T extends ColumnBuilderBaseConfig<'number', 'PgBigInt53'>>\n\textends PgIntColumnBaseBuilder<T>\n{\n\tstatic override readonly [entityKind]: string = 'PgBigInt53Builder';\n\n\tconstructor(name: T['name']) {\n\t\tsuper(name, 'number', 'PgBigInt53');\n\t}\n\n\t/** @internal */\n\toverride build<TTableName extends string>(\n\t\ttable: AnyPgTable<{ name: TTableName }>,\n\t): PgBigInt53<MakeColumnConfig<T, TTableName>> {\n\t\treturn new PgBigInt53<MakeColumnConfig<T, TTableName>>(table, this.config as ColumnBuilderRuntimeConfig<any, any>);\n\t}\n}\n\nexport class PgBigInt53<T extends ColumnBaseConfig<'number', 'PgBigInt53'>> extends PgColumn<T> {\n\tstatic override readonly [entityKind]: string = 'PgBigInt53';\n\n\tgetSQLType(): string {\n\t\treturn 'bigint';\n\t}\n\n\toverride mapFromDriverValue(value: number | string): number {\n\t\tif (typeof value === 'number') {\n\t\t\treturn value;\n\t\t}\n\t\treturn Number(value);\n\t}\n}\n\nexport type PgBigInt64BuilderInitial<TName extends string> = PgBigInt64Builder<{\n\tname: TName;\n\tdataType: 'bigint';\n\tcolumnType: 'PgBigInt64';\n\tdata: bigint;\n\tdriverParam: string;\n\tenumValues: undefined;\n}>;\n\nexport class PgBigInt64Builder<T extends ColumnBuilderBaseConfig<'bigint', 'PgBigInt64'>>\n\textends PgIntColumnBaseBuilder<T>\n{\n\tstatic override readonly [entityKind]: string = 'PgBigInt64Builder';\n\n\tconstructor(name: T['name']) {\n\t\tsuper(name, 'bigint', 'PgBigInt64');\n\t}\n\n\t/** @internal */\n\toverride build<TTableName extends string>(\n\t\ttable: AnyPgTable<{ name: TTableName }>,\n\t): PgBigInt64<MakeColumnConfig<T, TTableName>> {\n\t\treturn new PgBigInt64<MakeColumnConfig<T, TTableName>>(\n\t\t\ttable,\n\t\t\tthis.config as ColumnBuilderRuntimeConfig<any, any>,\n\t\t);\n\t}\n}\n\nexport class PgBigInt64<T extends ColumnBaseConfig<'bigint', 'PgBigInt64'>> extends PgColumn<T> {\n\tstatic override readonly [entityKind]: string = 'PgBigInt64';\n\n\tgetSQLType(): string {\n\t\treturn 'bigint';\n\t}\n\n\t// eslint-disable-next-line unicorn/prefer-native-coercion-functions\n\toverride mapFromDriverValue(value: string): bigint {\n\t\treturn BigInt(value);\n\t}\n}\n\nexport interface PgBigIntConfig<T extends 'number' | 'bigint' = 'number' | 'bigint'> {\n\tmode: T;\n}\n\nexport function bigint<TMode extends PgBigIntConfig['mode']>(\n\tconfig: PgBigIntConfig<TMode>,\n): TMode extends 'number' ? PgBigInt53BuilderInitial<''> : PgBigInt64BuilderInitial<''>;\nexport function bigint<TName extends string, TMode extends PgBigIntConfig['mode']>(\n\tname: TName,\n\tconfig: PgBigIntConfig<TMode>,\n): TMode extends 'number' ? PgBigInt53BuilderInitial<TName> : PgBigInt64BuilderInitial<TName>;\nexport function bigint(a: string | PgBigIntConfig, b?: PgBigIntConfig) {\n\tconst { name, config } = getColumnNameAndConfig<PgBigIntConfig>(a, b);\n\tif (config.mode === 'number') {\n\t\treturn new PgBigInt53Builder(name);\n\t}\n\treturn new PgBigInt64Builder(name);\n}\n", "import type { ColumnBuilderBaseConfig, ColumnDataType, GeneratedIdentityConfig, IsIdentity } from '~/column-builder.ts';\nimport { entityKind } from '~/entity.ts';\nimport type { PgSequenceOptions } from '../sequence.ts';\nimport { PgColumnBuilder } from './common.ts';\n\nexport abstract class PgIntColumnBaseBuilder<\n\tT extends ColumnBuilderBaseConfig<ColumnDataType, string>,\n> extends PgColumnBuilder<\n\tT,\n\t{ generatedIdentity: GeneratedIdentityConfig }\n> {\n\tstatic override readonly [entityKind]: string = 'PgIntColumnBaseBuilder';\n\n\tgeneratedAlwaysAsIdentity(\n\t\tsequence?: PgSequenceOptions & { name?: string },\n\t): IsIdentity<this, 'always'> {\n\t\tif (sequence) {\n\t\t\tconst { name, ...options } = sequence;\n\t\t\tthis.config.generatedIdentity = {\n\t\t\t\ttype: 'always',\n\t\t\t\tsequenceName: name,\n\t\t\t\tsequenceOptions: options,\n\t\t\t};\n\t\t} else {\n\t\t\tthis.config.generatedIdentity = {\n\t\t\t\ttype: 'always',\n\t\t\t};\n\t\t}\n\n\t\tthis.config.hasDefault = true;\n\t\tthis.config.notNull = true;\n\n\t\treturn this as IsIdentity<this, 'always'>;\n\t}\n\n\tgeneratedByDefaultAsIdentity(\n\t\tsequence?: PgSequenceOptions & { name?: string },\n\t): IsIdentity<this, 'byDefault'> {\n\t\tif (sequence) {\n\t\t\tconst { name, ...options } = sequence;\n\t\t\tthis.config.generatedIdentity = {\n\t\t\t\ttype: 'byDefault',\n\t\t\t\tsequenceName: name,\n\t\t\t\tsequenceOptions: options,\n\t\t\t};\n\t\t} else {\n\t\t\tthis.config.generatedIdentity = {\n\t\t\t\ttype: 'byDefault',\n\t\t\t};\n\t\t}\n\n\t\tthis.config.hasDefault = true;\n\t\tthis.config.notNull = true;\n\n\t\treturn this as IsIdentity<this, 'byDefault'>;\n\t}\n}\n", "import type {\n\tColumnBuilderBaseConfig,\n\tColumnBuilderRuntimeConfig,\n\tHasDefault,\n\tMakeColumnConfig,\n\tNotNull,\n} from '~/column-builder.ts';\nimport type { ColumnBaseConfig } from '~/column.ts';\nimport { entityKind } from '~/entity.ts';\nimport { getColumnNameAndConfig } from '~/utils.ts';\nimport type { AnyPgTable } from '../table.ts';\nimport { PgColumn, PgColumnBuilder } from './common.ts';\n\nexport type PgBigSerial53BuilderInitial<TName extends string> = NotNull<\n\tHasDefault<\n\t\tPgBigSerial53Builder<{\n\t\t\tname: TName;\n\t\t\tdataType: 'number';\n\t\t\tcolumnType: 'PgBigSerial53';\n\t\t\tdata: number;\n\t\t\tdriverParam: number;\n\t\t\tenumValues: undefined;\n\t\t}>\n\t>\n>;\n\nexport class PgBigSerial53Builder<T extends ColumnBuilderBaseConfig<'number', 'PgBigSerial53'>>\n\textends PgColumnBuilder<T>\n{\n\tstatic override readonly [entityKind]: string = 'PgBigSerial53Builder';\n\n\tconstructor(name: string) {\n\t\tsuper(name, 'number', 'PgBigSerial53');\n\t\tthis.config.hasDefault = true;\n\t\tthis.config.notNull = true;\n\t}\n\n\t/** @internal */\n\toverride build<TTableName extends string>(\n\t\ttable: AnyPgTable<{ name: TTableName }>,\n\t): PgBigSerial53<MakeColumnConfig<T, TTableName>> {\n\t\treturn new PgBigSerial53<MakeColumnConfig<T, TTableName>>(\n\t\t\ttable,\n\t\t\tthis.config as ColumnBuilderRuntimeConfig<any, any>,\n\t\t);\n\t}\n}\n\nexport class PgBigSerial53<T extends ColumnBaseConfig<'number', 'PgBigSerial53'>> extends PgColumn<T> {\n\tstatic override readonly [entityKind]: string = 'PgBigSerial53';\n\n\tgetSQLType(): string {\n\t\treturn 'bigserial';\n\t}\n\n\toverride mapFromDriverValue(value: number): number {\n\t\tif (typeof value === 'number') {\n\t\t\treturn value;\n\t\t}\n\t\treturn Number(value);\n\t}\n}\n\nexport type PgBigSerial64BuilderInitial<TName extends string> = NotNull<\n\tHasDefault<\n\t\tPgBigSerial64Builder<{\n\t\t\tname: TName;\n\t\t\tdataType: 'bigint';\n\t\t\tcolumnType: 'PgBigSerial64';\n\t\t\tdata: bigint;\n\t\t\tdriverParam: string;\n\t\t\tenumValues: undefined;\n\t\t}>\n\t>\n>;\n\nexport class PgBigSerial64Builder<T extends ColumnBuilderBaseConfig<'bigint', 'PgBigSerial64'>>\n\textends PgColumnBuilder<T>\n{\n\tstatic override readonly [entityKind]: string = 'PgBigSerial64Builder';\n\n\tconstructor(name: string) {\n\t\tsuper(name, 'bigint', 'PgBigSerial64');\n\t\tthis.config.hasDefault = true;\n\t}\n\n\t/** @internal */\n\toverride build<TTableName extends string>(\n\t\ttable: AnyPgTable<{ name: TTableName }>,\n\t): PgBigSerial64<MakeColumnConfig<T, TTableName>> {\n\t\treturn new PgBigSerial64<MakeColumnConfig<T, TTableName>>(\n\t\t\ttable,\n\t\t\tthis.config as ColumnBuilderRuntimeConfig<any, any>,\n\t\t);\n\t}\n}\n\nexport class PgBigSerial64<T extends ColumnBaseConfig<'bigint', 'PgBigSerial64'>> extends PgColumn<T> {\n\tstatic override readonly [entityKind]: string = 'PgBigSerial64';\n\n\tgetSQLType(): string {\n\t\treturn 'bigserial';\n\t}\n\n\t// eslint-disable-next-line unicorn/prefer-native-coercion-functions\n\toverride mapFromDriverValue(value: string): bigint {\n\t\treturn BigInt(value);\n\t}\n}\n\nexport interface PgBigSerialConfig<T extends 'number' | 'bigint' = 'number' | 'bigint'> {\n\tmode: T;\n}\n\nexport function bigserial<TMode extends PgBigSerialConfig['mode']>(\n\tconfig: PgBigSerialConfig<TMode>,\n): TMode extends 'number' ? PgBigSerial53BuilderInitial<''> : PgBigSerial64BuilderInitial<''>;\nexport function bigserial<TName extends string, TMode extends PgBigSerialConfig['mode']>(\n\tname: TName,\n\tconfig: PgBigSerialConfig<TMode>,\n): TMode extends 'number' ? PgBigSerial53BuilderInitial<TName> : PgBigSerial64BuilderInitial<TName>;\nexport function bigserial(a: string | PgBigSerialConfig, b?: PgBigSerialConfig) {\n\tconst { name, config } = getColumnNameAndConfig<PgBigSerialConfig>(a, b);\n\tif (config.mode === 'number') {\n\t\treturn new PgBigSerial53Builder(name);\n\t}\n\treturn new PgBigSerial64Builder(name);\n}\n", "import type { ColumnBuilderBaseConfig, ColumnBuilderRuntimeConfig, MakeColumnConfig } from '~/column-builder.ts';\nimport type { ColumnBaseConfig } from '~/column.ts';\nimport { entityKind } from '~/entity.ts';\nimport type { AnyPgTable } from '~/pg-core/table.ts';\nimport { PgColumn, PgColumnBuilder } from './common.ts';\n\nexport type PgBooleanBuilderInitial<TName extends string> = PgBooleanBuilder<{\n\tname: TName;\n\tdataType: 'boolean';\n\tcolumnType: 'PgBoolean';\n\tdata: boolean;\n\tdriverParam: boolean;\n\tenumValues: undefined;\n}>;\n\nexport class PgBooleanBuilder<T extends ColumnBuilderBaseConfig<'boolean', 'PgBoolean'>> extends PgColumnBuilder<T> {\n\tstatic override readonly [entityKind]: string = 'PgBooleanBuilder';\n\n\tconstructor(name: T['name']) {\n\t\tsuper(name, 'boolean', 'PgBoolean');\n\t}\n\n\t/** @internal */\n\toverride build<TTableName extends string>(\n\t\ttable: AnyPgTable<{ name: TTableName }>,\n\t): PgBoolean<MakeColumnConfig<T, TTableName>> {\n\t\treturn new PgBoolean<MakeColumnConfig<T, TTableName>>(table, this.config as ColumnBuilderRuntimeConfig<any, any>);\n\t}\n}\n\nexport class PgBoolean<T extends ColumnBaseConfig<'boolean', 'PgBoolean'>> extends PgColumn<T> {\n\tstatic override readonly [entityKind]: string = 'PgBoolean';\n\n\tgetSQLType(): string {\n\t\treturn 'boolean';\n\t}\n}\n\nexport function boolean(): PgBooleanBuilderInitial<''>;\nexport function boolean<TName extends string>(name: TName): PgBooleanBuilderInitial<TName>;\nexport function boolean(name?: string) {\n\treturn new PgBooleanBuilder(name ?? '');\n}\n", "import type { ColumnBuilderBaseConfig, ColumnBuilderRuntimeConfig, MakeColumnConfig } from '~/column-builder.ts';\nimport type { ColumnBaseConfig } from '~/column.ts';\nimport { entityKind } from '~/entity.ts';\nimport type { AnyPgTable } from '~/pg-core/table.ts';\nimport { getColumnNameAndConfig, type Writable } from '~/utils.ts';\nimport { PgColumn, PgColumnBuilder } from './common.ts';\n\nexport type PgCharBuilderInitial<\n\tTName extends string,\n\tTEnum extends [string, ...string[]],\n\tTLength extends number | undefined,\n> = PgCharBuilder<{\n\tname: TName;\n\tdataType: 'string';\n\tcolumnType: 'PgChar';\n\tdata: TEnum[number];\n\tenumValues: TEnum;\n\tdriverParam: string;\n\tlength: TLength;\n}>;\n\nexport class PgCharBuilder<T extends ColumnBuilderBaseConfig<'string', 'PgChar'> & { length?: number | undefined }>\n\textends PgColumnBuilder<\n\t\tT,\n\t\t{ length: T['length']; enumValues: T['enumValues'] },\n\t\t{ length: T['length'] }\n\t>\n{\n\tstatic override readonly [entityKind]: string = 'PgCharBuilder';\n\n\tconstructor(name: T['name'], config: PgCharConfig<T['enumValues'], T['length']>) {\n\t\tsuper(name, 'string', 'PgChar');\n\t\tthis.config.length = config.length;\n\t\tthis.config.enumValues = config.enum;\n\t}\n\n\t/** @internal */\n\toverride build<TTableName extends string>(\n\t\ttable: AnyPgTable<{ name: TTableName }>,\n\t): PgChar<MakeColumnConfig<T, TTableName> & { length: T['length'] }> {\n\t\treturn new PgChar<MakeColumnConfig<T, TTableName> & { length: T['length'] }>(\n\t\t\ttable,\n\t\t\tthis.config as ColumnBuilderRuntimeConfig<any, any>,\n\t\t);\n\t}\n}\n\nexport class PgChar<T extends ColumnBaseConfig<'string', 'PgChar'> & { length?: number | undefined }>\n\textends PgColumn<T, { length: T['length']; enumValues: T['enumValues'] }, { length: T['length'] }>\n{\n\tstatic override readonly [entityKind]: string = 'PgChar';\n\n\treadonly length = this.config.length;\n\toverride readonly enumValues = this.config.enumValues;\n\n\tgetSQLType(): string {\n\t\treturn this.length === undefined ? `char` : `char(${this.length})`;\n\t}\n}\n\nexport interface PgCharConfig<\n\tTEnum extends readonly string[] | string[] | undefined = readonly string[] | string[] | undefined,\n\tTLength extends number | undefined = number | undefined,\n> {\n\tenum?: TEnum;\n\tlength?: TLength;\n}\n\nexport function char(): PgCharBuilderInitial<'', [string, ...string[]], undefined>;\nexport function char<U extends string, T extends Readonly<[U, ...U[]]>, L extends number | undefined>(\n\tconfig?: PgCharConfig<T | Writable<T>, L>,\n): PgCharBuilderInitial<'', Writable<T>, L>;\nexport function char<\n\tTName extends string,\n\tU extends string,\n\tT extends Readonly<[U, ...U[]]>,\n\tL extends number | undefined,\n>(\n\tname: TName,\n\tconfig?: PgCharConfig<T | Writable<T>, L>,\n): PgCharBuilderInitial<TName, Writable<T>, L>;\nexport function char(a?: string | PgCharConfig, b: PgCharConfig = {}): any {\n\tconst { name, config } = getColumnNameAndConfig<PgCharConfig>(a, b);\n\treturn new PgCharBuilder(name, config as any);\n}\n", "import type { ColumnBuilderBaseConfig, ColumnBuilderRuntimeConfig, MakeColumnConfig } from '~/column-builder.ts';\nimport type { ColumnBaseConfig } from '~/column.ts';\nimport { entityKind } from '~/entity.ts';\nimport type { AnyPgTable } from '../table.ts';\nimport { PgColumn, PgColumnBuilder } from './common.ts';\n\nexport type PgCidrBuilderInitial<TName extends string> = PgCidrBuilder<{\n\tname: TName;\n\tdataType: 'string';\n\tcolumnType: 'PgCidr';\n\tdata: string;\n\tdriverParam: string;\n\tenumValues: undefined;\n}>;\n\nexport class PgCidrBuilder<T extends ColumnBuilderBaseConfig<'string', 'PgCidr'>> extends PgColumnBuilder<T> {\n\tstatic override readonly [entityKind]: string = 'PgCidrBuilder';\n\n\tconstructor(name: T['name']) {\n\t\tsuper(name, 'string', 'PgCidr');\n\t}\n\n\t/** @internal */\n\toverride build<TTableName extends string>(\n\t\ttable: AnyPgTable<{ name: TTableName }>,\n\t): PgCidr<MakeColumnConfig<T, TTableName>> {\n\t\treturn new PgCidr<MakeColumnConfig<T, TTableName>>(table, this.config as ColumnBuilderRuntimeConfig<any, any>);\n\t}\n}\n\nexport class PgCidr<T extends ColumnBaseConfig<'string', 'PgCidr'>> extends PgColumn<T> {\n\tstatic override readonly [entityKind]: string = 'PgCidr';\n\n\tgetSQLType(): string {\n\t\treturn 'cidr';\n\t}\n}\n\nexport function cidr(): PgCidrBuilderInitial<''>;\nexport function cidr<TName extends string>(name: TName): PgCidrBuilderInitial<TName>;\nexport function cidr(name?: string) {\n\treturn new PgCidrBuilder(name ?? '');\n}\n", "import type { ColumnBuilderBaseConfig, ColumnBuilderRuntimeConfig, MakeColumnConfig } from '~/column-builder.ts';\nimport type { ColumnBaseConfig } from '~/column.ts';\nimport { entityKind } from '~/entity.ts';\nimport type { AnyPgTable } from '~/pg-core/table.ts';\nimport type { SQL } from '~/sql/sql.ts';\nimport { type Equal, getColumnNameAndConfig } from '~/utils.ts';\nimport { PgColumn, PgColumnBuilder } from './common.ts';\n\nexport type ConvertCustomConfig<TName extends string, T extends Partial<CustomTypeValues>> =\n\t& {\n\t\tname: TName;\n\t\tdataType: 'custom';\n\t\tcolumnType: 'PgCustomColumn';\n\t\tdata: T['data'];\n\t\tdriverParam: T['driverData'];\n\t\tenumValues: undefined;\n\t}\n\t& (T['notNull'] extends true ? { notNull: true } : {})\n\t& (T['default'] extends true ? { hasDefault: true } : {});\n\nexport interface PgCustomColumnInnerConfig {\n\tcustomTypeValues: CustomTypeValues;\n}\n\nexport class PgCustomColumnBuilder<T extends ColumnBuilderBaseConfig<'custom', 'PgCustomColumn'>>\n\textends PgColumnBuilder<\n\t\tT,\n\t\t{\n\t\t\tfieldConfig: CustomTypeValues['config'];\n\t\t\tcustomTypeParams: CustomTypeParams<any>;\n\t\t},\n\t\t{\n\t\t\tpgColumnBuilderBrand: 'PgCustomColumnBuilderBrand';\n\t\t}\n\t>\n{\n\tstatic override readonly [entityKind]: string = 'PgCustomColumnBuilder';\n\n\tconstructor(\n\t\tname: T['name'],\n\t\tfieldConfig: CustomTypeValues['config'],\n\t\tcustomTypeParams: CustomTypeParams<any>,\n\t) {\n\t\tsuper(name, 'custom', 'PgCustomColumn');\n\t\tthis.config.fieldConfig = fieldConfig;\n\t\tthis.config.customTypeParams = customTypeParams;\n\t}\n\n\t/** @internal */\n\tbuild<TTableName extends string>(\n\t\ttable: AnyPgTable<{ name: TTableName }>,\n\t): PgCustomColumn<MakeColumnConfig<T, TTableName>> {\n\t\treturn new PgCustomColumn<MakeColumnConfig<T, TTableName>>(\n\t\t\ttable,\n\t\t\tthis.config as ColumnBuilderRuntimeConfig<any, any>,\n\t\t);\n\t}\n}\n\nexport class PgCustomColumn<T extends ColumnBaseConfig<'custom', 'PgCustomColumn'>> extends PgColumn<T> {\n\tstatic override readonly [entityKind]: string = 'PgCustomColumn';\n\n\tprivate sqlName: string;\n\tprivate mapTo?: (value: T['data']) => T['driverParam'];\n\tprivate mapFrom?: (value: T['driverParam']) => T['data'];\n\n\tconstructor(\n\t\ttable: AnyPgTable<{ name: T['tableName'] }>,\n\t\tconfig: PgCustomColumnBuilder<T>['config'],\n\t) {\n\t\tsuper(table, config);\n\t\tthis.sqlName = config.customTypeParams.dataType(config.fieldConfig);\n\t\tthis.mapTo = config.customTypeParams.toDriver;\n\t\tthis.mapFrom = config.customTypeParams.fromDriver;\n\t}\n\n\tgetSQLType(): string {\n\t\treturn this.sqlName;\n\t}\n\n\toverride mapFromDriverValue(value: T['driverParam']): T['data'] {\n\t\treturn typeof this.mapFrom === 'function' ? this.mapFrom(value) : value as T['data'];\n\t}\n\n\toverride mapToDriverValue(value: T['data']): T['driverParam'] {\n\t\treturn typeof this.mapTo === 'function' ? this.mapTo(value) : value as T['data'];\n\t}\n}\n\nexport type CustomTypeValues = {\n\t/**\n\t * Required type for custom column, that will infer proper type model\n\t *\n\t * Examples:\n\t *\n\t * If you want your column to be `string` type after selecting/or on inserting - use `data: string`. Like `text`, `varchar`\n\t *\n\t * If you want your column to be `number` type after selecting/or on inserting - use `data: number`. Like `integer`\n\t */\n\tdata: unknown;\n\n\t/**\n\t * Type helper, that represents what type database driver is accepting for specific database data type\n\t */\n\tdriverData?: unknown;\n\n\t/**\n\t * What config type should be used for {@link CustomTypeParams} `dataType` generation\n\t */\n\tconfig?: Record<string, any>;\n\n\t/**\n\t * Whether the config argument should be required or not\n\t * @default false\n\t */\n\tconfigRequired?: boolean;\n\n\t/**\n\t * If your custom data type should be notNull by default you can use `notNull: true`\n\t *\n\t * @example\n\t * const customSerial = customType<{ data: number, notNull: true, default: true }>({\n\t * \t  dataType() {\n\t * \t    return 'serial';\n\t *    },\n\t * });\n\t */\n\tnotNull?: boolean;\n\n\t/**\n\t * If your custom data type has default you can use `default: true`\n\t *\n\t * @example\n\t * const customSerial = customType<{ data: number, notNull: true, default: true }>({\n\t * \t  dataType() {\n\t * \t    return 'serial';\n\t *    },\n\t * });\n\t */\n\tdefault?: boolean;\n};\n\nexport interface CustomTypeParams<T extends CustomTypeValues> {\n\t/**\n\t * Database data type string representation, that is used for migrations\n\t * @example\n\t * ```\n\t * `jsonb`, `text`\n\t * ```\n\t *\n\t * If database data type needs additional params you can use them from `config` param\n\t * @example\n\t * ```\n\t * `varchar(256)`, `numeric(2,3)`\n\t * ```\n\t *\n\t * To make `config` be of specific type please use config generic in {@link CustomTypeValues}\n\t *\n\t * @example\n\t * Usage example\n\t * ```\n\t *   dataType() {\n\t *     return 'boolean';\n\t *   },\n\t * ```\n\t * Or\n\t * ```\n\t *   dataType(config) {\n\t * \t   return typeof config.length !== 'undefined' ? `varchar(${config.length})` : `varchar`;\n\t * \t }\n\t * ```\n\t */\n\tdataType: (config: T['config'] | (Equal<T['configRequired'], true> extends true ? never : undefined)) => string;\n\n\t/**\n\t * Optional mapping function, between user input and driver\n\t * @example\n\t * For example, when using jsonb we need to map JS/TS object to string before writing to database\n\t * ```\n\t * toDriver(value: TData): string {\n\t * \t return JSON.stringify(value);\n\t * }\n\t * ```\n\t */\n\ttoDriver?: (value: T['data']) => T['driverData'] | SQL;\n\n\t/**\n\t * Optional mapping function, that is responsible for data mapping from database to JS/TS code\n\t * @example\n\t * For example, when using timestamp we need to map string Date representation to JS Date\n\t * ```\n\t * fromDriver(value: string): Date {\n\t * \treturn new Date(value);\n\t * },\n\t * ```\n\t */\n\tfromDriver?: (value: T['driverData']) => T['data'];\n}\n\n/**\n * Custom pg database data type generator\n */\nexport function customType<T extends CustomTypeValues = CustomTypeValues>(\n\tcustomTypeParams: CustomTypeParams<T>,\n): Equal<T['configRequired'], true> extends true ? {\n\t\t<TConfig extends Record<string, any> & T['config']>(\n\t\t\tfieldConfig: TConfig,\n\t\t): PgCustomColumnBuilder<ConvertCustomConfig<'', T>>;\n\t\t<TName extends string>(\n\t\t\tdbName: TName,\n\t\t\tfieldConfig: T['config'],\n\t\t): PgCustomColumnBuilder<ConvertCustomConfig<TName, T>>;\n\t}\n\t: {\n\t\t(): PgCustomColumnBuilder<ConvertCustomConfig<'', T>>;\n\t\t<TConfig extends Record<string, any> & T['config']>(\n\t\t\tfieldConfig?: TConfig,\n\t\t): PgCustomColumnBuilder<ConvertCustomConfig<'', T>>;\n\t\t<TName extends string>(\n\t\t\tdbName: TName,\n\t\t\tfieldConfig?: T['config'],\n\t\t): PgCustomColumnBuilder<ConvertCustomConfig<TName, T>>;\n\t}\n{\n\treturn <TName extends string>(\n\t\ta?: TName | T['config'],\n\t\tb?: T['config'],\n\t): PgCustomColumnBuilder<ConvertCustomConfig<TName, T>> => {\n\t\tconst { name, config } = getColumnNameAndConfig<T['config']>(a, b);\n\t\treturn new PgCustomColumnBuilder(name as ConvertCustomConfig<TName, T>['name'], config, customTypeParams);\n\t};\n}\n", "import type { ColumnBuilderBaseConfig, ColumnBuilderRuntimeConfig, MakeColumnConfig } from '~/column-builder.ts';\nimport type { ColumnBaseConfig } from '~/column.ts';\nimport { entityKind } from '~/entity.ts';\nimport type { AnyPgTable } from '~/pg-core/table.ts';\nimport { type Equal, getColumnNameAndConfig } from '~/utils.ts';\nimport { PgColumn } from './common.ts';\nimport { PgDateColumnBaseBuilder } from './date.common.ts';\n\nexport type PgDateBuilderInitial<TName extends string> = PgDateBuilder<{\n\tname: TName;\n\tdataType: 'date';\n\tcolumnType: 'PgDate';\n\tdata: Date;\n\tdriverParam: string;\n\tenumValues: undefined;\n}>;\n\nexport class PgDateBuilder<T extends ColumnBuilderBaseConfig<'date', 'PgDate'>> extends PgDateColumnBaseBuilder<T> {\n\tstatic override readonly [entityKind]: string = 'PgDateBuilder';\n\n\tconstructor(name: T['name']) {\n\t\tsuper(name, 'date', 'PgDate');\n\t}\n\n\t/** @internal */\n\toverride build<TTableName extends string>(\n\t\ttable: AnyPgTable<{ name: TTableName }>,\n\t): PgDate<MakeColumnConfig<T, TTableName>> {\n\t\treturn new PgDate<MakeColumnConfig<T, TTableName>>(table, this.config as ColumnBuilderRuntimeConfig<any, any>);\n\t}\n}\n\nexport class PgDate<T extends ColumnBaseConfig<'date', 'PgDate'>> extends PgColumn<T> {\n\tstatic override readonly [entityKind]: string = 'PgDate';\n\n\tgetSQLType(): string {\n\t\treturn 'date';\n\t}\n\n\toverride mapFromDriverValue(value: string): Date {\n\t\treturn new Date(value);\n\t}\n\n\toverride mapToDriverValue(value: Date): string {\n\t\treturn value.toISOString();\n\t}\n}\n\nexport type PgDateStringBuilderInitial<TName extends string> = PgDateStringBuilder<{\n\tname: TName;\n\tdataType: 'string';\n\tcolumnType: 'PgDateString';\n\tdata: string;\n\tdriverParam: string;\n\tenumValues: undefined;\n}>;\n\nexport class PgDateStringBuilder<T extends ColumnBuilderBaseConfig<'string', 'PgDateString'>>\n\textends PgDateColumnBaseBuilder<T>\n{\n\tstatic override readonly [entityKind]: string = 'PgDateStringBuilder';\n\n\tconstructor(name: T['name']) {\n\t\tsuper(name, 'string', 'PgDateString');\n\t}\n\n\t/** @internal */\n\toverride build<TTableName extends string>(\n\t\ttable: AnyPgTable<{ name: TTableName }>,\n\t): PgDateString<MakeColumnConfig<T, TTableName>> {\n\t\treturn new PgDateString<MakeColumnConfig<T, TTableName>>(\n\t\t\ttable,\n\t\t\tthis.config as ColumnBuilderRuntimeConfig<any, any>,\n\t\t);\n\t}\n}\n\nexport class PgDateString<T extends ColumnBaseConfig<'string', 'PgDateString'>> extends PgColumn<T> {\n\tstatic override readonly [entityKind]: string = 'PgDateString';\n\n\tgetSQLType(): string {\n\t\treturn 'date';\n\t}\n}\n\nexport interface PgDateConfig<T extends 'date' | 'string' = 'date' | 'string'> {\n\tmode: T;\n}\n\nexport function date(): PgDateStringBuilderInitial<''>;\nexport function date<TMode extends PgDateConfig['mode'] & {}>(\n\tconfig?: PgDateConfig<TMode>,\n): Equal<TMode, 'date'> extends true ? PgDateBuilderInitial<''> : PgDateStringBuilderInitial<''>;\nexport function date<TName extends string, TMode extends PgDateConfig['mode'] & {}>(\n\tname: TName,\n\tconfig?: PgDateConfig<TMode>,\n): Equal<TMode, 'date'> extends true ? PgDateBuilderInitial<TName> : PgDateStringBuilderInitial<TName>;\nexport function date(a?: string | PgDateConfig, b?: PgDateConfig) {\n\tconst { name, config } = getColumnNameAndConfig<PgDateConfig>(a, b);\n\tif (config?.mode === 'date') {\n\t\treturn new PgDateBuilder(name);\n\t}\n\treturn new PgDateStringBuilder(name);\n}\n", "import type { ColumnBuilderBaseConfig, ColumnDataType } from '~/column-builder.ts';\nimport { entityKind } from '~/entity.ts';\nimport { sql } from '~/sql/sql.ts';\nimport { PgColumnBuilder } from './common.ts';\n\nexport abstract class PgDateColumnBaseBuilder<\n\tT extends ColumnBuilderBaseConfig<ColumnDataType, string>,\n\tTRuntimeConfig extends object = object,\n> extends PgColumnBuilder<T, TRuntimeConfig> {\n\tstatic override readonly [entityKind]: string = 'PgDateColumnBaseBuilder';\n\n\tdefaultNow() {\n\t\treturn this.default(sql`now()`);\n\t}\n}\n", "import type { ColumnBuilderBaseConfig, ColumnBuilderRuntimeConfig, MakeColumnConfig } from '~/column-builder.ts';\nimport type { ColumnBaseConfig } from '~/column.ts';\nimport { entityKind } from '~/entity.ts';\nimport type { AnyPgTable } from '~/pg-core/table.ts';\nimport { PgColumn, PgColumnBuilder } from './common.ts';\n\nexport type PgDoublePrecisionBuilderInitial<TName extends string> = PgDoublePrecisionBuilder<{\n\tname: TName;\n\tdataType: 'number';\n\tcolumnType: 'PgDoublePrecision';\n\tdata: number;\n\tdriverParam: string | number;\n\tenumValues: undefined;\n}>;\n\nexport class PgDoublePrecisionBuilder<T extends ColumnBuilderBaseConfig<'number', 'PgDoublePrecision'>>\n\textends PgColumnBuilder<T>\n{\n\tstatic override readonly [entityKind]: string = 'PgDoublePrecisionBuilder';\n\n\tconstructor(name: T['name']) {\n\t\tsuper(name, 'number', 'PgDoublePrecision');\n\t}\n\n\t/** @internal */\n\toverride build<TTableName extends string>(\n\t\ttable: AnyPgTable<{ name: TTableName }>,\n\t): PgDoublePrecision<MakeColumnConfig<T, TTableName>> {\n\t\treturn new PgDoublePrecision<MakeColumnConfig<T, TTableName>>(\n\t\t\ttable,\n\t\t\tthis.config as ColumnBuilderRuntimeConfig<any, any>,\n\t\t);\n\t}\n}\n\nexport class PgDoublePrecision<T extends ColumnBaseConfig<'number', 'PgDoublePrecision'>> extends PgColumn<T> {\n\tstatic override readonly [entityKind]: string = 'PgDoublePrecision';\n\n\tgetSQLType(): string {\n\t\treturn 'double precision';\n\t}\n\n\toverride mapFromDriverValue(value: string | number): number {\n\t\tif (typeof value === 'string') {\n\t\t\treturn Number.parseFloat(value);\n\t\t}\n\t\treturn value;\n\t}\n}\n\nexport function doublePrecision(): PgDoublePrecisionBuilderInitial<''>;\nexport function doublePrecision<TName extends string>(name: TName): PgDoublePrecisionBuilderInitial<TName>;\nexport function doublePrecision(name?: string) {\n\treturn new PgDoublePrecisionBuilder(name ?? '');\n}\n", "import type { ColumnBuilderBaseConfig, ColumnBuilderRuntimeConfig, MakeColumnConfig } from '~/column-builder.ts';\nimport type { ColumnBaseConfig } from '~/column.ts';\nimport { entityKind } from '~/entity.ts';\nimport type { AnyPgTable } from '../table.ts';\nimport { PgColumn, PgColumnBuilder } from './common.ts';\n\nexport type PgInetBuilderInitial<TName extends string> = PgInetBuilder<{\n\tname: TName;\n\tdataType: 'string';\n\tcolumnType: 'PgInet';\n\tdata: string;\n\tdriverParam: string;\n\tenumValues: undefined;\n}>;\n\nexport class PgInetBuilder<T extends ColumnBuilderBaseConfig<'string', 'PgInet'>> extends PgColumnBuilder<T> {\n\tstatic override readonly [entityKind]: string = 'PgInetBuilder';\n\n\tconstructor(name: T['name']) {\n\t\tsuper(name, 'string', 'PgInet');\n\t}\n\n\t/** @internal */\n\toverride build<TTableName extends string>(\n\t\ttable: AnyPgTable<{ name: TTableName }>,\n\t): PgInet<MakeColumnConfig<T, TTableName>> {\n\t\treturn new PgInet<MakeColumnConfig<T, TTableName>>(table, this.config as ColumnBuilderRuntimeConfig<any, any>);\n\t}\n}\n\nexport class PgInet<T extends ColumnBaseConfig<'string', 'PgInet'>> extends PgColumn<T> {\n\tstatic override readonly [entityKind]: string = 'PgInet';\n\n\tgetSQLType(): string {\n\t\treturn 'inet';\n\t}\n}\n\nexport function inet(): PgInetBuilderInitial<''>;\nexport function inet<TName extends string>(name: TName): PgInetBuilderInitial<TName>;\nexport function inet(name?: string) {\n\treturn new PgInetBuilder(name ?? '');\n}\n", "import type { ColumnBuilderBaseConfig, ColumnBuilderRuntimeConfig, MakeColumnConfig } from '~/column-builder.ts';\nimport type { ColumnBaseConfig } from '~/column.ts';\nimport { entityKind } from '~/entity.ts';\nimport type { AnyPgTable } from '../table.ts';\nimport { PgColumn } from './common.ts';\nimport { PgIntColumnBaseBuilder } from './int.common.ts';\n\nexport type PgIntegerBuilderInitial<TName extends string> = PgIntegerBuilder<{\n\tname: TName;\n\tdataType: 'number';\n\tcolumnType: 'PgInteger';\n\tdata: number;\n\tdriverParam: number | string;\n\tenumValues: undefined;\n}>;\n\nexport class PgIntegerBuilder<T extends ColumnBuilderBaseConfig<'number', 'PgInteger'>>\n\textends PgIntColumnBaseBuilder<T>\n{\n\tstatic override readonly [entityKind]: string = 'PgIntegerBuilder';\n\n\tconstructor(name: T['name']) {\n\t\tsuper(name, 'number', 'PgInteger');\n\t}\n\n\t/** @internal */\n\toverride build<TTableName extends string>(\n\t\ttable: AnyPgTable<{ name: TTableName }>,\n\t): PgInteger<MakeColumnConfig<T, TTableName>> {\n\t\treturn new PgInteger<MakeColumnConfig<T, TTableName>>(table, this.config as ColumnBuilderRuntimeConfig<any, any>);\n\t}\n}\n\nexport class PgInteger<T extends ColumnBaseConfig<'number', 'PgInteger'>> extends PgColumn<T> {\n\tstatic override readonly [entityKind]: string = 'PgInteger';\n\n\tgetSQLType(): string {\n\t\treturn 'integer';\n\t}\n\n\toverride mapFromDriverValue(value: number | string): number {\n\t\tif (typeof value === 'string') {\n\t\t\treturn Number.parseInt(value);\n\t\t}\n\t\treturn value;\n\t}\n}\n\nexport function integer(): PgIntegerBuilderInitial<''>;\nexport function integer<TName extends string>(name: TName): PgIntegerBuilderInitial<TName>;\nexport function integer(name?: string) {\n\treturn new PgIntegerBuilder(name ?? '');\n}\n", "import type { ColumnBuilderBaseConfig, ColumnBuilderRuntimeConfig, MakeColumnConfig } from '~/column-builder.ts';\nimport type { ColumnBaseConfig } from '~/column.ts';\nimport { entityKind } from '~/entity.ts';\nimport type { AnyPgTable } from '~/pg-core/table.ts';\nimport { getColumnNameAndConfig } from '~/utils.ts';\nimport { PgColumn, PgColumnBuilder } from './common.ts';\nimport type { Precision } from './timestamp.ts';\n\nexport type PgIntervalBuilderInitial<TName extends string> = PgIntervalBuilder<{\n\tname: TName;\n\tdataType: 'string';\n\tcolumnType: 'PgInterval';\n\tdata: string;\n\tdriverParam: string;\n\tenumValues: undefined;\n}>;\n\nexport class PgIntervalBuilder<T extends ColumnBuilderBaseConfig<'string', 'PgInterval'>>\n\textends PgColumnBuilder<T, { intervalConfig: IntervalConfig }>\n{\n\tstatic override readonly [entityKind]: string = 'PgIntervalBuilder';\n\n\tconstructor(\n\t\tname: T['name'],\n\t\tintervalConfig: IntervalConfig,\n\t) {\n\t\tsuper(name, 'string', 'PgInterval');\n\t\tthis.config.intervalConfig = intervalConfig;\n\t}\n\n\t/** @internal */\n\toverride build<TTableName extends string>(\n\t\ttable: AnyPgTable<{ name: TTableName }>,\n\t): PgInterval<MakeColumnConfig<T, TTableName>> {\n\t\treturn new PgInterval<MakeColumnConfig<T, TTableName>>(table, this.config as ColumnBuilderRuntimeConfig<any, any>);\n\t}\n}\n\nexport class PgInterval<T extends ColumnBaseConfig<'string', 'PgInterval'>>\n\textends PgColumn<T, { intervalConfig: IntervalConfig }>\n{\n\tstatic override readonly [entityKind]: string = 'PgInterval';\n\n\treadonly fields: IntervalConfig['fields'] = this.config.intervalConfig.fields;\n\treadonly precision: IntervalConfig['precision'] = this.config.intervalConfig.precision;\n\n\tgetSQLType(): string {\n\t\tconst fields = this.fields ? ` ${this.fields}` : '';\n\t\tconst precision = this.precision ? `(${this.precision})` : '';\n\t\treturn `interval${fields}${precision}`;\n\t}\n}\n\nexport interface IntervalConfig {\n\tfields?:\n\t\t| 'year'\n\t\t| 'month'\n\t\t| 'day'\n\t\t| 'hour'\n\t\t| 'minute'\n\t\t| 'second'\n\t\t| 'year to month'\n\t\t| 'day to hour'\n\t\t| 'day to minute'\n\t\t| 'day to second'\n\t\t| 'hour to minute'\n\t\t| 'hour to second'\n\t\t| 'minute to second';\n\tprecision?: Precision;\n}\n\nexport function interval(): PgIntervalBuilderInitial<''>;\nexport function interval(\n\tconfig?: IntervalConfig,\n): PgIntervalBuilderInitial<''>;\nexport function interval<TName extends string>(\n\tname: TName,\n\tconfig?: IntervalConfig,\n): PgIntervalBuilderInitial<TName>;\nexport function interval(a?: string | IntervalConfig, b: IntervalConfig = {}) {\n\tconst { name, config } = getColumnNameAndConfig<IntervalConfig>(a, b);\n\treturn new PgIntervalBuilder(name, config);\n}\n", "import type { ColumnBuilderBaseConfig, ColumnBuilderRuntimeConfig, MakeColumnConfig } from '~/column-builder.ts';\nimport type { ColumnBaseConfig } from '~/column.ts';\nimport { entityKind } from '~/entity.ts';\nimport type { AnyPgTable } from '~/pg-core/table.ts';\nimport { PgColumn, PgColumnBuilder } from './common.ts';\n\nexport type PgJsonBuilderInitial<TName extends string> = PgJsonBuilder<{\n\tname: TName;\n\tdataType: 'json';\n\tcolumnType: 'PgJson';\n\tdata: unknown;\n\tdriverParam: unknown;\n\tenumValues: undefined;\n}>;\n\nexport class PgJsonBuilder<T extends ColumnBuilderBaseConfig<'json', 'PgJson'>> extends PgColumnBuilder<\n\tT\n> {\n\tstatic override readonly [entityKind]: string = 'PgJsonBuilder';\n\n\tconstructor(name: T['name']) {\n\t\tsuper(name, 'json', 'PgJson');\n\t}\n\n\t/** @internal */\n\toverride build<TTableName extends string>(\n\t\ttable: AnyPgTable<{ name: TTableName }>,\n\t): PgJson<MakeColumnConfig<T, TTableName>> {\n\t\treturn new PgJson<MakeColumnConfig<T, TTableName>>(table, this.config as ColumnBuilderRuntimeConfig<any, any>);\n\t}\n}\n\nexport class PgJson<T extends ColumnBaseConfig<'json', 'PgJson'>> extends PgColumn<T> {\n\tstatic override readonly [entityKind]: string = 'PgJson';\n\n\tconstructor(table: AnyPgTable<{ name: T['tableName'] }>, config: PgJsonBuilder<T>['config']) {\n\t\tsuper(table, config);\n\t}\n\n\tgetSQLType(): string {\n\t\treturn 'json';\n\t}\n\n\toverride mapToDriverValue(value: T['data']): string {\n\t\treturn JSON.stringify(value);\n\t}\n\n\toverride mapFromDriverValue(value: T['data'] | string): T['data'] {\n\t\tif (typeof value === 'string') {\n\t\t\ttry {\n\t\t\t\treturn JSON.parse(value);\n\t\t\t} catch {\n\t\t\t\treturn value as T['data'];\n\t\t\t}\n\t\t}\n\t\treturn value;\n\t}\n}\n\nexport function json(): PgJsonBuilderInitial<''>;\nexport function json<TName extends string>(name: TName): PgJsonBuilderInitial<TName>;\nexport function json(name?: string) {\n\treturn new PgJsonBuilder(name ?? '');\n}\n", "import type { ColumnBuilderBaseConfig, ColumnBuilderRuntimeConfig, MakeColumnConfig } from '~/column-builder.ts';\nimport type { ColumnBaseConfig } from '~/column.ts';\nimport { entityKind } from '~/entity.ts';\nimport type { AnyPgTable } from '~/pg-core/table.ts';\nimport { PgColumn, PgColumnBuilder } from './common.ts';\n\nexport type PgJsonbBuilderInitial<TName extends string> = PgJsonbBuilder<{\n\tname: TName;\n\tdataType: 'json';\n\tcolumnType: 'PgJsonb';\n\tdata: unknown;\n\tdriverParam: unknown;\n\tenumValues: undefined;\n}>;\n\nexport class PgJsonbBuilder<T extends ColumnBuilderBaseConfig<'json', 'PgJsonb'>> extends PgColumnBuilder<T> {\n\tstatic override readonly [entityKind]: string = 'PgJsonbBuilder';\n\n\tconstructor(name: T['name']) {\n\t\tsuper(name, 'json', 'PgJsonb');\n\t}\n\n\t/** @internal */\n\toverride build<TTableName extends string>(\n\t\ttable: AnyPgTable<{ name: TTableName }>,\n\t): PgJsonb<MakeColumnConfig<T, TTableName>> {\n\t\treturn new PgJsonb<MakeColumnConfig<T, TTableName>>(table, this.config as ColumnBuilderRuntimeConfig<any, any>);\n\t}\n}\n\nexport class PgJsonb<T extends ColumnBaseConfig<'json', 'PgJsonb'>> extends PgColumn<T> {\n\tstatic override readonly [entityKind]: string = 'PgJsonb';\n\n\tconstructor(table: AnyPgTable<{ name: T['tableName'] }>, config: PgJsonbBuilder<T>['config']) {\n\t\tsuper(table, config);\n\t}\n\n\tgetSQLType(): string {\n\t\treturn 'jsonb';\n\t}\n\n\toverride mapToDriverValue(value: T['data']): string {\n\t\treturn JSON.stringify(value);\n\t}\n\n\toverride mapFromDriverValue(value: T['data'] | string): T['data'] {\n\t\tif (typeof value === 'string') {\n\t\t\ttry {\n\t\t\t\treturn JSON.parse(value);\n\t\t\t} catch {\n\t\t\t\treturn value as T['data'];\n\t\t\t}\n\t\t}\n\t\treturn value;\n\t}\n}\n\nexport function jsonb(): PgJsonbBuilderInitial<''>;\nexport function jsonb<TName extends string>(name: TName): PgJsonbBuilderInitial<TName>;\nexport function jsonb(name?: string) {\n\treturn new PgJsonbBuilder(name ?? '');\n}\n", "import type { ColumnBuilderBaseConfig, ColumnBuilderRuntimeConfig, MakeColumnConfig } from '~/column-builder.ts';\nimport type { ColumnBaseConfig } from '~/column.ts';\nimport { entityKind } from '~/entity.ts';\nimport type { AnyPgTable } from '~/pg-core/table.ts';\n\nimport { type Equal, getColumnNameAndConfig } from '~/utils.ts';\nimport { PgColumn, PgColumnBuilder } from './common.ts';\n\nexport type PgLineBuilderInitial<TName extends string> = PgLineBuilder<{\n\tname: TName;\n\tdataType: 'array';\n\tcolumnType: 'PgLine';\n\tdata: [number, number, number];\n\tdriverParam: number | string;\n\tenumValues: undefined;\n}>;\n\nexport class PgLineBuilder<T extends ColumnBuilderBaseConfig<'array', 'PgLine'>> extends PgColumnBuilder<T> {\n\tstatic override readonly [entityKind]: string = 'PgLineBuilder';\n\n\tconstructor(name: T['name']) {\n\t\tsuper(name, 'array', 'PgLine');\n\t}\n\n\t/** @internal */\n\toverride build<TTableName extends string>(\n\t\ttable: AnyPgTable<{ name: TTableName }>,\n\t): PgLineTuple<MakeColumnConfig<T, TTableName>> {\n\t\treturn new PgLineTuple<MakeColumnConfig<T, TTableName>>(\n\t\t\ttable,\n\t\t\tthis.config as ColumnBuilderRuntimeConfig<any, any>,\n\t\t);\n\t}\n}\n\nexport class PgLineTuple<T extends ColumnBaseConfig<'array', 'PgLine'>> extends PgColumn<T> {\n\tstatic override readonly [entityKind]: string = 'PgLine';\n\n\tgetSQLType(): string {\n\t\treturn 'line';\n\t}\n\n\toverride mapFromDriverValue(value: string): [number, number, number] {\n\t\tconst [a, b, c] = value.slice(1, -1).split(',');\n\t\treturn [Number.parseFloat(a!), Number.parseFloat(b!), Number.parseFloat(c!)];\n\t}\n\n\toverride mapToDriverValue(value: [number, number, number]): string {\n\t\treturn `{${value[0]},${value[1]},${value[2]}}`;\n\t}\n}\n\nexport type PgLineABCBuilderInitial<TName extends string> = PgLineABCBuilder<{\n\tname: TName;\n\tdataType: 'json';\n\tcolumnType: 'PgLineABC';\n\tdata: { a: number; b: number; c: number };\n\tdriverParam: string;\n\tenumValues: undefined;\n}>;\n\nexport class PgLineABCBuilder<T extends ColumnBuilderBaseConfig<'json', 'PgLineABC'>> extends PgColumnBuilder<T> {\n\tstatic override readonly [entityKind]: string = 'PgLineABCBuilder';\n\n\tconstructor(name: T['name']) {\n\t\tsuper(name, 'json', 'PgLineABC');\n\t}\n\n\t/** @internal */\n\toverride build<TTableName extends string>(\n\t\ttable: AnyPgTable<{ name: TTableName }>,\n\t): PgLineABC<MakeColumnConfig<T, TTableName>> {\n\t\treturn new PgLineABC<MakeColumnConfig<T, TTableName>>(\n\t\t\ttable,\n\t\t\tthis.config as ColumnBuilderRuntimeConfig<any, any>,\n\t\t);\n\t}\n}\n\nexport class PgLineABC<T extends ColumnBaseConfig<'json', 'PgLineABC'>> extends PgColumn<T> {\n\tstatic override readonly [entityKind]: string = 'PgLineABC';\n\n\tgetSQLType(): string {\n\t\treturn 'line';\n\t}\n\n\toverride mapFromDriverValue(value: string): { a: number; b: number; c: number } {\n\t\tconst [a, b, c] = value.slice(1, -1).split(',');\n\t\treturn { a: Number.parseFloat(a!), b: Number.parseFloat(b!), c: Number.parseFloat(c!) };\n\t}\n\n\toverride mapToDriverValue(value: { a: number; b: number; c: number }): string {\n\t\treturn `{${value.a},${value.b},${value.c}}`;\n\t}\n}\n\nexport interface PgLineTypeConfig<T extends 'tuple' | 'abc' = 'tuple' | 'abc'> {\n\tmode?: T;\n}\n\nexport function line(): PgLineBuilderInitial<''>;\nexport function line<TMode extends PgLineTypeConfig['mode'] & {}>(\n\tconfig?: PgLineTypeConfig<TMode>,\n): Equal<TMode, 'abc'> extends true ? PgLineABCBuilderInitial<''>\n\t: PgLineBuilderInitial<''>;\nexport function line<TName extends string, TMode extends PgLineTypeConfig['mode'] & {}>(\n\tname: TName,\n\tconfig?: PgLineTypeConfig<TMode>,\n): Equal<TMode, 'abc'> extends true ? PgLineABCBuilderInitial<TName>\n\t: PgLineBuilderInitial<TName>;\nexport function line(a?: string | PgLineTypeConfig, b?: PgLineTypeConfig) {\n\tconst { name, config } = getColumnNameAndConfig<PgLineTypeConfig>(a, b);\n\tif (!config?.mode || config.mode === 'tuple') {\n\t\treturn new PgLineBuilder(name);\n\t}\n\treturn new PgLineABCBuilder(name);\n}\n", "import type { ColumnBuilderBaseConfig, ColumnBuilderRuntimeConfig, MakeColumnConfig } from '~/column-builder.ts';\nimport type { ColumnBaseConfig } from '~/column.ts';\nimport { entityKind } from '~/entity.ts';\nimport type { AnyPgTable } from '../table.ts';\nimport { PgColumn, PgColumnBuilder } from './common.ts';\n\nexport type PgMacaddrBuilderInitial<TName extends string> = PgMacaddrBuilder<{\n\tname: TName;\n\tdataType: 'string';\n\tcolumnType: 'PgMacaddr';\n\tdata: string;\n\tdriverParam: string;\n\tenumValues: undefined;\n}>;\n\nexport class PgMacaddrBuilder<T extends ColumnBuilderBaseConfig<'string', 'PgMacaddr'>> extends PgColumnBuilder<T> {\n\tstatic override readonly [entityKind]: string = 'PgMacaddrBuilder';\n\n\tconstructor(name: T['name']) {\n\t\tsuper(name, 'string', 'PgMacaddr');\n\t}\n\n\t/** @internal */\n\toverride build<TTableName extends string>(\n\t\ttable: AnyPgTable<{ name: TTableName }>,\n\t): PgMacaddr<MakeColumnConfig<T, TTableName>> {\n\t\treturn new PgMacaddr<MakeColumnConfig<T, TTableName>>(table, this.config as ColumnBuilderRuntimeConfig<any, any>);\n\t}\n}\n\nexport class PgMacaddr<T extends ColumnBaseConfig<'string', 'PgMacaddr'>> extends PgColumn<T> {\n\tstatic override readonly [entityKind]: string = 'PgMacaddr';\n\n\tgetSQLType(): string {\n\t\treturn 'macaddr';\n\t}\n}\n\nexport function macaddr(): PgMacaddrBuilderInitial<''>;\nexport function macaddr<TName extends string>(name: TName): PgMacaddrBuilderInitial<TName>;\nexport function macaddr(name?: string) {\n\treturn new PgMacaddrBuilder(name ?? '');\n}\n", "import type { ColumnBuilderBaseConfig, ColumnBuilderRuntimeConfig, MakeColumnConfig } from '~/column-builder.ts';\nimport type { ColumnBaseConfig } from '~/column.ts';\nimport { entityKind } from '~/entity.ts';\nimport type { AnyPgTable } from '../table.ts';\nimport { PgColumn, PgColumnBuilder } from './common.ts';\n\nexport type PgMacaddr8BuilderInitial<TName extends string> = PgMacaddr8Builder<{\n\tname: TName;\n\tdataType: 'string';\n\tcolumnType: 'PgMacaddr8';\n\tdata: string;\n\tdriverParam: string;\n\tenumValues: undefined;\n}>;\n\nexport class PgMacaddr8Builder<T extends ColumnBuilderBaseConfig<'string', 'PgMacaddr8'>> extends PgColumnBuilder<T> {\n\tstatic override readonly [entityKind]: string = 'PgMacaddr8Builder';\n\n\tconstructor(name: T['name']) {\n\t\tsuper(name, 'string', 'PgMacaddr8');\n\t}\n\n\t/** @internal */\n\toverride build<TTableName extends string>(\n\t\ttable: AnyPgTable<{ name: TTableName }>,\n\t): PgMacaddr8<MakeColumnConfig<T, TTableName>> {\n\t\treturn new PgMacaddr8<MakeColumnConfig<T, TTableName>>(table, this.config as ColumnBuilderRuntimeConfig<any, any>);\n\t}\n}\n\nexport class PgMacaddr8<T extends ColumnBaseConfig<'string', 'PgMacaddr8'>> extends PgColumn<T> {\n\tstatic override readonly [entityKind]: string = 'PgMacaddr8';\n\n\tgetSQLType(): string {\n\t\treturn 'macaddr8';\n\t}\n}\n\nexport function macaddr8(): PgMacaddr8BuilderInitial<''>;\nexport function macaddr8<TName extends string>(name: TName): PgMacaddr8BuilderInitial<TName>;\nexport function macaddr8(name?: string) {\n\treturn new PgMacaddr8Builder(name ?? '');\n}\n", "import type { ColumnBuilderBaseConfig, ColumnBuilderRuntimeConfig, MakeColumnConfig } from '~/column-builder.ts';\nimport type { ColumnBaseConfig } from '~/column.ts';\nimport { entityKind } from '~/entity.ts';\nimport type { AnyPgTable } from '~/pg-core/table.ts';\nimport { type Equal, getColumnNameAndConfig } from '~/utils.ts';\nimport { PgColumn, PgColumnBuilder } from './common.ts';\n\nexport type PgNumericBuilderInitial<TName extends string> = PgNumericBuilder<{\n\tname: TName;\n\tdataType: 'string';\n\tcolumnType: 'PgNumeric';\n\tdata: string;\n\tdriverParam: string;\n\tenumValues: undefined;\n}>;\n\nexport class PgNumericBuilder<T extends ColumnBuilderBaseConfig<'string', 'PgNumeric'>> extends PgColumnBuilder<\n\tT,\n\t{\n\t\tprecision: number | undefined;\n\t\tscale: number | undefined;\n\t}\n> {\n\tstatic override readonly [entityKind]: string = 'PgNumericBuilder';\n\n\tconstructor(name: T['name'], precision?: number, scale?: number) {\n\t\tsuper(name, 'string', 'PgNumeric');\n\t\tthis.config.precision = precision;\n\t\tthis.config.scale = scale;\n\t}\n\n\t/** @internal */\n\toverride build<TTableName extends string>(\n\t\ttable: AnyPgTable<{ name: TTableName }>,\n\t): PgNumeric<MakeColumnConfig<T, TTableName>> {\n\t\treturn new PgNumeric<MakeColumnConfig<T, TTableName>>(table, this.config as ColumnBuilderRuntimeConfig<any, any>);\n\t}\n}\n\nexport class PgNumeric<T extends ColumnBaseConfig<'string', 'PgNumeric'>> extends PgColumn<T> {\n\tstatic override readonly [entityKind]: string = 'PgNumeric';\n\n\treadonly precision: number | undefined;\n\treadonly scale: number | undefined;\n\n\tconstructor(table: AnyPgTable<{ name: T['tableName'] }>, config: PgNumericBuilder<T>['config']) {\n\t\tsuper(table, config);\n\t\tthis.precision = config.precision;\n\t\tthis.scale = config.scale;\n\t}\n\n\toverride mapFromDriverValue(value: unknown): string {\n\t\tif (typeof value === 'string') return value;\n\n\t\treturn String(value);\n\t}\n\n\tgetSQLType(): string {\n\t\tif (this.precision !== undefined && this.scale !== undefined) {\n\t\t\treturn `numeric(${this.precision}, ${this.scale})`;\n\t\t} else if (this.precision === undefined) {\n\t\t\treturn 'numeric';\n\t\t} else {\n\t\t\treturn `numeric(${this.precision})`;\n\t\t}\n\t}\n}\n\nexport type PgNumericNumberBuilderInitial<TName extends string> = PgNumericNumberBuilder<{\n\tname: TName;\n\tdataType: 'number';\n\tcolumnType: 'PgNumericNumber';\n\tdata: number;\n\tdriverParam: string;\n\tenumValues: undefined;\n}>;\n\nexport class PgNumericNumberBuilder<T extends ColumnBuilderBaseConfig<'number', 'PgNumericNumber'>>\n\textends PgColumnBuilder<\n\t\tT,\n\t\t{\n\t\t\tprecision: number | undefined;\n\t\t\tscale: number | undefined;\n\t\t}\n\t>\n{\n\tstatic override readonly [entityKind]: string = 'PgNumericNumberBuilder';\n\n\tconstructor(name: T['name'], precision?: number, scale?: number) {\n\t\tsuper(name, 'number', 'PgNumericNumber');\n\t\tthis.config.precision = precision;\n\t\tthis.config.scale = scale;\n\t}\n\n\t/** @internal */\n\toverride build<TTableName extends string>(\n\t\ttable: AnyPgTable<{ name: TTableName }>,\n\t): PgNumericNumber<MakeColumnConfig<T, TTableName>> {\n\t\treturn new PgNumericNumber<MakeColumnConfig<T, TTableName>>(\n\t\t\ttable,\n\t\t\tthis.config as ColumnBuilderRuntimeConfig<any, any>,\n\t\t);\n\t}\n}\n\nexport class PgNumericNumber<T extends ColumnBaseConfig<'number', 'PgNumericNumber'>> extends PgColumn<T> {\n\tstatic override readonly [entityKind]: string = 'PgNumericNumber';\n\n\treadonly precision: number | undefined;\n\treadonly scale: number | undefined;\n\n\tconstructor(table: AnyPgTable<{ name: T['tableName'] }>, config: PgNumericNumberBuilder<T>['config']) {\n\t\tsuper(table, config);\n\t\tthis.precision = config.precision;\n\t\tthis.scale = config.scale;\n\t}\n\n\toverride mapFromDriverValue(value: unknown): number {\n\t\tif (typeof value === 'number') return value;\n\n\t\treturn Number(value);\n\t}\n\n\toverride mapToDriverValue = String;\n\n\tgetSQLType(): string {\n\t\tif (this.precision !== undefined && this.scale !== undefined) {\n\t\t\treturn `numeric(${this.precision}, ${this.scale})`;\n\t\t} else if (this.precision === undefined) {\n\t\t\treturn 'numeric';\n\t\t} else {\n\t\t\treturn `numeric(${this.precision})`;\n\t\t}\n\t}\n}\n\nexport type PgNumericBigIntBuilderInitial<TName extends string> = PgNumericBigIntBuilder<{\n\tname: TName;\n\tdataType: 'bigint';\n\tcolumnType: 'PgNumericBigInt';\n\tdata: bigint;\n\tdriverParam: string;\n\tenumValues: undefined;\n}>;\n\nexport class PgNumericBigIntBuilder<T extends ColumnBuilderBaseConfig<'bigint', 'PgNumericBigInt'>>\n\textends PgColumnBuilder<\n\t\tT,\n\t\t{\n\t\t\tprecision: number | undefined;\n\t\t\tscale: number | undefined;\n\t\t}\n\t>\n{\n\tstatic override readonly [entityKind]: string = 'PgNumericBigIntBuilder';\n\n\tconstructor(name: T['name'], precision?: number, scale?: number) {\n\t\tsuper(name, 'bigint', 'PgNumericBigInt');\n\t\tthis.config.precision = precision;\n\t\tthis.config.scale = scale;\n\t}\n\n\t/** @internal */\n\toverride build<TTableName extends string>(\n\t\ttable: AnyPgTable<{ name: TTableName }>,\n\t): PgNumericBigInt<MakeColumnConfig<T, TTableName>> {\n\t\treturn new PgNumericBigInt<MakeColumnConfig<T, TTableName>>(\n\t\t\ttable,\n\t\t\tthis.config as ColumnBuilderRuntimeConfig<any, any>,\n\t\t);\n\t}\n}\n\nexport class PgNumericBigInt<T extends ColumnBaseConfig<'bigint', 'PgNumericBigInt'>> extends PgColumn<T> {\n\tstatic override readonly [entityKind]: string = 'PgNumericBigInt';\n\n\treadonly precision: number | undefined;\n\treadonly scale: number | undefined;\n\n\tconstructor(table: AnyPgTable<{ name: T['tableName'] }>, config: PgNumericBigIntBuilder<T>['config']) {\n\t\tsuper(table, config);\n\t\tthis.precision = config.precision;\n\t\tthis.scale = config.scale;\n\t}\n\n\toverride mapFromDriverValue = BigInt;\n\n\toverride mapToDriverValue = String;\n\n\tgetSQLType(): string {\n\t\tif (this.precision !== undefined && this.scale !== undefined) {\n\t\t\treturn `numeric(${this.precision}, ${this.scale})`;\n\t\t} else if (this.precision === undefined) {\n\t\t\treturn 'numeric';\n\t\t} else {\n\t\t\treturn `numeric(${this.precision})`;\n\t\t}\n\t}\n}\n\nexport type PgNumericConfig<T extends 'string' | 'number' | 'bigint' = 'string' | 'number' | 'bigint'> =\n\t| { precision: number; scale?: number; mode?: T }\n\t| { precision?: number; scale: number; mode?: T }\n\t| { precision?: number; scale?: number; mode: T };\n\nexport function numeric<TMode extends 'string' | 'number' | 'bigint'>(\n\tconfig?: PgNumericConfig<TMode>,\n): Equal<TMode, 'number'> extends true ? PgNumericNumberBuilderInitial<''>\n\t: Equal<TMode, 'bigint'> extends true ? PgNumericBigIntBuilderInitial<''>\n\t: PgNumericBuilderInitial<''>;\nexport function numeric<TName extends string, TMode extends 'string' | 'number' | 'bigint'>(\n\tname: TName,\n\tconfig?: PgNumericConfig<TMode>,\n): Equal<TMode, 'number'> extends true ? PgNumericNumberBuilderInitial<TName>\n\t: Equal<TMode, 'bigint'> extends true ? PgNumericBigIntBuilderInitial<TName>\n\t: PgNumericBuilderInitial<TName>;\nexport function numeric(a?: string | PgNumericConfig, b?: PgNumericConfig) {\n\tconst { name, config } = getColumnNameAndConfig<PgNumericConfig>(a, b);\n\tconst mode = config?.mode;\n\treturn mode === 'number'\n\t\t? new PgNumericNumberBuilder(name, config?.precision, config?.scale)\n\t\t: mode === 'bigint'\n\t\t? new PgNumericBigIntBuilder(name, config?.precision, config?.scale)\n\t\t: new PgNumericBuilder(name, config?.precision, config?.scale);\n}\n\nexport const decimal = numeric;\n", "import type { ColumnBuilderBaseConfig, ColumnBuilderRuntimeConfig, MakeColumnConfig } from '~/column-builder.ts';\nimport type { ColumnBaseConfig } from '~/column.ts';\nimport { entityKind } from '~/entity.ts';\nimport type { AnyPgTable } from '~/pg-core/table.ts';\n\nimport { type Equal, getColumnNameAndConfig } from '~/utils.ts';\nimport { PgColumn, PgColumnBuilder } from './common.ts';\n\nexport type PgPointTupleBuilderInitial<TName extends string> = PgPointTupleBuilder<{\n\tname: TName;\n\tdataType: 'array';\n\tcolumnType: 'PgPointTuple';\n\tdata: [number, number];\n\tdriverParam: number | string;\n\tenumValues: undefined;\n}>;\n\nexport class PgPointTupleBuilder<T extends ColumnBuilderBaseConfig<'array', 'PgPointTuple'>>\n\textends PgColumnBuilder<T>\n{\n\tstatic override readonly [entityKind]: string = 'PgPointTupleBuilder';\n\n\tconstructor(name: string) {\n\t\tsuper(name, 'array', 'PgPointTuple');\n\t}\n\n\t/** @internal */\n\toverride build<TTableName extends string>(\n\t\ttable: AnyPgTable<{ name: TTableName }>,\n\t): PgPointTuple<MakeColumnConfig<T, TTableName>> {\n\t\treturn new PgPointTuple<MakeColumnConfig<T, TTableName>>(\n\t\t\ttable,\n\t\t\tthis.config as ColumnBuilderRuntimeConfig<any, any>,\n\t\t);\n\t}\n}\n\nexport class PgPointTuple<T extends ColumnBaseConfig<'array', 'PgPointTuple'>> extends PgColumn<T> {\n\tstatic override readonly [entityKind]: string = 'PgPointTuple';\n\n\tgetSQLType(): string {\n\t\treturn 'point';\n\t}\n\n\toverride mapFromDriverValue(value: string | { x: number; y: number }): [number, number] {\n\t\tif (typeof value === 'string') {\n\t\t\tconst [x, y] = value.slice(1, -1).split(',');\n\t\t\treturn [Number.parseFloat(x!), Number.parseFloat(y!)];\n\t\t}\n\t\treturn [value.x, value.y];\n\t}\n\n\toverride mapToDriverValue(value: [number, number]): string {\n\t\treturn `(${value[0]},${value[1]})`;\n\t}\n}\n\nexport type PgPointObjectBuilderInitial<TName extends string> = PgPointObjectBuilder<{\n\tname: TName;\n\tdataType: 'json';\n\tcolumnType: 'PgPointObject';\n\tdata: { x: number; y: number };\n\tdriverParam: string;\n\tenumValues: undefined;\n}>;\n\nexport class PgPointObjectBuilder<T extends ColumnBuilderBaseConfig<'json', 'PgPointObject'>>\n\textends PgColumnBuilder<T>\n{\n\tstatic override readonly [entityKind]: string = 'PgPointObjectBuilder';\n\n\tconstructor(name: string) {\n\t\tsuper(name, 'json', 'PgPointObject');\n\t}\n\n\t/** @internal */\n\toverride build<TTableName extends string>(\n\t\ttable: AnyPgTable<{ name: TTableName }>,\n\t): PgPointObject<MakeColumnConfig<T, TTableName>> {\n\t\treturn new PgPointObject<MakeColumnConfig<T, TTableName>>(\n\t\t\ttable,\n\t\t\tthis.config as ColumnBuilderRuntimeConfig<any, any>,\n\t\t);\n\t}\n}\n\nexport class PgPointObject<T extends ColumnBaseConfig<'json', 'PgPointObject'>> extends PgColumn<T> {\n\tstatic override readonly [entityKind]: string = 'PgPointObject';\n\n\tgetSQLType(): string {\n\t\treturn 'point';\n\t}\n\n\toverride mapFromDriverValue(value: string | { x: number; y: number }): { x: number; y: number } {\n\t\tif (typeof value === 'string') {\n\t\t\tconst [x, y] = value.slice(1, -1).split(',');\n\t\t\treturn { x: Number.parseFloat(x!), y: Number.parseFloat(y!) };\n\t\t}\n\t\treturn value;\n\t}\n\n\toverride mapToDriverValue(value: { x: number; y: number }): string {\n\t\treturn `(${value.x},${value.y})`;\n\t}\n}\n\nexport interface PgPointConfig<T extends 'tuple' | 'xy' = 'tuple' | 'xy'> {\n\tmode?: T;\n}\n\nexport function point(): PgPointTupleBuilderInitial<''>;\nexport function point<TMode extends PgPointConfig['mode'] & {}>(\n\tconfig?: PgPointConfig<TMode>,\n): Equal<TMode, 'xy'> extends true ? PgPointObjectBuilderInitial<''>\n\t: PgPointTupleBuilderInitial<''>;\nexport function point<TName extends string, TMode extends PgPointConfig['mode'] & {}>(\n\tname: TName,\n\tconfig?: PgPointConfig<TMode>,\n): Equal<TMode, 'xy'> extends true ? PgPointObjectBuilderInitial<TName>\n\t: PgPointTupleBuilderInitial<TName>;\nexport function point(a?: string | PgPointConfig, b?: PgPointConfig) {\n\tconst { name, config } = getColumnNameAndConfig<PgPointConfig>(a, b);\n\tif (!config?.mode || config.mode === 'tuple') {\n\t\treturn new PgPointTupleBuilder(name);\n\t}\n\treturn new PgPointObjectBuilder(name);\n}\n", "import type { ColumnBuilderBaseConfig, ColumnBuilderRuntimeConfig, MakeColumnConfig } from '~/column-builder.ts';\nimport type { ColumnBaseConfig } from '~/column.ts';\nimport { entityKind } from '~/entity.ts';\nimport type { AnyPgTable } from '~/pg-core/table.ts';\n\nimport { type Equal, getColumnNameAndConfig } from '~/utils.ts';\nimport { PgColumn, PgColumnBuilder } from '../common.ts';\nimport { parseEWKB } from './utils.ts';\n\nexport type PgGeometryBuilderInitial<TName extends string> = PgGeometryBuilder<{\n\tname: TName;\n\tdataType: 'array';\n\tcolumnType: 'PgGeometry';\n\tdata: [number, number];\n\tdriverParam: string;\n\tenumValues: undefined;\n}>;\n\nexport class PgGeometryBuilder<T extends ColumnBuilderBaseConfig<'array', 'PgGeometry'>> extends PgColumnBuilder<T> {\n\tstatic override readonly [entityKind]: string = 'PgGeometryBuilder';\n\n\tconstructor(name: T['name']) {\n\t\tsuper(name, 'array', 'PgGeometry');\n\t}\n\n\t/** @internal */\n\toverride build<TTableName extends string>(\n\t\ttable: AnyPgTable<{ name: TTableName }>,\n\t): PgGeometry<MakeColumnConfig<T, TTableName>> {\n\t\treturn new PgGeometry<MakeColumnConfig<T, TTableName>>(\n\t\t\ttable,\n\t\t\tthis.config as ColumnBuilderRuntimeConfig<any, any>,\n\t\t);\n\t}\n}\n\nexport class PgGeometry<T extends ColumnBaseConfig<'array', 'PgGeometry'>> extends PgColumn<T> {\n\tstatic override readonly [entityKind]: string = 'PgGeometry';\n\n\tgetSQLType(): string {\n\t\treturn 'geometry(point)';\n\t}\n\n\toverride mapFromDriverValue(value: string): [number, number] {\n\t\treturn parseEWKB(value);\n\t}\n\n\toverride mapToDriverValue(value: [number, number]): string {\n\t\treturn `point(${value[0]} ${value[1]})`;\n\t}\n}\n\nexport type PgGeometryObjectBuilderInitial<TName extends string> = PgGeometryObjectBuilder<{\n\tname: TName;\n\tdataType: 'json';\n\tcolumnType: 'PgGeometryObject';\n\tdata: { x: number; y: number };\n\tdriverParam: string;\n\tenumValues: undefined;\n}>;\n\nexport class PgGeometryObjectBuilder<T extends ColumnBuilderBaseConfig<'json', 'PgGeometryObject'>>\n\textends PgColumnBuilder<T>\n{\n\tstatic override readonly [entityKind]: string = 'PgGeometryObjectBuilder';\n\n\tconstructor(name: T['name']) {\n\t\tsuper(name, 'json', 'PgGeometryObject');\n\t}\n\n\t/** @internal */\n\toverride build<TTableName extends string>(\n\t\ttable: AnyPgTable<{ name: TTableName }>,\n\t): PgGeometryObject<MakeColumnConfig<T, TTableName>> {\n\t\treturn new PgGeometryObject<MakeColumnConfig<T, TTableName>>(\n\t\t\ttable,\n\t\t\tthis.config as ColumnBuilderRuntimeConfig<any, any>,\n\t\t);\n\t}\n}\n\nexport class PgGeometryObject<T extends ColumnBaseConfig<'json', 'PgGeometryObject'>> extends PgColumn<T> {\n\tstatic override readonly [entityKind]: string = 'PgGeometryObject';\n\n\tgetSQLType(): string {\n\t\treturn 'geometry(point)';\n\t}\n\n\toverride mapFromDriverValue(value: string): { x: number; y: number } {\n\t\tconst parsed = parseEWKB(value);\n\t\treturn { x: parsed[0], y: parsed[1] };\n\t}\n\n\toverride mapToDriverValue(value: { x: number; y: number }): string {\n\t\treturn `point(${value.x} ${value.y})`;\n\t}\n}\n\nexport interface PgGeometryConfig<T extends 'tuple' | 'xy' = 'tuple' | 'xy'> {\n\tmode?: T;\n\ttype?: 'point' | (string & {});\n\tsrid?: number;\n}\n\nexport function geometry(): PgGeometryBuilderInitial<''>;\nexport function geometry<TMode extends PgGeometryConfig['mode'] & {}>(\n\tconfig?: PgGeometryConfig<TMode>,\n): Equal<TMode, 'xy'> extends true ? PgGeometryObjectBuilderInitial<''> : PgGeometryBuilderInitial<''>;\nexport function geometry<TName extends string, TMode extends PgGeometryConfig['mode'] & {}>(\n\tname: TName,\n\tconfig?: PgGeometryConfig<TMode>,\n): Equal<TMode, 'xy'> extends true ? PgGeometryObjectBuilderInitial<TName> : PgGeometryBuilderInitial<TName>;\nexport function geometry(a?: string | PgGeometryConfig, b?: PgGeometryConfig) {\n\tconst { name, config } = getColumnNameAndConfig<PgGeometryConfig>(a, b);\n\tif (!config?.mode || config.mode === 'tuple') {\n\t\treturn new PgGeometryBuilder(name);\n\t}\n\treturn new PgGeometryObjectBuilder(name);\n}\n", "function hexToBytes(hex: string): Uint8Array {\n\tconst bytes: number[] = [];\n\tfor (let c = 0; c < hex.length; c += 2) {\n\t\tbytes.push(Number.parseInt(hex.slice(c, c + 2), 16));\n\t}\n\treturn new Uint8Array(bytes);\n}\n\nfunction bytesToFloat64(bytes: Uint8Array, offset: number): number {\n\tconst buffer = new ArrayBuffer(8);\n\tconst view = new DataView(buffer);\n\tfor (let i = 0; i < 8; i++) {\n\t\tview.setUint8(i, bytes[offset + i]!);\n\t}\n\treturn view.getFloat64(0, true);\n}\n\nexport function parseEWKB(hex: string): [number, number] {\n\tconst bytes = hexToBytes(hex);\n\n\tlet offset = 0;\n\n\t// Byte order: 1 is little-endian, 0 is big-endian\n\tconst byteOrder = bytes[offset];\n\toffset += 1;\n\n\tconst view = new DataView(bytes.buffer);\n\tconst geomType = view.getUint32(offset, byteOrder === 1);\n\toffset += 4;\n\n\tlet _srid: number | undefined;\n\tif (geomType & 0x20000000) { // SRID flag\n\t\t_srid = view.getUint32(offset, byteOrder === 1);\n\t\toffset += 4;\n\t}\n\n\tif ((geomType & 0xFFFF) === 1) {\n\t\tconst x = bytesToFloat64(bytes, offset);\n\t\toffset += 8;\n\t\tconst y = bytesToFloat64(bytes, offset);\n\t\toffset += 8;\n\n\t\treturn [x, y];\n\t}\n\n\tthrow new Error('Unsupported geometry type');\n}\n", "import type { ColumnBuilderBaseConfig, ColumnBuilderRuntimeConfig, MakeColumnConfig } from '~/column-builder.ts';\nimport type { ColumnBaseConfig } from '~/column.ts';\nimport { entityKind } from '~/entity.ts';\nimport type { AnyPgTable } from '~/pg-core/table.ts';\nimport { PgColumn, PgColumnBuilder } from './common.ts';\n\nexport type PgRealBuilderInitial<TName extends string> = PgRealBuilder<{\n\tname: TName;\n\tdataType: 'number';\n\tcolumnType: 'PgReal';\n\tdata: number;\n\tdriverParam: string | number;\n\tenumValues: undefined;\n}>;\n\nexport class PgRealBuilder<T extends ColumnBuilderBaseConfig<'number', 'PgReal'>> extends PgColumnBuilder<\n\tT,\n\t{ length: number | undefined }\n> {\n\tstatic override readonly [entityKind]: string = 'PgRealBuilder';\n\n\tconstructor(name: T['name'], length?: number) {\n\t\tsuper(name, 'number', 'PgReal');\n\t\tthis.config.length = length;\n\t}\n\n\t/** @internal */\n\toverride build<TTableName extends string>(\n\t\ttable: AnyPgTable<{ name: TTableName }>,\n\t): PgReal<MakeColumnConfig<T, TTableName>> {\n\t\treturn new PgReal<MakeColumnConfig<T, TTableName>>(table, this.config as ColumnBuilderRuntimeConfig<any, any>);\n\t}\n}\n\nexport class PgReal<T extends ColumnBaseConfig<'number', 'PgReal'>> extends PgColumn<T> {\n\tstatic override readonly [entityKind]: string = 'PgReal';\n\n\tconstructor(table: AnyPgTable<{ name: T['tableName'] }>, config: PgRealBuilder<T>['config']) {\n\t\tsuper(table, config);\n\t}\n\n\tgetSQLType(): string {\n\t\treturn 'real';\n\t}\n\n\toverride mapFromDriverValue = (value: string | number): number => {\n\t\tif (typeof value === 'string') {\n\t\t\treturn Number.parseFloat(value);\n\t\t}\n\t\treturn value;\n\t};\n}\n\nexport function real(): PgRealBuilderInitial<''>;\nexport function real<TName extends string>(name: TName): PgRealBuilderInitial<TName>;\nexport function real(name?: string) {\n\treturn new PgRealBuilder(name ?? '');\n}\n", "import type {\n\tColumnBuilderBaseConfig,\n\tColumnBuilderRuntimeConfig,\n\tHasDefault,\n\tMakeColumnConfig,\n\tNotNull,\n} from '~/column-builder.ts';\nimport type { ColumnBaseConfig } from '~/column.ts';\nimport { entityKind } from '~/entity.ts';\nimport type { AnyPgTable } from '~/pg-core/table.ts';\nimport { PgColumn, PgColumnBuilder } from './common.ts';\n\nexport type PgSerialBuilderInitial<TName extends string> = NotNull<\n\tHasDefault<\n\t\tPgSerialBuilder<{\n\t\t\tname: TName;\n\t\t\tdataType: 'number';\n\t\t\tcolumnType: 'PgSerial';\n\t\t\tdata: number;\n\t\t\tdriverParam: number;\n\t\t\tenumValues: undefined;\n\t\t}>\n\t>\n>;\n\nexport class PgSerialBuilder<T extends ColumnBuilderBaseConfig<'number', 'PgSerial'>> extends PgColumnBuilder<T> {\n\tstatic override readonly [entityKind]: string = 'PgSerialBuilder';\n\n\tconstructor(name: T['name']) {\n\t\tsuper(name, 'number', 'PgSerial');\n\t\tthis.config.hasDefault = true;\n\t\tthis.config.notNull = true;\n\t}\n\n\t/** @internal */\n\toverride build<TTableName extends string>(\n\t\ttable: AnyPgTable<{ name: TTableName }>,\n\t): PgSerial<MakeColumnConfig<T, TTableName>> {\n\t\treturn new PgSerial<MakeColumnConfig<T, TTableName>>(table, this.config as ColumnBuilderRuntimeConfig<any, any>);\n\t}\n}\n\nexport class PgSerial<T extends ColumnBaseConfig<'number', 'PgSerial'>> extends PgColumn<T> {\n\tstatic override readonly [entityKind]: string = 'PgSerial';\n\n\tgetSQLType(): string {\n\t\treturn 'serial';\n\t}\n}\n\nexport function serial(): PgSerialBuilderInitial<''>;\nexport function serial<TName extends string>(name: TName): PgSerialBuilderInitial<TName>;\nexport function serial(name?: string) {\n\treturn new PgSerialBuilder(name ?? '');\n}\n", "import type { ColumnBuilderBaseConfig, ColumnBuilderRuntimeConfig, MakeColumnConfig } from '~/column-builder.ts';\nimport type { ColumnBaseConfig } from '~/column.ts';\nimport { entityKind } from '~/entity.ts';\nimport type { AnyPgTable } from '~/pg-core/table.ts';\nimport { PgColumn } from './common.ts';\nimport { PgIntColumnBaseBuilder } from './int.common.ts';\n\nexport type PgSmallIntBuilderInitial<TName extends string> = PgSmallIntBuilder<{\n\tname: TName;\n\tdataType: 'number';\n\tcolumnType: 'PgSmallInt';\n\tdata: number;\n\tdriverParam: number | string;\n\tenumValues: undefined;\n}>;\n\nexport class PgSmallIntBuilder<T extends ColumnBuilderBaseConfig<'number', 'PgSmallInt'>>\n\textends PgIntColumnBaseBuilder<T>\n{\n\tstatic override readonly [entityKind]: string = 'PgSmallIntBuilder';\n\n\tconstructor(name: T['name']) {\n\t\tsuper(name, 'number', 'PgSmallInt');\n\t}\n\n\t/** @internal */\n\toverride build<TTableName extends string>(\n\t\ttable: AnyPgTable<{ name: TTableName }>,\n\t): PgSmallInt<MakeColumnConfig<T, TTableName>> {\n\t\treturn new PgSmallInt<MakeColumnConfig<T, TTableName>>(table, this.config as ColumnBuilderRuntimeConfig<any, any>);\n\t}\n}\n\nexport class PgSmallInt<T extends ColumnBaseConfig<'number', 'PgSmallInt'>> extends PgColumn<T> {\n\tstatic override readonly [entityKind]: string = 'PgSmallInt';\n\n\tgetSQLType(): string {\n\t\treturn 'smallint';\n\t}\n\n\toverride mapFromDriverValue = (value: number | string): number => {\n\t\tif (typeof value === 'string') {\n\t\t\treturn Number(value);\n\t\t}\n\t\treturn value;\n\t};\n}\n\nexport function smallint(): PgSmallIntBuilderInitial<''>;\nexport function smallint<TName extends string>(name: TName): PgSmallIntBuilderInitial<TName>;\nexport function smallint(name?: string) {\n\treturn new PgSmallIntBuilder(name ?? '');\n}\n", "import type {\n\tColumnBuilderBaseConfig,\n\tColumnBuilderRuntimeConfig,\n\tHasDefault,\n\tMakeColumnConfig,\n\tNotNull,\n} from '~/column-builder.ts';\nimport type { ColumnBaseConfig } from '~/column.ts';\nimport { entityKind } from '~/entity.ts';\nimport type { AnyPgTable } from '~/pg-core/table.ts';\nimport { PgColumn, PgColumnBuilder } from './common.ts';\n\nexport type PgSmallSerialBuilderInitial<TName extends string> = NotNull<\n\tHasDefault<\n\t\tPgSmallSerialBuilder<{\n\t\t\tname: TName;\n\t\t\tdataType: 'number';\n\t\t\tcolumnType: 'PgSmallSerial';\n\t\t\tdata: number;\n\t\t\tdriverParam: number;\n\t\t\tenumValues: undefined;\n\t\t}>\n\t>\n>;\n\nexport class PgSmallSerialBuilder<T extends ColumnBuilderBaseConfig<'number', 'PgSmallSerial'>>\n\textends PgColumnBuilder<T>\n{\n\tstatic override readonly [entityKind]: string = 'PgSmallSerialBuilder';\n\n\tconstructor(name: T['name']) {\n\t\tsuper(name, 'number', 'PgSmallSerial');\n\t\tthis.config.hasDefault = true;\n\t\tthis.config.notNull = true;\n\t}\n\n\t/** @internal */\n\toverride build<TTableName extends string>(\n\t\ttable: AnyPgTable<{ name: TTableName }>,\n\t): PgSmallSerial<MakeColumnConfig<T, TTableName>> {\n\t\treturn new PgSmallSerial<MakeColumnConfig<T, TTableName>>(\n\t\t\ttable,\n\t\t\tthis.config as ColumnBuilderRuntimeConfig<any, any>,\n\t\t);\n\t}\n}\n\nexport class PgSmallSerial<T extends ColumnBaseConfig<'number', 'PgSmallSerial'>> extends PgColumn<T> {\n\tstatic override readonly [entityKind]: string = 'PgSmallSerial';\n\n\tgetSQLType(): string {\n\t\treturn 'smallserial';\n\t}\n}\n\nexport function smallserial(): PgSmallSerialBuilderInitial<''>;\nexport function smallserial<TName extends string>(name: TName): PgSmallSerialBuilderInitial<TName>;\nexport function smallserial(name?: string) {\n\treturn new PgSmallSerialBuilder(name ?? '');\n}\n", "import type { ColumnBuilderBaseConfig, ColumnBuilderRuntimeConfig, MakeColumnConfig } from '~/column-builder.ts';\nimport type { ColumnBaseConfig } from '~/column.ts';\nimport { entityKind } from '~/entity.ts';\nimport type { AnyPgTable } from '~/pg-core/table.ts';\nimport { getColumnNameAndConfig, type Writable } from '~/utils.ts';\nimport { PgColumn, PgColumnBuilder } from './common.ts';\n\nexport type PgTextBuilderInitial<TName extends string, TEnum extends [string, ...string[]]> = PgTextBuilder<{\n\tname: TName;\n\tdataType: 'string';\n\tcolumnType: 'PgText';\n\tdata: TEnum[number];\n\tenumValues: TEnum;\n\tdriverParam: string;\n}>;\n\nexport class PgTextBuilder<\n\tT extends ColumnBuilderBaseConfig<'string', 'PgText'>,\n> extends PgColumnBuilder<T, { enumValues: T['enumValues'] }> {\n\tstatic override readonly [entityKind]: string = 'PgTextBuilder';\n\n\tconstructor(\n\t\tname: T['name'],\n\t\tconfig: PgTextConfig<T['enumValues']>,\n\t) {\n\t\tsuper(name, 'string', 'PgText');\n\t\tthis.config.enumValues = config.enum;\n\t}\n\n\t/** @internal */\n\toverride build<TTableName extends string>(\n\t\ttable: AnyPgTable<{ name: TTableName }>,\n\t): PgText<MakeColumnConfig<T, TTableName>> {\n\t\treturn new PgText<MakeColumnConfig<T, TTableName>>(table, this.config as ColumnBuilderRuntimeConfig<any, any>);\n\t}\n}\n\nexport class PgText<T extends ColumnBaseConfig<'string', 'PgText'>>\n\textends PgColumn<T, { enumValues: T['enumValues'] }>\n{\n\tstatic override readonly [entityKind]: string = 'PgText';\n\n\toverride readonly enumValues = this.config.enumValues;\n\n\tgetSQLType(): string {\n\t\treturn 'text';\n\t}\n}\n\nexport interface PgTextConfig<\n\tTEnum extends readonly string[] | string[] | undefined = readonly string[] | string[] | undefined,\n> {\n\tenum?: TEnum;\n}\n\nexport function text(): PgTextBuilderInitial<'', [string, ...string[]]>;\nexport function text<U extends string, T extends Readonly<[U, ...U[]]>>(\n\tconfig?: PgTextConfig<T | Writable<T>>,\n): PgTextBuilderInitial<'', Writable<T>>;\nexport function text<TName extends string, U extends string, T extends Readonly<[U, ...U[]]>>(\n\tname: TName,\n\tconfig?: PgTextConfig<T | Writable<T>>,\n): PgTextBuilderInitial<TName, Writable<T>>;\nexport function text(a?: string | PgTextConfig, b: PgTextConfig = {}): any {\n\tconst { name, config } = getColumnNameAndConfig<PgTextConfig>(a, b);\n\treturn new PgTextBuilder(name, config as any);\n}\n", "import type { ColumnBuilderBaseConfig, ColumnBuilderRuntimeConfig, MakeColumnConfig } from '~/column-builder.ts';\nimport type { ColumnBaseConfig } from '~/column.ts';\nimport { entityKind } from '~/entity.ts';\nimport type { AnyPgTable } from '~/pg-core/table.ts';\nimport { getColumnNameAndConfig } from '~/utils.ts';\nimport { PgColumn } from './common.ts';\nimport { PgDateColumnBaseBuilder } from './date.common.ts';\nimport type { Precision } from './timestamp.ts';\n\nexport type PgTimeBuilderInitial<TName extends string> = PgTimeBuilder<{\n\tname: TName;\n\tdataType: 'string';\n\tcolumnType: 'PgTime';\n\tdata: string;\n\tdriverParam: string;\n\tenumValues: undefined;\n}>;\n\nexport class PgTimeBuilder<T extends ColumnBuilderBaseConfig<'string', 'PgTime'>> extends PgDateColumnBaseBuilder<\n\tT,\n\t{ withTimezone: boolean; precision: number | undefined }\n> {\n\tstatic override readonly [entityKind]: string = 'PgTimeBuilder';\n\n\tconstructor(\n\t\tname: T['name'],\n\t\treadonly withTimezone: boolean,\n\t\treadonly precision: number | undefined,\n\t) {\n\t\tsuper(name, 'string', 'PgTime');\n\t\tthis.config.withTimezone = withTimezone;\n\t\tthis.config.precision = precision;\n\t}\n\n\t/** @internal */\n\toverride build<TTableName extends string>(\n\t\ttable: AnyPgTable<{ name: TTableName }>,\n\t): PgTime<MakeColumnConfig<T, TTableName>> {\n\t\treturn new PgTime<MakeColumnConfig<T, TTableName>>(table, this.config as ColumnBuilderRuntimeConfig<any, any>);\n\t}\n}\n\nexport class PgTime<T extends ColumnBaseConfig<'string', 'PgTime'>> extends PgColumn<T> {\n\tstatic override readonly [entityKind]: string = 'PgTime';\n\n\treadonly withTimezone: boolean;\n\treadonly precision: number | undefined;\n\n\tconstructor(table: AnyPgTable<{ name: T['tableName'] }>, config: PgTimeBuilder<T>['config']) {\n\t\tsuper(table, config);\n\t\tthis.withTimezone = config.withTimezone;\n\t\tthis.precision = config.precision;\n\t}\n\n\tgetSQLType(): string {\n\t\tconst precision = this.precision === undefined ? '' : `(${this.precision})`;\n\t\treturn `time${precision}${this.withTimezone ? ' with time zone' : ''}`;\n\t}\n}\n\nexport interface TimeConfig {\n\tprecision?: Precision;\n\twithTimezone?: boolean;\n}\n\nexport function time(): PgTimeBuilderInitial<''>;\nexport function time(config?: TimeConfig): PgTimeBuilderInitial<''>;\nexport function time<TName extends string>(name: TName, config?: TimeConfig): PgTimeBuilderInitial<TName>;\nexport function time(a?: string | TimeConfig, b: TimeConfig = {}) {\n\tconst { name, config } = getColumnNameAndConfig<TimeConfig>(a, b);\n\treturn new PgTimeBuilder(name, config.withTimezone ?? false, config.precision);\n}\n", "import type { ColumnBuilderBaseConfig, ColumnBuilderRuntimeConfig, MakeColumnConfig } from '~/column-builder.ts';\nimport type { ColumnBaseConfig } from '~/column.ts';\nimport { entityKind } from '~/entity.ts';\nimport type { AnyPgTable } from '~/pg-core/table.ts';\nimport { type Equal, getColumnNameAndConfig } from '~/utils.ts';\nimport { PgColumn } from './common.ts';\nimport { PgDateColumnBaseBuilder } from './date.common.ts';\n\nexport type PgTimestampBuilderInitial<TName extends string> = PgTimestampBuilder<{\n\tname: TName;\n\tdataType: 'date';\n\tcolumnType: 'PgTimestamp';\n\tdata: Date;\n\tdriverParam: string;\n\tenumValues: undefined;\n}>;\n\nexport class PgTimestampBuilder<T extends ColumnBuilderBaseConfig<'date', 'PgTimestamp'>>\n\textends PgDateColumnBaseBuilder<\n\t\tT,\n\t\t{ withTimezone: boolean; precision: number | undefined }\n\t>\n{\n\tstatic override readonly [entityKind]: string = 'PgTimestampBuilder';\n\n\tconstructor(\n\t\tname: T['name'],\n\t\twithTimezone: boolean,\n\t\tprecision: number | undefined,\n\t) {\n\t\tsuper(name, 'date', 'PgTimestamp');\n\t\tthis.config.withTimezone = withTimezone;\n\t\tthis.config.precision = precision;\n\t}\n\n\t/** @internal */\n\toverride build<TTableName extends string>(\n\t\ttable: AnyPgTable<{ name: TTableName }>,\n\t): PgTimestamp<MakeColumnConfig<T, TTableName>> {\n\t\treturn new PgTimestamp<MakeColumnConfig<T, TTableName>>(table, this.config as ColumnBuilderRuntimeConfig<any, any>);\n\t}\n}\n\nexport class PgTimestamp<T extends ColumnBaseConfig<'date', 'PgTimestamp'>> extends PgColumn<T> {\n\tstatic override readonly [entityKind]: string = 'PgTimestamp';\n\n\treadonly withTimezone: boolean;\n\treadonly precision: number | undefined;\n\n\tconstructor(table: AnyPgTable<{ name: T['tableName'] }>, config: PgTimestampBuilder<T>['config']) {\n\t\tsuper(table, config);\n\t\tthis.withTimezone = config.withTimezone;\n\t\tthis.precision = config.precision;\n\t}\n\n\tgetSQLType(): string {\n\t\tconst precision = this.precision === undefined ? '' : ` (${this.precision})`;\n\t\treturn `timestamp${precision}${this.withTimezone ? ' with time zone' : ''}`;\n\t}\n\n\toverride mapFromDriverValue = (value: string): Date | null => {\n\t\treturn new Date(this.withTimezone ? value : value + '+0000');\n\t};\n\n\toverride mapToDriverValue = (value: Date): string => {\n\t\treturn value.toISOString();\n\t};\n}\n\nexport type PgTimestampStringBuilderInitial<TName extends string> = PgTimestampStringBuilder<{\n\tname: TName;\n\tdataType: 'string';\n\tcolumnType: 'PgTimestampString';\n\tdata: string;\n\tdriverParam: string;\n\tenumValues: undefined;\n}>;\n\nexport class PgTimestampStringBuilder<T extends ColumnBuilderBaseConfig<'string', 'PgTimestampString'>>\n\textends PgDateColumnBaseBuilder<\n\t\tT,\n\t\t{ withTimezone: boolean; precision: number | undefined }\n\t>\n{\n\tstatic override readonly [entityKind]: string = 'PgTimestampStringBuilder';\n\n\tconstructor(\n\t\tname: T['name'],\n\t\twithTimezone: boolean,\n\t\tprecision: number | undefined,\n\t) {\n\t\tsuper(name, 'string', 'PgTimestampString');\n\t\tthis.config.withTimezone = withTimezone;\n\t\tthis.config.precision = precision;\n\t}\n\n\t/** @internal */\n\toverride build<TTableName extends string>(\n\t\ttable: AnyPgTable<{ name: TTableName }>,\n\t): PgTimestampString<MakeColumnConfig<T, TTableName>> {\n\t\treturn new PgTimestampString<MakeColumnConfig<T, TTableName>>(\n\t\t\ttable,\n\t\t\tthis.config as ColumnBuilderRuntimeConfig<any, any>,\n\t\t);\n\t}\n}\n\nexport class PgTimestampString<T extends ColumnBaseConfig<'string', 'PgTimestampString'>> extends PgColumn<T> {\n\tstatic override readonly [entityKind]: string = 'PgTimestampString';\n\n\treadonly withTimezone: boolean;\n\treadonly precision: number | undefined;\n\n\tconstructor(table: AnyPgTable<{ name: T['tableName'] }>, config: PgTimestampStringBuilder<T>['config']) {\n\t\tsuper(table, config);\n\t\tthis.withTimezone = config.withTimezone;\n\t\tthis.precision = config.precision;\n\t}\n\n\tgetSQLType(): string {\n\t\tconst precision = this.precision === undefined ? '' : `(${this.precision})`;\n\t\treturn `timestamp${precision}${this.withTimezone ? ' with time zone' : ''}`;\n\t}\n}\n\nexport type Precision = 0 | 1 | 2 | 3 | 4 | 5 | 6;\n\nexport interface PgTimestampConfig<TMode extends 'date' | 'string' = 'date' | 'string'> {\n\tmode?: TMode;\n\tprecision?: Precision;\n\twithTimezone?: boolean;\n}\n\nexport function timestamp(): PgTimestampBuilderInitial<''>;\nexport function timestamp<TMode extends PgTimestampConfig['mode'] & {}>(\n\tconfig?: PgTimestampConfig<TMode>,\n): Equal<TMode, 'string'> extends true ? PgTimestampStringBuilderInitial<''> : PgTimestampBuilderInitial<''>;\nexport function timestamp<TName extends string, TMode extends PgTimestampConfig['mode'] & {}>(\n\tname: TName,\n\tconfig?: PgTimestampConfig<TMode>,\n): Equal<TMode, 'string'> extends true ? PgTimestampStringBuilderInitial<TName> : PgTimestampBuilderInitial<TName>;\nexport function timestamp(a?: string | PgTimestampConfig, b: PgTimestampConfig = {}) {\n\tconst { name, config } = getColumnNameAndConfig<PgTimestampConfig | undefined>(a, b);\n\tif (config?.mode === 'string') {\n\t\treturn new PgTimestampStringBuilder(name, config.withTimezone ?? false, config.precision);\n\t}\n\treturn new PgTimestampBuilder(name, config?.withTimezone ?? false, config?.precision);\n}\n", "import type { ColumnBuilderBaseConfig, ColumnBuilderRuntimeConfig, MakeColumnConfig } from '~/column-builder.ts';\nimport type { ColumnBaseConfig } from '~/column.ts';\nimport { entityKind } from '~/entity.ts';\nimport type { AnyPgTable } from '~/pg-core/table.ts';\nimport { sql } from '~/sql/sql.ts';\nimport { PgColumn, PgColumnBuilder } from './common.ts';\n\nexport type PgUUIDBuilderInitial<TName extends string> = PgUUIDBuilder<{\n\tname: TName;\n\tdataType: 'string';\n\tcolumnType: 'PgUUID';\n\tdata: string;\n\tdriverParam: string;\n\tenumValues: undefined;\n}>;\n\nexport class PgUUIDBuilder<T extends ColumnBuilderBaseConfig<'string', 'PgUUID'>> extends PgColumnBuilder<T> {\n\tstatic override readonly [entityKind]: string = 'PgUUIDBuilder';\n\n\tconstructor(name: T['name']) {\n\t\tsuper(name, 'string', 'PgUUID');\n\t}\n\n\t/**\n\t * Adds `default gen_random_uuid()` to the column definition.\n\t */\n\tdefaultRandom(): ReturnType<this['default']> {\n\t\treturn this.default(sql`gen_random_uuid()`) as ReturnType<this['default']>;\n\t}\n\n\t/** @internal */\n\toverride build<TTableName extends string>(\n\t\ttable: AnyPgTable<{ name: TTableName }>,\n\t): PgUUID<MakeColumnConfig<T, TTableName>> {\n\t\treturn new PgUUID<MakeColumnConfig<T, TTableName>>(table, this.config as ColumnBuilderRuntimeConfig<any, any>);\n\t}\n}\n\nexport class PgUUID<T extends ColumnBaseConfig<'string', 'PgUUID'>> extends PgColumn<T> {\n\tstatic override readonly [entityKind]: string = 'PgUUID';\n\n\tgetSQLType(): string {\n\t\treturn 'uuid';\n\t}\n}\n\nexport function uuid(): PgUUIDBuilderInitial<''>;\nexport function uuid<TName extends string>(name: TName): PgUUIDBuilderInitial<TName>;\nexport function uuid(name?: string) {\n\treturn new PgUUIDBuilder(name ?? '');\n}\n", "import type { ColumnBuilderBaseConfig, ColumnBuilderRuntimeConfig, MakeColumnConfig } from '~/column-builder.ts';\nimport type { ColumnBaseConfig } from '~/column.ts';\nimport { entityKind } from '~/entity.ts';\nimport type { AnyPgTable } from '~/pg-core/table.ts';\nimport { getColumnNameAndConfig, type Writable } from '~/utils.ts';\nimport { PgColumn, PgColumnBuilder } from './common.ts';\n\nexport type PgVarcharBuilderInitial<\n\tTName extends string,\n\tTEnum extends [string, ...string[]],\n\tTLength extends number | undefined,\n> = PgVarcharBuilder<{\n\tname: TName;\n\tdataType: 'string';\n\tcolumnType: 'PgVarchar';\n\tdata: TEnum[number];\n\tdriverParam: string;\n\tenumValues: TEnum;\n\tlength: TLength;\n}>;\n\nexport class PgVarcharBuilder<\n\tT extends ColumnBuilderBaseConfig<'string', 'PgVarchar'> & { length?: number | undefined },\n> extends PgColumnBuilder<\n\tT,\n\t{ length: T['length']; enumValues: T['enumValues'] },\n\t{ length: T['length'] }\n> {\n\tstatic override readonly [entityKind]: string = 'PgVarcharBuilder';\n\n\tconstructor(name: T['name'], config: PgVarcharConfig<T['enumValues'], T['length']>) {\n\t\tsuper(name, 'string', 'PgVarchar');\n\t\tthis.config.length = config.length;\n\t\tthis.config.enumValues = config.enum;\n\t}\n\n\t/** @internal */\n\toverride build<TTableName extends string>(\n\t\ttable: AnyPgTable<{ name: TTableName }>,\n\t): PgVarchar<MakeColumnConfig<T, TTableName> & { length: T['length'] }> {\n\t\treturn new PgVarchar<MakeColumnConfig<T, TTableName> & { length: T['length'] }>(\n\t\t\ttable,\n\t\t\tthis.config as ColumnBuilderRuntimeConfig<any, any>,\n\t\t);\n\t}\n}\n\nexport class PgVarchar<T extends ColumnBaseConfig<'string', 'PgVarchar'> & { length?: number | undefined }>\n\textends PgColumn<T, { length: T['length']; enumValues: T['enumValues'] }, { length: T['length'] }>\n{\n\tstatic override readonly [entityKind]: string = 'PgVarchar';\n\n\treadonly length = this.config.length;\n\toverride readonly enumValues = this.config.enumValues;\n\n\tgetSQLType(): string {\n\t\treturn this.length === undefined ? `varchar` : `varchar(${this.length})`;\n\t}\n}\n\nexport interface PgVarcharConfig<\n\tTEnum extends readonly string[] | string[] | undefined = readonly string[] | string[] | undefined,\n\tTLength extends number | undefined = number | undefined,\n> {\n\tenum?: TEnum;\n\tlength?: TLength;\n}\n\nexport function varchar(): PgVarcharBuilderInitial<'', [string, ...string[]], undefined>;\nexport function varchar<\n\tU extends string,\n\tT extends Readonly<[U, ...U[]]>,\n\tL extends number | undefined,\n>(\n\tconfig?: PgVarcharConfig<T | Writable<T>, L>,\n): PgVarcharBuilderInitial<'', Writable<T>, L>;\nexport function varchar<\n\tTName extends string,\n\tU extends string,\n\tT extends Readonly<[U, ...U[]]>,\n\tL extends number | undefined,\n>(\n\tname: TName,\n\tconfig?: PgVarcharConfig<T | Writable<T>, L>,\n): PgVarcharBuilderInitial<TName, Writable<T>, L>;\nexport function varchar(a?: string | PgVarcharConfig, b: PgVarcharConfig = {}): any {\n\tconst { name, config } = getColumnNameAndConfig<PgVarcharConfig>(a, b);\n\treturn new PgVarcharBuilder(name, config as any);\n}\n", "import type { ColumnBuilderBaseConfig, ColumnBuilderRuntimeConfig, MakeColumnConfig } from '~/column-builder.ts';\nimport type { ColumnBaseConfig } from '~/column.ts';\nimport { entityKind } from '~/entity.ts';\nimport type { AnyPgTable } from '~/pg-core/table.ts';\nimport { getColumnNameAndConfig } from '~/utils.ts';\nimport { PgColumn, PgColumnBuilder } from '../common.ts';\n\nexport type PgBinaryVectorBuilderInitial<TName extends string, TDimensions extends number> = PgBinaryVectorBuilder<{\n\tname: TName;\n\tdataType: 'string';\n\tcolumnType: 'PgBinaryVector';\n\tdata: string;\n\tdriverParam: string;\n\tenumValues: undefined;\n\tdimensions: TDimensions;\n}>;\n\nexport class PgBinaryVectorBuilder<\n\tT extends ColumnBuilderBaseConfig<'string', 'PgBinaryVector'> & { dimensions: number },\n> extends PgColumnBuilder<\n\tT,\n\t{ dimensions: T['dimensions'] }\n> {\n\tstatic override readonly [entityKind]: string = 'PgBinaryVectorBuilder';\n\n\tconstructor(name: string, config: PgBinaryVectorConfig<T['dimensions']>) {\n\t\tsuper(name, 'string', 'PgBinaryVector');\n\t\tthis.config.dimensions = config.dimensions;\n\t}\n\n\t/** @internal */\n\toverride build<TTableName extends string>(\n\t\ttable: AnyPgTable<{ name: TTableName }>,\n\t): PgBinaryVector<MakeColumnConfig<T, TTableName> & { dimensions: T['dimensions'] }> {\n\t\treturn new PgBinaryVector<MakeColumnConfig<T, TTableName> & { dimensions: T['dimensions'] }>(\n\t\t\ttable,\n\t\t\tthis.config as ColumnBuilderRuntimeConfig<any, any>,\n\t\t);\n\t}\n}\n\nexport class PgBinaryVector<T extends ColumnBaseConfig<'string', 'PgBinaryVector'> & { dimensions: number }>\n\textends PgColumn<T, { dimensions: T['dimensions'] }, { dimensions: T['dimensions'] }>\n{\n\tstatic override readonly [entityKind]: string = 'PgBinaryVector';\n\n\treadonly dimensions = this.config.dimensions;\n\n\tgetSQLType(): string {\n\t\treturn `bit(${this.dimensions})`;\n\t}\n}\n\nexport interface PgBinaryVectorConfig<TDimensions extends number = number> {\n\tdimensions: TDimensions;\n}\n\nexport function bit<D extends number>(\n\tconfig: PgBinaryVectorConfig<D>,\n): PgBinaryVectorBuilderInitial<'', D>;\nexport function bit<TName extends string, D extends number>(\n\tname: TName,\n\tconfig: PgBinaryVectorConfig<D>,\n): PgBinaryVectorBuilderInitial<TName, D>;\nexport function bit(a: string | PgBinaryVectorConfig, b?: PgBinaryVectorConfig) {\n\tconst { name, config } = getColumnNameAndConfig<PgBinaryVectorConfig>(a, b);\n\treturn new PgBinaryVectorBuilder(name, config);\n}\n", "import type { ColumnBuilderBaseConfig, ColumnBuilderRuntimeConfig, MakeColumnConfig } from '~/column-builder.ts';\nimport type { ColumnBaseConfig } from '~/column.ts';\nimport { entityKind } from '~/entity.ts';\nimport type { AnyPgTable } from '~/pg-core/table.ts';\nimport { getColumnNameAndConfig } from '~/utils.ts';\nimport { PgColumn, PgColumnBuilder } from '../common.ts';\n\nexport type PgHalfVectorBuilderInitial<TName extends string, TDimensions extends number> = PgHalfVectorBuilder<{\n\tname: TName;\n\tdataType: 'array';\n\tcolumnType: 'PgHalfVector';\n\tdata: number[];\n\tdriverParam: string;\n\tenumValues: undefined;\n\tdimensions: TDimensions;\n}>;\n\nexport class PgHalfVectorBuilder<T extends ColumnBuilderBaseConfig<'array', 'PgHalfVector'> & { dimensions: number }>\n\textends PgColumnBuilder<\n\t\tT,\n\t\t{ dimensions: T['dimensions'] },\n\t\t{ dimensions: T['dimensions'] }\n\t>\n{\n\tstatic override readonly [entityKind]: string = 'PgHalfVectorBuilder';\n\n\tconstructor(name: string, config: PgHalfVectorConfig<T['dimensions']>) {\n\t\tsuper(name, 'array', 'PgHalfVector');\n\t\tthis.config.dimensions = config.dimensions;\n\t}\n\n\t/** @internal */\n\toverride build<TTableName extends string>(\n\t\ttable: AnyPgTable<{ name: TTableName }>,\n\t): PgHalfVector<MakeColumnConfig<T, TTableName> & { dimensions: T['dimensions'] }> {\n\t\treturn new PgHalfVector<MakeColumnConfig<T, TTableName> & { dimensions: T['dimensions'] }>(\n\t\t\ttable,\n\t\t\tthis.config as ColumnBuilderRuntimeConfig<any, any>,\n\t\t);\n\t}\n}\n\nexport class PgHalfVector<T extends ColumnBaseConfig<'array', 'PgHalfVector'> & { dimensions: number }>\n\textends PgColumn<T, { dimensions: T['dimensions'] }, { dimensions: T['dimensions'] }>\n{\n\tstatic override readonly [entityKind]: string = 'PgHalfVector';\n\n\treadonly dimensions: T['dimensions'] = this.config.dimensions;\n\n\tgetSQLType(): string {\n\t\treturn `halfvec(${this.dimensions})`;\n\t}\n\n\toverride mapToDriverValue(value: unknown): unknown {\n\t\treturn JSON.stringify(value);\n\t}\n\n\toverride mapFromDriverValue(value: string): unknown {\n\t\treturn value\n\t\t\t.slice(1, -1)\n\t\t\t.split(',')\n\t\t\t.map((v) => Number.parseFloat(v));\n\t}\n}\n\nexport interface PgHalfVectorConfig<TDimensions extends number = number> {\n\tdimensions: TDimensions;\n}\n\nexport function halfvec<D extends number>(\n\tconfig: PgHalfVectorConfig<D>,\n): PgHalfVectorBuilderInitial<'', D>;\nexport function halfvec<TName extends string, D extends number>(\n\tname: TName,\n\tconfig: PgHalfVectorConfig,\n): PgHalfVectorBuilderInitial<TName, D>;\nexport function halfvec(a: string | PgHalfVectorConfig, b?: PgHalfVectorConfig) {\n\tconst { name, config } = getColumnNameAndConfig<PgHalfVectorConfig>(a, b);\n\treturn new PgHalfVectorBuilder(name, config);\n}\n", "import type { ColumnBuilderBaseConfig, ColumnBuilderRuntimeConfig, MakeColumnConfig } from '~/column-builder.ts';\nimport type { ColumnBaseConfig } from '~/column.ts';\nimport { entityKind } from '~/entity.ts';\nimport type { AnyPgTable } from '~/pg-core/table.ts';\nimport { getColumnNameAndConfig } from '~/utils.ts';\nimport { PgColumn, PgColumnBuilder } from '../common.ts';\n\nexport type PgSparseVectorBuilderInitial<TName extends string> = PgSparseVectorBuilder<{\n\tname: TName;\n\tdataType: 'string';\n\tcolumnType: 'PgSparseVector';\n\tdata: string;\n\tdriverParam: string;\n\tenumValues: undefined;\n}>;\n\nexport class PgSparseVectorBuilder<T extends ColumnBuilderBaseConfig<'string', 'PgSparseVector'>>\n\textends PgColumnBuilder<\n\t\tT,\n\t\t{ dimensions: number | undefined }\n\t>\n{\n\tstatic override readonly [entityKind]: string = 'PgSparseVectorBuilder';\n\n\tconstructor(name: string, config: PgSparseVectorConfig) {\n\t\tsuper(name, 'string', 'PgSparseVector');\n\t\tthis.config.dimensions = config.dimensions;\n\t}\n\n\t/** @internal */\n\toverride build<TTableName extends string>(\n\t\ttable: AnyPgTable<{ name: TTableName }>,\n\t): PgSparseVector<MakeColumnConfig<T, TTableName>> {\n\t\treturn new PgSparseVector<MakeColumnConfig<T, TTableName>>(\n\t\t\ttable,\n\t\t\tthis.config as ColumnBuilderRuntimeConfig<any, any>,\n\t\t);\n\t}\n}\n\nexport class PgSparseVector<T extends ColumnBaseConfig<'string', 'PgSparseVector'>>\n\textends PgColumn<T, { dimensions: number | undefined }>\n{\n\tstatic override readonly [entityKind]: string = 'PgSparseVector';\n\n\treadonly dimensions = this.config.dimensions;\n\n\tgetSQLType(): string {\n\t\treturn `sparsevec(${this.dimensions})`;\n\t}\n}\n\nexport interface PgSparseVectorConfig {\n\tdimensions: number;\n}\n\nexport function sparsevec(\n\tconfig: PgSparseVectorConfig,\n): PgSparseVectorBuilderInitial<''>;\nexport function sparsevec<TName extends string>(\n\tname: TName,\n\tconfig: PgSparseVectorConfig,\n): PgSparseVectorBuilderInitial<TName>;\nexport function sparsevec(a: string | PgSparseVectorConfig, b?: PgSparseVectorConfig) {\n\tconst { name, config } = getColumnNameAndConfig<PgSparseVectorConfig>(a, b);\n\treturn new PgSparseVectorBuilder(name, config);\n}\n", "import type { ColumnBuilderBaseConfig, ColumnBuilderRuntimeConfig, MakeColumnConfig } from '~/column-builder.ts';\nimport type { ColumnBaseConfig } from '~/column.ts';\nimport { entityKind } from '~/entity.ts';\nimport type { AnyPgTable } from '~/pg-core/table.ts';\nimport { getColumnNameAndConfig } from '~/utils.ts';\nimport { PgColumn, PgColumnBuilder } from '../common.ts';\n\nexport type PgVectorBuilderInitial<TName extends string, TDimensions extends number> = PgVectorBuilder<{\n\tname: TName;\n\tdataType: 'array';\n\tcolumnType: 'PgVector';\n\tdata: number[];\n\tdriverParam: string;\n\tenumValues: undefined;\n\tdimensions: TDimensions;\n}>;\n\nexport class PgVectorBuilder<T extends ColumnBuilderBaseConfig<'array', 'PgVector'> & { dimensions: number }>\n\textends PgColumnBuilder<\n\t\tT,\n\t\t{ dimensions: T['dimensions'] },\n\t\t{ dimensions: T['dimensions'] }\n\t>\n{\n\tstatic override readonly [entityKind]: string = 'PgVectorBuilder';\n\n\tconstructor(name: string, config: PgVectorConfig<T['dimensions']>) {\n\t\tsuper(name, 'array', 'PgVector');\n\t\tthis.config.dimensions = config.dimensions;\n\t}\n\n\t/** @internal */\n\toverride build<TTableName extends string>(\n\t\ttable: AnyPgTable<{ name: TTableName }>,\n\t): PgVector<MakeColumnConfig<T, TTableName> & { dimensions: T['dimensions'] }> {\n\t\treturn new PgVector<MakeColumnConfig<T, TTableName> & { dimensions: T['dimensions'] }>(\n\t\t\ttable,\n\t\t\tthis.config as ColumnBuilderRuntimeConfig<any, any>,\n\t\t);\n\t}\n}\n\nexport class PgVector<T extends ColumnBaseConfig<'array', 'PgVector'> & { dimensions: number | undefined }>\n\textends PgColumn<T, { dimensions: T['dimensions'] }, { dimensions: T['dimensions'] }>\n{\n\tstatic override readonly [entityKind]: string = 'PgVector';\n\n\treadonly dimensions: T['dimensions'] = this.config.dimensions;\n\n\tgetSQLType(): string {\n\t\treturn `vector(${this.dimensions})`;\n\t}\n\n\toverride mapToDriverValue(value: unknown): unknown {\n\t\treturn JSON.stringify(value);\n\t}\n\n\toverride mapFromDriverValue(value: string): unknown {\n\t\treturn value\n\t\t\t.slice(1, -1)\n\t\t\t.split(',')\n\t\t\t.map((v) => Number.parseFloat(v));\n\t}\n}\n\nexport interface PgVectorConfig<TDimensions extends number = number> {\n\tdimensions: TDimensions;\n}\n\nexport function vector<D extends number>(\n\tconfig: PgVectorConfig<D>,\n): PgVectorBuilderInitial<'', D>;\nexport function vector<TName extends string, D extends number>(\n\tname: TName,\n\tconfig: PgVectorConfig<D>,\n): PgVectorBuilderInitial<TName, D>;\nexport function vector(a: string | PgVectorConfig, b?: PgVectorConfig) {\n\tconst { name, config } = getColumnNameAndConfig<PgVectorConfig>(a, b);\n\treturn new PgVectorBuilder(name, config);\n}\n", "import { SQL } from '~/sql/sql.ts';\n\nimport { entityKind, is } from '~/entity.ts';\nimport type { ExtraConfigColumn, PgColumn } from './columns/index.ts';\nimport { IndexedColumn } from './columns/index.ts';\nimport type { PgTable } from './table.ts';\n\ninterface IndexConfig {\n\tname?: string;\n\n\tcolumns: Partial<IndexedColumn | SQL>[];\n\n\t/**\n\t * If true, the index will be created as `create unique index` instead of `create index`.\n\t */\n\tunique: boolean;\n\n\t/**\n\t * If true, the index will be created as `create index concurrently` instead of `create index`.\n\t */\n\tconcurrently?: boolean;\n\n\t/**\n\t * If true, the index will be created as `create index ... on only <table>` instead of `create index ... on <table>`.\n\t */\n\tonly: boolean;\n\n\t/**\n\t * Condition for partial index.\n\t */\n\twhere?: SQL;\n\n\t/**\n\t * The optional WITH clause specifies storage parameters for the index\n\t */\n\twith?: Record<string, any>;\n\n\t/**\n\t * The optional WITH clause method for the index\n\t */\n\tmethod?: 'btree' | string;\n}\n\nexport type IndexColumn = PgColumn;\n\nexport type PgIndexMethod = 'btree' | 'hash' | 'gist' | 'spgist' | 'gin' | 'brin' | 'hnsw' | 'ivfflat' | (string & {});\n\nexport type PgIndexOpClass =\n\t| 'abstime_ops'\n\t| 'access_method'\n\t| 'anyarray_eq'\n\t| 'anyarray_ge'\n\t| 'anyarray_gt'\n\t| 'anyarray_le'\n\t| 'anyarray_lt'\n\t| 'anyarray_ne'\n\t| 'bigint_ops'\n\t| 'bit_ops'\n\t| 'bool_ops'\n\t| 'box_ops'\n\t| 'bpchar_ops'\n\t| 'char_ops'\n\t| 'cidr_ops'\n\t| 'cstring_ops'\n\t| 'date_ops'\n\t| 'float_ops'\n\t| 'int2_ops'\n\t| 'int4_ops'\n\t| 'int8_ops'\n\t| 'interval_ops'\n\t| 'jsonb_ops'\n\t| 'macaddr_ops'\n\t| 'name_ops'\n\t| 'numeric_ops'\n\t| 'oid_ops'\n\t| 'oidint4_ops'\n\t| 'oidint8_ops'\n\t| 'oidname_ops'\n\t| 'oidvector_ops'\n\t| 'point_ops'\n\t| 'polygon_ops'\n\t| 'range_ops'\n\t| 'record_eq'\n\t| 'record_ge'\n\t| 'record_gt'\n\t| 'record_le'\n\t| 'record_lt'\n\t| 'record_ne'\n\t| 'text_ops'\n\t| 'time_ops'\n\t| 'timestamp_ops'\n\t| 'timestamptz_ops'\n\t| 'timetz_ops'\n\t| 'uuid_ops'\n\t| 'varbit_ops'\n\t| 'varchar_ops'\n\t// pg_vector types\n\t| 'xml_ops'\n\t| 'vector_l2_ops'\n\t| 'vector_ip_ops'\n\t| 'vector_cosine_ops'\n\t| 'vector_l1_ops'\n\t| 'bit_hamming_ops'\n\t| 'bit_jaccard_ops'\n\t| 'halfvec_l2_ops'\n\t| 'sparsevec_l2_op'\n\t| (string & {});\n\nexport class IndexBuilderOn {\n\tstatic readonly [entityKind]: string = 'PgIndexBuilderOn';\n\n\tconstructor(private unique: boolean, private name?: string) {}\n\n\ton(...columns: [Partial<ExtraConfigColumn> | SQL, ...Partial<ExtraConfigColumn | SQL>[]]): IndexBuilder {\n\t\treturn new IndexBuilder(\n\t\t\tcolumns.map((it) => {\n\t\t\t\tif (is(it, SQL)) {\n\t\t\t\t\treturn it;\n\t\t\t\t}\n\t\t\t\tit = it as ExtraConfigColumn;\n\t\t\t\tconst clonedIndexedColumn = new IndexedColumn(it.name, !!it.keyAsName, it.columnType!, it.indexConfig!);\n\t\t\t\tit.indexConfig = JSON.parse(JSON.stringify(it.defaultConfig));\n\t\t\t\treturn clonedIndexedColumn;\n\t\t\t}),\n\t\t\tthis.unique,\n\t\t\tfalse,\n\t\t\tthis.name,\n\t\t);\n\t}\n\n\tonOnly(...columns: [Partial<ExtraConfigColumn | SQL>, ...Partial<ExtraConfigColumn | SQL>[]]): IndexBuilder {\n\t\treturn new IndexBuilder(\n\t\t\tcolumns.map((it) => {\n\t\t\t\tif (is(it, SQL)) {\n\t\t\t\t\treturn it;\n\t\t\t\t}\n\t\t\t\tit = it as ExtraConfigColumn;\n\t\t\t\tconst clonedIndexedColumn = new IndexedColumn(it.name, !!it.keyAsName, it.columnType!, it.indexConfig!);\n\t\t\t\tit.indexConfig = it.defaultConfig;\n\t\t\t\treturn clonedIndexedColumn;\n\t\t\t}),\n\t\t\tthis.unique,\n\t\t\ttrue,\n\t\t\tthis.name,\n\t\t);\n\t}\n\n\t/**\n\t * Specify what index method to use. Choices are `btree`, `hash`, `gist`, `spgist`, `gin`, `brin`, or user-installed access methods like `bloom`. The default method is `btree.\n\t *\n\t * If you have the `pg_vector` extension installed in your database, you can use the `hnsw` and `ivfflat` options, which are predefined types.\n\t *\n\t * **You can always specify any string you want in the method, in case Drizzle doesn't have it natively in its types**\n\t *\n\t * @param method The name of the index method to be used\n\t * @param columns\n\t * @returns\n\t */\n\tusing(\n\t\tmethod: PgIndexMethod,\n\t\t...columns: [Partial<ExtraConfigColumn | SQL>, ...Partial<ExtraConfigColumn | SQL>[]]\n\t): IndexBuilder {\n\t\treturn new IndexBuilder(\n\t\t\tcolumns.map((it) => {\n\t\t\t\tif (is(it, SQL)) {\n\t\t\t\t\treturn it;\n\t\t\t\t}\n\t\t\t\tit = it as ExtraConfigColumn;\n\t\t\t\tconst clonedIndexedColumn = new IndexedColumn(it.name, !!it.keyAsName, it.columnType!, it.indexConfig!);\n\t\t\t\tit.indexConfig = JSON.parse(JSON.stringify(it.defaultConfig));\n\t\t\t\treturn clonedIndexedColumn;\n\t\t\t}),\n\t\t\tthis.unique,\n\t\t\ttrue,\n\t\t\tthis.name,\n\t\t\tmethod,\n\t\t);\n\t}\n}\n\nexport interface AnyIndexBuilder {\n\tbuild(table: PgTable): Index;\n}\n\n// eslint-disable-next-line @typescript-eslint/no-empty-interface\nexport interface IndexBuilder extends AnyIndexBuilder {}\n\nexport class IndexBuilder implements AnyIndexBuilder {\n\tstatic readonly [entityKind]: string = 'PgIndexBuilder';\n\n\t/** @internal */\n\tconfig: IndexConfig;\n\n\tconstructor(\n\t\tcolumns: Partial<IndexedColumn | SQL>[],\n\t\tunique: boolean,\n\t\tonly: boolean,\n\t\tname?: string,\n\t\tmethod: string = 'btree',\n\t) {\n\t\tthis.config = {\n\t\t\tname,\n\t\t\tcolumns,\n\t\t\tunique,\n\t\t\tonly,\n\t\t\tmethod,\n\t\t};\n\t}\n\n\tconcurrently(): this {\n\t\tthis.config.concurrently = true;\n\t\treturn this;\n\t}\n\n\twith(obj: Record<string, any>): this {\n\t\tthis.config.with = obj;\n\t\treturn this;\n\t}\n\n\twhere(condition: SQL): this {\n\t\tthis.config.where = condition;\n\t\treturn this;\n\t}\n\n\t/** @internal */\n\tbuild(table: PgTable): Index {\n\t\treturn new Index(this.config, table);\n\t}\n}\n\nexport class Index {\n\tstatic readonly [entityKind]: string = 'PgIndex';\n\n\treadonly config: IndexConfig & { table: PgTable };\n\n\tconstructor(config: IndexConfig, table: PgTable) {\n\t\tthis.config = { ...config, table };\n\t}\n}\n\nexport type GetColumnsTableName<TColumns> = TColumns extends PgColumn ? TColumns['_']['name']\n\t: TColumns extends PgColumn[] ? TColumns[number]['_']['name']\n\t: never;\n\nexport function index(name?: string): IndexBuilderOn {\n\treturn new IndexBuilderOn(false, name);\n}\n\nexport function uniqueIndex(name?: string): IndexBuilderOn {\n\treturn new IndexBuilderOn(true, name);\n}\n", "import { entityKind } from '~/entity.ts';\nimport type { AnyPgColumn, PgColumn } from './columns/index.ts';\nimport { PgTable } from './table.ts';\n\nexport function primaryKey<\n\tTTableName extends string,\n\tTColumn extends AnyPgColumn<{ tableName: TTableName }>,\n\tTColumns extends AnyPgColumn<{ tableName: TTableName }>[],\n>(config: { name?: string; columns: [TColumn, ...TColumns] }): PrimaryKeyBuilder;\n/**\n * @deprecated: Please use primaryKey({ columns: [] }) instead of this function\n * @param columns\n */\nexport function primaryKey<\n\tTTableName extends string,\n\tTColumns extends AnyPgColumn<{ tableName: TTableName }>[],\n>(...columns: TColumns): PrimaryKeyBuilder;\nexport function primaryKey(...config: any) {\n\tif (config[0].columns) {\n\t\treturn new PrimaryKeyBuilder(config[0].columns, config[0].name);\n\t}\n\treturn new PrimaryKeyBuilder(config);\n}\n\nexport class PrimaryKeyBuilder {\n\tstatic readonly [entityKind]: string = 'PgPrimaryKeyBuilder';\n\n\t/** @internal */\n\tcolumns: PgColumn[];\n\n\t/** @internal */\n\tname?: string;\n\n\tconstructor(\n\t\tcolumns: PgColumn[],\n\t\tname?: string,\n\t) {\n\t\tthis.columns = columns;\n\t\tthis.name = name;\n\t}\n\n\t/** @internal */\n\tbuild(table: PgTable): PrimaryKey {\n\t\treturn new PrimaryKey(table, this.columns, this.name);\n\t}\n}\n\nexport class PrimaryKey {\n\tstatic readonly [entityKind]: string = 'PgPrimaryKey';\n\n\treadonly columns: AnyPgColumn<{}>[];\n\treadonly name?: string;\n\n\tconstructor(readonly table: PgTable, columns: AnyPgColumn<{}>[], name?: string) {\n\t\tthis.columns = columns;\n\t\tthis.name = name;\n\t}\n\n\tgetName(): string {\n\t\treturn this.name ?? `${this.table[PgTable.Symbol.Name]}_${this.columns.map((column) => column.name).join('_')}_pk`;\n\t}\n}\n", "import { entityKind, is } from '~/entity.ts';\nimport type { PgDialectConfig } from '~/pg-core/dialect.ts';\nimport { PgDialect } from '~/pg-core/dialect.ts';\nimport type { TypedQueryBuilder } from '~/query-builders/query-builder.ts';\nimport { SelectionProxyHandler } from '~/selection-proxy.ts';\nimport type { ColumnsSelection, SQL, SQLWrapper } from '~/sql/sql.ts';\nimport { WithSubquery } from '~/subquery.ts';\nimport type { PgColumn } from '../columns/index.ts';\nimport type { WithBuilder } from '../subquery.ts';\nimport { PgSelectBuilder } from './select.ts';\nimport type { SelectedFields } from './select.types.ts';\n\nexport class QueryBuilder {\n\tstatic readonly [entityKind]: string = 'PgQueryBuilder';\n\n\tprivate dialect: PgDialect | undefined;\n\tprivate dialectConfig: PgDialectConfig | undefined;\n\n\tconstructor(dialect?: PgDialect | PgDialectConfig) {\n\t\tthis.dialect = is(dialect, PgDialect) ? dialect : undefined;\n\t\tthis.dialectConfig = is(dialect, PgDialect) ? undefined : dialect;\n\t}\n\n\t$with: WithBuilder = (alias: string, selection?: ColumnsSelection) => {\n\t\tconst queryBuilder = this;\n\t\tconst as = (\n\t\t\tqb:\n\t\t\t\t| TypedQueryBuilder<ColumnsSelection | undefined>\n\t\t\t\t| SQL\n\t\t\t\t| ((qb: QueryBuilder) => TypedQueryBuilder<ColumnsSelection | undefined> | SQL),\n\t\t) => {\n\t\t\tif (typeof qb === 'function') {\n\t\t\t\tqb = qb(queryBuilder);\n\t\t\t}\n\n\t\t\treturn new Proxy(\n\t\t\t\tnew WithSubquery(\n\t\t\t\t\tqb.getSQL(),\n\t\t\t\t\tselection ?? ('getSelectedFields' in qb ? qb.getSelectedFields() ?? {} : {}) as SelectedFields,\n\t\t\t\t\talias,\n\t\t\t\t\ttrue,\n\t\t\t\t),\n\t\t\t\tnew SelectionProxyHandler({ alias, sqlAliasedBehavior: 'alias', sqlBehavior: 'error' }),\n\t\t\t) as any;\n\t\t};\n\t\treturn { as };\n\t};\n\n\twith(...queries: WithSubquery[]) {\n\t\tconst self = this;\n\n\t\tfunction select(): PgSelectBuilder<undefined, 'qb'>;\n\t\tfunction select<TSelection extends SelectedFields>(fields: TSelection): PgSelectBuilder<TSelection, 'qb'>;\n\t\tfunction select<TSelection extends SelectedFields>(\n\t\t\tfields?: TSelection,\n\t\t): PgSelectBuilder<TSelection | undefined, 'qb'> {\n\t\t\treturn new PgSelectBuilder({\n\t\t\t\tfields: fields ?? undefined,\n\t\t\t\tsession: undefined,\n\t\t\t\tdialect: self.getDialect(),\n\t\t\t\twithList: queries,\n\t\t\t});\n\t\t}\n\n\t\tfunction selectDistinct(): PgSelectBuilder<undefined, 'qb'>;\n\t\tfunction selectDistinct<TSelection extends SelectedFields>(fields: TSelection): PgSelectBuilder<TSelection, 'qb'>;\n\t\tfunction selectDistinct<TSelection extends SelectedFields>(\n\t\t\tfields?: TSelection,\n\t\t): PgSelectBuilder<TSelection | undefined, 'qb'> {\n\t\t\treturn new PgSelectBuilder({\n\t\t\t\tfields: fields ?? undefined,\n\t\t\t\tsession: undefined,\n\t\t\t\tdialect: self.getDialect(),\n\t\t\t\tdistinct: true,\n\t\t\t});\n\t\t}\n\n\t\tfunction selectDistinctOn(on: (PgColumn | SQLWrapper)[]): PgSelectBuilder<undefined, 'qb'>;\n\t\tfunction selectDistinctOn<TSelection extends SelectedFields>(\n\t\t\ton: (PgColumn | SQLWrapper)[],\n\t\t\tfields: TSelection,\n\t\t): PgSelectBuilder<TSelection, 'qb'>;\n\t\tfunction selectDistinctOn<TSelection extends SelectedFields>(\n\t\t\ton: (PgColumn | SQLWrapper)[],\n\t\t\tfields?: TSelection,\n\t\t): PgSelectBuilder<TSelection | undefined, 'qb'> {\n\t\t\treturn new PgSelectBuilder({\n\t\t\t\tfields: fields ?? undefined,\n\t\t\t\tsession: undefined,\n\t\t\t\tdialect: self.getDialect(),\n\t\t\t\tdistinct: { on },\n\t\t\t});\n\t\t}\n\n\t\treturn { select, selectDistinct, selectDistinctOn };\n\t}\n\n\tselect(): PgSelectBuilder<undefined, 'qb'>;\n\tselect<TSelection extends SelectedFields>(fields: TSelection): PgSelectBuilder<TSelection, 'qb'>;\n\tselect<TSelection extends SelectedFields>(fields?: TSelection): PgSelectBuilder<TSelection | undefined, 'qb'> {\n\t\treturn new PgSelectBuilder({\n\t\t\tfields: fields ?? undefined,\n\t\t\tsession: undefined,\n\t\t\tdialect: this.getDialect(),\n\t\t});\n\t}\n\n\tselectDistinct(): PgSelectBuilder<undefined>;\n\tselectDistinct<TSelection extends SelectedFields>(fields: TSelection): PgSelectBuilder<TSelection>;\n\tselectDistinct<TSelection extends SelectedFields>(fields?: TSelection): PgSelectBuilder<TSelection | undefined> {\n\t\treturn new PgSelectBuilder({\n\t\t\tfields: fields ?? undefined,\n\t\t\tsession: undefined,\n\t\t\tdialect: this.getDialect(),\n\t\t\tdistinct: true,\n\t\t});\n\t}\n\n\tselectDistinctOn(on: (PgColumn | SQLWrapper)[]): PgSelectBuilder<undefined>;\n\tselectDistinctOn<TSelection extends SelectedFields>(\n\t\ton: (PgColumn | SQLWrapper)[],\n\t\tfields: TSelection,\n\t): PgSelectBuilder<TSelection>;\n\tselectDistinctOn<TSelection extends SelectedFields>(\n\t\ton: (PgColumn | SQLWrapper)[],\n\t\tfields?: TSelection,\n\t): PgSelectBuilder<TSelection | undefined> {\n\t\treturn new PgSelectBuilder({\n\t\t\tfields: fields ?? undefined,\n\t\t\tsession: undefined,\n\t\t\tdialect: this.getDialect(),\n\t\t\tdistinct: { on },\n\t\t});\n\t}\n\n\t// Lazy load dialect to avoid circular dependency\n\tprivate getDialect() {\n\t\tif (!this.dialect) {\n\t\t\tthis.dialect = new PgDialect(this.dialectConfig);\n\t\t}\n\n\t\treturn this.dialect;\n\t}\n}\n", "import { aliasedTable, aliasedTableColumn, mapColumnsInAliasedSQLToAlias, mapColumnsInSQLToAlias } from '~/alias.ts';\nimport { CasingCache } from '~/casing.ts';\nimport { Column } from '~/column.ts';\nimport { entityKind, is } from '~/entity.ts';\nimport { DrizzleError } from '~/errors.ts';\nimport type { MigrationConfig, MigrationMeta } from '~/migrator.ts';\nimport {\n\tPgColumn,\n\tPgDate,\n\tPgDateString,\n\tPgJson,\n\tPgJsonb,\n\tPgNumeric,\n\tPgTime,\n\tPgTimestamp,\n\tPgTimestampString,\n\tPgUUID,\n} from '~/pg-core/columns/index.ts';\nimport type {\n\tAnyPgSelectQueryBuilder,\n\tPgDeleteConfig,\n\tPgInsertConfig,\n\tPgSelectJoinConfig,\n\tPgUpdateConfig,\n} from '~/pg-core/query-builders/index.ts';\nimport type { PgSelectConfig, SelectedFieldsOrdered } from '~/pg-core/query-builders/select.types.ts';\nimport { PgTable } from '~/pg-core/table.ts';\nimport {\n\ttype BuildRelationalQueryResult,\n\ttype DBQueryConfig,\n\tgetOperators,\n\tgetOrderByOperators,\n\tMany,\n\tnormalizeRelation,\n\tOne,\n\ttype Relation,\n\ttype TableRelationalConfig,\n\ttype TablesRelationalConfig,\n} from '~/relations.ts';\nimport { and, eq, View } from '~/sql/index.ts';\nimport {\n\ttype DriverValueEncoder,\n\ttype Name,\n\tParam,\n\ttype QueryTypingsValue,\n\ttype QueryWithTypings,\n\tSQL,\n\tsql,\n\ttype SQLChunk,\n} from '~/sql/sql.ts';\nimport { Subquery } from '~/subquery.ts';\nimport { getTableName, getTableUniqueName, Table } from '~/table.ts';\nimport { type Casing, orderSelectedFields, type UpdateSet } from '~/utils.ts';\nimport { ViewBaseConfig } from '~/view-common.ts';\nimport type { PgSession } from './session.ts';\nimport { PgViewBase } from './view-base.ts';\nimport type { PgMaterializedView } from './view.ts';\n\nexport interface PgDialectConfig {\n\tcasing?: Casing;\n}\n\nexport class PgDialect {\n\tstatic readonly [entityKind]: string = 'PgDialect';\n\n\t/** @internal */\n\treadonly casing: CasingCache;\n\n\tconstructor(config?: PgDialectConfig) {\n\t\tthis.casing = new CasingCache(config?.casing);\n\t}\n\n\tasync migrate(migrations: MigrationMeta[], session: PgSession, config: string | MigrationConfig): Promise<void> {\n\t\tconst migrationsTable = typeof config === 'string'\n\t\t\t? '__drizzle_migrations'\n\t\t\t: config.migrationsTable ?? '__drizzle_migrations';\n\t\tconst migrationsSchema = typeof config === 'string' ? 'drizzle' : config.migrationsSchema ?? 'drizzle';\n\t\tconst migrationTableCreate = sql`\n\t\t\tCREATE TABLE IF NOT EXISTS ${sql.identifier(migrationsSchema)}.${sql.identifier(migrationsTable)} (\n\t\t\t\tid SERIAL PRIMARY KEY,\n\t\t\t\thash text NOT NULL,\n\t\t\t\tcreated_at bigint\n\t\t\t)\n\t\t`;\n\t\tawait session.execute(sql`CREATE SCHEMA IF NOT EXISTS ${sql.identifier(migrationsSchema)}`);\n\t\tawait session.execute(migrationTableCreate);\n\n\t\tconst dbMigrations = await session.all<{ id: number; hash: string; created_at: string }>(\n\t\t\tsql`select id, hash, created_at from ${sql.identifier(migrationsSchema)}.${\n\t\t\t\tsql.identifier(migrationsTable)\n\t\t\t} order by created_at desc limit 1`,\n\t\t);\n\n\t\tconst lastDbMigration = dbMigrations[0];\n\t\tawait session.transaction(async (tx) => {\n\t\t\tfor await (const migration of migrations) {\n\t\t\t\tif (\n\t\t\t\t\t!lastDbMigration\n\t\t\t\t\t|| Number(lastDbMigration.created_at) < migration.folderMillis\n\t\t\t\t) {\n\t\t\t\t\tfor (const stmt of migration.sql) {\n\t\t\t\t\t\tawait tx.execute(sql.raw(stmt));\n\t\t\t\t\t}\n\t\t\t\t\tawait tx.execute(\n\t\t\t\t\t\tsql`insert into ${sql.identifier(migrationsSchema)}.${\n\t\t\t\t\t\t\tsql.identifier(migrationsTable)\n\t\t\t\t\t\t} (\"hash\", \"created_at\") values(${migration.hash}, ${migration.folderMillis})`,\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\tescapeName(name: string): string {\n\t\treturn `\"${name}\"`;\n\t}\n\n\tescapeParam(num: number): string {\n\t\treturn `$${num + 1}`;\n\t}\n\n\tescapeString(str: string): string {\n\t\treturn `'${str.replace(/'/g, \"''\")}'`;\n\t}\n\n\tprivate buildWithCTE(queries: Subquery[] | undefined): SQL | undefined {\n\t\tif (!queries?.length) return undefined;\n\n\t\tconst withSqlChunks = [sql`with `];\n\t\tfor (const [i, w] of queries.entries()) {\n\t\t\twithSqlChunks.push(sql`${sql.identifier(w._.alias)} as (${w._.sql})`);\n\t\t\tif (i < queries.length - 1) {\n\t\t\t\twithSqlChunks.push(sql`, `);\n\t\t\t}\n\t\t}\n\t\twithSqlChunks.push(sql` `);\n\t\treturn sql.join(withSqlChunks);\n\t}\n\n\tbuildDeleteQuery({ table, where, returning, withList }: PgDeleteConfig): SQL {\n\t\tconst withSql = this.buildWithCTE(withList);\n\n\t\tconst returningSql = returning\n\t\t\t? sql` returning ${this.buildSelection(returning, { isSingleTable: true })}`\n\t\t\t: undefined;\n\n\t\tconst whereSql = where ? sql` where ${where}` : undefined;\n\n\t\treturn sql`${withSql}delete from ${table}${whereSql}${returningSql}`;\n\t}\n\n\tbuildUpdateSet(table: PgTable, set: UpdateSet): SQL {\n\t\tconst tableColumns = table[Table.Symbol.Columns];\n\n\t\tconst columnNames = Object.keys(tableColumns).filter((colName) =>\n\t\t\tset[colName] !== undefined || tableColumns[colName]?.onUpdateFn !== undefined\n\t\t);\n\n\t\tconst setSize = columnNames.length;\n\t\treturn sql.join(columnNames.flatMap((colName, i) => {\n\t\t\tconst col = tableColumns[colName]!;\n\n\t\t\tconst value = set[colName] ?? sql.param(col.onUpdateFn!(), col);\n\t\t\tconst res = sql`${sql.identifier(this.casing.getColumnCasing(col))} = ${value}`;\n\n\t\t\tif (i < setSize - 1) {\n\t\t\t\treturn [res, sql.raw(', ')];\n\t\t\t}\n\t\t\treturn [res];\n\t\t}));\n\t}\n\n\tbuildUpdateQuery({ table, set, where, returning, withList, from, joins }: PgUpdateConfig): SQL {\n\t\tconst withSql = this.buildWithCTE(withList);\n\n\t\tconst tableName = table[PgTable.Symbol.Name];\n\t\tconst tableSchema = table[PgTable.Symbol.Schema];\n\t\tconst origTableName = table[PgTable.Symbol.OriginalName];\n\t\tconst alias = tableName === origTableName ? undefined : tableName;\n\t\tconst tableSql = sql`${tableSchema ? sql`${sql.identifier(tableSchema)}.` : undefined}${\n\t\t\tsql.identifier(origTableName)\n\t\t}${alias && sql` ${sql.identifier(alias)}`}`;\n\n\t\tconst setSql = this.buildUpdateSet(table, set);\n\n\t\tconst fromSql = from && sql.join([sql.raw(' from '), this.buildFromTable(from)]);\n\n\t\tconst joinsSql = this.buildJoins(joins);\n\n\t\tconst returningSql = returning\n\t\t\t? sql` returning ${this.buildSelection(returning, { isSingleTable: !from })}`\n\t\t\t: undefined;\n\n\t\tconst whereSql = where ? sql` where ${where}` : undefined;\n\n\t\treturn sql`${withSql}update ${tableSql} set ${setSql}${fromSql}${joinsSql}${whereSql}${returningSql}`;\n\t}\n\n\t/**\n\t * Builds selection SQL with provided fields/expressions\n\t *\n\t * Examples:\n\t *\n\t * `select <selection> from`\n\t *\n\t * `insert ... returning <selection>`\n\t *\n\t * If `isSingleTable` is true, then columns won't be prefixed with table name\n\t */\n\tprivate buildSelection(\n\t\tfields: SelectedFieldsOrdered,\n\t\t{ isSingleTable = false }: { isSingleTable?: boolean } = {},\n\t): SQL {\n\t\tconst columnsLen = fields.length;\n\n\t\tconst chunks = fields\n\t\t\t.flatMap(({ field }, i) => {\n\t\t\t\tconst chunk: SQLChunk[] = [];\n\n\t\t\t\tif (is(field, SQL.Aliased) && field.isSelectionField) {\n\t\t\t\t\tchunk.push(sql.identifier(field.fieldAlias));\n\t\t\t\t} else if (is(field, SQL.Aliased) || is(field, SQL)) {\n\t\t\t\t\tconst query = is(field, SQL.Aliased) ? field.sql : field;\n\n\t\t\t\t\tif (isSingleTable) {\n\t\t\t\t\t\tchunk.push(\n\t\t\t\t\t\t\tnew SQL(\n\t\t\t\t\t\t\t\tquery.queryChunks.map((c) => {\n\t\t\t\t\t\t\t\t\tif (is(c, PgColumn)) {\n\t\t\t\t\t\t\t\t\t\treturn sql.identifier(this.casing.getColumnCasing(c));\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\treturn c;\n\t\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tchunk.push(query);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (is(field, SQL.Aliased)) {\n\t\t\t\t\t\tchunk.push(sql` as ${sql.identifier(field.fieldAlias)}`);\n\t\t\t\t\t}\n\t\t\t\t} else if (is(field, Column)) {\n\t\t\t\t\tif (isSingleTable) {\n\t\t\t\t\t\tchunk.push(sql.identifier(this.casing.getColumnCasing(field)));\n\t\t\t\t\t} else {\n\t\t\t\t\t\tchunk.push(field);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (i < columnsLen - 1) {\n\t\t\t\t\tchunk.push(sql`, `);\n\t\t\t\t}\n\n\t\t\t\treturn chunk;\n\t\t\t});\n\n\t\treturn sql.join(chunks);\n\t}\n\n\tprivate buildJoins(joins: PgSelectJoinConfig[] | undefined): SQL | undefined {\n\t\tif (!joins || joins.length === 0) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tconst joinsArray: SQL[] = [];\n\n\t\tfor (const [index, joinMeta] of joins.entries()) {\n\t\t\tif (index === 0) {\n\t\t\t\tjoinsArray.push(sql` `);\n\t\t\t}\n\t\t\tconst table = joinMeta.table;\n\t\t\tconst lateralSql = joinMeta.lateral ? sql` lateral` : undefined;\n\t\t\tconst onSql = joinMeta.on ? sql` on ${joinMeta.on}` : undefined;\n\n\t\t\tif (is(table, PgTable)) {\n\t\t\t\tconst tableName = table[PgTable.Symbol.Name];\n\t\t\t\tconst tableSchema = table[PgTable.Symbol.Schema];\n\t\t\t\tconst origTableName = table[PgTable.Symbol.OriginalName];\n\t\t\t\tconst alias = tableName === origTableName ? undefined : joinMeta.alias;\n\t\t\t\tjoinsArray.push(\n\t\t\t\t\tsql`${sql.raw(joinMeta.joinType)} join${lateralSql} ${\n\t\t\t\t\t\ttableSchema ? sql`${sql.identifier(tableSchema)}.` : undefined\n\t\t\t\t\t}${sql.identifier(origTableName)}${alias && sql` ${sql.identifier(alias)}`}${onSql}`,\n\t\t\t\t);\n\t\t\t} else if (is(table, View)) {\n\t\t\t\tconst viewName = table[ViewBaseConfig].name;\n\t\t\t\tconst viewSchema = table[ViewBaseConfig].schema;\n\t\t\t\tconst origViewName = table[ViewBaseConfig].originalName;\n\t\t\t\tconst alias = viewName === origViewName ? undefined : joinMeta.alias;\n\t\t\t\tjoinsArray.push(\n\t\t\t\t\tsql`${sql.raw(joinMeta.joinType)} join${lateralSql} ${\n\t\t\t\t\t\tviewSchema ? sql`${sql.identifier(viewSchema)}.` : undefined\n\t\t\t\t\t}${sql.identifier(origViewName)}${alias && sql` ${sql.identifier(alias)}`}${onSql}`,\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tjoinsArray.push(\n\t\t\t\t\tsql`${sql.raw(joinMeta.joinType)} join${lateralSql} ${table}${onSql}`,\n\t\t\t\t);\n\t\t\t}\n\t\t\tif (index < joins.length - 1) {\n\t\t\t\tjoinsArray.push(sql` `);\n\t\t\t}\n\t\t}\n\n\t\treturn sql.join(joinsArray);\n\t}\n\n\tprivate buildFromTable(\n\t\ttable: SQL | Subquery | PgViewBase | PgTable | undefined,\n\t): SQL | Subquery | PgViewBase | PgTable | undefined {\n\t\tif (is(table, Table) && table[Table.Symbol.IsAlias]) {\n\t\t\tlet fullName = sql`${sql.identifier(table[Table.Symbol.OriginalName])}`;\n\t\t\tif (table[Table.Symbol.Schema]) {\n\t\t\t\tfullName = sql`${sql.identifier(table[Table.Symbol.Schema]!)}.${fullName}`;\n\t\t\t}\n\t\t\treturn sql`${fullName} ${sql.identifier(table[Table.Symbol.Name])}`;\n\t\t}\n\n\t\treturn table;\n\t}\n\n\tbuildSelectQuery(\n\t\t{\n\t\t\twithList,\n\t\t\tfields,\n\t\t\tfieldsFlat,\n\t\t\twhere,\n\t\t\thaving,\n\t\t\ttable,\n\t\t\tjoins,\n\t\t\torderBy,\n\t\t\tgroupBy,\n\t\t\tlimit,\n\t\t\toffset,\n\t\t\tlockingClause,\n\t\t\tdistinct,\n\t\t\tsetOperators,\n\t\t}: PgSelectConfig,\n\t): SQL {\n\t\tconst fieldsList = fieldsFlat ?? orderSelectedFields<PgColumn>(fields);\n\t\tfor (const f of fieldsList) {\n\t\t\tif (\n\t\t\t\tis(f.field, Column)\n\t\t\t\t&& getTableName(f.field.table)\n\t\t\t\t\t!== (is(table, Subquery)\n\t\t\t\t\t\t? table._.alias\n\t\t\t\t\t\t: is(table, PgViewBase)\n\t\t\t\t\t\t? table[ViewBaseConfig].name\n\t\t\t\t\t\t: is(table, SQL)\n\t\t\t\t\t\t? undefined\n\t\t\t\t\t\t: getTableName(table))\n\t\t\t\t&& !((table) =>\n\t\t\t\t\tjoins?.some(({ alias }) =>\n\t\t\t\t\t\talias === (table[Table.Symbol.IsAlias] ? getTableName(table) : table[Table.Symbol.BaseName])\n\t\t\t\t\t))(f.field.table)\n\t\t\t) {\n\t\t\t\tconst tableName = getTableName(f.field.table);\n\t\t\t\tthrow new Error(\n\t\t\t\t\t`Your \"${\n\t\t\t\t\t\tf.path.join('->')\n\t\t\t\t\t}\" field references a column \"${tableName}\".\"${f.field.name}\", but the table \"${tableName}\" is not part of the query! Did you forget to join it?`,\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\tconst isSingleTable = !joins || joins.length === 0;\n\n\t\tconst withSql = this.buildWithCTE(withList);\n\n\t\tlet distinctSql: SQL | undefined;\n\t\tif (distinct) {\n\t\t\tdistinctSql = distinct === true ? sql` distinct` : sql` distinct on (${sql.join(distinct.on, sql`, `)})`;\n\t\t}\n\n\t\tconst selection = this.buildSelection(fieldsList, { isSingleTable });\n\n\t\tconst tableSql = this.buildFromTable(table);\n\n\t\tconst joinsSql = this.buildJoins(joins);\n\n\t\tconst whereSql = where ? sql` where ${where}` : undefined;\n\n\t\tconst havingSql = having ? sql` having ${having}` : undefined;\n\n\t\tlet orderBySql;\n\t\tif (orderBy && orderBy.length > 0) {\n\t\t\torderBySql = sql` order by ${sql.join(orderBy, sql`, `)}`;\n\t\t}\n\n\t\tlet groupBySql;\n\t\tif (groupBy && groupBy.length > 0) {\n\t\t\tgroupBySql = sql` group by ${sql.join(groupBy, sql`, `)}`;\n\t\t}\n\n\t\tconst limitSql = typeof limit === 'object' || (typeof limit === 'number' && limit >= 0)\n\t\t\t? sql` limit ${limit}`\n\t\t\t: undefined;\n\n\t\tconst offsetSql = offset ? sql` offset ${offset}` : undefined;\n\n\t\tconst lockingClauseSql = sql.empty();\n\t\tif (lockingClause) {\n\t\t\tconst clauseSql = sql` for ${sql.raw(lockingClause.strength)}`;\n\t\t\tif (lockingClause.config.of) {\n\t\t\t\tclauseSql.append(\n\t\t\t\t\tsql` of ${\n\t\t\t\t\t\tsql.join(\n\t\t\t\t\t\t\tArray.isArray(lockingClause.config.of) ? lockingClause.config.of : [lockingClause.config.of],\n\t\t\t\t\t\t\tsql`, `,\n\t\t\t\t\t\t)\n\t\t\t\t\t}`,\n\t\t\t\t);\n\t\t\t}\n\t\t\tif (lockingClause.config.noWait) {\n\t\t\t\tclauseSql.append(sql` nowait`);\n\t\t\t} else if (lockingClause.config.skipLocked) {\n\t\t\t\tclauseSql.append(sql` skip locked`);\n\t\t\t}\n\t\t\tlockingClauseSql.append(clauseSql);\n\t\t}\n\t\tconst finalQuery =\n\t\t\tsql`${withSql}select${distinctSql} ${selection} from ${tableSql}${joinsSql}${whereSql}${groupBySql}${havingSql}${orderBySql}${limitSql}${offsetSql}${lockingClauseSql}`;\n\n\t\tif (setOperators.length > 0) {\n\t\t\treturn this.buildSetOperations(finalQuery, setOperators);\n\t\t}\n\n\t\treturn finalQuery;\n\t}\n\n\tbuildSetOperations(leftSelect: SQL, setOperators: PgSelectConfig['setOperators']): SQL {\n\t\tconst [setOperator, ...rest] = setOperators;\n\n\t\tif (!setOperator) {\n\t\t\tthrow new Error('Cannot pass undefined values to any set operator');\n\t\t}\n\n\t\tif (rest.length === 0) {\n\t\t\treturn this.buildSetOperationQuery({ leftSelect, setOperator });\n\t\t}\n\n\t\t// Some recursive magic here\n\t\treturn this.buildSetOperations(\n\t\t\tthis.buildSetOperationQuery({ leftSelect, setOperator }),\n\t\t\trest,\n\t\t);\n\t}\n\n\tbuildSetOperationQuery({\n\t\tleftSelect,\n\t\tsetOperator: { type, isAll, rightSelect, limit, orderBy, offset },\n\t}: { leftSelect: SQL; setOperator: PgSelectConfig['setOperators'][number] }): SQL {\n\t\tconst leftChunk = sql`(${leftSelect.getSQL()}) `;\n\t\tconst rightChunk = sql`(${rightSelect.getSQL()})`;\n\n\t\tlet orderBySql;\n\t\tif (orderBy && orderBy.length > 0) {\n\t\t\tconst orderByValues: (SQL<unknown> | Name)[] = [];\n\n\t\t\t// The next bit is necessary because the sql operator replaces ${table.column} with `table`.`column`\n\t\t\t// which is invalid Sql syntax, Table from one of the SELECTs cannot be used in global ORDER clause\n\t\t\tfor (const singleOrderBy of orderBy) {\n\t\t\t\tif (is(singleOrderBy, PgColumn)) {\n\t\t\t\t\torderByValues.push(sql.identifier(singleOrderBy.name));\n\t\t\t\t} else if (is(singleOrderBy, SQL)) {\n\t\t\t\t\tfor (let i = 0; i < singleOrderBy.queryChunks.length; i++) {\n\t\t\t\t\t\tconst chunk = singleOrderBy.queryChunks[i];\n\n\t\t\t\t\t\tif (is(chunk, PgColumn)) {\n\t\t\t\t\t\t\tsingleOrderBy.queryChunks[i] = sql.identifier(chunk.name);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\torderByValues.push(sql`${singleOrderBy}`);\n\t\t\t\t} else {\n\t\t\t\t\torderByValues.push(sql`${singleOrderBy}`);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\torderBySql = sql` order by ${sql.join(orderByValues, sql`, `)} `;\n\t\t}\n\n\t\tconst limitSql = typeof limit === 'object' || (typeof limit === 'number' && limit >= 0)\n\t\t\t? sql` limit ${limit}`\n\t\t\t: undefined;\n\n\t\tconst operatorChunk = sql.raw(`${type} ${isAll ? 'all ' : ''}`);\n\n\t\tconst offsetSql = offset ? sql` offset ${offset}` : undefined;\n\n\t\treturn sql`${leftChunk}${operatorChunk}${rightChunk}${orderBySql}${limitSql}${offsetSql}`;\n\t}\n\n\tbuildInsertQuery(\n\t\t{ table, values: valuesOrSelect, onConflict, returning, withList, select, overridingSystemValue_ }: PgInsertConfig,\n\t): SQL {\n\t\tconst valuesSqlList: ((SQLChunk | SQL)[] | SQL)[] = [];\n\t\tconst columns: Record<string, PgColumn> = table[Table.Symbol.Columns];\n\n\t\tconst colEntries: [string, PgColumn][] = Object.entries(columns).filter(([_, col]) => !col.shouldDisableInsert());\n\n\t\tconst insertOrder = colEntries.map(\n\t\t\t([, column]) => sql.identifier(this.casing.getColumnCasing(column)),\n\t\t);\n\n\t\tif (select) {\n\t\t\tconst select = valuesOrSelect as AnyPgSelectQueryBuilder | SQL;\n\n\t\t\tif (is(select, SQL)) {\n\t\t\t\tvaluesSqlList.push(select);\n\t\t\t} else {\n\t\t\t\tvaluesSqlList.push(select.getSQL());\n\t\t\t}\n\t\t} else {\n\t\t\tconst values = valuesOrSelect as Record<string, Param | SQL>[];\n\t\t\tvaluesSqlList.push(sql.raw('values '));\n\n\t\t\tfor (const [valueIndex, value] of values.entries()) {\n\t\t\t\tconst valueList: (SQLChunk | SQL)[] = [];\n\t\t\t\tfor (const [fieldName, col] of colEntries) {\n\t\t\t\t\tconst colValue = value[fieldName];\n\t\t\t\t\tif (colValue === undefined || (is(colValue, Param) && colValue.value === undefined)) {\n\t\t\t\t\t\t// eslint-disable-next-line unicorn/no-negated-condition\n\t\t\t\t\t\tif (col.defaultFn !== undefined) {\n\t\t\t\t\t\t\tconst defaultFnResult = col.defaultFn();\n\t\t\t\t\t\t\tconst defaultValue = is(defaultFnResult, SQL) ? defaultFnResult : sql.param(defaultFnResult, col);\n\t\t\t\t\t\t\tvalueList.push(defaultValue);\n\t\t\t\t\t\t\t// eslint-disable-next-line unicorn/no-negated-condition\n\t\t\t\t\t\t} else if (!col.default && col.onUpdateFn !== undefined) {\n\t\t\t\t\t\t\tconst onUpdateFnResult = col.onUpdateFn();\n\t\t\t\t\t\t\tconst newValue = is(onUpdateFnResult, SQL) ? onUpdateFnResult : sql.param(onUpdateFnResult, col);\n\t\t\t\t\t\t\tvalueList.push(newValue);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tvalueList.push(sql`default`);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvalueList.push(colValue);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tvaluesSqlList.push(valueList);\n\t\t\t\tif (valueIndex < values.length - 1) {\n\t\t\t\t\tvaluesSqlList.push(sql`, `);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tconst withSql = this.buildWithCTE(withList);\n\n\t\tconst valuesSql = sql.join(valuesSqlList);\n\n\t\tconst returningSql = returning\n\t\t\t? sql` returning ${this.buildSelection(returning, { isSingleTable: true })}`\n\t\t\t: undefined;\n\n\t\tconst onConflictSql = onConflict ? sql` on conflict ${onConflict}` : undefined;\n\n\t\tconst overridingSql = overridingSystemValue_ === true ? sql`overriding system value ` : undefined;\n\n\t\treturn sql`${withSql}insert into ${table} ${insertOrder} ${overridingSql}${valuesSql}${onConflictSql}${returningSql}`;\n\t}\n\n\tbuildRefreshMaterializedViewQuery(\n\t\t{ view, concurrently, withNoData }: { view: PgMaterializedView; concurrently?: boolean; withNoData?: boolean },\n\t): SQL {\n\t\tconst concurrentlySql = concurrently ? sql` concurrently` : undefined;\n\t\tconst withNoDataSql = withNoData ? sql` with no data` : undefined;\n\n\t\treturn sql`refresh materialized view${concurrentlySql} ${view}${withNoDataSql}`;\n\t}\n\n\tprepareTyping(encoder: DriverValueEncoder<unknown, unknown>): QueryTypingsValue {\n\t\tif (is(encoder, PgJsonb) || is(encoder, PgJson)) {\n\t\t\treturn 'json';\n\t\t} else if (is(encoder, PgNumeric)) {\n\t\t\treturn 'decimal';\n\t\t} else if (is(encoder, PgTime)) {\n\t\t\treturn 'time';\n\t\t} else if (is(encoder, PgTimestamp) || is(encoder, PgTimestampString)) {\n\t\t\treturn 'timestamp';\n\t\t} else if (is(encoder, PgDate) || is(encoder, PgDateString)) {\n\t\t\treturn 'date';\n\t\t} else if (is(encoder, PgUUID)) {\n\t\t\treturn 'uuid';\n\t\t} else {\n\t\t\treturn 'none';\n\t\t}\n\t}\n\n\tsqlToQuery(sql: SQL, invokeSource?: 'indexes' | undefined): QueryWithTypings {\n\t\treturn sql.toQuery({\n\t\t\tcasing: this.casing,\n\t\t\tescapeName: this.escapeName,\n\t\t\tescapeParam: this.escapeParam,\n\t\t\tescapeString: this.escapeString,\n\t\t\tprepareTyping: this.prepareTyping,\n\t\t\tinvokeSource,\n\t\t});\n\t}\n\n\t// buildRelationalQueryWithPK({\n\t// \tfullSchema,\n\t// \tschema,\n\t// \ttableNamesMap,\n\t// \ttable,\n\t// \ttableConfig,\n\t// \tqueryConfig: config,\n\t// \ttableAlias,\n\t// \tisRoot = false,\n\t// \tjoinOn,\n\t// }: {\n\t// \tfullSchema: Record<string, unknown>;\n\t// \tschema: TablesRelationalConfig;\n\t// \ttableNamesMap: Record<string, string>;\n\t// \ttable: PgTable;\n\t// \ttableConfig: TableRelationalConfig;\n\t// \tqueryConfig: true | DBQueryConfig<'many', true>;\n\t// \ttableAlias: string;\n\t// \tisRoot?: boolean;\n\t// \tjoinOn?: SQL;\n\t// }): BuildRelationalQueryResult<PgTable, PgColumn> {\n\t// \t// For { \"<relation>\": true }, return a table with selection of all columns\n\t// \tif (config === true) {\n\t// \t\tconst selectionEntries = Object.entries(tableConfig.columns);\n\t// \t\tconst selection: BuildRelationalQueryResult<PgTable, PgColumn>['selection'] = selectionEntries.map((\n\t// \t\t\t[key, value],\n\t// \t\t) => ({\n\t// \t\t\tdbKey: value.name,\n\t// \t\t\ttsKey: key,\n\t// \t\t\tfield: value as PgColumn,\n\t// \t\t\trelationTableTsKey: undefined,\n\t// \t\t\tisJson: false,\n\t// \t\t\tselection: [],\n\t// \t\t}));\n\n\t// \t\treturn {\n\t// \t\t\ttableTsKey: tableConfig.tsName,\n\t// \t\t\tsql: table,\n\t// \t\t\tselection,\n\t// \t\t};\n\t// \t}\n\n\t// \t// let selection: BuildRelationalQueryResult<PgTable, PgColumn>['selection'] = [];\n\t// \t// let selectionForBuild = selection;\n\n\t// \tconst aliasedColumns = Object.fromEntries(\n\t// \t\tObject.entries(tableConfig.columns).map(([key, value]) => [key, aliasedTableColumn(value, tableAlias)]),\n\t// \t);\n\n\t// \tconst aliasedRelations = Object.fromEntries(\n\t// \t\tObject.entries(tableConfig.relations).map(([key, value]) => [key, aliasedRelation(value, tableAlias)]),\n\t// \t);\n\n\t// \tconst aliasedFields = Object.assign({}, aliasedColumns, aliasedRelations);\n\n\t// \tlet where, hasUserDefinedWhere;\n\t// \tif (config.where) {\n\t// \t\tconst whereSql = typeof config.where === 'function' ? config.where(aliasedFields, operators) : config.where;\n\t// \t\twhere = whereSql && mapColumnsInSQLToAlias(whereSql, tableAlias);\n\t// \t\thasUserDefinedWhere = !!where;\n\t// \t}\n\t// \twhere = and(joinOn, where);\n\n\t// \t// const fieldsSelection: { tsKey: string; value: PgColumn | SQL.Aliased; isExtra?: boolean }[] = [];\n\t// \tlet joins: Join[] = [];\n\t// \tlet selectedColumns: string[] = [];\n\n\t// \t// Figure out which columns to select\n\t// \tif (config.columns) {\n\t// \t\tlet isIncludeMode = false;\n\n\t// \t\tfor (const [field, value] of Object.entries(config.columns)) {\n\t// \t\t\tif (value === undefined) {\n\t// \t\t\t\tcontinue;\n\t// \t\t\t}\n\n\t// \t\t\tif (field in tableConfig.columns) {\n\t// \t\t\t\tif (!isIncludeMode && value === true) {\n\t// \t\t\t\t\tisIncludeMode = true;\n\t// \t\t\t\t}\n\t// \t\t\t\tselectedColumns.push(field);\n\t// \t\t\t}\n\t// \t\t}\n\n\t// \t\tif (selectedColumns.length > 0) {\n\t// \t\t\tselectedColumns = isIncludeMode\n\t// \t\t\t\t? selectedColumns.filter((c) => config.columns?.[c] === true)\n\t// \t\t\t\t: Object.keys(tableConfig.columns).filter((key) => !selectedColumns.includes(key));\n\t// \t\t}\n\t// \t} else {\n\t// \t\t// Select all columns if selection is not specified\n\t// \t\tselectedColumns = Object.keys(tableConfig.columns);\n\t// \t}\n\n\t// \t// for (const field of selectedColumns) {\n\t// \t// \tconst column = tableConfig.columns[field]! as PgColumn;\n\t// \t// \tfieldsSelection.push({ tsKey: field, value: column });\n\t// \t// }\n\n\t// \tlet initiallySelectedRelations: {\n\t// \t\ttsKey: string;\n\t// \t\tqueryConfig: true | DBQueryConfig<'many', false>;\n\t// \t\trelation: Relation;\n\t// \t}[] = [];\n\n\t// \t// let selectedRelations: BuildRelationalQueryResult<PgTable, PgColumn>['selection'] = [];\n\n\t// \t// Figure out which relations to select\n\t// \tif (config.with) {\n\t// \t\tinitiallySelectedRelations = Object.entries(config.with)\n\t// \t\t\t.filter((entry): entry is [typeof entry[0], NonNullable<typeof entry[1]>] => !!entry[1])\n\t// \t\t\t.map(([tsKey, queryConfig]) => ({ tsKey, queryConfig, relation: tableConfig.relations[tsKey]! }));\n\t// \t}\n\n\t// \tconst manyRelations = initiallySelectedRelations.filter((r) =>\n\t// \t\tis(r.relation, Many)\n\t// \t\t&& (schema[tableNamesMap[r.relation.referencedTable[Table.Symbol.Name]]!]?.primaryKey.length ?? 0) > 0\n\t// \t);\n\t// \t// If this is the last Many relation (or there are no Many relations), we are on the innermost subquery level\n\t// \tconst isInnermostQuery = manyRelations.length < 2;\n\n\t// \tconst selectedExtras: {\n\t// \t\ttsKey: string;\n\t// \t\tvalue: SQL.Aliased;\n\t// \t}[] = [];\n\n\t// \t// Figure out which extras to select\n\t// \tif (isInnermostQuery && config.extras) {\n\t// \t\tconst extras = typeof config.extras === 'function'\n\t// \t\t\t? config.extras(aliasedFields, { sql })\n\t// \t\t\t: config.extras;\n\t// \t\tfor (const [tsKey, value] of Object.entries(extras)) {\n\t// \t\t\tselectedExtras.push({\n\t// \t\t\t\ttsKey,\n\t// \t\t\t\tvalue: mapColumnsInAliasedSQLToAlias(value, tableAlias),\n\t// \t\t\t});\n\t// \t\t}\n\t// \t}\n\n\t// \t// Transform `fieldsSelection` into `selection`\n\t// \t// `fieldsSelection` shouldn't be used after this point\n\t// \t// for (const { tsKey, value, isExtra } of fieldsSelection) {\n\t// \t// \tselection.push({\n\t// \t// \t\tdbKey: is(value, SQL.Aliased) ? value.fieldAlias : tableConfig.columns[tsKey]!.name,\n\t// \t// \t\ttsKey,\n\t// \t// \t\tfield: is(value, Column) ? aliasedTableColumn(value, tableAlias) : value,\n\t// \t// \t\trelationTableTsKey: undefined,\n\t// \t// \t\tisJson: false,\n\t// \t// \t\tisExtra,\n\t// \t// \t\tselection: [],\n\t// \t// \t});\n\t// \t// }\n\n\t// \tlet orderByOrig = typeof config.orderBy === 'function'\n\t// \t\t? config.orderBy(aliasedFields, orderByOperators)\n\t// \t\t: config.orderBy ?? [];\n\t// \tif (!Array.isArray(orderByOrig)) {\n\t// \t\torderByOrig = [orderByOrig];\n\t// \t}\n\t// \tconst orderBy = orderByOrig.map((orderByValue) => {\n\t// \t\tif (is(orderByValue, Column)) {\n\t// \t\t\treturn aliasedTableColumn(orderByValue, tableAlias) as PgColumn;\n\t// \t\t}\n\t// \t\treturn mapColumnsInSQLToAlias(orderByValue, tableAlias);\n\t// \t});\n\n\t// \tconst limit = isInnermostQuery ? config.limit : undefined;\n\t// \tconst offset = isInnermostQuery ? config.offset : undefined;\n\n\t// \t// For non-root queries without additional config except columns, return a table with selection\n\t// \tif (\n\t// \t\t!isRoot\n\t// \t\t&& initiallySelectedRelations.length === 0\n\t// \t\t&& selectedExtras.length === 0\n\t// \t\t&& !where\n\t// \t\t&& orderBy.length === 0\n\t// \t\t&& limit === undefined\n\t// \t\t&& offset === undefined\n\t// \t) {\n\t// \t\treturn {\n\t// \t\t\ttableTsKey: tableConfig.tsName,\n\t// \t\t\tsql: table,\n\t// \t\t\tselection: selectedColumns.map((key) => ({\n\t// \t\t\t\tdbKey: tableConfig.columns[key]!.name,\n\t// \t\t\t\ttsKey: key,\n\t// \t\t\t\tfield: tableConfig.columns[key] as PgColumn,\n\t// \t\t\t\trelationTableTsKey: undefined,\n\t// \t\t\t\tisJson: false,\n\t// \t\t\t\tselection: [],\n\t// \t\t\t})),\n\t// \t\t};\n\t// \t}\n\n\t// \tconst selectedRelationsWithoutPK:\n\n\t// \t// Process all relations without primary keys, because they need to be joined differently and will all be on the same query level\n\t// \tfor (\n\t// \t\tconst {\n\t// \t\t\ttsKey: selectedRelationTsKey,\n\t// \t\t\tqueryConfig: selectedRelationConfigValue,\n\t// \t\t\trelation,\n\t// \t\t} of initiallySelectedRelations\n\t// \t) {\n\t// \t\tconst normalizedRelation = normalizeRelation(schema, tableNamesMap, relation);\n\t// \t\tconst relationTableName = relation.referencedTable[Table.Symbol.Name];\n\t// \t\tconst relationTableTsName = tableNamesMap[relationTableName]!;\n\t// \t\tconst relationTable = schema[relationTableTsName]!;\n\n\t// \t\tif (relationTable.primaryKey.length > 0) {\n\t// \t\t\tcontinue;\n\t// \t\t}\n\n\t// \t\tconst relationTableAlias = `${tableAlias}_${selectedRelationTsKey}`;\n\t// \t\tconst joinOn = and(\n\t// \t\t\t...normalizedRelation.fields.map((field, i) =>\n\t// \t\t\t\teq(\n\t// \t\t\t\t\taliasedTableColumn(normalizedRelation.references[i]!, relationTableAlias),\n\t// \t\t\t\t\taliasedTableColumn(field, tableAlias),\n\t// \t\t\t\t)\n\t// \t\t\t),\n\t// \t\t);\n\t// \t\tconst builtRelation = this.buildRelationalQueryWithoutPK({\n\t// \t\t\tfullSchema,\n\t// \t\t\tschema,\n\t// \t\t\ttableNamesMap,\n\t// \t\t\ttable: fullSchema[relationTableTsName] as PgTable,\n\t// \t\t\ttableConfig: schema[relationTableTsName]!,\n\t// \t\t\tqueryConfig: selectedRelationConfigValue,\n\t// \t\t\ttableAlias: relationTableAlias,\n\t// \t\t\tjoinOn,\n\t// \t\t\tnestedQueryRelation: relation,\n\t// \t\t});\n\t// \t\tconst field = sql`${sql.identifier(relationTableAlias)}.${sql.identifier('data')}`.as(selectedRelationTsKey);\n\t// \t\tjoins.push({\n\t// \t\t\ton: sql`true`,\n\t// \t\t\ttable: new Subquery(builtRelation.sql as SQL, {}, relationTableAlias),\n\t// \t\t\talias: relationTableAlias,\n\t// \t\t\tjoinType: 'left',\n\t// \t\t\tlateral: true,\n\t// \t\t});\n\t// \t\tselectedRelations.push({\n\t// \t\t\tdbKey: selectedRelationTsKey,\n\t// \t\t\ttsKey: selectedRelationTsKey,\n\t// \t\t\tfield,\n\t// \t\t\trelationTableTsKey: relationTableTsName,\n\t// \t\t\tisJson: true,\n\t// \t\t\tselection: builtRelation.selection,\n\t// \t\t});\n\t// \t}\n\n\t// \tconst oneRelations = initiallySelectedRelations.filter((r): r is typeof r & { relation: One } =>\n\t// \t\tis(r.relation, One)\n\t// \t);\n\n\t// \t// Process all One relations with PKs, because they can all be joined on the same level\n\t// \tfor (\n\t// \t\tconst {\n\t// \t\t\ttsKey: selectedRelationTsKey,\n\t// \t\t\tqueryConfig: selectedRelationConfigValue,\n\t// \t\t\trelation,\n\t// \t\t} of oneRelations\n\t// \t) {\n\t// \t\tconst normalizedRelation = normalizeRelation(schema, tableNamesMap, relation);\n\t// \t\tconst relationTableName = relation.referencedTable[Table.Symbol.Name];\n\t// \t\tconst relationTableTsName = tableNamesMap[relationTableName]!;\n\t// \t\tconst relationTableAlias = `${tableAlias}_${selectedRelationTsKey}`;\n\t// \t\tconst relationTable = schema[relationTableTsName]!;\n\n\t// \t\tif (relationTable.primaryKey.length === 0) {\n\t// \t\t\tcontinue;\n\t// \t\t}\n\n\t// \t\tconst joinOn = and(\n\t// \t\t\t...normalizedRelation.fields.map((field, i) =>\n\t// \t\t\t\teq(\n\t// \t\t\t\t\taliasedTableColumn(normalizedRelation.references[i]!, relationTableAlias),\n\t// \t\t\t\t\taliasedTableColumn(field, tableAlias),\n\t// \t\t\t\t)\n\t// \t\t\t),\n\t// \t\t);\n\t// \t\tconst builtRelation = this.buildRelationalQueryWithPK({\n\t// \t\t\tfullSchema,\n\t// \t\t\tschema,\n\t// \t\t\ttableNamesMap,\n\t// \t\t\ttable: fullSchema[relationTableTsName] as PgTable,\n\t// \t\t\ttableConfig: schema[relationTableTsName]!,\n\t// \t\t\tqueryConfig: selectedRelationConfigValue,\n\t// \t\t\ttableAlias: relationTableAlias,\n\t// \t\t\tjoinOn,\n\t// \t\t});\n\t// \t\tconst field = sql`case when ${sql.identifier(relationTableAlias)} is null then null else json_build_array(${\n\t// \t\t\tsql.join(\n\t// \t\t\t\tbuiltRelation.selection.map(({ field }) =>\n\t// \t\t\t\t\tis(field, SQL.Aliased)\n\t// \t\t\t\t\t\t? sql`${sql.identifier(relationTableAlias)}.${sql.identifier(field.fieldAlias)}`\n\t// \t\t\t\t\t\t: is(field, Column)\n\t// \t\t\t\t\t\t? aliasedTableColumn(field, relationTableAlias)\n\t// \t\t\t\t\t\t: field\n\t// \t\t\t\t),\n\t// \t\t\t\tsql`, `,\n\t// \t\t\t)\n\t// \t\t}) end`.as(selectedRelationTsKey);\n\t// \t\tconst isLateralJoin = is(builtRelation.sql, SQL);\n\t// \t\tjoins.push({\n\t// \t\t\ton: isLateralJoin ? sql`true` : joinOn,\n\t// \t\t\ttable: is(builtRelation.sql, SQL)\n\t// \t\t\t\t? new Subquery(builtRelation.sql, {}, relationTableAlias)\n\t// \t\t\t\t: aliasedTable(builtRelation.sql, relationTableAlias),\n\t// \t\t\talias: relationTableAlias,\n\t// \t\t\tjoinType: 'left',\n\t// \t\t\tlateral: is(builtRelation.sql, SQL),\n\t// \t\t});\n\t// \t\tselectedRelations.push({\n\t// \t\t\tdbKey: selectedRelationTsKey,\n\t// \t\t\ttsKey: selectedRelationTsKey,\n\t// \t\t\tfield,\n\t// \t\t\trelationTableTsKey: relationTableTsName,\n\t// \t\t\tisJson: true,\n\t// \t\t\tselection: builtRelation.selection,\n\t// \t\t});\n\t// \t}\n\n\t// \tlet distinct: PgSelectConfig['distinct'];\n\t// \tlet tableFrom: PgTable | Subquery = table;\n\n\t// \t// Process first Many relation - each one requires a nested subquery\n\t// \tconst manyRelation = manyRelations[0];\n\t// \tif (manyRelation) {\n\t// \t\tconst {\n\t// \t\t\ttsKey: selectedRelationTsKey,\n\t// \t\t\tqueryConfig: selectedRelationQueryConfig,\n\t// \t\t\trelation,\n\t// \t\t} = manyRelation;\n\n\t// \t\tdistinct = {\n\t// \t\t\ton: tableConfig.primaryKey.map((c) => aliasedTableColumn(c as PgColumn, tableAlias)),\n\t// \t\t};\n\n\t// \t\tconst normalizedRelation = normalizeRelation(schema, tableNamesMap, relation);\n\t// \t\tconst relationTableName = relation.referencedTable[Table.Symbol.Name];\n\t// \t\tconst relationTableTsName = tableNamesMap[relationTableName]!;\n\t// \t\tconst relationTableAlias = `${tableAlias}_${selectedRelationTsKey}`;\n\t// \t\tconst joinOn = and(\n\t// \t\t\t...normalizedRelation.fields.map((field, i) =>\n\t// \t\t\t\teq(\n\t// \t\t\t\t\taliasedTableColumn(normalizedRelation.references[i]!, relationTableAlias),\n\t// \t\t\t\t\taliasedTableColumn(field, tableAlias),\n\t// \t\t\t\t)\n\t// \t\t\t),\n\t// \t\t);\n\n\t// \t\tconst builtRelationJoin = this.buildRelationalQueryWithPK({\n\t// \t\t\tfullSchema,\n\t// \t\t\tschema,\n\t// \t\t\ttableNamesMap,\n\t// \t\t\ttable: fullSchema[relationTableTsName] as PgTable,\n\t// \t\t\ttableConfig: schema[relationTableTsName]!,\n\t// \t\t\tqueryConfig: selectedRelationQueryConfig,\n\t// \t\t\ttableAlias: relationTableAlias,\n\t// \t\t\tjoinOn,\n\t// \t\t});\n\n\t// \t\tconst builtRelationSelectionField = sql`case when ${\n\t// \t\t\tsql.identifier(relationTableAlias)\n\t// \t\t} is null then '[]' else json_agg(json_build_array(${\n\t// \t\t\tsql.join(\n\t// \t\t\t\tbuiltRelationJoin.selection.map(({ field }) =>\n\t// \t\t\t\t\tis(field, SQL.Aliased)\n\t// \t\t\t\t\t\t? sql`${sql.identifier(relationTableAlias)}.${sql.identifier(field.fieldAlias)}`\n\t// \t\t\t\t\t\t: is(field, Column)\n\t// \t\t\t\t\t\t? aliasedTableColumn(field, relationTableAlias)\n\t// \t\t\t\t\t\t: field\n\t// \t\t\t\t),\n\t// \t\t\t\tsql`, `,\n\t// \t\t\t)\n\t// \t\t})) over (partition by ${sql.join(distinct.on, sql`, `)}) end`.as(selectedRelationTsKey);\n\t// \t\tconst isLateralJoin = is(builtRelationJoin.sql, SQL);\n\t// \t\tjoins.push({\n\t// \t\t\ton: isLateralJoin ? sql`true` : joinOn,\n\t// \t\t\ttable: isLateralJoin\n\t// \t\t\t\t? new Subquery(builtRelationJoin.sql as SQL, {}, relationTableAlias)\n\t// \t\t\t\t: aliasedTable(builtRelationJoin.sql as PgTable, relationTableAlias),\n\t// \t\t\talias: relationTableAlias,\n\t// \t\t\tjoinType: 'left',\n\t// \t\t\tlateral: isLateralJoin,\n\t// \t\t});\n\n\t// \t\t// Build the \"from\" subquery with the remaining Many relations\n\t// \t\tconst builtTableFrom = this.buildRelationalQueryWithPK({\n\t// \t\t\tfullSchema,\n\t// \t\t\tschema,\n\t// \t\t\ttableNamesMap,\n\t// \t\t\ttable,\n\t// \t\t\ttableConfig,\n\t// \t\t\tqueryConfig: {\n\t// \t\t\t\t...config,\n\t// \t\t\t\twhere: undefined,\n\t// \t\t\t\torderBy: undefined,\n\t// \t\t\t\tlimit: undefined,\n\t// \t\t\t\toffset: undefined,\n\t// \t\t\t\twith: manyRelations.slice(1).reduce<NonNullable<typeof config['with']>>(\n\t// \t\t\t\t\t(result, { tsKey, queryConfig: configValue }) => {\n\t// \t\t\t\t\t\tresult[tsKey] = configValue;\n\t// \t\t\t\t\t\treturn result;\n\t// \t\t\t\t\t},\n\t// \t\t\t\t\t{},\n\t// \t\t\t\t),\n\t// \t\t\t},\n\t// \t\t\ttableAlias,\n\t// \t\t});\n\n\t// \t\tselectedRelations.push({\n\t// \t\t\tdbKey: selectedRelationTsKey,\n\t// \t\t\ttsKey: selectedRelationTsKey,\n\t// \t\t\tfield: builtRelationSelectionField,\n\t// \t\t\trelationTableTsKey: relationTableTsName,\n\t// \t\t\tisJson: true,\n\t// \t\t\tselection: builtRelationJoin.selection,\n\t// \t\t});\n\n\t// \t\t// selection = builtTableFrom.selection.map((item) =>\n\t// \t\t// \tis(item.field, SQL.Aliased)\n\t// \t\t// \t\t? { ...item, field: sql`${sql.identifier(tableAlias)}.${sql.identifier(item.field.fieldAlias)}` }\n\t// \t\t// \t\t: item\n\t// \t\t// );\n\t// \t\t// selectionForBuild = [{\n\t// \t\t// \tdbKey: '*',\n\t// \t\t// \ttsKey: '*',\n\t// \t\t// \tfield: sql`${sql.identifier(tableAlias)}.*`,\n\t// \t\t// \tselection: [],\n\t// \t\t// \tisJson: false,\n\t// \t\t// \trelationTableTsKey: undefined,\n\t// \t\t// }];\n\t// \t\t// const newSelectionItem: (typeof selection)[number] = {\n\t// \t\t// \tdbKey: selectedRelationTsKey,\n\t// \t\t// \ttsKey: selectedRelationTsKey,\n\t// \t\t// \tfield,\n\t// \t\t// \trelationTableTsKey: relationTableTsName,\n\t// \t\t// \tisJson: true,\n\t// \t\t// \tselection: builtRelationJoin.selection,\n\t// \t\t// };\n\t// \t\t// selection.push(newSelectionItem);\n\t// \t\t// selectionForBuild.push(newSelectionItem);\n\n\t// \t\ttableFrom = is(builtTableFrom.sql, PgTable)\n\t// \t\t\t? builtTableFrom.sql\n\t// \t\t\t: new Subquery(builtTableFrom.sql, {}, tableAlias);\n\t// \t}\n\n\t// \tif (selectedColumns.length === 0 && selectedRelations.length === 0 && selectedExtras.length === 0) {\n\t// \t\tthrow new DrizzleError(`No fields selected for table \"${tableConfig.tsName}\" (\"${tableAlias}\")`);\n\t// \t}\n\n\t// \tlet selection: BuildRelationalQueryResult<PgTable, PgColumn>['selection'];\n\n\t// \tfunction prepareSelectedColumns() {\n\t// \t\treturn selectedColumns.map((key) => ({\n\t// \t\t\tdbKey: tableConfig.columns[key]!.name,\n\t// \t\t\ttsKey: key,\n\t// \t\t\tfield: tableConfig.columns[key] as PgColumn,\n\t// \t\t\trelationTableTsKey: undefined,\n\t// \t\t\tisJson: false,\n\t// \t\t\tselection: [],\n\t// \t\t}));\n\t// \t}\n\n\t// \tfunction prepareSelectedExtras() {\n\t// \t\treturn selectedExtras.map((item) => ({\n\t// \t\t\tdbKey: item.value.fieldAlias,\n\t// \t\t\ttsKey: item.tsKey,\n\t// \t\t\tfield: item.value,\n\t// \t\t\trelationTableTsKey: undefined,\n\t// \t\t\tisJson: false,\n\t// \t\t\tselection: [],\n\t// \t\t}));\n\t// \t}\n\n\t// \tif (isRoot) {\n\t// \t\tselection = [\n\t// \t\t\t...prepareSelectedColumns(),\n\t// \t\t\t...prepareSelectedExtras(),\n\t// \t\t];\n\t// \t}\n\n\t// \tif (hasUserDefinedWhere || orderBy.length > 0) {\n\t// \t\ttableFrom = new Subquery(\n\t// \t\t\tthis.buildSelectQuery({\n\t// \t\t\t\ttable: is(tableFrom, PgTable) ? aliasedTable(tableFrom, tableAlias) : tableFrom,\n\t// \t\t\t\tfields: {},\n\t// \t\t\t\tfieldsFlat: selectionForBuild.map(({ field }) => ({\n\t// \t\t\t\t\tpath: [],\n\t// \t\t\t\t\tfield: is(field, Column) ? aliasedTableColumn(field, tableAlias) : field,\n\t// \t\t\t\t})),\n\t// \t\t\t\tjoins,\n\t// \t\t\t\tdistinct,\n\t// \t\t\t}),\n\t// \t\t\t{},\n\t// \t\t\ttableAlias,\n\t// \t\t);\n\t// \t\tselectionForBuild = selection.map((item) =>\n\t// \t\t\tis(item.field, SQL.Aliased)\n\t// \t\t\t\t? { ...item, field: sql`${sql.identifier(tableAlias)}.${sql.identifier(item.field.fieldAlias)}` }\n\t// \t\t\t\t: item\n\t// \t\t);\n\t// \t\tjoins = [];\n\t// \t\tdistinct = undefined;\n\t// \t}\n\n\t// \tconst result = this.buildSelectQuery({\n\t// \t\ttable: is(tableFrom, PgTable) ? aliasedTable(tableFrom, tableAlias) : tableFrom,\n\t// \t\tfields: {},\n\t// \t\tfieldsFlat: selectionForBuild.map(({ field }) => ({\n\t// \t\t\tpath: [],\n\t// \t\t\tfield: is(field, Column) ? aliasedTableColumn(field, tableAlias) : field,\n\t// \t\t})),\n\t// \t\twhere,\n\t// \t\tlimit,\n\t// \t\toffset,\n\t// \t\tjoins,\n\t// \t\torderBy,\n\t// \t\tdistinct,\n\t// \t});\n\n\t// \treturn {\n\t// \t\ttableTsKey: tableConfig.tsName,\n\t// \t\tsql: result,\n\t// \t\tselection,\n\t// \t};\n\t// }\n\n\tbuildRelationalQueryWithoutPK({\n\t\tfullSchema,\n\t\tschema,\n\t\ttableNamesMap,\n\t\ttable,\n\t\ttableConfig,\n\t\tqueryConfig: config,\n\t\ttableAlias,\n\t\tnestedQueryRelation,\n\t\tjoinOn,\n\t}: {\n\t\tfullSchema: Record<string, unknown>;\n\t\tschema: TablesRelationalConfig;\n\t\ttableNamesMap: Record<string, string>;\n\t\ttable: PgTable;\n\t\ttableConfig: TableRelationalConfig;\n\t\tqueryConfig: true | DBQueryConfig<'many', true>;\n\t\ttableAlias: string;\n\t\tnestedQueryRelation?: Relation;\n\t\tjoinOn?: SQL;\n\t}): BuildRelationalQueryResult<PgTable, PgColumn> {\n\t\tlet selection: BuildRelationalQueryResult<PgTable, PgColumn>['selection'] = [];\n\t\tlet limit, offset, orderBy: NonNullable<PgSelectConfig['orderBy']> = [], where;\n\t\tconst joins: PgSelectJoinConfig[] = [];\n\n\t\tif (config === true) {\n\t\t\tconst selectionEntries = Object.entries(tableConfig.columns);\n\t\t\tselection = selectionEntries.map((\n\t\t\t\t[key, value],\n\t\t\t) => ({\n\t\t\t\tdbKey: value.name,\n\t\t\t\ttsKey: key,\n\t\t\t\tfield: aliasedTableColumn(value as PgColumn, tableAlias),\n\t\t\t\trelationTableTsKey: undefined,\n\t\t\t\tisJson: false,\n\t\t\t\tselection: [],\n\t\t\t}));\n\t\t} else {\n\t\t\tconst aliasedColumns = Object.fromEntries(\n\t\t\t\tObject.entries(tableConfig.columns).map((\n\t\t\t\t\t[key, value],\n\t\t\t\t) => [key, aliasedTableColumn(value, tableAlias)]),\n\t\t\t);\n\n\t\t\tif (config.where) {\n\t\t\t\tconst whereSql = typeof config.where === 'function'\n\t\t\t\t\t? config.where(aliasedColumns, getOperators())\n\t\t\t\t\t: config.where;\n\t\t\t\twhere = whereSql && mapColumnsInSQLToAlias(whereSql, tableAlias);\n\t\t\t}\n\n\t\t\tconst fieldsSelection: { tsKey: string; value: PgColumn | SQL.Aliased }[] = [];\n\t\t\tlet selectedColumns: string[] = [];\n\n\t\t\t// Figure out which columns to select\n\t\t\tif (config.columns) {\n\t\t\t\tlet isIncludeMode = false;\n\n\t\t\t\tfor (const [field, value] of Object.entries(config.columns)) {\n\t\t\t\t\tif (value === undefined) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (field in tableConfig.columns) {\n\t\t\t\t\t\tif (!isIncludeMode && value === true) {\n\t\t\t\t\t\t\tisIncludeMode = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tselectedColumns.push(field);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (selectedColumns.length > 0) {\n\t\t\t\t\tselectedColumns = isIncludeMode\n\t\t\t\t\t\t? selectedColumns.filter((c) => config.columns?.[c] === true)\n\t\t\t\t\t\t: Object.keys(tableConfig.columns).filter((key) => !selectedColumns.includes(key));\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// Select all columns if selection is not specified\n\t\t\t\tselectedColumns = Object.keys(tableConfig.columns);\n\t\t\t}\n\n\t\t\tfor (const field of selectedColumns) {\n\t\t\t\tconst column = tableConfig.columns[field]! as PgColumn;\n\t\t\t\tfieldsSelection.push({ tsKey: field, value: column });\n\t\t\t}\n\n\t\t\tlet selectedRelations: {\n\t\t\t\ttsKey: string;\n\t\t\t\tqueryConfig: true | DBQueryConfig<'many', false>;\n\t\t\t\trelation: Relation;\n\t\t\t}[] = [];\n\n\t\t\t// Figure out which relations to select\n\t\t\tif (config.with) {\n\t\t\t\tselectedRelations = Object.entries(config.with)\n\t\t\t\t\t.filter((entry): entry is [typeof entry[0], NonNullable<typeof entry[1]>] => !!entry[1])\n\t\t\t\t\t.map(([tsKey, queryConfig]) => ({ tsKey, queryConfig, relation: tableConfig.relations[tsKey]! }));\n\t\t\t}\n\n\t\t\tlet extras;\n\n\t\t\t// Figure out which extras to select\n\t\t\tif (config.extras) {\n\t\t\t\textras = typeof config.extras === 'function'\n\t\t\t\t\t? config.extras(aliasedColumns, { sql })\n\t\t\t\t\t: config.extras;\n\t\t\t\tfor (const [tsKey, value] of Object.entries(extras)) {\n\t\t\t\t\tfieldsSelection.push({\n\t\t\t\t\t\ttsKey,\n\t\t\t\t\t\tvalue: mapColumnsInAliasedSQLToAlias(value, tableAlias),\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Transform `fieldsSelection` into `selection`\n\t\t\t// `fieldsSelection` shouldn't be used after this point\n\t\t\tfor (const { tsKey, value } of fieldsSelection) {\n\t\t\t\tselection.push({\n\t\t\t\t\tdbKey: is(value, SQL.Aliased) ? value.fieldAlias : tableConfig.columns[tsKey]!.name,\n\t\t\t\t\ttsKey,\n\t\t\t\t\tfield: is(value, Column) ? aliasedTableColumn(value, tableAlias) : value,\n\t\t\t\t\trelationTableTsKey: undefined,\n\t\t\t\t\tisJson: false,\n\t\t\t\t\tselection: [],\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tlet orderByOrig = typeof config.orderBy === 'function'\n\t\t\t\t? config.orderBy(aliasedColumns, getOrderByOperators())\n\t\t\t\t: config.orderBy ?? [];\n\t\t\tif (!Array.isArray(orderByOrig)) {\n\t\t\t\torderByOrig = [orderByOrig];\n\t\t\t}\n\t\t\torderBy = orderByOrig.map((orderByValue) => {\n\t\t\t\tif (is(orderByValue, Column)) {\n\t\t\t\t\treturn aliasedTableColumn(orderByValue, tableAlias) as PgColumn;\n\t\t\t\t}\n\t\t\t\treturn mapColumnsInSQLToAlias(orderByValue, tableAlias);\n\t\t\t});\n\n\t\t\tlimit = config.limit;\n\t\t\toffset = config.offset;\n\n\t\t\t// Process all relations\n\t\t\tfor (\n\t\t\t\tconst {\n\t\t\t\t\ttsKey: selectedRelationTsKey,\n\t\t\t\t\tqueryConfig: selectedRelationConfigValue,\n\t\t\t\t\trelation,\n\t\t\t\t} of selectedRelations\n\t\t\t) {\n\t\t\t\tconst normalizedRelation = normalizeRelation(schema, tableNamesMap, relation);\n\t\t\t\tconst relationTableName = getTableUniqueName(relation.referencedTable);\n\t\t\t\tconst relationTableTsName = tableNamesMap[relationTableName]!;\n\t\t\t\tconst relationTableAlias = `${tableAlias}_${selectedRelationTsKey}`;\n\t\t\t\tconst joinOn = and(\n\t\t\t\t\t...normalizedRelation.fields.map((field, i) =>\n\t\t\t\t\t\teq(\n\t\t\t\t\t\t\taliasedTableColumn(normalizedRelation.references[i]!, relationTableAlias),\n\t\t\t\t\t\t\taliasedTableColumn(field, tableAlias),\n\t\t\t\t\t\t)\n\t\t\t\t\t),\n\t\t\t\t);\n\t\t\t\tconst builtRelation = this.buildRelationalQueryWithoutPK({\n\t\t\t\t\tfullSchema,\n\t\t\t\t\tschema,\n\t\t\t\t\ttableNamesMap,\n\t\t\t\t\ttable: fullSchema[relationTableTsName] as PgTable,\n\t\t\t\t\ttableConfig: schema[relationTableTsName]!,\n\t\t\t\t\tqueryConfig: is(relation, One)\n\t\t\t\t\t\t? (selectedRelationConfigValue === true\n\t\t\t\t\t\t\t? { limit: 1 }\n\t\t\t\t\t\t\t: { ...selectedRelationConfigValue, limit: 1 })\n\t\t\t\t\t\t: selectedRelationConfigValue,\n\t\t\t\t\ttableAlias: relationTableAlias,\n\t\t\t\t\tjoinOn,\n\t\t\t\t\tnestedQueryRelation: relation,\n\t\t\t\t});\n\t\t\t\tconst field = sql`${sql.identifier(relationTableAlias)}.${sql.identifier('data')}`.as(selectedRelationTsKey);\n\t\t\t\tjoins.push({\n\t\t\t\t\ton: sql`true`,\n\t\t\t\t\ttable: new Subquery(builtRelation.sql as SQL, {}, relationTableAlias),\n\t\t\t\t\talias: relationTableAlias,\n\t\t\t\t\tjoinType: 'left',\n\t\t\t\t\tlateral: true,\n\t\t\t\t});\n\t\t\t\tselection.push({\n\t\t\t\t\tdbKey: selectedRelationTsKey,\n\t\t\t\t\ttsKey: selectedRelationTsKey,\n\t\t\t\t\tfield,\n\t\t\t\t\trelationTableTsKey: relationTableTsName,\n\t\t\t\t\tisJson: true,\n\t\t\t\t\tselection: builtRelation.selection,\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\tif (selection.length === 0) {\n\t\t\tthrow new DrizzleError({ message: `No fields selected for table \"${tableConfig.tsName}\" (\"${tableAlias}\")` });\n\t\t}\n\n\t\tlet result;\n\n\t\twhere = and(joinOn, where);\n\n\t\tif (nestedQueryRelation) {\n\t\t\tlet field = sql`json_build_array(${\n\t\t\t\tsql.join(\n\t\t\t\t\tselection.map(({ field, tsKey, isJson }) =>\n\t\t\t\t\t\tisJson\n\t\t\t\t\t\t\t? sql`${sql.identifier(`${tableAlias}_${tsKey}`)}.${sql.identifier('data')}`\n\t\t\t\t\t\t\t: is(field, SQL.Aliased)\n\t\t\t\t\t\t\t? field.sql\n\t\t\t\t\t\t\t: field\n\t\t\t\t\t),\n\t\t\t\t\tsql`, `,\n\t\t\t\t)\n\t\t\t})`;\n\t\t\tif (is(nestedQueryRelation, Many)) {\n\t\t\t\tfield = sql`coalesce(json_agg(${field}${\n\t\t\t\t\torderBy.length > 0 ? sql` order by ${sql.join(orderBy, sql`, `)}` : undefined\n\t\t\t\t}), '[]'::json)`;\n\t\t\t\t// orderBy = [];\n\t\t\t}\n\t\t\tconst nestedSelection = [{\n\t\t\t\tdbKey: 'data',\n\t\t\t\ttsKey: 'data',\n\t\t\t\tfield: field.as('data'),\n\t\t\t\tisJson: true,\n\t\t\t\trelationTableTsKey: tableConfig.tsName,\n\t\t\t\tselection,\n\t\t\t}];\n\n\t\t\tconst needsSubquery = limit !== undefined || offset !== undefined || orderBy.length > 0;\n\n\t\t\tif (needsSubquery) {\n\t\t\t\tresult = this.buildSelectQuery({\n\t\t\t\t\ttable: aliasedTable(table, tableAlias),\n\t\t\t\t\tfields: {},\n\t\t\t\t\tfieldsFlat: [{\n\t\t\t\t\t\tpath: [],\n\t\t\t\t\t\tfield: sql.raw('*'),\n\t\t\t\t\t}],\n\t\t\t\t\twhere,\n\t\t\t\t\tlimit,\n\t\t\t\t\toffset,\n\t\t\t\t\torderBy,\n\t\t\t\t\tsetOperators: [],\n\t\t\t\t});\n\n\t\t\t\twhere = undefined;\n\t\t\t\tlimit = undefined;\n\t\t\t\toffset = undefined;\n\t\t\t\torderBy = [];\n\t\t\t} else {\n\t\t\t\tresult = aliasedTable(table, tableAlias);\n\t\t\t}\n\n\t\t\tresult = this.buildSelectQuery({\n\t\t\t\ttable: is(result, PgTable) ? result : new Subquery(result, {}, tableAlias),\n\t\t\t\tfields: {},\n\t\t\t\tfieldsFlat: nestedSelection.map(({ field }) => ({\n\t\t\t\t\tpath: [],\n\t\t\t\t\tfield: is(field, Column) ? aliasedTableColumn(field, tableAlias) : field,\n\t\t\t\t})),\n\t\t\t\tjoins,\n\t\t\t\twhere,\n\t\t\t\tlimit,\n\t\t\t\toffset,\n\t\t\t\torderBy,\n\t\t\t\tsetOperators: [],\n\t\t\t});\n\t\t} else {\n\t\t\tresult = this.buildSelectQuery({\n\t\t\t\ttable: aliasedTable(table, tableAlias),\n\t\t\t\tfields: {},\n\t\t\t\tfieldsFlat: selection.map(({ field }) => ({\n\t\t\t\t\tpath: [],\n\t\t\t\t\tfield: is(field, Column) ? aliasedTableColumn(field, tableAlias) : field,\n\t\t\t\t})),\n\t\t\t\tjoins,\n\t\t\t\twhere,\n\t\t\t\tlimit,\n\t\t\t\toffset,\n\t\t\t\torderBy,\n\t\t\t\tsetOperators: [],\n\t\t\t});\n\t\t}\n\n\t\treturn {\n\t\t\ttableTsKey: tableConfig.tsName,\n\t\t\tsql: result,\n\t\t\tselection,\n\t\t};\n\t}\n}\n", "import type { Column } from '~/column.ts';\nimport { entityKind } from './entity.ts';\nimport { Table } from './table.ts';\nimport type { Casing } from './utils.ts';\n\nexport function toSnakeCase(input: string) {\n\tconst words = input\n\t\t.replace(/['\\u2019]/g, '')\n\t\t.match(/[\\da-z]+|[A-Z]+(?![a-z])|[A-Z][\\da-z]+/g) ?? [];\n\n\treturn words.map((word) => word.toLowerCase()).join('_');\n}\n\nexport function toCamelCase(input: string) {\n\tconst words = input\n\t\t.replace(/['\\u2019]/g, '')\n\t\t.match(/[\\da-z]+|[A-Z]+(?![a-z])|[A-Z][\\da-z]+/g) ?? [];\n\n\treturn words.reduce((acc, word, i) => {\n\t\tconst formattedWord = i === 0 ? word.toLowerCase() : `${word[0]!.toUpperCase()}${word.slice(1)}`;\n\t\treturn acc + formattedWord;\n\t}, '');\n}\n\nfunction noopCase(input: string) {\n\treturn input;\n}\n\nexport class CasingCache {\n\tstatic readonly [entityKind]: string = 'CasingCache';\n\n\t/** @internal */\n\tcache: Record<string, string> = {};\n\tprivate cachedTables: Record<string, true> = {};\n\tprivate convert: (input: string) => string;\n\n\tconstructor(casing?: Casing) {\n\t\tthis.convert = casing === 'snake_case'\n\t\t\t? toSnakeCase\n\t\t\t: casing === 'camelCase'\n\t\t\t? toCamelCase\n\t\t\t: noopCase;\n\t}\n\n\tgetColumnCasing(column: Column): string {\n\t\tif (!column.keyAsName) return column.name;\n\n\t\tconst schema = column.table[Table.Symbol.Schema] ?? 'public';\n\t\tconst tableName = column.table[Table.Symbol.OriginalName];\n\t\tconst key = `${schema}.${tableName}.${column.name}`;\n\n\t\tif (!this.cache[key]) {\n\t\t\tthis.cacheTable(column.table);\n\t\t}\n\t\treturn this.cache[key]!;\n\t}\n\n\tprivate cacheTable(table: Table) {\n\t\tconst schema = table[Table.Symbol.Schema] ?? 'public';\n\t\tconst tableName = table[Table.Symbol.OriginalName];\n\t\tconst tableKey = `${schema}.${tableName}`;\n\n\t\tif (!this.cachedTables[tableKey]) {\n\t\t\tfor (const column of Object.values(table[Table.Symbol.Columns])) {\n\t\t\t\tconst columnKey = `${tableKey}.${column.name}`;\n\t\t\t\tthis.cache[columnKey] = this.convert(column.name);\n\t\t\t}\n\t\t\tthis.cachedTables[tableKey] = true;\n\t\t}\n\t}\n\n\tclearCache() {\n\t\tthis.cache = {};\n\t\tthis.cachedTables = {};\n\t}\n}\n", "import { entityKind } from '~/entity.ts';\n\nexport class DrizzleError extends Error {\n\tstatic readonly [entityKind]: string = 'DrizzleError';\n\n\tconstructor({ message, cause }: { message?: string; cause?: unknown }) {\n\t\tsuper(message);\n\t\tthis.name = 'DrizzleError';\n\t\tthis.cause = cause;\n\t}\n}\n\nexport class DrizzleQueryError extends Error {\n\tconstructor(\n\t\tpublic query: string,\n\t\tpublic params: any[],\n\t\tpublic override cause?: Error,\n\t) {\n\t\tsuper(`Failed query: ${query}\\nparams: ${params}`);\n\t\tError.captureStackTrace(this, DrizzleQueryError);\n\n\t\t// ES2022+: preserves original error on `.cause`\n\t\tif (cause) (this as any).cause = cause;\n\t}\n}\n\nexport class TransactionRollbackError extends DrizzleError {\n\tstatic override readonly [entityKind]: string = 'TransactionRollbackError';\n\n\tconstructor() {\n\t\tsuper({ message: 'Rollback' });\n\t}\n}\n", "import { type AnyTable, getTableUniqueName, type InferModelFromColumns, Table } from '~/table.ts';\nimport { type AnyColumn, Column } from './column.ts';\nimport { entityKind, is } from './entity.ts';\nimport { PrimaryKeyBuilder } from './pg-core/primary-keys.ts';\nimport {\n\tand,\n\tasc,\n\tbetween,\n\tdesc,\n\teq,\n\texists,\n\tgt,\n\tgte,\n\tilike,\n\tinArray,\n\tisNotNull,\n\tisNull,\n\tlike,\n\tlt,\n\tlte,\n\tne,\n\tnot,\n\tnotBetween,\n\tnotExists,\n\tnotIlike,\n\tnotInArray,\n\tnotLike,\n\tor,\n} from './sql/expressions/index.ts';\nimport { type Placeholder, SQL, sql } from './sql/sql.ts';\nimport type { Assume, ColumnsWithTable, Equal, Simplify, ValueOrArray } from './utils.ts';\n\nexport abstract class Relation<TTableName extends string = string> {\n\tstatic readonly [entityKind]: string = 'Relation';\n\n\tdeclare readonly $brand: 'Relation';\n\treadonly referencedTableName: TTableName;\n\tfieldName!: string;\n\n\tconstructor(\n\t\treadonly sourceTable: Table,\n\t\treadonly referencedTable: AnyTable<{ name: TTableName }>,\n\t\treadonly relationName: string | undefined,\n\t) {\n\t\tthis.referencedTableName = referencedTable[Table.Symbol.Name] as TTableName;\n\t}\n\n\tabstract withFieldName(fieldName: string): Relation<TTableName>;\n}\n\nexport class Relations<\n\tTTableName extends string = string,\n\tTConfig extends Record<string, Relation> = Record<string, Relation>,\n> {\n\tstatic readonly [entityKind]: string = 'Relations';\n\n\tdeclare readonly $brand: 'Relations';\n\n\tconstructor(\n\t\treadonly table: AnyTable<{ name: TTableName }>,\n\t\treadonly config: (helpers: TableRelationsHelpers<TTableName>) => TConfig,\n\t) {}\n}\n\nexport class One<\n\tTTableName extends string = string,\n\tTIsNullable extends boolean = boolean,\n> extends Relation<TTableName> {\n\tstatic override readonly [entityKind]: string = 'One';\n\n\tdeclare protected $relationBrand: 'One';\n\n\tconstructor(\n\t\tsourceTable: Table,\n\t\treferencedTable: AnyTable<{ name: TTableName }>,\n\t\treadonly config:\n\t\t\t| RelationConfig<\n\t\t\t\tTTableName,\n\t\t\t\tstring,\n\t\t\t\tAnyColumn<{ tableName: TTableName }>[]\n\t\t\t>\n\t\t\t| undefined,\n\t\treadonly isNullable: TIsNullable,\n\t) {\n\t\tsuper(sourceTable, referencedTable, config?.relationName);\n\t}\n\n\twithFieldName(fieldName: string): One<TTableName> {\n\t\tconst relation = new One(\n\t\t\tthis.sourceTable,\n\t\t\tthis.referencedTable,\n\t\t\tthis.config,\n\t\t\tthis.isNullable,\n\t\t);\n\t\trelation.fieldName = fieldName;\n\t\treturn relation;\n\t}\n}\n\nexport class Many<TTableName extends string> extends Relation<TTableName> {\n\tstatic override readonly [entityKind]: string = 'Many';\n\n\tdeclare protected $relationBrand: 'Many';\n\n\tconstructor(\n\t\tsourceTable: Table,\n\t\treferencedTable: AnyTable<{ name: TTableName }>,\n\t\treadonly config: { relationName: string } | undefined,\n\t) {\n\t\tsuper(sourceTable, referencedTable, config?.relationName);\n\t}\n\n\twithFieldName(fieldName: string): Many<TTableName> {\n\t\tconst relation = new Many(\n\t\t\tthis.sourceTable,\n\t\t\tthis.referencedTable,\n\t\t\tthis.config,\n\t\t);\n\t\trelation.fieldName = fieldName;\n\t\treturn relation;\n\t}\n}\n\nexport type TableRelationsKeysOnly<\n\tTSchema extends Record<string, unknown>,\n\tTTableName extends string,\n\tK extends keyof TSchema,\n> = TSchema[K] extends Relations<TTableName> ? K : never;\n\nexport type ExtractTableRelationsFromSchema<\n\tTSchema extends Record<string, unknown>,\n\tTTableName extends string,\n> = ExtractObjectValues<\n\t{\n\t\t[\n\t\t\tK in keyof TSchema as TableRelationsKeysOnly<\n\t\t\t\tTSchema,\n\t\t\t\tTTableName,\n\t\t\t\tK\n\t\t\t>\n\t\t]: TSchema[K] extends Relations<TTableName, infer TConfig> ? TConfig : never;\n\t}\n>;\n\nexport type ExtractObjectValues<T> = T[keyof T];\n\nexport type ExtractRelationsFromTableExtraConfigSchema<\n\tTConfig extends unknown[],\n> = ExtractObjectValues<\n\t{\n\t\t[\n\t\t\tK in keyof TConfig as TConfig[K] extends Relations<any> ? K\n\t\t\t\t: never\n\t\t]: TConfig[K] extends Relations<infer TRelationConfig> ? TRelationConfig\n\t\t\t: never;\n\t}\n>;\n\nexport function getOperators() {\n\treturn {\n\t\tand,\n\t\tbetween,\n\t\teq,\n\t\texists,\n\t\tgt,\n\t\tgte,\n\t\tilike,\n\t\tinArray,\n\t\tisNull,\n\t\tisNotNull,\n\t\tlike,\n\t\tlt,\n\t\tlte,\n\t\tne,\n\t\tnot,\n\t\tnotBetween,\n\t\tnotExists,\n\t\tnotLike,\n\t\tnotIlike,\n\t\tnotInArray,\n\t\tor,\n\t\tsql,\n\t};\n}\n\nexport type Operators = ReturnType<typeof getOperators>;\n\nexport function getOrderByOperators() {\n\treturn {\n\t\tsql,\n\t\tasc,\n\t\tdesc,\n\t};\n}\n\nexport type OrderByOperators = ReturnType<typeof getOrderByOperators>;\n\nexport type FindTableByDBName<\n\tTSchema extends TablesRelationalConfig,\n\tTTableName extends string,\n> = ExtractObjectValues<\n\t{\n\t\t[\n\t\t\tK in keyof TSchema as TSchema[K]['dbName'] extends TTableName ? K\n\t\t\t\t: never\n\t\t]: TSchema[K];\n\t}\n>;\n\nexport type DBQueryConfig<\n\tTRelationType extends 'one' | 'many' = 'one' | 'many',\n\tTIsRoot extends boolean = boolean,\n\tTSchema extends TablesRelationalConfig = TablesRelationalConfig,\n\tTTableConfig extends TableRelationalConfig = TableRelationalConfig,\n> =\n\t& {\n\t\tcolumns?:\n\t\t\t| {\n\t\t\t\t[K in keyof TTableConfig['columns']]?: boolean;\n\t\t\t}\n\t\t\t| undefined;\n\t\twith?:\n\t\t\t| {\n\t\t\t\t[K in keyof TTableConfig['relations']]?:\n\t\t\t\t\t| true\n\t\t\t\t\t| DBQueryConfig<\n\t\t\t\t\t\tTTableConfig['relations'][K] extends One ? 'one' : 'many',\n\t\t\t\t\t\tfalse,\n\t\t\t\t\t\tTSchema,\n\t\t\t\t\t\tFindTableByDBName<\n\t\t\t\t\t\t\tTSchema,\n\t\t\t\t\t\t\tTTableConfig['relations'][K]['referencedTableName']\n\t\t\t\t\t\t>\n\t\t\t\t\t>\n\t\t\t\t\t| undefined;\n\t\t\t}\n\t\t\t| undefined;\n\t\textras?:\n\t\t\t| Record<string, SQL.Aliased>\n\t\t\t| ((\n\t\t\t\tfields: Simplify<\n\t\t\t\t\t[TTableConfig['columns']] extends [never] ? {}\n\t\t\t\t\t\t: TTableConfig['columns']\n\t\t\t\t>,\n\t\t\t\toperators: { sql: Operators['sql'] },\n\t\t\t) => Record<string, SQL.Aliased>)\n\t\t\t| undefined;\n\t}\n\t& (TRelationType extends 'many' ?\n\t\t\t& {\n\t\t\t\twhere?:\n\t\t\t\t\t| SQL\n\t\t\t\t\t| undefined\n\t\t\t\t\t| ((\n\t\t\t\t\t\tfields: Simplify<\n\t\t\t\t\t\t\t[TTableConfig['columns']] extends [never] ? {}\n\t\t\t\t\t\t\t\t: TTableConfig['columns']\n\t\t\t\t\t\t>,\n\t\t\t\t\t\toperators: Operators,\n\t\t\t\t\t) => SQL | undefined);\n\t\t\t\torderBy?:\n\t\t\t\t\t| ValueOrArray<AnyColumn | SQL>\n\t\t\t\t\t| ((\n\t\t\t\t\t\tfields: Simplify<\n\t\t\t\t\t\t\t[TTableConfig['columns']] extends [never] ? {}\n\t\t\t\t\t\t\t\t: TTableConfig['columns']\n\t\t\t\t\t\t>,\n\t\t\t\t\t\toperators: OrderByOperators,\n\t\t\t\t\t) => ValueOrArray<AnyColumn | SQL>)\n\t\t\t\t\t| undefined;\n\t\t\t\tlimit?: number | Placeholder | undefined;\n\t\t\t}\n\t\t\t& (TIsRoot extends true ? {\n\t\t\t\t\toffset?: number | Placeholder | undefined;\n\t\t\t\t}\n\t\t\t\t: {})\n\t\t: {});\n\nexport interface TableRelationalConfig {\n\ttsName: string;\n\tdbName: string;\n\tcolumns: Record<string, Column>;\n\trelations: Record<string, Relation>;\n\tprimaryKey: AnyColumn[];\n\tschema?: string;\n}\n\nexport type TablesRelationalConfig = Record<string, TableRelationalConfig>;\n\nexport interface RelationalSchemaConfig<\n\tTSchema extends TablesRelationalConfig,\n> {\n\tfullSchema: Record<string, unknown>;\n\tschema: TSchema;\n\ttableNamesMap: Record<string, string>;\n}\n\nexport type ExtractTablesWithRelations<\n\tTSchema extends Record<string, unknown>,\n> = {\n\t[\n\t\tK in keyof TSchema as TSchema[K] extends Table ? K\n\t\t\t: never\n\t]: TSchema[K] extends Table ? {\n\t\t\ttsName: K & string;\n\t\t\tdbName: TSchema[K]['_']['name'];\n\t\t\tcolumns: TSchema[K]['_']['columns'];\n\t\t\trelations: ExtractTableRelationsFromSchema<\n\t\t\t\tTSchema,\n\t\t\t\tTSchema[K]['_']['name']\n\t\t\t>;\n\t\t\tprimaryKey: AnyColumn[];\n\t\t}\n\t\t: never;\n};\n\nexport type ReturnTypeOrValue<T> = T extends (...args: any[]) => infer R ? R\n\t: T;\n\nexport type BuildRelationResult<\n\tTSchema extends TablesRelationalConfig,\n\tTInclude,\n\tTRelations extends Record<string, Relation>,\n> = {\n\t[\n\t\tK in\n\t\t\t& NonUndefinedKeysOnly<TInclude>\n\t\t\t& keyof TRelations\n\t]: TRelations[K] extends infer TRel extends Relation ? BuildQueryResult<\n\t\t\tTSchema,\n\t\t\tFindTableByDBName<TSchema, TRel['referencedTableName']>,\n\t\t\tAssume<TInclude[K], true | Record<string, unknown>>\n\t\t> extends infer TResult ? TRel extends One ?\n\t\t\t\t\t| TResult\n\t\t\t\t\t| (Equal<TRel['isNullable'], false> extends true ? null : never)\n\t\t\t: TResult[]\n\t\t: never\n\t\t: never;\n};\n\nexport type NonUndefinedKeysOnly<T> =\n\t& ExtractObjectValues<\n\t\t{\n\t\t\t[K in keyof T as T[K] extends undefined ? never : K]: K;\n\t\t}\n\t>\n\t& keyof T;\n\nexport type BuildQueryResult<\n\tTSchema extends TablesRelationalConfig,\n\tTTableConfig extends TableRelationalConfig,\n\tTFullSelection extends true | Record<string, unknown>,\n> = Equal<TFullSelection, true> extends true ? InferModelFromColumns<TTableConfig['columns']>\n\t: TFullSelection extends Record<string, unknown> ? Simplify<\n\t\t\t& (TFullSelection['columns'] extends Record<string, unknown> ? InferModelFromColumns<\n\t\t\t\t\t{\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\tK in Equal<\n\t\t\t\t\t\t\t\tExclude<\n\t\t\t\t\t\t\t\t\tTFullSelection['columns'][\n\t\t\t\t\t\t\t\t\t\t& keyof TFullSelection['columns']\n\t\t\t\t\t\t\t\t\t\t& keyof TTableConfig['columns']\n\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\tundefined\n\t\t\t\t\t\t\t\t>,\n\t\t\t\t\t\t\t\tfalse\n\t\t\t\t\t\t\t> extends true ? Exclude<\n\t\t\t\t\t\t\t\t\tkeyof TTableConfig['columns'],\n\t\t\t\t\t\t\t\t\tNonUndefinedKeysOnly<TFullSelection['columns']>\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t:\n\t\t\t\t\t\t\t\t\t& {\n\t\t\t\t\t\t\t\t\t\t[K in keyof TFullSelection['columns']]: Equal<\n\t\t\t\t\t\t\t\t\t\t\tTFullSelection['columns'][K],\n\t\t\t\t\t\t\t\t\t\t\ttrue\n\t\t\t\t\t\t\t\t\t\t> extends true ? K\n\t\t\t\t\t\t\t\t\t\t\t: never;\n\t\t\t\t\t\t\t\t\t}[keyof TFullSelection['columns']]\n\t\t\t\t\t\t\t\t\t& keyof TTableConfig['columns']\n\t\t\t\t\t\t]: TTableConfig['columns'][K];\n\t\t\t\t\t}\n\t\t\t\t>\n\t\t\t\t: InferModelFromColumns<TTableConfig['columns']>)\n\t\t\t& (TFullSelection['extras'] extends\n\t\t\t\t| Record<string, unknown>\n\t\t\t\t| ((...args: any[]) => Record<string, unknown>) ? {\n\t\t\t\t\t[\n\t\t\t\t\t\tK in NonUndefinedKeysOnly<\n\t\t\t\t\t\t\tReturnTypeOrValue<TFullSelection['extras']>\n\t\t\t\t\t\t>\n\t\t\t\t\t]: Assume<\n\t\t\t\t\t\tReturnTypeOrValue<TFullSelection['extras']>[K],\n\t\t\t\t\t\tSQL.Aliased\n\t\t\t\t\t>['_']['type'];\n\t\t\t\t}\n\t\t\t\t: {})\n\t\t\t& (TFullSelection['with'] extends Record<string, unknown> ? BuildRelationResult<\n\t\t\t\t\tTSchema,\n\t\t\t\t\tTFullSelection['with'],\n\t\t\t\t\tTTableConfig['relations']\n\t\t\t\t>\n\t\t\t\t: {})\n\t\t>\n\t: never;\n\nexport interface RelationConfig<\n\tTTableName extends string,\n\tTForeignTableName extends string,\n\tTColumns extends AnyColumn<{ tableName: TTableName }>[],\n> {\n\trelationName?: string;\n\tfields: TColumns;\n\treferences: ColumnsWithTable<TTableName, TForeignTableName, TColumns>;\n}\n\nexport function extractTablesRelationalConfig<\n\tTTables extends TablesRelationalConfig,\n>(\n\tschema: Record<string, unknown>,\n\tconfigHelpers: (table: Table) => any,\n): { tables: TTables; tableNamesMap: Record<string, string> } {\n\tif (\n\t\tObject.keys(schema).length === 1\n\t\t&& 'default' in schema\n\t\t&& !is(schema['default'], Table)\n\t) {\n\t\tschema = schema['default'] as Record<string, unknown>;\n\t}\n\n\t// table DB name -> schema table key\n\tconst tableNamesMap: Record<string, string> = {};\n\t// Table relations found before their tables - need to buffer them until we know the schema table key\n\tconst relationsBuffer: Record<\n\t\tstring,\n\t\t{ relations: Record<string, Relation>; primaryKey?: AnyColumn[] }\n\t> = {};\n\tconst tablesConfig: TablesRelationalConfig = {};\n\tfor (const [key, value] of Object.entries(schema)) {\n\t\tif (is(value, Table)) {\n\t\t\tconst dbName = getTableUniqueName(value);\n\t\t\tconst bufferedRelations = relationsBuffer[dbName];\n\t\t\ttableNamesMap[dbName] = key;\n\t\t\ttablesConfig[key] = {\n\t\t\t\ttsName: key,\n\t\t\t\tdbName: value[Table.Symbol.Name],\n\t\t\t\tschema: value[Table.Symbol.Schema],\n\t\t\t\tcolumns: value[Table.Symbol.Columns],\n\t\t\t\trelations: bufferedRelations?.relations ?? {},\n\t\t\t\tprimaryKey: bufferedRelations?.primaryKey ?? [],\n\t\t\t};\n\n\t\t\t// Fill in primary keys\n\t\t\tfor (\n\t\t\t\tconst column of Object.values(\n\t\t\t\t\t(value as Table)[Table.Symbol.Columns],\n\t\t\t\t)\n\t\t\t) {\n\t\t\t\tif (column.primary) {\n\t\t\t\t\ttablesConfig[key]!.primaryKey.push(column);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst extraConfig = value[Table.Symbol.ExtraConfigBuilder]?.((value as Table)[Table.Symbol.ExtraConfigColumns]);\n\t\t\tif (extraConfig) {\n\t\t\t\tfor (const configEntry of Object.values(extraConfig)) {\n\t\t\t\t\tif (is(configEntry, PrimaryKeyBuilder)) {\n\t\t\t\t\t\ttablesConfig[key]!.primaryKey.push(...configEntry.columns);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (is(value, Relations)) {\n\t\t\tconst dbName = getTableUniqueName(value.table);\n\t\t\tconst tableName = tableNamesMap[dbName];\n\t\t\tconst relations: Record<string, Relation> = value.config(\n\t\t\t\tconfigHelpers(value.table),\n\t\t\t);\n\t\t\tlet primaryKey: AnyColumn[] | undefined;\n\n\t\t\tfor (const [relationName, relation] of Object.entries(relations)) {\n\t\t\t\tif (tableName) {\n\t\t\t\t\tconst tableConfig = tablesConfig[tableName]!;\n\t\t\t\t\ttableConfig.relations[relationName] = relation;\n\t\t\t\t\tif (primaryKey) {\n\t\t\t\t\t\ttableConfig.primaryKey.push(...primaryKey);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (!(dbName in relationsBuffer)) {\n\t\t\t\t\t\trelationsBuffer[dbName] = {\n\t\t\t\t\t\t\trelations: {},\n\t\t\t\t\t\t\tprimaryKey,\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\t\t\t\t\trelationsBuffer[dbName]!.relations[relationName] = relation;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn { tables: tablesConfig as TTables, tableNamesMap };\n}\n\nexport function relations<\n\tTTableName extends string,\n\tTRelations extends Record<string, Relation<any>>,\n>(\n\ttable: AnyTable<{ name: TTableName }>,\n\trelations: (helpers: TableRelationsHelpers<TTableName>) => TRelations,\n): Relations<TTableName, TRelations> {\n\treturn new Relations<TTableName, TRelations>(\n\t\ttable,\n\t\t(helpers: TableRelationsHelpers<TTableName>) =>\n\t\t\tObject.fromEntries(\n\t\t\t\tObject.entries(relations(helpers)).map(([key, value]) => [\n\t\t\t\t\tkey,\n\t\t\t\t\tvalue.withFieldName(key),\n\t\t\t\t]),\n\t\t\t) as TRelations,\n\t);\n}\n\nexport function createOne<TTableName extends string>(sourceTable: Table) {\n\treturn function one<\n\t\tTForeignTable extends Table,\n\t\tTColumns extends [\n\t\t\tAnyColumn<{ tableName: TTableName }>,\n\t\t\t...AnyColumn<{ tableName: TTableName }>[],\n\t\t],\n\t>(\n\t\ttable: TForeignTable,\n\t\tconfig?: RelationConfig<TTableName, TForeignTable['_']['name'], TColumns>,\n\t): One<\n\t\tTForeignTable['_']['name'],\n\t\tEqual<TColumns[number]['_']['notNull'], true>\n\t> {\n\t\treturn new One(\n\t\t\tsourceTable,\n\t\t\ttable,\n\t\t\tconfig,\n\t\t\t(config?.fields.reduce<boolean>((res, f) => res && f.notNull, true)\n\t\t\t\t?? false) as Equal<TColumns[number]['_']['notNull'], true>,\n\t\t);\n\t};\n}\n\nexport function createMany(sourceTable: Table) {\n\treturn function many<TForeignTable extends Table>(\n\t\treferencedTable: TForeignTable,\n\t\tconfig?: { relationName: string },\n\t): Many<TForeignTable['_']['name']> {\n\t\treturn new Many(sourceTable, referencedTable, config);\n\t};\n}\n\nexport interface NormalizedRelation {\n\tfields: AnyColumn[];\n\treferences: AnyColumn[];\n}\n\nexport function normalizeRelation(\n\tschema: TablesRelationalConfig,\n\ttableNamesMap: Record<string, string>,\n\trelation: Relation,\n): NormalizedRelation {\n\tif (is(relation, One) && relation.config) {\n\t\treturn {\n\t\t\tfields: relation.config.fields,\n\t\t\treferences: relation.config.references,\n\t\t};\n\t}\n\n\tconst referencedTableTsName = tableNamesMap[getTableUniqueName(relation.referencedTable)];\n\tif (!referencedTableTsName) {\n\t\tthrow new Error(\n\t\t\t`Table \"${relation.referencedTable[Table.Symbol.Name]}\" not found in schema`,\n\t\t);\n\t}\n\n\tconst referencedTableConfig = schema[referencedTableTsName];\n\tif (!referencedTableConfig) {\n\t\tthrow new Error(`Table \"${referencedTableTsName}\" not found in schema`);\n\t}\n\n\tconst sourceTable = relation.sourceTable;\n\tconst sourceTableTsName = tableNamesMap[getTableUniqueName(sourceTable)];\n\tif (!sourceTableTsName) {\n\t\tthrow new Error(\n\t\t\t`Table \"${sourceTable[Table.Symbol.Name]}\" not found in schema`,\n\t\t);\n\t}\n\n\tconst reverseRelations: Relation[] = [];\n\tfor (\n\t\tconst referencedTableRelation of Object.values(\n\t\t\treferencedTableConfig.relations,\n\t\t)\n\t) {\n\t\tif (\n\t\t\t(relation.relationName\n\t\t\t\t&& relation !== referencedTableRelation\n\t\t\t\t&& referencedTableRelation.relationName === relation.relationName)\n\t\t\t|| (!relation.relationName\n\t\t\t\t&& referencedTableRelation.referencedTable === relation.sourceTable)\n\t\t) {\n\t\t\treverseRelations.push(referencedTableRelation);\n\t\t}\n\t}\n\n\tif (reverseRelations.length > 1) {\n\t\tthrow relation.relationName\n\t\t\t? new Error(\n\t\t\t\t`There are multiple relations with name \"${relation.relationName}\" in table \"${referencedTableTsName}\"`,\n\t\t\t)\n\t\t\t: new Error(\n\t\t\t\t`There are multiple relations between \"${referencedTableTsName}\" and \"${\n\t\t\t\t\trelation.sourceTable[Table.Symbol.Name]\n\t\t\t\t}\". Please specify relation name`,\n\t\t\t);\n\t}\n\n\tif (\n\t\treverseRelations[0]\n\t\t&& is(reverseRelations[0], One)\n\t\t&& reverseRelations[0].config\n\t) {\n\t\treturn {\n\t\t\tfields: reverseRelations[0].config.references,\n\t\t\treferences: reverseRelations[0].config.fields,\n\t\t};\n\t}\n\n\tthrow new Error(\n\t\t`There is not enough information to infer relation \"${sourceTableTsName}.${relation.fieldName}\"`,\n\t);\n}\n\nexport function createTableRelationsHelpers<TTableName extends string>(\n\tsourceTable: AnyTable<{ name: TTableName }>,\n) {\n\treturn {\n\t\tone: createOne<TTableName>(sourceTable),\n\t\tmany: createMany(sourceTable),\n\t};\n}\n\nexport type TableRelationsHelpers<TTableName extends string> = ReturnType<\n\ttypeof createTableRelationsHelpers<TTableName>\n>;\n\nexport interface BuildRelationalQueryResult<\n\tTTable extends Table = Table,\n\tTColumn extends Column = Column,\n> {\n\ttableTsKey: string;\n\tselection: {\n\t\tdbKey: string;\n\t\ttsKey: string;\n\t\tfield: TColumn | SQL | SQL.Aliased;\n\t\trelationTableTsKey: string | undefined;\n\t\tisJson: boolean;\n\t\tisExtra?: boolean;\n\t\tselection: BuildRelationalQueryResult<TTable>['selection'];\n\t}[];\n\tsql: TTable | SQL;\n}\n\nexport function mapRelationalRow(\n\ttablesConfig: TablesRelationalConfig,\n\ttableConfig: TableRelationalConfig,\n\trow: unknown[],\n\tbuildQueryResultSelection: BuildRelationalQueryResult['selection'],\n\tmapColumnValue: (value: unknown) => unknown = (value) => value,\n): Record<string, unknown> {\n\tconst result: Record<string, unknown> = {};\n\n\tfor (\n\t\tconst [\n\t\t\tselectionItemIndex,\n\t\t\tselectionItem,\n\t\t] of buildQueryResultSelection.entries()\n\t) {\n\t\tif (selectionItem.isJson) {\n\t\t\tconst relation = tableConfig.relations[selectionItem.tsKey]!;\n\t\t\tconst rawSubRows = row[selectionItemIndex] as\n\t\t\t\t| unknown[]\n\t\t\t\t| null\n\t\t\t\t| [null]\n\t\t\t\t| string;\n\t\t\tconst subRows = typeof rawSubRows === 'string'\n\t\t\t\t? (JSON.parse(rawSubRows) as unknown[])\n\t\t\t\t: rawSubRows;\n\t\t\tresult[selectionItem.tsKey] = is(relation, One)\n\t\t\t\t? subRows\n\t\t\t\t\t&& mapRelationalRow(\n\t\t\t\t\t\ttablesConfig,\n\t\t\t\t\t\ttablesConfig[selectionItem.relationTableTsKey!]!,\n\t\t\t\t\t\tsubRows,\n\t\t\t\t\t\tselectionItem.selection,\n\t\t\t\t\t\tmapColumnValue,\n\t\t\t\t\t)\n\t\t\t\t: (subRows as unknown[][]).map((subRow) =>\n\t\t\t\t\tmapRelationalRow(\n\t\t\t\t\t\ttablesConfig,\n\t\t\t\t\t\ttablesConfig[selectionItem.relationTableTsKey!]!,\n\t\t\t\t\t\tsubRow,\n\t\t\t\t\t\tselectionItem.selection,\n\t\t\t\t\t\tmapColumnValue,\n\t\t\t\t\t)\n\t\t\t\t);\n\t\t} else {\n\t\t\tconst value = mapColumnValue(row[selectionItemIndex]);\n\t\t\tconst field = selectionItem.field!;\n\t\t\tlet decoder;\n\t\t\tif (is(field, Column)) {\n\t\t\t\tdecoder = field;\n\t\t\t} else if (is(field, SQL)) {\n\t\t\t\tdecoder = field.decoder;\n\t\t\t} else {\n\t\t\t\tdecoder = field.sql.decoder;\n\t\t\t}\n\t\t\tresult[selectionItem.tsKey] = value === null ? null : decoder.mapFromDriverValue(value);\n\t\t}\n\t}\n\n\treturn result;\n}\n", "import { type AnyColumn, Column, type GetColumnData } from '~/column.ts';\nimport { is } from '~/entity.ts';\nimport { Table } from '~/table.ts';\nimport {\n\tisDriverValueEncoder,\n\tisSQLWrapper,\n\tParam,\n\tPlaceholder,\n\tSQL,\n\tsql,\n\ttype SQLChunk,\n\ttype SQLWrapper,\n\tStringChunk,\n\tView,\n} from '../sql.ts';\n\nexport function bindIfParam(value: unknown, column: SQLWrapper): SQLChunk {\n\tif (\n\t\tisDriverValueEncoder(column)\n\t\t&& !isSQLWrapper(value)\n\t\t&& !is(value, Param)\n\t\t&& !is(value, Placeholder)\n\t\t&& !is(value, Column)\n\t\t&& !is(value, Table)\n\t\t&& !is(value, View)\n\t) {\n\t\treturn new Param(value, column);\n\t}\n\treturn value as SQLChunk;\n}\n\nexport interface BinaryOperator {\n\t<TColumn extends Column>(\n\t\tleft: TColumn,\n\t\tright: GetColumnData<TColumn, 'raw'> | SQLWrapper,\n\t): SQL;\n\t<T>(left: SQL.Aliased<T>, right: T | SQLWrapper): SQL;\n\t<T extends SQLWrapper>(\n\t\tleft: Exclude<T, SQL.Aliased | Column>,\n\t\tright: unknown,\n\t): SQL;\n}\n\n/**\n * Test that two values are equal.\n *\n * Remember that the SQL standard dictates that\n * two NULL values are not equal, so if you want to test\n * whether a value is null, you may want to use\n * `isNull` instead.\n *\n * ## Examples\n *\n * ```ts\n * // Select cars made by Ford\n * db.select().from(cars)\n *   .where(eq(cars.make, 'Ford'))\n * ```\n *\n * @see isNull for a way to test equality to NULL.\n */\nexport const eq: BinaryOperator = (left: SQLWrapper, right: unknown): SQL => {\n\treturn sql`${left} = ${bindIfParam(right, left)}`;\n};\n\n/**\n * Test that two values are not equal.\n *\n * Remember that the SQL standard dictates that\n * two NULL values are not equal, so if you want to test\n * whether a value is not null, you may want to use\n * `isNotNull` instead.\n *\n * ## Examples\n *\n * ```ts\n * // Select cars not made by Ford\n * db.select().from(cars)\n *   .where(ne(cars.make, 'Ford'))\n * ```\n *\n * @see isNotNull for a way to test whether a value is not null.\n */\nexport const ne: BinaryOperator = (left: SQLWrapper, right: unknown): SQL => {\n\treturn sql`${left} <> ${bindIfParam(right, left)}`;\n};\n\n/**\n * Combine a list of conditions with the `and` operator. Conditions\n * that are equal `undefined` are automatically ignored.\n *\n * ## Examples\n *\n * ```ts\n * db.select().from(cars)\n *   .where(\n *     and(\n *       eq(cars.make, 'Volvo'),\n *       eq(cars.year, 1950),\n *     )\n *   )\n * ```\n */\nexport function and(...conditions: (SQLWrapper | undefined)[]): SQL | undefined;\nexport function and(\n\t...unfilteredConditions: (SQLWrapper | undefined)[]\n): SQL | undefined {\n\tconst conditions = unfilteredConditions.filter(\n\t\t(c): c is Exclude<typeof c, undefined> => c !== undefined,\n\t);\n\n\tif (conditions.length === 0) {\n\t\treturn undefined;\n\t}\n\n\tif (conditions.length === 1) {\n\t\treturn new SQL(conditions);\n\t}\n\n\treturn new SQL([\n\t\tnew StringChunk('('),\n\t\tsql.join(conditions, new StringChunk(' and ')),\n\t\tnew StringChunk(')'),\n\t]);\n}\n\n/**\n * Combine a list of conditions with the `or` operator. Conditions\n * that are equal `undefined` are automatically ignored.\n *\n * ## Examples\n *\n * ```ts\n * db.select().from(cars)\n *   .where(\n *     or(\n *       eq(cars.make, 'GM'),\n *       eq(cars.make, 'Ford'),\n *     )\n *   )\n * ```\n */\nexport function or(...conditions: (SQLWrapper | undefined)[]): SQL | undefined;\nexport function or(\n\t...unfilteredConditions: (SQLWrapper | undefined)[]\n): SQL | undefined {\n\tconst conditions = unfilteredConditions.filter(\n\t\t(c): c is Exclude<typeof c, undefined> => c !== undefined,\n\t);\n\n\tif (conditions.length === 0) {\n\t\treturn undefined;\n\t}\n\n\tif (conditions.length === 1) {\n\t\treturn new SQL(conditions);\n\t}\n\n\treturn new SQL([\n\t\tnew StringChunk('('),\n\t\tsql.join(conditions, new StringChunk(' or ')),\n\t\tnew StringChunk(')'),\n\t]);\n}\n\n/**\n * Negate the meaning of an expression using the `not` keyword.\n *\n * ## Examples\n *\n * ```ts\n * // Select cars _not_ made by GM or Ford.\n * db.select().from(cars)\n *   .where(not(inArray(cars.make, ['GM', 'Ford'])))\n * ```\n */\nexport function not(condition: SQLWrapper): SQL {\n\treturn sql`not ${condition}`;\n}\n\n/**\n * Test that the first expression passed is greater than\n * the second expression.\n *\n * ## Examples\n *\n * ```ts\n * // Select cars made after 2000.\n * db.select().from(cars)\n *   .where(gt(cars.year, 2000))\n * ```\n *\n * @see gte for greater-than-or-equal\n */\nexport const gt: BinaryOperator = (left: SQLWrapper, right: unknown): SQL => {\n\treturn sql`${left} > ${bindIfParam(right, left)}`;\n};\n\n/**\n * Test that the first expression passed is greater than\n * or equal to the second expression. Use `gt` to\n * test whether an expression is strictly greater\n * than another.\n *\n * ## Examples\n *\n * ```ts\n * // Select cars made on or after 2000.\n * db.select().from(cars)\n *   .where(gte(cars.year, 2000))\n * ```\n *\n * @see gt for a strictly greater-than condition\n */\nexport const gte: BinaryOperator = (left: SQLWrapper, right: unknown): SQL => {\n\treturn sql`${left} >= ${bindIfParam(right, left)}`;\n};\n\n/**\n * Test that the first expression passed is less than\n * the second expression.\n *\n * ## Examples\n *\n * ```ts\n * // Select cars made before 2000.\n * db.select().from(cars)\n *   .where(lt(cars.year, 2000))\n * ```\n *\n * @see lte for less-than-or-equal\n */\nexport const lt: BinaryOperator = (left: SQLWrapper, right: unknown): SQL => {\n\treturn sql`${left} < ${bindIfParam(right, left)}`;\n};\n\n/**\n * Test that the first expression passed is less than\n * or equal to the second expression.\n *\n * ## Examples\n *\n * ```ts\n * // Select cars made before 2000.\n * db.select().from(cars)\n *   .where(lte(cars.year, 2000))\n * ```\n *\n * @see lt for a strictly less-than condition\n */\nexport const lte: BinaryOperator = (left: SQLWrapper, right: unknown): SQL => {\n\treturn sql`${left} <= ${bindIfParam(right, left)}`;\n};\n\n/**\n * Test whether the first parameter, a column or expression,\n * has a value from a list passed as the second argument.\n *\n * ## Examples\n *\n * ```ts\n * // Select cars made by Ford or GM.\n * db.select().from(cars)\n *   .where(inArray(cars.make, ['Ford', 'GM']))\n * ```\n *\n * @see notInArray for the inverse of this test\n */\nexport function inArray<T>(\n\tcolumn: SQL.Aliased<T>,\n\tvalues: (T | Placeholder)[] | SQLWrapper,\n): SQL;\nexport function inArray<TColumn extends Column>(\n\tcolumn: TColumn,\n\tvalues: ReadonlyArray<GetColumnData<TColumn, 'raw'> | Placeholder> | SQLWrapper,\n): SQL;\nexport function inArray<T extends SQLWrapper>(\n\tcolumn: Exclude<T, SQL.Aliased | Column>,\n\tvalues: ReadonlyArray<unknown | Placeholder> | SQLWrapper,\n): SQL;\nexport function inArray(\n\tcolumn: SQLWrapper,\n\tvalues: ReadonlyArray<unknown | Placeholder> | SQLWrapper,\n): SQL {\n\tif (Array.isArray(values)) {\n\t\tif (values.length === 0) {\n\t\t\treturn sql`false`;\n\t\t}\n\t\treturn sql`${column} in ${values.map((v) => bindIfParam(v, column))}`;\n\t}\n\n\treturn sql`${column} in ${bindIfParam(values, column)}`;\n}\n\n/**\n * Test whether the first parameter, a column or expression,\n * has a value that is not present in a list passed as the\n * second argument.\n *\n * ## Examples\n *\n * ```ts\n * // Select cars made by any company except Ford or GM.\n * db.select().from(cars)\n *   .where(notInArray(cars.make, ['Ford', 'GM']))\n * ```\n *\n * @see inArray for the inverse of this test\n */\nexport function notInArray<T>(\n\tcolumn: SQL.Aliased<T>,\n\tvalues: (T | Placeholder)[] | SQLWrapper,\n): SQL;\nexport function notInArray<TColumn extends Column>(\n\tcolumn: TColumn,\n\tvalues: (GetColumnData<TColumn, 'raw'> | Placeholder)[] | SQLWrapper,\n): SQL;\nexport function notInArray<T extends SQLWrapper>(\n\tcolumn: Exclude<T, SQL.Aliased | Column>,\n\tvalues: (unknown | Placeholder)[] | SQLWrapper,\n): SQL;\nexport function notInArray(\n\tcolumn: SQLWrapper,\n\tvalues: (unknown | Placeholder)[] | SQLWrapper,\n): SQL {\n\tif (Array.isArray(values)) {\n\t\tif (values.length === 0) {\n\t\t\treturn sql`true`;\n\t\t}\n\t\treturn sql`${column} not in ${values.map((v) => bindIfParam(v, column))}`;\n\t}\n\n\treturn sql`${column} not in ${bindIfParam(values, column)}`;\n}\n\n/**\n * Test whether an expression is NULL. By the SQL standard,\n * NULL is neither equal nor not equal to itself, so\n * it's recommended to use `isNull` and `notIsNull` for\n * comparisons to NULL.\n *\n * ## Examples\n *\n * ```ts\n * // Select cars that have no discontinuedAt date.\n * db.select().from(cars)\n *   .where(isNull(cars.discontinuedAt))\n * ```\n *\n * @see isNotNull for the inverse of this test\n */\nexport function isNull(value: SQLWrapper): SQL {\n\treturn sql`${value} is null`;\n}\n\n/**\n * Test whether an expression is not NULL. By the SQL standard,\n * NULL is neither equal nor not equal to itself, so\n * it's recommended to use `isNull` and `notIsNull` for\n * comparisons to NULL.\n *\n * ## Examples\n *\n * ```ts\n * // Select cars that have been discontinued.\n * db.select().from(cars)\n *   .where(isNotNull(cars.discontinuedAt))\n * ```\n *\n * @see isNull for the inverse of this test\n */\nexport function isNotNull(value: SQLWrapper): SQL {\n\treturn sql`${value} is not null`;\n}\n\n/**\n * Test whether a subquery evaluates to have any rows.\n *\n * ## Examples\n *\n * ```ts\n * // Users whose `homeCity` column has a match in a cities\n * // table.\n * db\n *   .select()\n *   .from(users)\n *   .where(\n *     exists(db.select()\n *       .from(cities)\n *       .where(eq(users.homeCity, cities.id))),\n *   );\n * ```\n *\n * @see notExists for the inverse of this test\n */\nexport function exists(subquery: SQLWrapper): SQL {\n\treturn sql`exists ${subquery}`;\n}\n\n/**\n * Test whether a subquery doesn't include any result\n * rows.\n *\n * ## Examples\n *\n * ```ts\n * // Users whose `homeCity` column doesn't match\n * // a row in the cities table.\n * db\n *   .select()\n *   .from(users)\n *   .where(\n *     notExists(db.select()\n *       .from(cities)\n *       .where(eq(users.homeCity, cities.id))),\n *   );\n * ```\n *\n * @see exists for the inverse of this test\n */\nexport function notExists(subquery: SQLWrapper): SQL {\n\treturn sql`not exists ${subquery}`;\n}\n\n/**\n * Test whether an expression is between two values. This\n * is an easier way to express range tests, which would be\n * expressed mathematically as `x <= a <= y` but in SQL\n * would have to be like `a >= x AND a <= y`.\n *\n * Between is inclusive of the endpoints: if `column`\n * is equal to `min` or `max`, it will be TRUE.\n *\n * ## Examples\n *\n * ```ts\n * // Select cars made between 1990 and 2000\n * db.select().from(cars)\n *   .where(between(cars.year, 1990, 2000))\n * ```\n *\n * @see notBetween for the inverse of this test\n */\nexport function between<T>(\n\tcolumn: SQL.Aliased,\n\tmin: T | SQLWrapper,\n\tmax: T | SQLWrapper,\n): SQL;\nexport function between<TColumn extends AnyColumn>(\n\tcolumn: TColumn,\n\tmin: GetColumnData<TColumn, 'raw'> | SQLWrapper,\n\tmax: GetColumnData<TColumn, 'raw'> | SQLWrapper,\n): SQL;\nexport function between<T extends SQLWrapper>(\n\tcolumn: Exclude<T, SQL.Aliased | Column>,\n\tmin: unknown,\n\tmax: unknown,\n): SQL;\nexport function between(column: SQLWrapper, min: unknown, max: unknown): SQL {\n\treturn sql`${column} between ${bindIfParam(min, column)} and ${\n\t\tbindIfParam(\n\t\t\tmax,\n\t\t\tcolumn,\n\t\t)\n\t}`;\n}\n\n/**\n * Test whether an expression is not between two values.\n *\n * This, like `between`, includes its endpoints, so if\n * the `column` is equal to `min` or `max`, in this case\n * it will evaluate to FALSE.\n *\n * ## Examples\n *\n * ```ts\n * // Exclude cars made in the 1970s\n * db.select().from(cars)\n *   .where(notBetween(cars.year, 1970, 1979))\n * ```\n *\n * @see between for the inverse of this test\n */\nexport function notBetween<T>(\n\tcolumn: SQL.Aliased,\n\tmin: T | SQLWrapper,\n\tmax: T | SQLWrapper,\n): SQL;\nexport function notBetween<TColumn extends AnyColumn>(\n\tcolumn: TColumn,\n\tmin: GetColumnData<TColumn, 'raw'> | SQLWrapper,\n\tmax: GetColumnData<TColumn, 'raw'> | SQLWrapper,\n): SQL;\nexport function notBetween<T extends SQLWrapper>(\n\tcolumn: Exclude<T, SQL.Aliased | Column>,\n\tmin: unknown,\n\tmax: unknown,\n): SQL;\nexport function notBetween(\n\tcolumn: SQLWrapper,\n\tmin: unknown,\n\tmax: unknown,\n): SQL {\n\treturn sql`${column} not between ${\n\t\tbindIfParam(\n\t\t\tmin,\n\t\t\tcolumn,\n\t\t)\n\t} and ${bindIfParam(max, column)}`;\n}\n\n/**\n * Compare a column to a pattern, which can include `%` and `_`\n * characters to match multiple variations. Including `%`\n * in the pattern matches zero or more characters, and including\n * `_` will match a single character.\n *\n * ## Examples\n *\n * ```ts\n * // Select all cars with 'Turbo' in their names.\n * db.select().from(cars)\n *   .where(like(cars.name, '%Turbo%'))\n * ```\n *\n * @see ilike for a case-insensitive version of this condition\n */\nexport function like(column: Column | SQL.Aliased | SQL, value: string | SQLWrapper): SQL {\n\treturn sql`${column} like ${value}`;\n}\n\n/**\n * The inverse of like - this tests that a given column\n * does not match a pattern, which can include `%` and `_`\n * characters to match multiple variations. Including `%`\n * in the pattern matches zero or more characters, and including\n * `_` will match a single character.\n *\n * ## Examples\n *\n * ```ts\n * // Select all cars that don't have \"ROver\" in their name.\n * db.select().from(cars)\n *   .where(notLike(cars.name, '%Rover%'))\n * ```\n *\n * @see like for the inverse condition\n * @see notIlike for a case-insensitive version of this condition\n */\nexport function notLike(column: Column | SQL.Aliased | SQL, value: string | SQLWrapper): SQL {\n\treturn sql`${column} not like ${value}`;\n}\n\n/**\n * Case-insensitively compare a column to a pattern,\n * which can include `%` and `_`\n * characters to match multiple variations. Including `%`\n * in the pattern matches zero or more characters, and including\n * `_` will match a single character.\n *\n * Unlike like, this performs a case-insensitive comparison.\n *\n * ## Examples\n *\n * ```ts\n * // Select all cars with 'Turbo' in their names.\n * db.select().from(cars)\n *   .where(ilike(cars.name, '%Turbo%'))\n * ```\n *\n * @see like for a case-sensitive version of this condition\n */\nexport function ilike(column: Column | SQL.Aliased | SQL, value: string | SQLWrapper): SQL {\n\treturn sql`${column} ilike ${value}`;\n}\n\n/**\n * The inverse of ilike - this case-insensitively tests that a given column\n * does not match a pattern, which can include `%` and `_`\n * characters to match multiple variations. Including `%`\n * in the pattern matches zero or more characters, and including\n * `_` will match a single character.\n *\n * ## Examples\n *\n * ```ts\n * // Select all cars that don't have \"Rover\" in their name.\n * db.select().from(cars)\n *   .where(notLike(cars.name, '%Rover%'))\n * ```\n *\n * @see ilike for the inverse condition\n * @see notLike for a case-sensitive version of this condition\n */\nexport function notIlike(column: Column | SQL.Aliased | SQL, value: string | SQLWrapper): SQL {\n\treturn sql`${column} not ilike ${value}`;\n}\n\n/**\n * Test that a column or expression contains all elements of\n * the list passed as the second argument.\n *\n * ## Throws\n *\n * The argument passed in the second array can't be empty:\n * if an empty is provided, this method will throw.\n *\n * ## Examples\n *\n * ```ts\n * // Select posts where its tags contain \"Typescript\" and \"ORM\".\n * db.select().from(posts)\n *   .where(arrayContains(posts.tags, ['Typescript', 'ORM']))\n * ```\n *\n * @see arrayContained to find if an array contains all elements of a column or expression\n * @see arrayOverlaps to find if a column or expression contains any elements of an array\n */\nexport function arrayContains<T>(\n\tcolumn: SQL.Aliased<T>,\n\tvalues: (T | Placeholder) | SQLWrapper,\n): SQL;\nexport function arrayContains<TColumn extends Column>(\n\tcolumn: TColumn,\n\tvalues: (GetColumnData<TColumn, 'raw'> | Placeholder) | SQLWrapper,\n): SQL;\nexport function arrayContains<T extends SQLWrapper>(\n\tcolumn: Exclude<T, SQL.Aliased | Column>,\n\tvalues: (unknown | Placeholder)[] | SQLWrapper,\n): SQL;\nexport function arrayContains(\n\tcolumn: SQLWrapper,\n\tvalues: (unknown | Placeholder)[] | SQLWrapper,\n): SQL {\n\tif (Array.isArray(values)) {\n\t\tif (values.length === 0) {\n\t\t\tthrow new Error('arrayContains requires at least one value');\n\t\t}\n\t\tconst array = sql`${bindIfParam(values, column)}`;\n\t\treturn sql`${column} @> ${array}`;\n\t}\n\n\treturn sql`${column} @> ${bindIfParam(values, column)}`;\n}\n\n/**\n * Test that the list passed as the second argument contains\n * all elements of a column or expression.\n *\n * ## Throws\n *\n * The argument passed in the second array can't be empty:\n * if an empty is provided, this method will throw.\n *\n * ## Examples\n *\n * ```ts\n * // Select posts where its tags contain \"Typescript\", \"ORM\" or both,\n * // but filtering posts that have additional tags.\n * db.select().from(posts)\n *   .where(arrayContained(posts.tags, ['Typescript', 'ORM']))\n * ```\n *\n * @see arrayContains to find if a column or expression contains all elements of an array\n * @see arrayOverlaps to find if a column or expression contains any elements of an array\n */\nexport function arrayContained<T>(\n\tcolumn: SQL.Aliased<T>,\n\tvalues: (T | Placeholder) | SQLWrapper,\n): SQL;\nexport function arrayContained<TColumn extends Column>(\n\tcolumn: TColumn,\n\tvalues: (GetColumnData<TColumn, 'raw'> | Placeholder) | SQLWrapper,\n): SQL;\nexport function arrayContained<T extends SQLWrapper>(\n\tcolumn: Exclude<T, SQL.Aliased | Column>,\n\tvalues: (unknown | Placeholder)[] | SQLWrapper,\n): SQL;\nexport function arrayContained(\n\tcolumn: SQLWrapper,\n\tvalues: (unknown | Placeholder)[] | SQLWrapper,\n): SQL {\n\tif (Array.isArray(values)) {\n\t\tif (values.length === 0) {\n\t\t\tthrow new Error('arrayContained requires at least one value');\n\t\t}\n\t\tconst array = sql`${bindIfParam(values, column)}`;\n\t\treturn sql`${column} <@ ${array}`;\n\t}\n\n\treturn sql`${column} <@ ${bindIfParam(values, column)}`;\n}\n\n/**\n * Test that a column or expression contains any elements of\n * the list passed as the second argument.\n *\n * ## Throws\n *\n * The argument passed in the second array can't be empty:\n * if an empty is provided, this method will throw.\n *\n * ## Examples\n *\n * ```ts\n * // Select posts where its tags contain \"Typescript\", \"ORM\" or both.\n * db.select().from(posts)\n *   .where(arrayOverlaps(posts.tags, ['Typescript', 'ORM']))\n * ```\n *\n * @see arrayContains to find if a column or expression contains all elements of an array\n * @see arrayContained to find if an array contains all elements of a column or expression\n */\nexport function arrayOverlaps<T>(\n\tcolumn: SQL.Aliased<T>,\n\tvalues: (T | Placeholder) | SQLWrapper,\n): SQL;\nexport function arrayOverlaps<TColumn extends Column>(\n\tcolumn: TColumn,\n\tvalues: (GetColumnData<TColumn, 'raw'> | Placeholder) | SQLWrapper,\n): SQL;\nexport function arrayOverlaps<T extends SQLWrapper>(\n\tcolumn: Exclude<T, SQL.Aliased | Column>,\n\tvalues: (unknown | Placeholder)[] | SQLWrapper,\n): SQL;\nexport function arrayOverlaps(\n\tcolumn: SQLWrapper,\n\tvalues: (unknown | Placeholder)[] | SQLWrapper,\n): SQL {\n\tif (Array.isArray(values)) {\n\t\tif (values.length === 0) {\n\t\t\tthrow new Error('arrayOverlaps requires at least one value');\n\t\t}\n\t\tconst array = sql`${bindIfParam(values, column)}`;\n\t\treturn sql`${column} && ${array}`;\n\t}\n\n\treturn sql`${column} && ${bindIfParam(values, column)}`;\n}\n", "import type { AnyColumn } from '../../column.ts';\nimport type { SQL, SQLWrapper } from '../sql.ts';\nimport { sql } from '../sql.ts';\n\n/**\n * Used in sorting, this specifies that the given\n * column or expression should be sorted in ascending\n * order. By the SQL standard, ascending order is the\n * default, so it is not usually necessary to specify\n * ascending sort order.\n *\n * ## Examples\n *\n * ```ts\n * // Return cars, starting with the oldest models\n * // and going in ascending order to the newest.\n * db.select().from(cars)\n *   .orderBy(asc(cars.year));\n * ```\n *\n * @see desc to sort in descending order\n */\nexport function asc(column: AnyColumn | SQLWrapper): SQL {\n\treturn sql`${column} asc`;\n}\n\n/**\n * Used in sorting, this specifies that the given\n * column or expression should be sorted in descending\n * order.\n *\n * ## Examples\n *\n * ```ts\n * // Select users, with the most recently created\n * // records coming first.\n * db.select().from(users)\n *   .orderBy(desc(users.createdAt));\n * ```\n *\n * @see asc to sort in ascending order\n */\nexport function desc(column: AnyColumn | SQLWrapper): SQL {\n\treturn sql`${column} desc`;\n}\n", "import { entityKind } from '~/entity.ts';\nimport { type ColumnsSelection, View } from '~/sql/sql.ts';\n\nexport abstract class PgViewBase<\n\tTName extends string = string,\n\tTExisting extends boolean = boolean,\n\tTSelectedFields extends ColumnsSelection = ColumnsSelection,\n> extends View<TName, TExisting, TSelectedFields> {\n\tstatic override readonly [entityKind]: string = 'PgViewBase';\n\n\tdeclare readonly _: View<TName, TExisting, TSelectedFields>['_'] & {\n\t\treadonly viewBrand: 'PgViewBase';\n\t};\n}\n", "import type { CacheConfig, WithCacheConfig } from '~/cache/core/types.ts';\nimport { entityKind, is } from '~/entity.ts';\nimport type { PgColumn } from '~/pg-core/columns/index.ts';\nimport type { PgDialect } from '~/pg-core/dialect.ts';\nimport type { PgSession, PreparedQueryConfig } from '~/pg-core/session.ts';\nimport type { SubqueryWithSelection } from '~/pg-core/subquery.ts';\nimport type { PgTable } from '~/pg-core/table.ts';\nimport { PgViewBase } from '~/pg-core/view-base.ts';\nimport { TypedQueryBuilder } from '~/query-builders/query-builder.ts';\nimport type {\n\tBuildSubquerySelection,\n\tGetSelectTableName,\n\tGetSelectTableSelection,\n\tJoinNullability,\n\tJoinType,\n\tSelectMode,\n\tSelectResult,\n\tSetOperator,\n} from '~/query-builders/select.types.ts';\nimport { QueryPromise } from '~/query-promise.ts';\nimport type { RunnableQuery } from '~/runnable-query.ts';\nimport { SelectionProxyHandler } from '~/selection-proxy.ts';\nimport { SQL, View } from '~/sql/sql.ts';\nimport type { ColumnsSelection, Placeholder, Query, SQLWrapper } from '~/sql/sql.ts';\nimport { Subquery } from '~/subquery.ts';\nimport { Table } from '~/table.ts';\nimport { tracer } from '~/tracing.ts';\nimport {\n\tapplyMixins,\n\ttype DrizzleTypeError,\n\tgetTableColumns,\n\tgetTableLikeName,\n\thaveSameKeys,\n\ttype NeonAuthToken,\n\ttype ValueOrArray,\n} from '~/utils.ts';\nimport { orderSelectedFields } from '~/utils.ts';\nimport { ViewBaseConfig } from '~/view-common.ts';\nimport { extractUsedTable } from '../utils.ts';\nimport type {\n\tAnyPgSelect,\n\tCreatePgSelectFromBuilderMode,\n\tGetPgSetOperators,\n\tLockConfig,\n\tLockStrength,\n\tPgCreateSetOperatorFn,\n\tPgSelectConfig,\n\tPgSelectCrossJoinFn,\n\tPgSelectDynamic,\n\tPgSelectHKT,\n\tPgSelectHKTBase,\n\tPgSelectJoinFn,\n\tPgSelectPrepare,\n\tPgSelectWithout,\n\tPgSetOperatorExcludedMethods,\n\tPgSetOperatorWithResult,\n\tSelectedFields,\n\tSetOperatorRightSelect,\n\tTableLikeHasEmptySelection,\n} from './select.types.ts';\n\nexport class PgSelectBuilder<\n\tTSelection extends SelectedFields | undefined,\n\tTBuilderMode extends 'db' | 'qb' = 'db',\n> {\n\tstatic readonly [entityKind]: string = 'PgSelectBuilder';\n\n\tprivate fields: TSelection;\n\tprivate session: PgSession | undefined;\n\tprivate dialect: PgDialect;\n\tprivate withList: Subquery[] = [];\n\tprivate distinct: boolean | {\n\t\ton: (PgColumn | SQLWrapper)[];\n\t} | undefined;\n\n\tconstructor(\n\t\tconfig: {\n\t\t\tfields: TSelection;\n\t\t\tsession: PgSession | undefined;\n\t\t\tdialect: PgDialect;\n\t\t\twithList?: Subquery[];\n\t\t\tdistinct?: boolean | {\n\t\t\t\ton: (PgColumn | SQLWrapper)[];\n\t\t\t};\n\t\t},\n\t) {\n\t\tthis.fields = config.fields;\n\t\tthis.session = config.session;\n\t\tthis.dialect = config.dialect;\n\t\tif (config.withList) {\n\t\t\tthis.withList = config.withList;\n\t\t}\n\t\tthis.distinct = config.distinct;\n\t}\n\n\tprivate authToken?: NeonAuthToken;\n\t/** @internal */\n\tsetToken(token?: NeonAuthToken) {\n\t\tthis.authToken = token;\n\t\treturn this;\n\t}\n\n\t/**\n\t * Specify the table, subquery, or other target that you're\n\t * building a select query against.\n\t *\n\t * {@link https://www.postgresql.org/docs/current/sql-select.html#SQL-FROM | Postgres from documentation}\n\t */\n\tfrom<TFrom extends PgTable | Subquery | PgViewBase | SQL>(\n\t\tsource: TableLikeHasEmptySelection<TFrom> extends true ? DrizzleTypeError<\n\t\t\t\t\"Cannot reference a data-modifying statement subquery if it doesn't contain a `returning` clause\"\n\t\t\t>\n\t\t\t: TFrom,\n\t): CreatePgSelectFromBuilderMode<\n\t\tTBuilderMode,\n\t\tGetSelectTableName<TFrom>,\n\t\tTSelection extends undefined ? GetSelectTableSelection<TFrom> : TSelection,\n\t\tTSelection extends undefined ? 'single' : 'partial'\n\t> {\n\t\tconst isPartialSelect = !!this.fields;\n\t\tconst src = source as TFrom;\n\n\t\tlet fields: SelectedFields;\n\t\tif (this.fields) {\n\t\t\tfields = this.fields;\n\t\t} else if (is(src, Subquery)) {\n\t\t\t// This is required to use the proxy handler to get the correct field values from the subquery\n\t\t\tfields = Object.fromEntries(\n\t\t\t\tObject.keys(src._.selectedFields).map((\n\t\t\t\t\tkey,\n\t\t\t\t) => [key, src[key as unknown as keyof typeof src] as unknown as SelectedFields[string]]),\n\t\t\t);\n\t\t} else if (is(src, PgViewBase)) {\n\t\t\tfields = src[ViewBaseConfig].selectedFields as SelectedFields;\n\t\t} else if (is(src, SQL)) {\n\t\t\tfields = {};\n\t\t} else {\n\t\t\tfields = getTableColumns<PgTable>(src);\n\t\t}\n\n\t\treturn (new PgSelectBase({\n\t\t\ttable: src,\n\t\t\tfields,\n\t\t\tisPartialSelect,\n\t\t\tsession: this.session,\n\t\t\tdialect: this.dialect,\n\t\t\twithList: this.withList,\n\t\t\tdistinct: this.distinct,\n\t\t}).setToken(this.authToken)) as any;\n\t}\n}\n\nexport abstract class PgSelectQueryBuilderBase<\n\tTHKT extends PgSelectHKTBase,\n\tTTableName extends string | undefined,\n\tTSelection extends ColumnsSelection,\n\tTSelectMode extends SelectMode,\n\tTNullabilityMap extends Record<string, JoinNullability> = TTableName extends string ? Record<TTableName, 'not-null'>\n\t\t: {},\n\tTDynamic extends boolean = false,\n\tTExcludedMethods extends string = never,\n\tTResult extends any[] = SelectResult<TSelection, TSelectMode, TNullabilityMap>[],\n\tTSelectedFields extends ColumnsSelection = BuildSubquerySelection<TSelection, TNullabilityMap>,\n> extends TypedQueryBuilder<TSelectedFields, TResult> {\n\tstatic override readonly [entityKind]: string = 'PgSelectQueryBuilder';\n\n\toverride readonly _: {\n\t\treadonly dialect: 'pg';\n\t\treadonly hkt: THKT;\n\t\treadonly tableName: TTableName;\n\t\treadonly selection: TSelection;\n\t\treadonly selectMode: TSelectMode;\n\t\treadonly nullabilityMap: TNullabilityMap;\n\t\treadonly dynamic: TDynamic;\n\t\treadonly excludedMethods: TExcludedMethods;\n\t\treadonly result: TResult;\n\t\treadonly selectedFields: TSelectedFields;\n\t\treadonly config: PgSelectConfig;\n\t};\n\n\tprotected config: PgSelectConfig;\n\tprotected joinsNotNullableMap: Record<string, boolean>;\n\tprotected tableName: string | undefined;\n\tprivate isPartialSelect: boolean;\n\tprotected session: PgSession | undefined;\n\tprotected dialect: PgDialect;\n\tprotected cacheConfig?: WithCacheConfig = undefined;\n\tprotected usedTables: Set<string> = new Set();\n\n\tconstructor(\n\t\t{ table, fields, isPartialSelect, session, dialect, withList, distinct }: {\n\t\t\ttable: PgSelectConfig['table'];\n\t\t\tfields: PgSelectConfig['fields'];\n\t\t\tisPartialSelect: boolean;\n\t\t\tsession: PgSession | undefined;\n\t\t\tdialect: PgDialect;\n\t\t\twithList: Subquery[];\n\t\t\tdistinct: boolean | {\n\t\t\t\ton: (PgColumn | SQLWrapper)[];\n\t\t\t} | undefined;\n\t\t},\n\t) {\n\t\tsuper();\n\t\tthis.config = {\n\t\t\twithList,\n\t\t\ttable,\n\t\t\tfields: { ...fields },\n\t\t\tdistinct,\n\t\t\tsetOperators: [],\n\t\t};\n\t\tthis.isPartialSelect = isPartialSelect;\n\t\tthis.session = session;\n\t\tthis.dialect = dialect;\n\t\tthis._ = {\n\t\t\tselectedFields: fields as TSelectedFields,\n\t\t\tconfig: this.config,\n\t\t} as this['_'];\n\t\tthis.tableName = getTableLikeName(table);\n\t\tthis.joinsNotNullableMap = typeof this.tableName === 'string' ? { [this.tableName]: true } : {};\n\n\t\tfor (const item of extractUsedTable(table)) this.usedTables.add(item);\n\t}\n\n\t/** @internal */\n\tgetUsedTables() {\n\t\treturn [...this.usedTables];\n\t}\n\n\tprivate createJoin<\n\t\tTJoinType extends JoinType,\n\t\tTIsLateral extends (TJoinType extends 'full' | 'right' ? false : boolean),\n\t>(\n\t\tjoinType: TJoinType,\n\t\tlateral: TIsLateral,\n\t): 'cross' extends TJoinType ? PgSelectCrossJoinFn<this, TDynamic, TIsLateral>\n\t\t: PgSelectJoinFn<this, TDynamic, TJoinType, TIsLateral>\n\t{\n\t\treturn ((\n\t\t\ttable: TIsLateral extends true ? Subquery | SQL : PgTable | Subquery | PgViewBase | SQL,\n\t\t\ton?: ((aliases: TSelection) => SQL | undefined) | SQL | undefined,\n\t\t) => {\n\t\t\tconst baseTableName = this.tableName;\n\t\t\tconst tableName = getTableLikeName(table);\n\n\t\t\t// store all tables used in a query\n\t\t\tfor (const item of extractUsedTable(table)) this.usedTables.add(item);\n\n\t\t\tif (typeof tableName === 'string' && this.config.joins?.some((join) => join.alias === tableName)) {\n\t\t\t\tthrow new Error(`Alias \"${tableName}\" is already used in this query`);\n\t\t\t}\n\n\t\t\tif (!this.isPartialSelect) {\n\t\t\t\t// If this is the first join and this is not a partial select and we're not selecting from raw SQL, \"move\" the fields from the main table to the nested object\n\t\t\t\tif (Object.keys(this.joinsNotNullableMap).length === 1 && typeof baseTableName === 'string') {\n\t\t\t\t\tthis.config.fields = {\n\t\t\t\t\t\t[baseTableName]: this.config.fields,\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t\tif (typeof tableName === 'string' && !is(table, SQL)) {\n\t\t\t\t\tconst selection = is(table, Subquery)\n\t\t\t\t\t\t? table._.selectedFields\n\t\t\t\t\t\t: is(table, View)\n\t\t\t\t\t\t? table[ViewBaseConfig].selectedFields\n\t\t\t\t\t\t: table[Table.Symbol.Columns];\n\t\t\t\t\tthis.config.fields[tableName] = selection;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (typeof on === 'function') {\n\t\t\t\ton = on(\n\t\t\t\t\tnew Proxy(\n\t\t\t\t\t\tthis.config.fields,\n\t\t\t\t\t\tnew SelectionProxyHandler({ sqlAliasedBehavior: 'sql', sqlBehavior: 'sql' }),\n\t\t\t\t\t) as TSelection,\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tif (!this.config.joins) {\n\t\t\t\tthis.config.joins = [];\n\t\t\t}\n\n\t\t\tthis.config.joins.push({ on, table, joinType, alias: tableName, lateral });\n\n\t\t\tif (typeof tableName === 'string') {\n\t\t\t\tswitch (joinType) {\n\t\t\t\t\tcase 'left': {\n\t\t\t\t\t\tthis.joinsNotNullableMap[tableName] = false;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tcase 'right': {\n\t\t\t\t\t\tthis.joinsNotNullableMap = Object.fromEntries(\n\t\t\t\t\t\t\tObject.entries(this.joinsNotNullableMap).map(([key]) => [key, false]),\n\t\t\t\t\t\t);\n\t\t\t\t\t\tthis.joinsNotNullableMap[tableName] = true;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tcase 'cross':\n\t\t\t\t\tcase 'inner': {\n\t\t\t\t\t\tthis.joinsNotNullableMap[tableName] = true;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tcase 'full': {\n\t\t\t\t\t\tthis.joinsNotNullableMap = Object.fromEntries(\n\t\t\t\t\t\t\tObject.entries(this.joinsNotNullableMap).map(([key]) => [key, false]),\n\t\t\t\t\t\t);\n\t\t\t\t\t\tthis.joinsNotNullableMap[tableName] = false;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn this as any;\n\t\t}) as any;\n\t}\n\n\t/**\n\t * Executes a `left join` operation by adding another table to the current query.\n\t *\n\t * Calling this method associates each row of the table with the corresponding row from the joined table, if a match is found. If no matching row exists, it sets all columns of the joined table to null.\n\t *\n\t * See docs: {@link https://orm.drizzle.team/docs/joins#left-join}\n\t *\n\t * @param table the table to join.\n\t * @param on the `on` clause.\n\t *\n\t * @example\n\t *\n\t * ```ts\n\t * // Select all users and their pets\n\t * const usersWithPets: { user: User; pets: Pet | null; }[] = await db.select()\n\t *   .from(users)\n\t *   .leftJoin(pets, eq(users.id, pets.ownerId))\n\t *\n\t * // Select userId and petId\n\t * const usersIdsAndPetIds: { userId: number; petId: number | null; }[] = await db.select({\n\t *   userId: users.id,\n\t *   petId: pets.id,\n\t * })\n\t *   .from(users)\n\t *   .leftJoin(pets, eq(users.id, pets.ownerId))\n\t * ```\n\t */\n\tleftJoin = this.createJoin('left', false);\n\n\t/**\n\t * Executes a `left join lateral` operation by adding subquery to the current query.\n\t *\n\t * A `lateral` join allows the right-hand expression to refer to columns from the left-hand side.\n\t *\n\t * Calling this method associates each row of the table with the corresponding row from the joined table, if a match is found. If no matching row exists, it sets all columns of the joined table to null.\n\t *\n\t * See docs: {@link https://orm.drizzle.team/docs/joins#left-join-lateral}\n\t *\n\t * @param table the subquery to join.\n\t * @param on the `on` clause.\n\t */\n\tleftJoinLateral = this.createJoin('left', true);\n\n\t/**\n\t * Executes a `right join` operation by adding another table to the current query.\n\t *\n\t * Calling this method associates each row of the joined table with the corresponding row from the main table, if a match is found. If no matching row exists, it sets all columns of the main table to null.\n\t *\n\t * See docs: {@link https://orm.drizzle.team/docs/joins#right-join}\n\t *\n\t * @param table the table to join.\n\t * @param on the `on` clause.\n\t *\n\t * @example\n\t *\n\t * ```ts\n\t * // Select all users and their pets\n\t * const usersWithPets: { user: User | null; pets: Pet; }[] = await db.select()\n\t *   .from(users)\n\t *   .rightJoin(pets, eq(users.id, pets.ownerId))\n\t *\n\t * // Select userId and petId\n\t * const usersIdsAndPetIds: { userId: number | null; petId: number; }[] = await db.select({\n\t *   userId: users.id,\n\t *   petId: pets.id,\n\t * })\n\t *   .from(users)\n\t *   .rightJoin(pets, eq(users.id, pets.ownerId))\n\t * ```\n\t */\n\trightJoin = this.createJoin('right', false);\n\n\t/**\n\t * Executes an `inner join` operation, creating a new table by combining rows from two tables that have matching values.\n\t *\n\t * Calling this method retrieves rows that have corresponding entries in both joined tables. Rows without matching entries in either table are excluded, resulting in a table that includes only matching pairs.\n\t *\n\t * See docs: {@link https://orm.drizzle.team/docs/joins#inner-join}\n\t *\n\t * @param table the table to join.\n\t * @param on the `on` clause.\n\t *\n\t * @example\n\t *\n\t * ```ts\n\t * // Select all users and their pets\n\t * const usersWithPets: { user: User; pets: Pet; }[] = await db.select()\n\t *   .from(users)\n\t *   .innerJoin(pets, eq(users.id, pets.ownerId))\n\t *\n\t * // Select userId and petId\n\t * const usersIdsAndPetIds: { userId: number; petId: number; }[] = await db.select({\n\t *   userId: users.id,\n\t *   petId: pets.id,\n\t * })\n\t *   .from(users)\n\t *   .innerJoin(pets, eq(users.id, pets.ownerId))\n\t * ```\n\t */\n\tinnerJoin = this.createJoin('inner', false);\n\n\t/**\n\t * Executes an `inner join lateral` operation, creating a new table by combining rows from two queries that have matching values.\n\t *\n\t * A `lateral` join allows the right-hand expression to refer to columns from the left-hand side.\n\t *\n\t * Calling this method retrieves rows that have corresponding entries in both joined tables. Rows without matching entries in either table are excluded, resulting in a table that includes only matching pairs.\n\t *\n\t * See docs: {@link https://orm.drizzle.team/docs/joins#inner-join-lateral}\n\t *\n\t * @param table the subquery to join.\n\t * @param on the `on` clause.\n\t */\n\tinnerJoinLateral = this.createJoin('inner', true);\n\n\t/**\n\t * Executes a `full join` operation by combining rows from two tables into a new table.\n\t *\n\t * Calling this method retrieves all rows from both main and joined tables, merging rows with matching values and filling in `null` for non-matching columns.\n\t *\n\t * See docs: {@link https://orm.drizzle.team/docs/joins#full-join}\n\t *\n\t * @param table the table to join.\n\t * @param on the `on` clause.\n\t *\n\t * @example\n\t *\n\t * ```ts\n\t * // Select all users and their pets\n\t * const usersWithPets: { user: User | null; pets: Pet | null; }[] = await db.select()\n\t *   .from(users)\n\t *   .fullJoin(pets, eq(users.id, pets.ownerId))\n\t *\n\t * // Select userId and petId\n\t * const usersIdsAndPetIds: { userId: number | null; petId: number | null; }[] = await db.select({\n\t *   userId: users.id,\n\t *   petId: pets.id,\n\t * })\n\t *   .from(users)\n\t *   .fullJoin(pets, eq(users.id, pets.ownerId))\n\t * ```\n\t */\n\tfullJoin = this.createJoin('full', false);\n\n\t/**\n\t * Executes a `cross join` operation by combining rows from two tables into a new table.\n\t *\n\t * Calling this method retrieves all rows from both main and joined tables, merging all rows from each table.\n\t *\n\t * See docs: {@link https://orm.drizzle.team/docs/joins#cross-join}\n\t *\n\t * @param table the table to join.\n\t *\n\t * @example\n\t *\n\t * ```ts\n\t * // Select all users, each user with every pet\n\t * const usersWithPets: { user: User; pets: Pet; }[] = await db.select()\n\t *   .from(users)\n\t *   .crossJoin(pets)\n\t *\n\t * // Select userId and petId\n\t * const usersIdsAndPetIds: { userId: number; petId: number; }[] = await db.select({\n\t *   userId: users.id,\n\t *   petId: pets.id,\n\t * })\n\t *   .from(users)\n\t *   .crossJoin(pets)\n\t * ```\n\t */\n\tcrossJoin = this.createJoin('cross', false);\n\n\t/**\n\t * Executes a `cross join lateral` operation by combining rows from two queries into a new table.\n\t *\n\t * A `lateral` join allows the right-hand expression to refer to columns from the left-hand side.\n\t *\n\t * Calling this method retrieves all rows from both main and joined queries, merging all rows from each query.\n\t *\n\t * See docs: {@link https://orm.drizzle.team/docs/joins#cross-join-lateral}\n\t *\n\t * @param table the query to join.\n\t */\n\tcrossJoinLateral = this.createJoin('cross', true);\n\n\tprivate createSetOperator(\n\t\ttype: SetOperator,\n\t\tisAll: boolean,\n\t): <TValue extends PgSetOperatorWithResult<TResult>>(\n\t\trightSelection:\n\t\t\t| ((setOperators: GetPgSetOperators) => SetOperatorRightSelect<TValue, TResult>)\n\t\t\t| SetOperatorRightSelect<TValue, TResult>,\n\t) => PgSelectWithout<\n\t\tthis,\n\t\tTDynamic,\n\t\tPgSetOperatorExcludedMethods,\n\t\ttrue\n\t> {\n\t\treturn (rightSelection) => {\n\t\t\tconst rightSelect = (typeof rightSelection === 'function'\n\t\t\t\t? rightSelection(getPgSetOperators())\n\t\t\t\t: rightSelection) as TypedQueryBuilder<\n\t\t\t\t\tany,\n\t\t\t\t\tTResult\n\t\t\t\t>;\n\n\t\t\tif (!haveSameKeys(this.getSelectedFields(), rightSelect.getSelectedFields())) {\n\t\t\t\tthrow new Error(\n\t\t\t\t\t'Set operator error (union / intersect / except): selected fields are not the same or are in a different order',\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tthis.config.setOperators.push({ type, isAll, rightSelect });\n\t\t\treturn this as any;\n\t\t};\n\t}\n\n\t/**\n\t * Adds `union` set operator to the query.\n\t *\n\t * Calling this method will combine the result sets of the `select` statements and remove any duplicate rows that appear across them.\n\t *\n\t * See docs: {@link https://orm.drizzle.team/docs/set-operations#union}\n\t *\n\t * @example\n\t *\n\t * ```ts\n\t * // Select all unique names from customers and users tables\n\t * await db.select({ name: users.name })\n\t *   .from(users)\n\t *   .union(\n\t *     db.select({ name: customers.name }).from(customers)\n\t *   );\n\t * // or\n\t * import { union } from 'drizzle-orm/pg-core'\n\t *\n\t * await union(\n\t *   db.select({ name: users.name }).from(users),\n\t *   db.select({ name: customers.name }).from(customers)\n\t * );\n\t * ```\n\t */\n\tunion = this.createSetOperator('union', false);\n\n\t/**\n\t * Adds `union all` set operator to the query.\n\t *\n\t * Calling this method will combine the result-set of the `select` statements and keep all duplicate rows that appear across them.\n\t *\n\t * See docs: {@link https://orm.drizzle.team/docs/set-operations#union-all}\n\t *\n\t * @example\n\t *\n\t * ```ts\n\t * // Select all transaction ids from both online and in-store sales\n\t * await db.select({ transaction: onlineSales.transactionId })\n\t *   .from(onlineSales)\n\t *   .unionAll(\n\t *     db.select({ transaction: inStoreSales.transactionId }).from(inStoreSales)\n\t *   );\n\t * // or\n\t * import { unionAll } from 'drizzle-orm/pg-core'\n\t *\n\t * await unionAll(\n\t *   db.select({ transaction: onlineSales.transactionId }).from(onlineSales),\n\t *   db.select({ transaction: inStoreSales.transactionId }).from(inStoreSales)\n\t * );\n\t * ```\n\t */\n\tunionAll = this.createSetOperator('union', true);\n\n\t/**\n\t * Adds `intersect` set operator to the query.\n\t *\n\t * Calling this method will retain only the rows that are present in both result sets and eliminate duplicates.\n\t *\n\t * See docs: {@link https://orm.drizzle.team/docs/set-operations#intersect}\n\t *\n\t * @example\n\t *\n\t * ```ts\n\t * // Select course names that are offered in both departments A and B\n\t * await db.select({ courseName: depA.courseName })\n\t *   .from(depA)\n\t *   .intersect(\n\t *     db.select({ courseName: depB.courseName }).from(depB)\n\t *   );\n\t * // or\n\t * import { intersect } from 'drizzle-orm/pg-core'\n\t *\n\t * await intersect(\n\t *   db.select({ courseName: depA.courseName }).from(depA),\n\t *   db.select({ courseName: depB.courseName }).from(depB)\n\t * );\n\t * ```\n\t */\n\tintersect = this.createSetOperator('intersect', false);\n\n\t/**\n\t * Adds `intersect all` set operator to the query.\n\t *\n\t * Calling this method will retain only the rows that are present in both result sets including all duplicates.\n\t *\n\t * See docs: {@link https://orm.drizzle.team/docs/set-operations#intersect-all}\n\t *\n\t * @example\n\t *\n\t * ```ts\n\t * // Select all products and quantities that are ordered by both regular and VIP customers\n\t * await db.select({\n\t *   productId: regularCustomerOrders.productId,\n\t *   quantityOrdered: regularCustomerOrders.quantityOrdered\n\t * })\n\t * .from(regularCustomerOrders)\n\t * .intersectAll(\n\t *   db.select({\n\t *     productId: vipCustomerOrders.productId,\n\t *     quantityOrdered: vipCustomerOrders.quantityOrdered\n\t *   })\n\t *   .from(vipCustomerOrders)\n\t * );\n\t * // or\n\t * import { intersectAll } from 'drizzle-orm/pg-core'\n\t *\n\t * await intersectAll(\n\t *   db.select({\n\t *     productId: regularCustomerOrders.productId,\n\t *     quantityOrdered: regularCustomerOrders.quantityOrdered\n\t *   })\n\t *   .from(regularCustomerOrders),\n\t *   db.select({\n\t *     productId: vipCustomerOrders.productId,\n\t *     quantityOrdered: vipCustomerOrders.quantityOrdered\n\t *   })\n\t *   .from(vipCustomerOrders)\n\t * );\n\t * ```\n\t */\n\tintersectAll = this.createSetOperator('intersect', true);\n\n\t/**\n\t * Adds `except` set operator to the query.\n\t *\n\t * Calling this method will retrieve all unique rows from the left query, except for the rows that are present in the result set of the right query.\n\t *\n\t * See docs: {@link https://orm.drizzle.team/docs/set-operations#except}\n\t *\n\t * @example\n\t *\n\t * ```ts\n\t * // Select all courses offered in department A but not in department B\n\t * await db.select({ courseName: depA.courseName })\n\t *   .from(depA)\n\t *   .except(\n\t *     db.select({ courseName: depB.courseName }).from(depB)\n\t *   );\n\t * // or\n\t * import { except } from 'drizzle-orm/pg-core'\n\t *\n\t * await except(\n\t *   db.select({ courseName: depA.courseName }).from(depA),\n\t *   db.select({ courseName: depB.courseName }).from(depB)\n\t * );\n\t * ```\n\t */\n\texcept = this.createSetOperator('except', false);\n\n\t/**\n\t * Adds `except all` set operator to the query.\n\t *\n\t * Calling this method will retrieve all rows from the left query, except for the rows that are present in the result set of the right query.\n\t *\n\t * See docs: {@link https://orm.drizzle.team/docs/set-operations#except-all}\n\t *\n\t * @example\n\t *\n\t * ```ts\n\t * // Select all products that are ordered by regular customers but not by VIP customers\n\t * await db.select({\n\t *   productId: regularCustomerOrders.productId,\n\t *   quantityOrdered: regularCustomerOrders.quantityOrdered,\n\t * })\n\t * .from(regularCustomerOrders)\n\t * .exceptAll(\n\t *   db.select({\n\t *     productId: vipCustomerOrders.productId,\n\t *     quantityOrdered: vipCustomerOrders.quantityOrdered,\n\t *   })\n\t *   .from(vipCustomerOrders)\n\t * );\n\t * // or\n\t * import { exceptAll } from 'drizzle-orm/pg-core'\n\t *\n\t * await exceptAll(\n\t *   db.select({\n\t *     productId: regularCustomerOrders.productId,\n\t *     quantityOrdered: regularCustomerOrders.quantityOrdered\n\t *   })\n\t *   .from(regularCustomerOrders),\n\t *   db.select({\n\t *     productId: vipCustomerOrders.productId,\n\t *     quantityOrdered: vipCustomerOrders.quantityOrdered\n\t *   })\n\t *   .from(vipCustomerOrders)\n\t * );\n\t * ```\n\t */\n\texceptAll = this.createSetOperator('except', true);\n\n\t/** @internal */\n\taddSetOperators(setOperators: PgSelectConfig['setOperators']): PgSelectWithout<\n\t\tthis,\n\t\tTDynamic,\n\t\tPgSetOperatorExcludedMethods,\n\t\ttrue\n\t> {\n\t\tthis.config.setOperators.push(...setOperators);\n\t\treturn this as any;\n\t}\n\n\t/**\n\t * Adds a `where` clause to the query.\n\t *\n\t * Calling this method will select only those rows that fulfill a specified condition.\n\t *\n\t * See docs: {@link https://orm.drizzle.team/docs/select#filtering}\n\t *\n\t * @param where the `where` clause.\n\t *\n\t * @example\n\t * You can use conditional operators and `sql function` to filter the rows to be selected.\n\t *\n\t * ```ts\n\t * // Select all cars with green color\n\t * await db.select().from(cars).where(eq(cars.color, 'green'));\n\t * // or\n\t * await db.select().from(cars).where(sql`${cars.color} = 'green'`)\n\t * ```\n\t *\n\t * You can logically combine conditional operators with `and()` and `or()` operators:\n\t *\n\t * ```ts\n\t * // Select all BMW cars with a green color\n\t * await db.select().from(cars).where(and(eq(cars.color, 'green'), eq(cars.brand, 'BMW')));\n\t *\n\t * // Select all cars with the green or blue color\n\t * await db.select().from(cars).where(or(eq(cars.color, 'green'), eq(cars.color, 'blue')));\n\t * ```\n\t */\n\twhere(\n\t\twhere: ((aliases: this['_']['selection']) => SQL | undefined) | SQL | undefined,\n\t): PgSelectWithout<this, TDynamic, 'where'> {\n\t\tif (typeof where === 'function') {\n\t\t\twhere = where(\n\t\t\t\tnew Proxy(\n\t\t\t\t\tthis.config.fields,\n\t\t\t\t\tnew SelectionProxyHandler({ sqlAliasedBehavior: 'sql', sqlBehavior: 'sql' }),\n\t\t\t\t) as TSelection,\n\t\t\t);\n\t\t}\n\t\tthis.config.where = where;\n\t\treturn this as any;\n\t}\n\n\t/**\n\t * Adds a `having` clause to the query.\n\t *\n\t * Calling this method will select only those rows that fulfill a specified condition. It is typically used with aggregate functions to filter the aggregated data based on a specified condition.\n\t *\n\t * See docs: {@link https://orm.drizzle.team/docs/select#aggregations}\n\t *\n\t * @param having the `having` clause.\n\t *\n\t * @example\n\t *\n\t * ```ts\n\t * // Select all brands with more than one car\n\t * await db.select({\n\t * \tbrand: cars.brand,\n\t * \tcount: sql<number>`cast(count(${cars.id}) as int)`,\n\t * })\n\t *   .from(cars)\n\t *   .groupBy(cars.brand)\n\t *   .having(({ count }) => gt(count, 1));\n\t * ```\n\t */\n\thaving(\n\t\thaving: ((aliases: this['_']['selection']) => SQL | undefined) | SQL | undefined,\n\t): PgSelectWithout<this, TDynamic, 'having'> {\n\t\tif (typeof having === 'function') {\n\t\t\thaving = having(\n\t\t\t\tnew Proxy(\n\t\t\t\t\tthis.config.fields,\n\t\t\t\t\tnew SelectionProxyHandler({ sqlAliasedBehavior: 'sql', sqlBehavior: 'sql' }),\n\t\t\t\t) as TSelection,\n\t\t\t);\n\t\t}\n\t\tthis.config.having = having;\n\t\treturn this as any;\n\t}\n\n\t/**\n\t * Adds a `group by` clause to the query.\n\t *\n\t * Calling this method will group rows that have the same values into summary rows, often used for aggregation purposes.\n\t *\n\t * See docs: {@link https://orm.drizzle.team/docs/select#aggregations}\n\t *\n\t * @example\n\t *\n\t * ```ts\n\t * // Group and count people by their last names\n\t * await db.select({\n\t *    lastName: people.lastName,\n\t *    count: sql<number>`cast(count(*) as int)`\n\t * })\n\t *   .from(people)\n\t *   .groupBy(people.lastName);\n\t * ```\n\t */\n\tgroupBy(\n\t\tbuilder: (aliases: this['_']['selection']) => ValueOrArray<PgColumn | SQL | SQL.Aliased>,\n\t): PgSelectWithout<this, TDynamic, 'groupBy'>;\n\tgroupBy(...columns: (PgColumn | SQL | SQL.Aliased)[]): PgSelectWithout<this, TDynamic, 'groupBy'>;\n\tgroupBy(\n\t\t...columns:\n\t\t\t| [(aliases: this['_']['selection']) => ValueOrArray<PgColumn | SQL | SQL.Aliased>]\n\t\t\t| (PgColumn | SQL | SQL.Aliased)[]\n\t): PgSelectWithout<this, TDynamic, 'groupBy'> {\n\t\tif (typeof columns[0] === 'function') {\n\t\t\tconst groupBy = columns[0](\n\t\t\t\tnew Proxy(\n\t\t\t\t\tthis.config.fields,\n\t\t\t\t\tnew SelectionProxyHandler({ sqlAliasedBehavior: 'alias', sqlBehavior: 'sql' }),\n\t\t\t\t) as TSelection,\n\t\t\t);\n\t\t\tthis.config.groupBy = Array.isArray(groupBy) ? groupBy : [groupBy];\n\t\t} else {\n\t\t\tthis.config.groupBy = columns as (PgColumn | SQL | SQL.Aliased)[];\n\t\t}\n\t\treturn this as any;\n\t}\n\n\t/**\n\t * Adds an `order by` clause to the query.\n\t *\n\t * Calling this method will sort the result-set in ascending or descending order. By default, the sort order is ascending.\n\t *\n\t * See docs: {@link https://orm.drizzle.team/docs/select#order-by}\n\t *\n\t * @example\n\t *\n\t * ```\n\t * // Select cars ordered by year\n\t * await db.select().from(cars).orderBy(cars.year);\n\t * ```\n\t *\n\t * You can specify whether results are in ascending or descending order with the `asc()` and `desc()` operators.\n\t *\n\t * ```ts\n\t * // Select cars ordered by year in descending order\n\t * await db.select().from(cars).orderBy(desc(cars.year));\n\t *\n\t * // Select cars ordered by year and price\n\t * await db.select().from(cars).orderBy(asc(cars.year), desc(cars.price));\n\t * ```\n\t */\n\torderBy(\n\t\tbuilder: (aliases: this['_']['selection']) => ValueOrArray<PgColumn | SQL | SQL.Aliased>,\n\t): PgSelectWithout<this, TDynamic, 'orderBy'>;\n\torderBy(...columns: (PgColumn | SQL | SQL.Aliased)[]): PgSelectWithout<this, TDynamic, 'orderBy'>;\n\torderBy(\n\t\t...columns:\n\t\t\t| [(aliases: this['_']['selection']) => ValueOrArray<PgColumn | SQL | SQL.Aliased>]\n\t\t\t| (PgColumn | SQL | SQL.Aliased)[]\n\t): PgSelectWithout<this, TDynamic, 'orderBy'> {\n\t\tif (typeof columns[0] === 'function') {\n\t\t\tconst orderBy = columns[0](\n\t\t\t\tnew Proxy(\n\t\t\t\t\tthis.config.fields,\n\t\t\t\t\tnew SelectionProxyHandler({ sqlAliasedBehavior: 'alias', sqlBehavior: 'sql' }),\n\t\t\t\t) as TSelection,\n\t\t\t);\n\n\t\t\tconst orderByArray = Array.isArray(orderBy) ? orderBy : [orderBy];\n\n\t\t\tif (this.config.setOperators.length > 0) {\n\t\t\t\tthis.config.setOperators.at(-1)!.orderBy = orderByArray;\n\t\t\t} else {\n\t\t\t\tthis.config.orderBy = orderByArray;\n\t\t\t}\n\t\t} else {\n\t\t\tconst orderByArray = columns as (PgColumn | SQL | SQL.Aliased)[];\n\n\t\t\tif (this.config.setOperators.length > 0) {\n\t\t\t\tthis.config.setOperators.at(-1)!.orderBy = orderByArray;\n\t\t\t} else {\n\t\t\t\tthis.config.orderBy = orderByArray;\n\t\t\t}\n\t\t}\n\t\treturn this as any;\n\t}\n\n\t/**\n\t * Adds a `limit` clause to the query.\n\t *\n\t * Calling this method will set the maximum number of rows that will be returned by this query.\n\t *\n\t * See docs: {@link https://orm.drizzle.team/docs/select#limit--offset}\n\t *\n\t * @param limit the `limit` clause.\n\t *\n\t * @example\n\t *\n\t * ```ts\n\t * // Get the first 10 people from this query.\n\t * await db.select().from(people).limit(10);\n\t * ```\n\t */\n\tlimit(limit: number | Placeholder): PgSelectWithout<this, TDynamic, 'limit'> {\n\t\tif (this.config.setOperators.length > 0) {\n\t\t\tthis.config.setOperators.at(-1)!.limit = limit;\n\t\t} else {\n\t\t\tthis.config.limit = limit;\n\t\t}\n\t\treturn this as any;\n\t}\n\n\t/**\n\t * Adds an `offset` clause to the query.\n\t *\n\t * Calling this method will skip a number of rows when returning results from this query.\n\t *\n\t * See docs: {@link https://orm.drizzle.team/docs/select#limit--offset}\n\t *\n\t * @param offset the `offset` clause.\n\t *\n\t * @example\n\t *\n\t * ```ts\n\t * // Get the 10th-20th people from this query.\n\t * await db.select().from(people).offset(10).limit(10);\n\t * ```\n\t */\n\toffset(offset: number | Placeholder): PgSelectWithout<this, TDynamic, 'offset'> {\n\t\tif (this.config.setOperators.length > 0) {\n\t\t\tthis.config.setOperators.at(-1)!.offset = offset;\n\t\t} else {\n\t\t\tthis.config.offset = offset;\n\t\t}\n\t\treturn this as any;\n\t}\n\n\t/**\n\t * Adds a `for` clause to the query.\n\t *\n\t * Calling this method will specify a lock strength for this query that controls how strictly it acquires exclusive access to the rows being queried.\n\t *\n\t * See docs: {@link https://www.postgresql.org/docs/current/sql-select.html#SQL-FOR-UPDATE-SHARE}\n\t *\n\t * @param strength the lock strength.\n\t * @param config the lock configuration.\n\t */\n\tfor(strength: LockStrength, config: LockConfig = {}): PgSelectWithout<this, TDynamic, 'for'> {\n\t\tthis.config.lockingClause = { strength, config };\n\t\treturn this as any;\n\t}\n\n\t/** @internal */\n\tgetSQL(): SQL {\n\t\treturn this.dialect.buildSelectQuery(this.config);\n\t}\n\n\ttoSQL(): Query {\n\t\tconst { typings: _typings, ...rest } = this.dialect.sqlToQuery(this.getSQL());\n\t\treturn rest;\n\t}\n\tas<TAlias extends string>(\n\t\talias: TAlias,\n\t): SubqueryWithSelection<this['_']['selectedFields'], TAlias> {\n\t\tconst usedTables: string[] = [];\n\t\tusedTables.push(...extractUsedTable(this.config.table));\n\t\tif (this.config.joins) { for (const it of this.config.joins) usedTables.push(...extractUsedTable(it.table)); }\n\n\t\treturn new Proxy(\n\t\t\tnew Subquery(this.getSQL(), this.config.fields, alias, false, [...new Set(usedTables)]),\n\t\t\tnew SelectionProxyHandler({ alias, sqlAliasedBehavior: 'alias', sqlBehavior: 'error' }),\n\t\t) as SubqueryWithSelection<this['_']['selectedFields'], TAlias>;\n\t}\n\n\t/** @internal */\n\toverride getSelectedFields(): this['_']['selectedFields'] {\n\t\treturn new Proxy(\n\t\t\tthis.config.fields,\n\t\t\tnew SelectionProxyHandler({ alias: this.tableName, sqlAliasedBehavior: 'alias', sqlBehavior: 'error' }),\n\t\t) as this['_']['selectedFields'];\n\t}\n\n\t$dynamic(): PgSelectDynamic<this> {\n\t\treturn this;\n\t}\n\n\t$withCache(config?: { config?: CacheConfig; tag?: string; autoInvalidate?: boolean } | false) {\n\t\tthis.cacheConfig = config === undefined\n\t\t\t? { config: {}, enable: true, autoInvalidate: true }\n\t\t\t: config === false\n\t\t\t? { enable: false }\n\t\t\t: { enable: true, autoInvalidate: true, ...config };\n\t\treturn this;\n\t}\n}\n\nexport interface PgSelectBase<\n\tTTableName extends string | undefined,\n\tTSelection extends ColumnsSelection,\n\tTSelectMode extends SelectMode,\n\tTNullabilityMap extends Record<string, JoinNullability> = TTableName extends string ? Record<TTableName, 'not-null'>\n\t\t: {},\n\tTDynamic extends boolean = false,\n\tTExcludedMethods extends string = never,\n\tTResult extends any[] = SelectResult<TSelection, TSelectMode, TNullabilityMap>[],\n\tTSelectedFields extends ColumnsSelection = BuildSubquerySelection<TSelection, TNullabilityMap>,\n> extends\n\tPgSelectQueryBuilderBase<\n\t\tPgSelectHKT,\n\t\tTTableName,\n\t\tTSelection,\n\t\tTSelectMode,\n\t\tTNullabilityMap,\n\t\tTDynamic,\n\t\tTExcludedMethods,\n\t\tTResult,\n\t\tTSelectedFields\n\t>,\n\tQueryPromise<TResult>,\n\tSQLWrapper\n{}\n\nexport class PgSelectBase<\n\tTTableName extends string | undefined,\n\tTSelection extends ColumnsSelection,\n\tTSelectMode extends SelectMode,\n\tTNullabilityMap extends Record<string, JoinNullability> = TTableName extends string ? Record<TTableName, 'not-null'>\n\t\t: {},\n\tTDynamic extends boolean = false,\n\tTExcludedMethods extends string = never,\n\tTResult = SelectResult<TSelection, TSelectMode, TNullabilityMap>[],\n\tTSelectedFields = BuildSubquerySelection<TSelection, TNullabilityMap>,\n> extends PgSelectQueryBuilderBase<\n\tPgSelectHKT,\n\tTTableName,\n\tTSelection,\n\tTSelectMode,\n\tTNullabilityMap,\n\tTDynamic,\n\tTExcludedMethods,\n\tTResult,\n\tTSelectedFields\n> implements RunnableQuery<TResult, 'pg'>, SQLWrapper {\n\tstatic override readonly [entityKind]: string = 'PgSelect';\n\n\t/** @internal */\n\t_prepare(name?: string): PgSelectPrepare<this> {\n\t\tconst { session, config, dialect, joinsNotNullableMap, authToken, cacheConfig, usedTables } = this;\n\t\tif (!session) {\n\t\t\tthrow new Error('Cannot execute a query on a query builder. Please use a database instance instead.');\n\t\t}\n\n\t\tconst { fields } = config;\n\n\t\treturn tracer.startActiveSpan('drizzle.prepareQuery', () => {\n\t\t\tconst fieldsList = orderSelectedFields<PgColumn>(fields);\n\t\t\tconst query = session.prepareQuery<\n\t\t\t\tPreparedQueryConfig & { execute: TResult }\n\t\t\t>(dialect.sqlToQuery(this.getSQL()), fieldsList, name, true, undefined, {\n\t\t\t\ttype: 'select',\n\t\t\t\ttables: [...usedTables],\n\t\t\t}, cacheConfig);\n\t\t\tquery.joinsNotNullableMap = joinsNotNullableMap;\n\n\t\t\treturn query.setToken(authToken);\n\t\t});\n\t}\n\n\t/**\n\t * Create a prepared statement for this query. This allows\n\t * the database to remember this query for the given session\n\t * and call it by name, rather than specifying the full query.\n\t *\n\t * {@link https://www.postgresql.org/docs/current/sql-prepare.html | Postgres prepare documentation}\n\t */\n\tprepare(name: string): PgSelectPrepare<this> {\n\t\treturn this._prepare(name);\n\t}\n\n\tprivate authToken?: NeonAuthToken;\n\t/** @internal */\n\tsetToken(token?: NeonAuthToken) {\n\t\tthis.authToken = token;\n\t\treturn this;\n\t}\n\n\texecute: ReturnType<this['prepare']>['execute'] = (placeholderValues) => {\n\t\treturn tracer.startActiveSpan('drizzle.operation', () => {\n\t\t\treturn this._prepare().execute(placeholderValues, this.authToken);\n\t\t});\n\t};\n}\n\napplyMixins(PgSelectBase, [QueryPromise]);\n\nfunction createSetOperator(type: SetOperator, isAll: boolean): PgCreateSetOperatorFn {\n\treturn (leftSelect, rightSelect, ...restSelects) => {\n\t\tconst setOperators = [rightSelect, ...restSelects].map((select) => ({\n\t\t\ttype,\n\t\t\tisAll,\n\t\t\trightSelect: select as AnyPgSelect,\n\t\t}));\n\n\t\tfor (const setOperator of setOperators) {\n\t\t\tif (!haveSameKeys((leftSelect as any).getSelectedFields(), setOperator.rightSelect.getSelectedFields())) {\n\t\t\t\tthrow new Error(\n\t\t\t\t\t'Set operator error (union / intersect / except): selected fields are not the same or are in a different order',\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\treturn (leftSelect as AnyPgSelect).addSetOperators(setOperators) as any;\n\t};\n}\n\nconst getPgSetOperators = () => ({\n\tunion,\n\tunionAll,\n\tintersect,\n\tintersectAll,\n\texcept,\n\texceptAll,\n});\n\n/**\n * Adds `union` set operator to the query.\n *\n * Calling this method will combine the result sets of the `select` statements and remove any duplicate rows that appear across them.\n *\n * See docs: {@link https://orm.drizzle.team/docs/set-operations#union}\n *\n * @example\n *\n * ```ts\n * // Select all unique names from customers and users tables\n * import { union } from 'drizzle-orm/pg-core'\n *\n * await union(\n *   db.select({ name: users.name }).from(users),\n *   db.select({ name: customers.name }).from(customers)\n * );\n * // or\n * await db.select({ name: users.name })\n *   .from(users)\n *   .union(\n *     db.select({ name: customers.name }).from(customers)\n *   );\n * ```\n */\nexport const union = createSetOperator('union', false);\n\n/**\n * Adds `union all` set operator to the query.\n *\n * Calling this method will combine the result-set of the `select` statements and keep all duplicate rows that appear across them.\n *\n * See docs: {@link https://orm.drizzle.team/docs/set-operations#union-all}\n *\n * @example\n *\n * ```ts\n * // Select all transaction ids from both online and in-store sales\n * import { unionAll } from 'drizzle-orm/pg-core'\n *\n * await unionAll(\n *   db.select({ transaction: onlineSales.transactionId }).from(onlineSales),\n *   db.select({ transaction: inStoreSales.transactionId }).from(inStoreSales)\n * );\n * // or\n * await db.select({ transaction: onlineSales.transactionId })\n *   .from(onlineSales)\n *   .unionAll(\n *     db.select({ transaction: inStoreSales.transactionId }).from(inStoreSales)\n *   );\n * ```\n */\nexport const unionAll = createSetOperator('union', true);\n\n/**\n * Adds `intersect` set operator to the query.\n *\n * Calling this method will retain only the rows that are present in both result sets and eliminate duplicates.\n *\n * See docs: {@link https://orm.drizzle.team/docs/set-operations#intersect}\n *\n * @example\n *\n * ```ts\n * // Select course names that are offered in both departments A and B\n * import { intersect } from 'drizzle-orm/pg-core'\n *\n * await intersect(\n *   db.select({ courseName: depA.courseName }).from(depA),\n *   db.select({ courseName: depB.courseName }).from(depB)\n * );\n * // or\n * await db.select({ courseName: depA.courseName })\n *   .from(depA)\n *   .intersect(\n *     db.select({ courseName: depB.courseName }).from(depB)\n *   );\n * ```\n */\nexport const intersect = createSetOperator('intersect', false);\n\n/**\n * Adds `intersect all` set operator to the query.\n *\n * Calling this method will retain only the rows that are present in both result sets including all duplicates.\n *\n * See docs: {@link https://orm.drizzle.team/docs/set-operations#intersect-all}\n *\n * @example\n *\n * ```ts\n * // Select all products and quantities that are ordered by both regular and VIP customers\n * import { intersectAll } from 'drizzle-orm/pg-core'\n *\n * await intersectAll(\n *   db.select({\n *     productId: regularCustomerOrders.productId,\n *     quantityOrdered: regularCustomerOrders.quantityOrdered\n *   })\n *   .from(regularCustomerOrders),\n *   db.select({\n *     productId: vipCustomerOrders.productId,\n *     quantityOrdered: vipCustomerOrders.quantityOrdered\n *   })\n *   .from(vipCustomerOrders)\n * );\n * // or\n * await db.select({\n *   productId: regularCustomerOrders.productId,\n *   quantityOrdered: regularCustomerOrders.quantityOrdered\n * })\n * .from(regularCustomerOrders)\n * .intersectAll(\n *   db.select({\n *     productId: vipCustomerOrders.productId,\n *     quantityOrdered: vipCustomerOrders.quantityOrdered\n *   })\n *   .from(vipCustomerOrders)\n * );\n * ```\n */\nexport const intersectAll = createSetOperator('intersect', true);\n\n/**\n * Adds `except` set operator to the query.\n *\n * Calling this method will retrieve all unique rows from the left query, except for the rows that are present in the result set of the right query.\n *\n * See docs: {@link https://orm.drizzle.team/docs/set-operations#except}\n *\n * @example\n *\n * ```ts\n * // Select all courses offered in department A but not in department B\n * import { except } from 'drizzle-orm/pg-core'\n *\n * await except(\n *   db.select({ courseName: depA.courseName }).from(depA),\n *   db.select({ courseName: depB.courseName }).from(depB)\n * );\n * // or\n * await db.select({ courseName: depA.courseName })\n *   .from(depA)\n *   .except(\n *     db.select({ courseName: depB.courseName }).from(depB)\n *   );\n * ```\n */\nexport const except = createSetOperator('except', false);\n\n/**\n * Adds `except all` set operator to the query.\n *\n * Calling this method will retrieve all rows from the left query, except for the rows that are present in the result set of the right query.\n *\n * See docs: {@link https://orm.drizzle.team/docs/set-operations#except-all}\n *\n * @example\n *\n * ```ts\n * // Select all products that are ordered by regular customers but not by VIP customers\n * import { exceptAll } from 'drizzle-orm/pg-core'\n *\n * await exceptAll(\n *   db.select({\n *     productId: regularCustomerOrders.productId,\n *     quantityOrdered: regularCustomerOrders.quantityOrdered\n *   })\n *   .from(regularCustomerOrders),\n *   db.select({\n *     productId: vipCustomerOrders.productId,\n *     quantityOrdered: vipCustomerOrders.quantityOrdered\n *   })\n *   .from(vipCustomerOrders)\n * );\n * // or\n * await db.select({\n *   productId: regularCustomerOrders.productId,\n *   quantityOrdered: regularCustomerOrders.quantityOrdered,\n * })\n * .from(regularCustomerOrders)\n * .exceptAll(\n *   db.select({\n *     productId: vipCustomerOrders.productId,\n *     quantityOrdered: vipCustomerOrders.quantityOrdered,\n *   })\n *   .from(vipCustomerOrders)\n * );\n * ```\n */\nexport const exceptAll = createSetOperator('except', true);\n", "import { entityKind } from '~/entity.ts';\nimport type { SQL, SQLWrapper } from '~/sql/index.ts';\n\nexport abstract class TypedQueryBuilder<TSelection, TResult = unknown, TConfig = unknown> implements SQLWrapper {\n\tstatic readonly [entityKind]: string = 'TypedQueryBuilder';\n\n\tdeclare _: {\n\t\tselectedFields: TSelection;\n\t\tresult: TResult;\n\t\tconfig?: TConfig;\n\t};\n\n\t/** @internal */\n\tgetSelectedFields(): TSelection {\n\t\treturn this._.selectedFields;\n\t}\n\n\tabstract getSQL(): SQL;\n}\n", "import type { WithCacheConfig } from '~/cache/core/types.ts';\nimport { entityKind, is } from '~/entity.ts';\nimport type { PgDialect } from '~/pg-core/dialect.ts';\nimport type { IndexColumn } from '~/pg-core/indexes.ts';\nimport type {\n\tPgPreparedQuery,\n\tPgQueryResultHKT,\n\tPgQueryResultKind,\n\tPgSession,\n\tPreparedQueryConfig,\n} from '~/pg-core/session.ts';\nimport type { PgTable, TableConfig } from '~/pg-core/table.ts';\nimport type { TypedQueryBuilder } from '~/query-builders/query-builder.ts';\nimport type { SelectResultFields } from '~/query-builders/select.types.ts';\nimport { QueryPromise } from '~/query-promise.ts';\nimport type { RunnableQuery } from '~/runnable-query.ts';\nimport { SelectionProxyHandler } from '~/selection-proxy.ts';\nimport type { ColumnsSelection, Placeholder, Query, SQLWrapper } from '~/sql/sql.ts';\nimport { Param, SQL, sql } from '~/sql/sql.ts';\nimport type { Subquery } from '~/subquery.ts';\nimport type { InferInsertModel } from '~/table.ts';\nimport { Columns, getTableName, Table } from '~/table.ts';\nimport { tracer } from '~/tracing.ts';\nimport { haveSameKeys, mapUpdateSet, type NeonAuthToken, orderSelectedFields } from '~/utils.ts';\nimport type { AnyPgColumn, PgColumn } from '../columns/common.ts';\nimport { extractUsedTable } from '../utils.ts';\nimport { QueryBuilder } from './query-builder.ts';\nimport type { SelectedFieldsFlat, SelectedFieldsOrdered } from './select.types.ts';\nimport type { PgUpdateSetSource } from './update.ts';\n\nexport interface PgInsertConfig<TTable extends PgTable = PgTable> {\n\ttable: TTable;\n\tvalues: Record<string, Param | SQL>[] | PgInsertSelectQueryBuilder<TTable> | SQL;\n\twithList?: Subquery[];\n\tonConflict?: SQL;\n\treturningFields?: SelectedFieldsFlat;\n\treturning?: SelectedFieldsOrdered;\n\tselect?: boolean;\n\toverridingSystemValue_?: boolean;\n}\n\nexport type PgInsertValue<TTable extends PgTable<TableConfig>, OverrideT extends boolean = false> =\n\t& {\n\t\t[Key in keyof InferInsertModel<TTable, { dbColumnNames: false; override: OverrideT }>]:\n\t\t\t| InferInsertModel<TTable, { dbColumnNames: false; override: OverrideT }>[Key]\n\t\t\t| SQL\n\t\t\t| Placeholder;\n\t}\n\t& {};\n\nexport type PgInsertSelectQueryBuilder<TTable extends PgTable> = TypedQueryBuilder<\n\t{ [K in keyof TTable['$inferInsert']]: AnyPgColumn | SQL | SQL.Aliased | TTable['$inferInsert'][K] }\n>;\n\nexport class PgInsertBuilder<\n\tTTable extends PgTable,\n\tTQueryResult extends PgQueryResultHKT,\n\tOverrideT extends boolean = false,\n> {\n\tstatic readonly [entityKind]: string = 'PgInsertBuilder';\n\n\tconstructor(\n\t\tprivate table: TTable,\n\t\tprivate session: PgSession,\n\t\tprivate dialect: PgDialect,\n\t\tprivate withList?: Subquery[],\n\t\tprivate overridingSystemValue_?: boolean,\n\t) {}\n\n\tprivate authToken?: NeonAuthToken;\n\t/** @internal */\n\tsetToken(token?: NeonAuthToken) {\n\t\tthis.authToken = token;\n\t\treturn this;\n\t}\n\n\toverridingSystemValue(): Omit<PgInsertBuilder<TTable, TQueryResult, true>, 'overridingSystemValue'> {\n\t\tthis.overridingSystemValue_ = true;\n\t\treturn this as any;\n\t}\n\n\tvalues(value: PgInsertValue<TTable, OverrideT>): PgInsertBase<TTable, TQueryResult>;\n\tvalues(values: PgInsertValue<TTable, OverrideT>[]): PgInsertBase<TTable, TQueryResult>;\n\tvalues(\n\t\tvalues: PgInsertValue<TTable, OverrideT> | PgInsertValue<TTable, OverrideT>[],\n\t): PgInsertBase<TTable, TQueryResult> {\n\t\tvalues = Array.isArray(values) ? values : [values];\n\t\tif (values.length === 0) {\n\t\t\tthrow new Error('values() must be called with at least one value');\n\t\t}\n\t\tconst mappedValues = values.map((entry) => {\n\t\t\tconst result: Record<string, Param | SQL> = {};\n\t\t\tconst cols = this.table[Table.Symbol.Columns];\n\t\t\tfor (const colKey of Object.keys(entry)) {\n\t\t\t\tconst colValue = entry[colKey as keyof typeof entry];\n\t\t\t\tresult[colKey] = is(colValue, SQL) ? colValue : new Param(colValue, cols[colKey]);\n\t\t\t}\n\t\t\treturn result;\n\t\t});\n\n\t\treturn new PgInsertBase(\n\t\t\tthis.table,\n\t\t\tmappedValues,\n\t\t\tthis.session,\n\t\t\tthis.dialect,\n\t\t\tthis.withList,\n\t\t\tfalse,\n\t\t\tthis.overridingSystemValue_,\n\t\t).setToken(this.authToken) as any;\n\t}\n\n\tselect(selectQuery: (qb: QueryBuilder) => PgInsertSelectQueryBuilder<TTable>): PgInsertBase<TTable, TQueryResult>;\n\tselect(selectQuery: (qb: QueryBuilder) => SQL): PgInsertBase<TTable, TQueryResult>;\n\tselect(selectQuery: SQL): PgInsertBase<TTable, TQueryResult>;\n\tselect(selectQuery: PgInsertSelectQueryBuilder<TTable>): PgInsertBase<TTable, TQueryResult>;\n\tselect(\n\t\tselectQuery:\n\t\t\t| SQL\n\t\t\t| PgInsertSelectQueryBuilder<TTable>\n\t\t\t| ((qb: QueryBuilder) => PgInsertSelectQueryBuilder<TTable> | SQL),\n\t): PgInsertBase<TTable, TQueryResult> {\n\t\tconst select = typeof selectQuery === 'function' ? selectQuery(new QueryBuilder()) : selectQuery;\n\n\t\tif (\n\t\t\t!is(select, SQL)\n\t\t\t&& !haveSameKeys(this.table[Columns], select._.selectedFields)\n\t\t) {\n\t\t\tthrow new Error(\n\t\t\t\t'Insert select error: selected fields are not the same or are in a different order compared to the table definition',\n\t\t\t);\n\t\t}\n\n\t\treturn new PgInsertBase(this.table, select, this.session, this.dialect, this.withList, true);\n\t}\n}\n\nexport type PgInsertWithout<T extends AnyPgInsert, TDynamic extends boolean, K extends keyof T & string> =\n\tTDynamic extends true ? T\n\t\t: Omit<\n\t\t\tPgInsertBase<\n\t\t\t\tT['_']['table'],\n\t\t\t\tT['_']['queryResult'],\n\t\t\t\tT['_']['selectedFields'],\n\t\t\t\tT['_']['returning'],\n\t\t\t\tTDynamic,\n\t\t\t\tT['_']['excludedMethods'] | K\n\t\t\t>,\n\t\t\tT['_']['excludedMethods'] | K\n\t\t>;\n\nexport type PgInsertReturning<\n\tT extends AnyPgInsert,\n\tTDynamic extends boolean,\n\tTSelectedFields extends SelectedFieldsFlat,\n> = PgInsertBase<\n\tT['_']['table'],\n\tT['_']['queryResult'],\n\tTSelectedFields,\n\tSelectResultFields<TSelectedFields>,\n\tTDynamic,\n\tT['_']['excludedMethods']\n>;\n\nexport type PgInsertReturningAll<T extends AnyPgInsert, TDynamic extends boolean> = PgInsertBase<\n\tT['_']['table'],\n\tT['_']['queryResult'],\n\tT['_']['table']['_']['columns'],\n\tT['_']['table']['$inferSelect'],\n\tTDynamic,\n\tT['_']['excludedMethods']\n>;\n\nexport interface PgInsertOnConflictDoUpdateConfig<T extends AnyPgInsert> {\n\ttarget: IndexColumn | IndexColumn[];\n\t/** @deprecated use either `targetWhere` or `setWhere` */\n\twhere?: SQL;\n\t// TODO: add tests for targetWhere and setWhere\n\ttargetWhere?: SQL;\n\tsetWhere?: SQL;\n\tset: PgUpdateSetSource<T['_']['table']>;\n}\n\nexport type PgInsertPrepare<T extends AnyPgInsert> = PgPreparedQuery<\n\tPreparedQueryConfig & {\n\t\texecute: T['_']['returning'] extends undefined ? PgQueryResultKind<T['_']['queryResult'], never>\n\t\t\t: T['_']['returning'][];\n\t}\n>;\n\nexport type PgInsertDynamic<T extends AnyPgInsert> = PgInsert<\n\tT['_']['table'],\n\tT['_']['queryResult'],\n\tT['_']['returning']\n>;\n\nexport type AnyPgInsert = PgInsertBase<any, any, any, any, any, any>;\n\nexport type PgInsert<\n\tTTable extends PgTable = PgTable,\n\tTQueryResult extends PgQueryResultHKT = PgQueryResultHKT,\n\tTSelectedFields extends ColumnsSelection | undefined = ColumnsSelection | undefined,\n\tTReturning extends Record<string, unknown> | undefined = Record<string, unknown> | undefined,\n> = PgInsertBase<TTable, TQueryResult, TSelectedFields, TReturning, true, never>;\n\nexport interface PgInsertBase<\n\tTTable extends PgTable,\n\tTQueryResult extends PgQueryResultHKT,\n\tTSelectedFields extends ColumnsSelection | undefined = undefined,\n\tTReturning extends Record<string, unknown> | undefined = undefined,\n\tTDynamic extends boolean = false,\n\tTExcludedMethods extends string = never,\n> extends\n\tTypedQueryBuilder<\n\t\tTSelectedFields,\n\t\tTReturning extends undefined ? PgQueryResultKind<TQueryResult, never> : TReturning[]\n\t>,\n\tQueryPromise<TReturning extends undefined ? PgQueryResultKind<TQueryResult, never> : TReturning[]>,\n\tRunnableQuery<TReturning extends undefined ? PgQueryResultKind<TQueryResult, never> : TReturning[], 'pg'>,\n\tSQLWrapper\n{\n\treadonly _: {\n\t\treadonly dialect: 'pg';\n\t\treadonly table: TTable;\n\t\treadonly queryResult: TQueryResult;\n\t\treadonly selectedFields: TSelectedFields;\n\t\treadonly returning: TReturning;\n\t\treadonly dynamic: TDynamic;\n\t\treadonly excludedMethods: TExcludedMethods;\n\t\treadonly result: TReturning extends undefined ? PgQueryResultKind<TQueryResult, never> : TReturning[];\n\t};\n}\n\nexport class PgInsertBase<\n\tTTable extends PgTable,\n\tTQueryResult extends PgQueryResultHKT,\n\tTSelectedFields extends ColumnsSelection | undefined = undefined,\n\tTReturning extends Record<string, unknown> | undefined = undefined,\n\t// eslint-disable-next-line @typescript-eslint/no-unused-vars\n\tTDynamic extends boolean = false,\n\t// eslint-disable-next-line @typescript-eslint/no-unused-vars\n\tTExcludedMethods extends string = never,\n> extends QueryPromise<TReturning extends undefined ? PgQueryResultKind<TQueryResult, never> : TReturning[]>\n\timplements\n\t\tTypedQueryBuilder<\n\t\t\tTSelectedFields,\n\t\t\tTReturning extends undefined ? PgQueryResultKind<TQueryResult, never> : TReturning[]\n\t\t>,\n\t\tRunnableQuery<TReturning extends undefined ? PgQueryResultKind<TQueryResult, never> : TReturning[], 'pg'>,\n\t\tSQLWrapper\n{\n\tstatic override readonly [entityKind]: string = 'PgInsert';\n\n\tprivate config: PgInsertConfig<TTable>;\n\tprotected cacheConfig?: WithCacheConfig;\n\n\tconstructor(\n\t\ttable: TTable,\n\t\tvalues: PgInsertConfig['values'],\n\t\tprivate session: PgSession,\n\t\tprivate dialect: PgDialect,\n\t\twithList?: Subquery[],\n\t\tselect?: boolean,\n\t\toverridingSystemValue_?: boolean,\n\t) {\n\t\tsuper();\n\t\tthis.config = { table, values: values as any, withList, select, overridingSystemValue_ };\n\t}\n\n\t/**\n\t * Adds a `returning` clause to the query.\n\t *\n\t * Calling this method will return the specified fields of the inserted rows. If no fields are specified, all fields will be returned.\n\t *\n\t * See docs: {@link https://orm.drizzle.team/docs/insert#insert-returning}\n\t *\n\t * @example\n\t * ```ts\n\t * // Insert one row and return all fields\n\t * const insertedCar: Car[] = await db.insert(cars)\n\t *   .values({ brand: 'BMW' })\n\t *   .returning();\n\t *\n\t * // Insert one row and return only the id\n\t * const insertedCarId: { id: number }[] = await db.insert(cars)\n\t *   .values({ brand: 'BMW' })\n\t *   .returning({ id: cars.id });\n\t * ```\n\t */\n\treturning(): PgInsertWithout<PgInsertReturningAll<this, TDynamic>, TDynamic, 'returning'>;\n\treturning<TSelectedFields extends SelectedFieldsFlat>(\n\t\tfields: TSelectedFields,\n\t): PgInsertWithout<PgInsertReturning<this, TDynamic, TSelectedFields>, TDynamic, 'returning'>;\n\treturning(\n\t\tfields: SelectedFieldsFlat = this.config.table[Table.Symbol.Columns],\n\t): PgInsertWithout<AnyPgInsert, TDynamic, 'returning'> {\n\t\tthis.config.returningFields = fields;\n\t\tthis.config.returning = orderSelectedFields<PgColumn>(fields);\n\t\treturn this as any;\n\t}\n\n\t/**\n\t * Adds an `on conflict do nothing` clause to the query.\n\t *\n\t * Calling this method simply avoids inserting a row as its alternative action.\n\t *\n\t * See docs: {@link https://orm.drizzle.team/docs/insert#on-conflict-do-nothing}\n\t *\n\t * @param config The `target` and `where` clauses.\n\t *\n\t * @example\n\t * ```ts\n\t * // Insert one row and cancel the insert if there's a conflict\n\t * await db.insert(cars)\n\t *   .values({ id: 1, brand: 'BMW' })\n\t *   .onConflictDoNothing();\n\t *\n\t * // Explicitly specify conflict target\n\t * await db.insert(cars)\n\t *   .values({ id: 1, brand: 'BMW' })\n\t *   .onConflictDoNothing({ target: cars.id });\n\t * ```\n\t */\n\tonConflictDoNothing(\n\t\tconfig: { target?: IndexColumn | IndexColumn[]; where?: SQL } = {},\n\t): PgInsertWithout<this, TDynamic, 'onConflictDoNothing' | 'onConflictDoUpdate'> {\n\t\tif (config.target === undefined) {\n\t\t\tthis.config.onConflict = sql`do nothing`;\n\t\t} else {\n\t\t\tlet targetColumn = '';\n\t\t\ttargetColumn = Array.isArray(config.target)\n\t\t\t\t? config.target.map((it) => this.dialect.escapeName(this.dialect.casing.getColumnCasing(it))).join(',')\n\t\t\t\t: this.dialect.escapeName(this.dialect.casing.getColumnCasing(config.target));\n\n\t\t\tconst whereSql = config.where ? sql` where ${config.where}` : undefined;\n\t\t\tthis.config.onConflict = sql`(${sql.raw(targetColumn)})${whereSql} do nothing`;\n\t\t}\n\t\treturn this as any;\n\t}\n\n\t/**\n\t * Adds an `on conflict do update` clause to the query.\n\t *\n\t * Calling this method will update the existing row that conflicts with the row proposed for insertion as its alternative action.\n\t *\n\t * See docs: {@link https://orm.drizzle.team/docs/insert#upserts-and-conflicts}\n\t *\n\t * @param config The `target`, `set` and `where` clauses.\n\t *\n\t * @example\n\t * ```ts\n\t * // Update the row if there's a conflict\n\t * await db.insert(cars)\n\t *   .values({ id: 1, brand: 'BMW' })\n\t *   .onConflictDoUpdate({\n\t *     target: cars.id,\n\t *     set: { brand: 'Porsche' }\n\t *   });\n\t *\n\t * // Upsert with 'where' clause\n\t * await db.insert(cars)\n\t *   .values({ id: 1, brand: 'BMW' })\n\t *   .onConflictDoUpdate({\n\t *     target: cars.id,\n\t *     set: { brand: 'newBMW' },\n\t *     targetWhere: sql`${cars.createdAt} > '2023-01-01'::date`,\n\t *   });\n\t * ```\n\t */\n\tonConflictDoUpdate(\n\t\tconfig: PgInsertOnConflictDoUpdateConfig<this>,\n\t): PgInsertWithout<this, TDynamic, 'onConflictDoNothing' | 'onConflictDoUpdate'> {\n\t\tif (config.where && (config.targetWhere || config.setWhere)) {\n\t\t\tthrow new Error(\n\t\t\t\t'You cannot use both \"where\" and \"targetWhere\"/\"setWhere\" at the same time - \"where\" is deprecated, use \"targetWhere\" or \"setWhere\" instead.',\n\t\t\t);\n\t\t}\n\t\tconst whereSql = config.where ? sql` where ${config.where}` : undefined;\n\t\tconst targetWhereSql = config.targetWhere ? sql` where ${config.targetWhere}` : undefined;\n\t\tconst setWhereSql = config.setWhere ? sql` where ${config.setWhere}` : undefined;\n\t\tconst setSql = this.dialect.buildUpdateSet(this.config.table, mapUpdateSet(this.config.table, config.set));\n\t\tlet targetColumn = '';\n\t\ttargetColumn = Array.isArray(config.target)\n\t\t\t? config.target.map((it) => this.dialect.escapeName(this.dialect.casing.getColumnCasing(it))).join(',')\n\t\t\t: this.dialect.escapeName(this.dialect.casing.getColumnCasing(config.target));\n\t\tthis.config.onConflict = sql`(${\n\t\t\tsql.raw(targetColumn)\n\t\t})${targetWhereSql} do update set ${setSql}${whereSql}${setWhereSql}`;\n\t\treturn this as any;\n\t}\n\n\t/** @internal */\n\tgetSQL(): SQL {\n\t\treturn this.dialect.buildInsertQuery(this.config);\n\t}\n\n\ttoSQL(): Query {\n\t\tconst { typings: _typings, ...rest } = this.dialect.sqlToQuery(this.getSQL());\n\t\treturn rest;\n\t}\n\n\t/** @internal */\n\t_prepare(name?: string): PgInsertPrepare<this> {\n\t\treturn tracer.startActiveSpan('drizzle.prepareQuery', () => {\n\t\t\treturn this.session.prepareQuery<\n\t\t\t\tPreparedQueryConfig & {\n\t\t\t\t\texecute: TReturning extends undefined ? PgQueryResultKind<TQueryResult, never> : TReturning[];\n\t\t\t\t}\n\t\t\t>(this.dialect.sqlToQuery(this.getSQL()), this.config.returning, name, true, undefined, {\n\t\t\t\ttype: 'insert',\n\t\t\t\ttables: extractUsedTable(this.config.table),\n\t\t\t}, this.cacheConfig);\n\t\t});\n\t}\n\n\tprepare(name: string): PgInsertPrepare<this> {\n\t\treturn this._prepare(name);\n\t}\n\n\tprivate authToken?: NeonAuthToken;\n\t/** @internal */\n\tsetToken(token?: NeonAuthToken) {\n\t\tthis.authToken = token;\n\t\treturn this;\n\t}\n\n\toverride execute: ReturnType<this['prepare']>['execute'] = (placeholderValues) => {\n\t\treturn tracer.startActiveSpan('drizzle.operation', () => {\n\t\t\treturn this._prepare().execute(placeholderValues, this.authToken);\n\t\t});\n\t};\n\n\t/** @internal */\n\tgetSelectedFields(): this['_']['selectedFields'] {\n\t\treturn (\n\t\t\tthis.config.returningFields\n\t\t\t\t? new Proxy(\n\t\t\t\t\tthis.config.returningFields,\n\t\t\t\t\tnew SelectionProxyHandler({\n\t\t\t\t\t\talias: getTableName(this.config.table),\n\t\t\t\t\t\tsqlAliasedBehavior: 'alias',\n\t\t\t\t\t\tsqlBehavior: 'error',\n\t\t\t\t\t}),\n\t\t\t\t)\n\t\t\t\t: undefined\n\t\t) as this['_']['selectedFields'];\n\t}\n\n\t$dynamic(): PgInsertDynamic<this> {\n\t\treturn this as any;\n\t}\n}\n", "import { entityKind } from '~/entity.ts';\nimport type { PgDialect } from '~/pg-core/dialect.ts';\nimport type {\n\tPgPreparedQuery,\n\tPgQueryResultHKT,\n\tPgQueryResultKind,\n\tPgSession,\n\tPreparedQueryConfig,\n} from '~/pg-core/session.ts';\nimport type { PgMaterializedView } from '~/pg-core/view.ts';\nimport { QueryPromise } from '~/query-promise.ts';\nimport type { RunnableQuery } from '~/runnable-query.ts';\nimport type { Query, SQL, SQLWrapper } from '~/sql/sql.ts';\nimport { tracer } from '~/tracing.ts';\nimport type { NeonAuthToken } from '~/utils';\n\n// eslint-disable-next-line @typescript-eslint/no-empty-interface\nexport interface PgRefreshMaterializedView<TQueryResult extends PgQueryResultHKT>\n\textends\n\t\tQueryPromise<PgQueryResultKind<TQueryResult, never>>,\n\t\tRunnableQuery<PgQueryResultKind<TQueryResult, never>, 'pg'>,\n\t\tSQLWrapper\n{\n\treadonly _: {\n\t\treadonly dialect: 'pg';\n\t\treadonly result: PgQueryResultKind<TQueryResult, never>;\n\t};\n}\n\nexport class PgRefreshMaterializedView<TQueryResult extends PgQueryResultHKT>\n\textends QueryPromise<PgQueryResultKind<TQueryResult, never>>\n\timplements RunnableQuery<PgQueryResultKind<TQueryResult, never>, 'pg'>, SQLWrapper\n{\n\tstatic override readonly [entityKind]: string = 'PgRefreshMaterializedView';\n\n\tprivate config: {\n\t\tview: PgMaterializedView;\n\t\tconcurrently?: boolean;\n\t\twithNoData?: boolean;\n\t};\n\n\tconstructor(\n\t\tview: PgMaterializedView,\n\t\tprivate session: PgSession,\n\t\tprivate dialect: PgDialect,\n\t) {\n\t\tsuper();\n\t\tthis.config = { view };\n\t}\n\n\tconcurrently(): this {\n\t\tif (this.config.withNoData !== undefined) {\n\t\t\tthrow new Error('Cannot use concurrently and withNoData together');\n\t\t}\n\t\tthis.config.concurrently = true;\n\t\treturn this;\n\t}\n\n\twithNoData(): this {\n\t\tif (this.config.concurrently !== undefined) {\n\t\t\tthrow new Error('Cannot use concurrently and withNoData together');\n\t\t}\n\t\tthis.config.withNoData = true;\n\t\treturn this;\n\t}\n\n\t/** @internal */\n\tgetSQL(): SQL {\n\t\treturn this.dialect.buildRefreshMaterializedViewQuery(this.config);\n\t}\n\n\ttoSQL(): Query {\n\t\tconst { typings: _typings, ...rest } = this.dialect.sqlToQuery(this.getSQL());\n\t\treturn rest;\n\t}\n\n\t/** @internal */\n\t_prepare(name?: string): PgPreparedQuery<\n\t\tPreparedQueryConfig & {\n\t\t\texecute: PgQueryResultKind<TQueryResult, never>;\n\t\t}\n\t> {\n\t\treturn tracer.startActiveSpan('drizzle.prepareQuery', () => {\n\t\t\treturn this.session.prepareQuery(this.dialect.sqlToQuery(this.getSQL()), undefined, name, true);\n\t\t});\n\t}\n\n\tprepare(name: string): PgPreparedQuery<\n\t\tPreparedQueryConfig & {\n\t\t\texecute: PgQueryResultKind<TQueryResult, never>;\n\t\t}\n\t> {\n\t\treturn this._prepare(name);\n\t}\n\n\tprivate authToken?: NeonAuthToken;\n\t/** @internal */\n\tsetToken(token: NeonAuthToken) {\n\t\tthis.authToken = token;\n\t\treturn this;\n\t}\n\n\texecute: ReturnType<this['prepare']>['execute'] = (placeholderValues) => {\n\t\treturn tracer.startActiveSpan('drizzle.operation', () => {\n\t\t\treturn this._prepare().execute(placeholderValues, this.authToken);\n\t\t});\n\t};\n}\n", "import type { WithCacheConfig } from '~/cache/core/types.ts';\nimport type { GetColumnData } from '~/column.ts';\nimport { entityKind, is } from '~/entity.ts';\nimport type { PgDialect } from '~/pg-core/dialect.ts';\nimport type {\n\tPgPreparedQuery,\n\tPgQueryResultHKT,\n\tPgQueryResultKind,\n\tPgSession,\n\tPreparedQueryConfig,\n} from '~/pg-core/session.ts';\nimport { PgTable } from '~/pg-core/table.ts';\nimport type { TypedQueryBuilder } from '~/query-builders/query-builder.ts';\nimport type {\n\tAppendToNullabilityMap,\n\tAppendToResult,\n\tGetSelectTableName,\n\tGetSelectTableSelection,\n\tJoinNullability,\n\tJoinType,\n\tSelectMode,\n\tSelectResult,\n} from '~/query-builders/select.types.ts';\nimport { QueryPromise } from '~/query-promise.ts';\nimport type { RunnableQuery } from '~/runnable-query.ts';\nimport { SelectionProxyHandler } from '~/selection-proxy.ts';\nimport { type ColumnsSelection, type Query, SQL, type SQLWrapper } from '~/sql/sql.ts';\nimport { Subquery } from '~/subquery.ts';\nimport { getTableName, Table } from '~/table.ts';\nimport {\n\ttype Assume,\n\ttype DrizzleTypeError,\n\ttype Equal,\n\tgetTableLikeName,\n\tmapUpdateSet,\n\ttype NeonAuthToken,\n\torderSelectedFields,\n\ttype Simplify,\n\ttype UpdateSet,\n} from '~/utils.ts';\nimport { ViewBaseConfig } from '~/view-common.ts';\nimport type { PgColumn } from '../columns/common.ts';\nimport { extractUsedTable } from '../utils.ts';\nimport type { PgViewBase } from '../view-base.ts';\nimport type {\n\tPgSelectJoinConfig,\n\tSelectedFields,\n\tSelectedFieldsOrdered,\n\tTableLikeHasEmptySelection,\n} from './select.types.ts';\n\nexport interface PgUpdateConfig {\n\twhere?: SQL | undefined;\n\tset: UpdateSet;\n\ttable: PgTable;\n\tfrom?: PgTable | Subquery | PgViewBase | SQL;\n\tjoins: PgSelectJoinConfig[];\n\treturningFields?: SelectedFields;\n\treturning?: SelectedFieldsOrdered;\n\twithList?: Subquery[];\n}\n\nexport type PgUpdateSetSource<TTable extends PgTable> =\n\t& {\n\t\t[Key in keyof TTable['$inferInsert']]?:\n\t\t\t| GetColumnData<TTable['_']['columns'][Key]>\n\t\t\t| SQL\n\t\t\t| PgColumn\n\t\t\t| undefined;\n\t}\n\t& {};\n\nexport class PgUpdateBuilder<TTable extends PgTable, TQueryResult extends PgQueryResultHKT> {\n\tstatic readonly [entityKind]: string = 'PgUpdateBuilder';\n\n\tdeclare readonly _: {\n\t\treadonly table: TTable;\n\t};\n\n\tconstructor(\n\t\tprivate table: TTable,\n\t\tprivate session: PgSession,\n\t\tprivate dialect: PgDialect,\n\t\tprivate withList?: Subquery[],\n\t) {}\n\n\tprivate authToken?: NeonAuthToken;\n\tsetToken(token: NeonAuthToken) {\n\t\tthis.authToken = token;\n\t\treturn this;\n\t}\n\n\tset(\n\t\tvalues: PgUpdateSetSource<TTable>,\n\t): PgUpdateWithout<PgUpdateBase<TTable, TQueryResult>, false, 'leftJoin' | 'rightJoin' | 'innerJoin' | 'fullJoin'> {\n\t\treturn new PgUpdateBase<TTable, TQueryResult>(\n\t\t\tthis.table,\n\t\t\tmapUpdateSet(this.table, values),\n\t\t\tthis.session,\n\t\t\tthis.dialect,\n\t\t\tthis.withList,\n\t\t).setToken(this.authToken);\n\t}\n}\n\nexport type PgUpdateWithout<\n\tT extends AnyPgUpdate,\n\tTDynamic extends boolean,\n\tK extends keyof T & string,\n> = TDynamic extends true ? T : Omit<\n\tPgUpdateBase<\n\t\tT['_']['table'],\n\t\tT['_']['queryResult'],\n\t\tT['_']['from'],\n\t\tT['_']['selectedFields'],\n\t\tT['_']['returning'],\n\t\tT['_']['nullabilityMap'],\n\t\tT['_']['joins'],\n\t\tTDynamic,\n\t\tT['_']['excludedMethods'] | K\n\t>,\n\tT['_']['excludedMethods'] | K\n>;\n\nexport type PgUpdateWithJoins<\n\tT extends AnyPgUpdate,\n\tTDynamic extends boolean,\n\tTFrom extends PgTable | Subquery | PgViewBase | SQL,\n> = TDynamic extends true ? T : Omit<\n\tPgUpdateBase<\n\t\tT['_']['table'],\n\t\tT['_']['queryResult'],\n\t\tTFrom,\n\t\tT['_']['selectedFields'],\n\t\tT['_']['returning'],\n\t\tAppendToNullabilityMap<T['_']['nullabilityMap'], GetSelectTableName<TFrom>, 'inner'>,\n\t\t[...T['_']['joins'], {\n\t\t\tname: GetSelectTableName<TFrom>;\n\t\t\tjoinType: 'inner';\n\t\t\ttable: TFrom;\n\t\t}],\n\t\tTDynamic,\n\t\tExclude<T['_']['excludedMethods'] | 'from', 'leftJoin' | 'rightJoin' | 'innerJoin' | 'fullJoin'>\n\t>,\n\tExclude<T['_']['excludedMethods'] | 'from', 'leftJoin' | 'rightJoin' | 'innerJoin' | 'fullJoin'>\n>;\n\nexport type PgUpdateJoinFn<\n\tT extends AnyPgUpdate,\n\tTDynamic extends boolean,\n\tTJoinType extends JoinType,\n> = <\n\tTJoinedTable extends PgTable | Subquery | PgViewBase | SQL,\n>(\n\ttable: TableLikeHasEmptySelection<TJoinedTable> extends true ? DrizzleTypeError<\n\t\t\t\"Cannot reference a data-modifying statement subquery if it doesn't contain a `returning` clause\"\n\t\t>\n\t\t: TJoinedTable,\n\ton:\n\t\t| (\n\t\t\t(\n\t\t\t\tupdateTable: T['_']['table']['_']['columns'],\n\t\t\t\tfrom: T['_']['from'] extends PgTable ? T['_']['from']['_']['columns']\n\t\t\t\t\t: T['_']['from'] extends Subquery | PgViewBase ? T['_']['from']['_']['selectedFields']\n\t\t\t\t\t: never,\n\t\t\t) => SQL | undefined\n\t\t)\n\t\t| SQL\n\t\t| undefined,\n) => PgUpdateJoin<T, TDynamic, TJoinType, TJoinedTable>;\n\nexport type PgUpdateJoin<\n\tT extends AnyPgUpdate,\n\tTDynamic extends boolean,\n\tTJoinType extends JoinType,\n\tTJoinedTable extends PgTable | Subquery | PgViewBase | SQL,\n> = TDynamic extends true ? T : PgUpdateBase<\n\tT['_']['table'],\n\tT['_']['queryResult'],\n\tT['_']['from'],\n\tT['_']['selectedFields'],\n\tT['_']['returning'],\n\tAppendToNullabilityMap<T['_']['nullabilityMap'], GetSelectTableName<TJoinedTable>, TJoinType>,\n\t[...T['_']['joins'], {\n\t\tname: GetSelectTableName<TJoinedTable>;\n\t\tjoinType: TJoinType;\n\t\ttable: TJoinedTable;\n\t}],\n\tTDynamic,\n\tT['_']['excludedMethods']\n>;\n\ntype Join = {\n\tname: string | undefined;\n\tjoinType: JoinType;\n\ttable: PgTable | Subquery | PgViewBase | SQL;\n};\n\ntype AccumulateToResult<\n\tT extends AnyPgUpdate,\n\tTSelectMode extends SelectMode,\n\tTJoins extends Join[],\n\tTSelectedFields extends ColumnsSelection,\n> = TJoins extends [infer TJoin extends Join, ...infer TRest extends Join[]] ? AccumulateToResult<\n\t\tT,\n\t\tTSelectMode extends 'partial' ? TSelectMode : 'multiple',\n\t\tTRest,\n\t\tAppendToResult<\n\t\t\tT['_']['table']['_']['name'],\n\t\t\tTSelectedFields,\n\t\t\tTJoin['name'],\n\t\t\tTJoin['table'] extends Table ? TJoin['table']['_']['columns']\n\t\t\t\t: TJoin['table'] extends Subquery ? Assume<TJoin['table']['_']['selectedFields'], SelectedFields>\n\t\t\t\t: never,\n\t\t\tTSelectMode extends 'partial' ? TSelectMode : 'multiple'\n\t\t>\n\t>\n\t: TSelectedFields;\n\nexport type PgUpdateReturningAll<T extends AnyPgUpdate, TDynamic extends boolean> = PgUpdateWithout<\n\tPgUpdateBase<\n\t\tT['_']['table'],\n\t\tT['_']['queryResult'],\n\t\tT['_']['from'],\n\t\tEqual<T['_']['joins'], []> extends true ? T['_']['table']['_']['columns'] : Simplify<\n\t\t\t& Record<T['_']['table']['_']['name'], T['_']['table']['_']['columns']>\n\t\t\t& {\n\t\t\t\t[K in keyof T['_']['joins'] as T['_']['joins'][K]['table']['_']['name']]:\n\t\t\t\t\tT['_']['joins'][K]['table']['_']['columns'];\n\t\t\t}\n\t\t>,\n\t\tSelectResult<\n\t\t\tAccumulateToResult<\n\t\t\t\tT,\n\t\t\t\t'single',\n\t\t\t\tT['_']['joins'],\n\t\t\t\tGetSelectTableSelection<T['_']['table']>\n\t\t\t>,\n\t\t\t'partial',\n\t\t\tT['_']['nullabilityMap']\n\t\t>,\n\t\tT['_']['nullabilityMap'],\n\t\tT['_']['joins'],\n\t\tTDynamic,\n\t\tT['_']['excludedMethods']\n\t>,\n\tTDynamic,\n\t'returning'\n>;\n\nexport type PgUpdateReturning<\n\tT extends AnyPgUpdate,\n\tTDynamic extends boolean,\n\tTSelectedFields extends SelectedFields,\n> = PgUpdateWithout<\n\tPgUpdateBase<\n\t\tT['_']['table'],\n\t\tT['_']['queryResult'],\n\t\tT['_']['from'],\n\t\tTSelectedFields,\n\t\tSelectResult<\n\t\t\tAccumulateToResult<\n\t\t\t\tT,\n\t\t\t\t'partial',\n\t\t\t\tT['_']['joins'],\n\t\t\t\tTSelectedFields\n\t\t\t>,\n\t\t\t'partial',\n\t\t\tT['_']['nullabilityMap']\n\t\t>,\n\t\tT['_']['nullabilityMap'],\n\t\tT['_']['joins'],\n\t\tTDynamic,\n\t\tT['_']['excludedMethods']\n\t>,\n\tTDynamic,\n\t'returning'\n>;\n\nexport type PgUpdatePrepare<T extends AnyPgUpdate> = PgPreparedQuery<\n\tPreparedQueryConfig & {\n\t\texecute: T['_']['returning'] extends undefined ? PgQueryResultKind<T['_']['queryResult'], never>\n\t\t\t: T['_']['returning'][];\n\t}\n>;\n\nexport type PgUpdateDynamic<T extends AnyPgUpdate> = PgUpdate<\n\tT['_']['table'],\n\tT['_']['queryResult'],\n\tT['_']['from'],\n\tT['_']['returning'],\n\tT['_']['nullabilityMap']\n>;\n\nexport type PgUpdate<\n\tTTable extends PgTable = PgTable,\n\tTQueryResult extends PgQueryResultHKT = PgQueryResultHKT,\n\tTFrom extends PgTable | Subquery | PgViewBase | SQL | undefined = undefined,\n\tTSelectedFields extends ColumnsSelection | undefined = undefined,\n\tTReturning extends Record<string, unknown> | undefined = Record<string, unknown> | undefined,\n\tTNullabilityMap extends Record<string, JoinNullability> = Record<TTable['_']['name'], 'not-null'>,\n\tTJoins extends Join[] = [],\n> = PgUpdateBase<TTable, TQueryResult, TFrom, TSelectedFields, TReturning, TNullabilityMap, TJoins, true, never>;\n\nexport type AnyPgUpdate = PgUpdateBase<any, any, any, any, any, any, any, any, any>;\n\nexport interface PgUpdateBase<\n\tTTable extends PgTable,\n\tTQueryResult extends PgQueryResultHKT,\n\tTFrom extends PgTable | Subquery | PgViewBase | SQL | undefined = undefined,\n\tTSelectedFields extends ColumnsSelection | undefined = undefined,\n\tTReturning extends Record<string, unknown> | undefined = undefined,\n\tTNullabilityMap extends Record<string, JoinNullability> = Record<TTable['_']['name'], 'not-null'>,\n\tTJoins extends Join[] = [],\n\tTDynamic extends boolean = false,\n\tTExcludedMethods extends string = never,\n> extends\n\tTypedQueryBuilder<\n\t\tTSelectedFields,\n\t\tTReturning extends undefined ? PgQueryResultKind<TQueryResult, never> : TReturning[]\n\t>,\n\tQueryPromise<TReturning extends undefined ? PgQueryResultKind<TQueryResult, never> : TReturning[]>,\n\tRunnableQuery<TReturning extends undefined ? PgQueryResultKind<TQueryResult, never> : TReturning[], 'pg'>,\n\tSQLWrapper\n{\n\treadonly _: {\n\t\treadonly dialect: 'pg';\n\t\treadonly table: TTable;\n\t\treadonly joins: TJoins;\n\t\treadonly nullabilityMap: TNullabilityMap;\n\t\treadonly queryResult: TQueryResult;\n\t\treadonly from: TFrom;\n\t\treadonly selectedFields: TSelectedFields;\n\t\treadonly returning: TReturning;\n\t\treadonly dynamic: TDynamic;\n\t\treadonly excludedMethods: TExcludedMethods;\n\t\treadonly result: TReturning extends undefined ? PgQueryResultKind<TQueryResult, never> : TReturning[];\n\t};\n}\n\nexport class PgUpdateBase<\n\tTTable extends PgTable,\n\tTQueryResult extends PgQueryResultHKT,\n\tTFrom extends PgTable | Subquery | PgViewBase | SQL | undefined = undefined,\n\t// eslint-disable-next-line @typescript-eslint/no-unused-vars\n\tTSelectedFields extends ColumnsSelection | undefined = undefined,\n\tTReturning extends Record<string, unknown> | undefined = undefined,\n\t// eslint-disable-next-line @typescript-eslint/no-unused-vars\n\tTNullabilityMap extends Record<string, JoinNullability> = Record<TTable['_']['name'], 'not-null'>,\n\t// eslint-disable-next-line @typescript-eslint/no-unused-vars\n\tTJoins extends Join[] = [],\n\t// eslint-disable-next-line @typescript-eslint/no-unused-vars\n\tTDynamic extends boolean = false,\n\t// eslint-disable-next-line @typescript-eslint/no-unused-vars\n\tTExcludedMethods extends string = never,\n> extends QueryPromise<TReturning extends undefined ? PgQueryResultKind<TQueryResult, never> : TReturning[]>\n\timplements\n\t\tRunnableQuery<TReturning extends undefined ? PgQueryResultKind<TQueryResult, never> : TReturning[], 'pg'>,\n\t\tSQLWrapper\n{\n\tstatic override readonly [entityKind]: string = 'PgUpdate';\n\n\tprivate config: PgUpdateConfig;\n\tprivate tableName: string | undefined;\n\tprivate joinsNotNullableMap: Record<string, boolean>;\n\tprotected cacheConfig?: WithCacheConfig;\n\n\tconstructor(\n\t\ttable: TTable,\n\t\tset: UpdateSet,\n\t\tprivate session: PgSession,\n\t\tprivate dialect: PgDialect,\n\t\twithList?: Subquery[],\n\t) {\n\t\tsuper();\n\t\tthis.config = { set, table, withList, joins: [] };\n\t\tthis.tableName = getTableLikeName(table);\n\t\tthis.joinsNotNullableMap = typeof this.tableName === 'string' ? { [this.tableName]: true } : {};\n\t}\n\n\tfrom<TFrom extends PgTable | Subquery | PgViewBase | SQL>(\n\t\tsource: TableLikeHasEmptySelection<TFrom> extends true ? DrizzleTypeError<\n\t\t\t\t\"Cannot reference a data-modifying statement subquery if it doesn't contain a `returning` clause\"\n\t\t\t>\n\t\t\t: TFrom,\n\t): PgUpdateWithJoins<this, TDynamic, TFrom> {\n\t\tconst src = source as TFrom;\n\t\tconst tableName = getTableLikeName(src);\n\t\tif (typeof tableName === 'string') {\n\t\t\tthis.joinsNotNullableMap[tableName] = true;\n\t\t}\n\t\tthis.config.from = src;\n\t\treturn this as any;\n\t}\n\n\tprivate getTableLikeFields(table: PgTable | Subquery | PgViewBase): Record<string, unknown> {\n\t\tif (is(table, PgTable)) {\n\t\t\treturn table[Table.Symbol.Columns];\n\t\t} else if (is(table, Subquery)) {\n\t\t\treturn table._.selectedFields;\n\t\t}\n\t\treturn table[ViewBaseConfig].selectedFields;\n\t}\n\n\tprivate createJoin<TJoinType extends JoinType>(\n\t\tjoinType: TJoinType,\n\t): PgUpdateJoinFn<this, TDynamic, TJoinType> {\n\t\treturn ((\n\t\t\ttable: PgTable | Subquery | PgViewBase | SQL,\n\t\t\ton: ((updateTable: TTable, from: TFrom) => SQL | undefined) | SQL | undefined,\n\t\t) => {\n\t\t\tconst tableName = getTableLikeName(table);\n\n\t\t\tif (typeof tableName === 'string' && this.config.joins.some((join) => join.alias === tableName)) {\n\t\t\t\tthrow new Error(`Alias \"${tableName}\" is already used in this query`);\n\t\t\t}\n\n\t\t\tif (typeof on === 'function') {\n\t\t\t\tconst from = this.config.from && !is(this.config.from, SQL)\n\t\t\t\t\t? this.getTableLikeFields(this.config.from)\n\t\t\t\t\t: undefined;\n\t\t\t\ton = on(\n\t\t\t\t\tnew Proxy(\n\t\t\t\t\t\tthis.config.table[Table.Symbol.Columns],\n\t\t\t\t\t\tnew SelectionProxyHandler({ sqlAliasedBehavior: 'sql', sqlBehavior: 'sql' }),\n\t\t\t\t\t) as any,\n\t\t\t\t\tfrom && new Proxy(\n\t\t\t\t\t\tfrom,\n\t\t\t\t\t\tnew SelectionProxyHandler({ sqlAliasedBehavior: 'sql', sqlBehavior: 'sql' }),\n\t\t\t\t\t) as any,\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tthis.config.joins.push({ on, table, joinType, alias: tableName });\n\n\t\t\tif (typeof tableName === 'string') {\n\t\t\t\tswitch (joinType) {\n\t\t\t\t\tcase 'left': {\n\t\t\t\t\t\tthis.joinsNotNullableMap[tableName] = false;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tcase 'right': {\n\t\t\t\t\t\tthis.joinsNotNullableMap = Object.fromEntries(\n\t\t\t\t\t\t\tObject.entries(this.joinsNotNullableMap).map(([key]) => [key, false]),\n\t\t\t\t\t\t);\n\t\t\t\t\t\tthis.joinsNotNullableMap[tableName] = true;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tcase 'inner': {\n\t\t\t\t\t\tthis.joinsNotNullableMap[tableName] = true;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tcase 'full': {\n\t\t\t\t\t\tthis.joinsNotNullableMap = Object.fromEntries(\n\t\t\t\t\t\t\tObject.entries(this.joinsNotNullableMap).map(([key]) => [key, false]),\n\t\t\t\t\t\t);\n\t\t\t\t\t\tthis.joinsNotNullableMap[tableName] = false;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn this as any;\n\t\t}) as any;\n\t}\n\n\tleftJoin = this.createJoin('left');\n\n\trightJoin = this.createJoin('right');\n\n\tinnerJoin = this.createJoin('inner');\n\n\tfullJoin = this.createJoin('full');\n\n\t/**\n\t * Adds a 'where' clause to the query.\n\t *\n\t * Calling this method will update only those rows that fulfill a specified condition.\n\t *\n\t * See docs: {@link https://orm.drizzle.team/docs/update}\n\t *\n\t * @param where the 'where' clause.\n\t *\n\t * @example\n\t * You can use conditional operators and `sql function` to filter the rows to be updated.\n\t *\n\t * ```ts\n\t * // Update all cars with green color\n\t * await db.update(cars).set({ color: 'red' })\n\t *   .where(eq(cars.color, 'green'));\n\t * // or\n\t * await db.update(cars).set({ color: 'red' })\n\t *   .where(sql`${cars.color} = 'green'`)\n\t * ```\n\t *\n\t * You can logically combine conditional operators with `and()` and `or()` operators:\n\t *\n\t * ```ts\n\t * // Update all BMW cars with a green color\n\t * await db.update(cars).set({ color: 'red' })\n\t *   .where(and(eq(cars.color, 'green'), eq(cars.brand, 'BMW')));\n\t *\n\t * // Update all cars with the green or blue color\n\t * await db.update(cars).set({ color: 'red' })\n\t *   .where(or(eq(cars.color, 'green'), eq(cars.color, 'blue')));\n\t * ```\n\t */\n\twhere(where: SQL | undefined): PgUpdateWithout<this, TDynamic, 'where'> {\n\t\tthis.config.where = where;\n\t\treturn this as any;\n\t}\n\n\t/**\n\t * Adds a `returning` clause to the query.\n\t *\n\t * Calling this method will return the specified fields of the updated rows. If no fields are specified, all fields will be returned.\n\t *\n\t * See docs: {@link https://orm.drizzle.team/docs/update#update-with-returning}\n\t *\n\t * @example\n\t * ```ts\n\t * // Update all cars with the green color and return all fields\n\t * const updatedCars: Car[] = await db.update(cars)\n\t *   .set({ color: 'red' })\n\t *   .where(eq(cars.color, 'green'))\n\t *   .returning();\n\t *\n\t * // Update all cars with the green color and return only their id and brand fields\n\t * const updatedCarsIdsAndBrands: { id: number, brand: string }[] = await db.update(cars)\n\t *   .set({ color: 'red' })\n\t *   .where(eq(cars.color, 'green'))\n\t *   .returning({ id: cars.id, brand: cars.brand });\n\t * ```\n\t */\n\treturning(): PgUpdateReturningAll<this, TDynamic>;\n\treturning<TSelectedFields extends SelectedFields>(\n\t\tfields: TSelectedFields,\n\t): PgUpdateReturning<this, TDynamic, TSelectedFields>;\n\treturning(\n\t\tfields?: SelectedFields,\n\t): PgUpdateWithout<AnyPgUpdate, TDynamic, 'returning'> {\n\t\tif (!fields) {\n\t\t\tfields = Object.assign({}, this.config.table[Table.Symbol.Columns]);\n\n\t\t\tif (this.config.from) {\n\t\t\t\tconst tableName = getTableLikeName(this.config.from);\n\n\t\t\t\tif (typeof tableName === 'string' && this.config.from && !is(this.config.from, SQL)) {\n\t\t\t\t\tconst fromFields = this.getTableLikeFields(this.config.from);\n\t\t\t\t\tfields[tableName] = fromFields as any;\n\t\t\t\t}\n\n\t\t\t\tfor (const join of this.config.joins) {\n\t\t\t\t\tconst tableName = getTableLikeName(join.table);\n\n\t\t\t\t\tif (typeof tableName === 'string' && !is(join.table, SQL)) {\n\t\t\t\t\t\tconst fromFields = this.getTableLikeFields(join.table);\n\t\t\t\t\t\tfields[tableName] = fromFields as any;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis.config.returningFields = fields;\n\t\tthis.config.returning = orderSelectedFields<PgColumn>(fields);\n\t\treturn this as any;\n\t}\n\n\t/** @internal */\n\tgetSQL(): SQL {\n\t\treturn this.dialect.buildUpdateQuery(this.config);\n\t}\n\n\ttoSQL(): Query {\n\t\tconst { typings: _typings, ...rest } = this.dialect.sqlToQuery(this.getSQL());\n\t\treturn rest;\n\t}\n\n\t/** @internal */\n\t_prepare(name?: string): PgUpdatePrepare<this> {\n\t\tconst query = this.session.prepareQuery<\n\t\t\tPreparedQueryConfig & { execute: TReturning[] }\n\t\t>(this.dialect.sqlToQuery(this.getSQL()), this.config.returning, name, true, undefined, {\n\t\t\ttype: 'insert',\n\t\t\ttables: extractUsedTable(this.config.table),\n\t\t}, this.cacheConfig);\n\t\tquery.joinsNotNullableMap = this.joinsNotNullableMap;\n\t\treturn query;\n\t}\n\n\tprepare(name: string): PgUpdatePrepare<this> {\n\t\treturn this._prepare(name);\n\t}\n\n\tprivate authToken?: NeonAuthToken;\n\t/** @internal */\n\tsetToken(token?: NeonAuthToken) {\n\t\tthis.authToken = token;\n\t\treturn this;\n\t}\n\n\toverride execute: ReturnType<this['prepare']>['execute'] = (placeholderValues) => {\n\t\treturn this._prepare().execute(placeholderValues, this.authToken);\n\t};\n\n\t/** @internal */\n\tgetSelectedFields(): this['_']['selectedFields'] {\n\t\treturn (\n\t\t\tthis.config.returningFields\n\t\t\t\t? new Proxy(\n\t\t\t\t\tthis.config.returningFields,\n\t\t\t\t\tnew SelectionProxyHandler({\n\t\t\t\t\t\talias: getTableName(this.config.table),\n\t\t\t\t\t\tsqlAliasedBehavior: 'alias',\n\t\t\t\t\t\tsqlBehavior: 'error',\n\t\t\t\t\t}),\n\t\t\t\t)\n\t\t\t\t: undefined\n\t\t) as this['_']['selectedFields'];\n\t}\n\n\t$dynamic(): PgUpdateDynamic<this> {\n\t\treturn this as any;\n\t}\n}\n", "import { entityKind } from '~/entity.ts';\nimport { SQL, sql, type SQLWrapper } from '~/sql/sql.ts';\nimport type { NeonAuthToken } from '~/utils.ts';\nimport type { PgSession } from '../session.ts';\nimport type { PgTable } from '../table.ts';\n\nexport class PgCountBuilder<\n\tTSession extends PgSession<any, any, any>,\n> extends SQL<number> implements Promise<number>, SQLWrapper {\n\tprivate sql: SQL<number>;\n\tprivate token?: NeonAuthToken;\n\n\tstatic override readonly [entityKind] = 'PgCountBuilder';\n\t[Symbol.toStringTag] = 'PgCountBuilder';\n\n\tprivate session: TSession;\n\n\tprivate static buildEmbeddedCount(\n\t\tsource: PgTable | SQL | SQLWrapper,\n\t\tfilters?: SQL<unknown>,\n\t): SQL<number> {\n\t\treturn sql<number>`(select count(*) from ${source}${sql.raw(' where ').if(filters)}${filters})`;\n\t}\n\n\tprivate static buildCount(\n\t\tsource: PgTable | SQL | SQLWrapper,\n\t\tfilters?: SQL<unknown>,\n\t): SQL<number> {\n\t\treturn sql<number>`select count(*) as count from ${source}${sql.raw(' where ').if(filters)}${filters};`;\n\t}\n\n\tconstructor(\n\t\treadonly params: {\n\t\t\tsource: PgTable | SQL | SQLWrapper;\n\t\t\tfilters?: SQL<unknown>;\n\t\t\tsession: TSession;\n\t\t},\n\t) {\n\t\tsuper(PgCountBuilder.buildEmbeddedCount(params.source, params.filters).queryChunks);\n\n\t\tthis.mapWith(Number);\n\n\t\tthis.session = params.session;\n\n\t\tthis.sql = PgCountBuilder.buildCount(\n\t\t\tparams.source,\n\t\t\tparams.filters,\n\t\t);\n\t}\n\n\t/** @intrnal */\n\tsetToken(token?: NeonAuthToken) {\n\t\tthis.token = token;\n\t\treturn this;\n\t}\n\n\tthen<TResult1 = number, TResult2 = never>(\n\t\tonfulfilled?: ((value: number) => TResult1 | PromiseLike<TResult1>) | null | undefined,\n\t\tonrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | null | undefined,\n\t): Promise<TResult1 | TResult2> {\n\t\treturn Promise.resolve(this.session.count(this.sql, this.token))\n\t\t\t.then(\n\t\t\t\tonfulfilled,\n\t\t\t\tonrejected,\n\t\t\t);\n\t}\n\n\tcatch(\n\t\tonRejected?: ((reason: any) => any) | null | undefined,\n\t): Promise<number> {\n\t\treturn this.then(undefined, onRejected);\n\t}\n\n\tfinally(onFinally?: (() => void) | null | undefined): Promise<number> {\n\t\treturn this.then(\n\t\t\t(value) => {\n\t\t\t\tonFinally?.();\n\t\t\t\treturn value;\n\t\t\t},\n\t\t\t(reason) => {\n\t\t\t\tonFinally?.();\n\t\t\t\tthrow reason;\n\t\t\t},\n\t\t);\n\t}\n}\n", "import { entityKind } from '~/entity.ts';\nimport { QueryPromise } from '~/query-promise.ts';\nimport {\n\ttype BuildQueryResult,\n\ttype BuildRelationalQueryResult,\n\ttype DBQueryConfig,\n\tmapRelationalRow,\n\ttype TableRelationalConfig,\n\ttype TablesRelationalConfig,\n} from '~/relations.ts';\nimport type { RunnableQuery } from '~/runnable-query.ts';\nimport type { Query, QueryWithTypings, SQL, SQLWrapper } from '~/sql/sql.ts';\nimport { tracer } from '~/tracing.ts';\nimport type { KnownKeysOnly, NeonAuthToken } from '~/utils.ts';\nimport type { PgDialect } from '../dialect.ts';\nimport type { PgPreparedQuery, PgSession, PreparedQueryConfig } from '../session.ts';\nimport type { PgTable } from '../table.ts';\n\nexport class RelationalQueryBuilder<TSchema extends TablesRelationalConfig, TFields extends TableRelationalConfig> {\n\tstatic readonly [entityKind]: string = 'PgRelationalQueryBuilder';\n\n\tconstructor(\n\t\tprivate fullSchema: Record<string, unknown>,\n\t\tprivate schema: TSchema,\n\t\tprivate tableNamesMap: Record<string, string>,\n\t\tprivate table: PgTable,\n\t\tprivate tableConfig: TableRelationalConfig,\n\t\tprivate dialect: PgDialect,\n\t\tprivate session: PgSession,\n\t) {}\n\n\tfindMany<TConfig extends DBQueryConfig<'many', true, TSchema, TFields>>(\n\t\tconfig?: KnownKeysOnly<TConfig, DBQueryConfig<'many', true, TSchema, TFields>>,\n\t): PgRelationalQuery<BuildQueryResult<TSchema, TFields, TConfig>[]> {\n\t\treturn new PgRelationalQuery(\n\t\t\tthis.fullSchema,\n\t\t\tthis.schema,\n\t\t\tthis.tableNamesMap,\n\t\t\tthis.table,\n\t\t\tthis.tableConfig,\n\t\t\tthis.dialect,\n\t\t\tthis.session,\n\t\t\tconfig ? (config as DBQueryConfig<'many', true>) : {},\n\t\t\t'many',\n\t\t);\n\t}\n\n\tfindFirst<TSelection extends Omit<DBQueryConfig<'many', true, TSchema, TFields>, 'limit'>>(\n\t\tconfig?: KnownKeysOnly<TSelection, Omit<DBQueryConfig<'many', true, TSchema, TFields>, 'limit'>>,\n\t): PgRelationalQuery<BuildQueryResult<TSchema, TFields, TSelection> | undefined> {\n\t\treturn new PgRelationalQuery(\n\t\t\tthis.fullSchema,\n\t\t\tthis.schema,\n\t\t\tthis.tableNamesMap,\n\t\t\tthis.table,\n\t\t\tthis.tableConfig,\n\t\t\tthis.dialect,\n\t\t\tthis.session,\n\t\t\tconfig ? { ...(config as DBQueryConfig<'many', true> | undefined), limit: 1 } : { limit: 1 },\n\t\t\t'first',\n\t\t);\n\t}\n}\n\nexport class PgRelationalQuery<TResult> extends QueryPromise<TResult>\n\timplements RunnableQuery<TResult, 'pg'>, SQLWrapper\n{\n\tstatic override readonly [entityKind]: string = 'PgRelationalQuery';\n\n\tdeclare readonly _: {\n\t\treadonly dialect: 'pg';\n\t\treadonly result: TResult;\n\t};\n\n\tconstructor(\n\t\tprivate fullSchema: Record<string, unknown>,\n\t\tprivate schema: TablesRelationalConfig,\n\t\tprivate tableNamesMap: Record<string, string>,\n\t\tprivate table: PgTable,\n\t\tprivate tableConfig: TableRelationalConfig,\n\t\tprivate dialect: PgDialect,\n\t\tprivate session: PgSession,\n\t\tprivate config: DBQueryConfig<'many', true> | true,\n\t\tprivate mode: 'many' | 'first',\n\t) {\n\t\tsuper();\n\t}\n\n\t/** @internal */\n\t_prepare(name?: string): PgPreparedQuery<PreparedQueryConfig & { execute: TResult }> {\n\t\treturn tracer.startActiveSpan('drizzle.prepareQuery', () => {\n\t\t\tconst { query, builtQuery } = this._toSQL();\n\n\t\t\treturn this.session.prepareQuery<PreparedQueryConfig & { execute: TResult }>(\n\t\t\t\tbuiltQuery,\n\t\t\t\tundefined,\n\t\t\t\tname,\n\t\t\t\ttrue,\n\t\t\t\t(rawRows, mapColumnValue) => {\n\t\t\t\t\tconst rows = rawRows.map((row) =>\n\t\t\t\t\t\tmapRelationalRow(this.schema, this.tableConfig, row, query.selection, mapColumnValue)\n\t\t\t\t\t);\n\t\t\t\t\tif (this.mode === 'first') {\n\t\t\t\t\t\treturn rows[0] as TResult;\n\t\t\t\t\t}\n\t\t\t\t\treturn rows as TResult;\n\t\t\t\t},\n\t\t\t);\n\t\t});\n\t}\n\n\tprepare(name: string): PgPreparedQuery<PreparedQueryConfig & { execute: TResult }> {\n\t\treturn this._prepare(name);\n\t}\n\n\tprivate _getQuery() {\n\t\treturn this.dialect.buildRelationalQueryWithoutPK({\n\t\t\tfullSchema: this.fullSchema,\n\t\t\tschema: this.schema,\n\t\t\ttableNamesMap: this.tableNamesMap,\n\t\t\ttable: this.table,\n\t\t\ttableConfig: this.tableConfig,\n\t\t\tqueryConfig: this.config,\n\t\t\ttableAlias: this.tableConfig.tsName,\n\t\t});\n\t}\n\n\t/** @internal */\n\tgetSQL(): SQL {\n\t\treturn this._getQuery().sql as SQL;\n\t}\n\n\tprivate _toSQL(): { query: BuildRelationalQueryResult; builtQuery: QueryWithTypings } {\n\t\tconst query = this._getQuery();\n\n\t\tconst builtQuery = this.dialect.sqlToQuery(query.sql as SQL);\n\n\t\treturn { query, builtQuery };\n\t}\n\n\ttoSQL(): Query {\n\t\treturn this._toSQL().builtQuery;\n\t}\n\n\tprivate authToken?: NeonAuthToken;\n\t/** @internal */\n\tsetToken(token?: NeonAuthToken) {\n\t\tthis.authToken = token;\n\t\treturn this;\n\t}\n\n\toverride execute(): Promise<TResult> {\n\t\treturn tracer.startActiveSpan('drizzle.operation', () => {\n\t\t\treturn this._prepare().execute(undefined, this.authToken);\n\t\t});\n\t}\n}\n", "import { entityKind } from '~/entity.ts';\nimport { QueryPromise } from '~/query-promise.ts';\nimport type { RunnableQuery } from '~/runnable-query.ts';\nimport type { PreparedQuery } from '~/session.ts';\nimport type { Query, SQL, SQLWrapper } from '~/sql/sql.ts';\n\nexport interface PgRaw<TResult> extends QueryPromise<TResult>, RunnableQuery<TResult, 'pg'>, SQLWrapper {}\n\nexport class PgRaw<TResult> extends QueryPromise<TResult>\n\timplements RunnableQuery<TResult, 'pg'>, SQLWrapper, PreparedQuery\n{\n\tstatic override readonly [entityKind]: string = 'PgRaw';\n\n\tdeclare readonly _: {\n\t\treadonly dialect: 'pg';\n\t\treadonly result: TResult;\n\t};\n\n\tconstructor(\n\t\tpublic execute: () => Promise<TResult>,\n\t\tprivate sql: SQL,\n\t\tprivate query: Query,\n\t\tprivate mapBatchResult: (result: unknown) => unknown,\n\t) {\n\t\tsuper();\n\t}\n\n\t/** @internal */\n\tgetSQL() {\n\t\treturn this.sql;\n\t}\n\n\tgetQuery() {\n\t\treturn this.query;\n\t}\n\n\tmapResult(result: unknown, isFromBatch?: boolean) {\n\t\treturn isFromBatch ? this.mapBatchResult(result) : result;\n\t}\n\n\t_prepare(): PreparedQuery {\n\t\treturn this;\n\t}\n\n\t/** @internal */\n\tisResponseInArrayMode() {\n\t\treturn false;\n\t}\n}\n", "import type { FullQueryResults, NeonQueryFunction, NeonQueryPromise } from '@neondatabase/serverless';\nimport type { BatchItem } from '~/batch.ts';\nimport { type Cache, NoopCache } from '~/cache/core/index.ts';\nimport type { WithCacheConfig } from '~/cache/core/types.ts';\nimport { entityKind } from '~/entity.ts';\nimport type { Logger } from '~/logger.ts';\nimport { NoopLogger } from '~/logger.ts';\nimport type { PgDialect } from '~/pg-core/dialect.ts';\nimport { PgTransaction } from '~/pg-core/index.ts';\nimport type { SelectedFieldsOrdered } from '~/pg-core/query-builders/select.types.ts';\nimport type { PgQueryResultHKT, PgTransactionConfig, PreparedQueryConfig } from '~/pg-core/session.ts';\nimport { PgPreparedQuery as PgPreparedQuery, PgSession } from '~/pg-core/session.ts';\nimport type { RelationalSchemaConfig, TablesRelationalConfig } from '~/relations.ts';\nimport type { PreparedQuery } from '~/session.ts';\nimport { fillPlaceholders, type Query, type SQL } from '~/sql/sql.ts';\nimport { mapResultRow, type NeonAuthToken } from '~/utils.ts';\n\nexport type NeonHttpClient = NeonQueryFunction<any, any>;\n\nconst rawQueryConfig = {\n\tarrayMode: false,\n\tfullResults: true,\n} as const;\nconst queryConfig = {\n\tarrayMode: true,\n\tfullResults: true,\n} as const;\n\nexport class NeonHttpPreparedQuery<T extends PreparedQueryConfig> extends PgPreparedQuery<T> {\n\tstatic override readonly [entityKind]: string = 'NeonHttpPreparedQuery';\n\tprivate clientQuery: (sql: string, params: any[], opts: Record<string, any>) => NeonQueryPromise<any, any>;\n\n\tconstructor(\n\t\tprivate client: NeonHttpClient,\n\t\tquery: Query,\n\t\tprivate logger: Logger,\n\t\tcache: Cache,\n\t\tqueryMetadata: {\n\t\t\ttype: 'select' | 'update' | 'delete' | 'insert';\n\t\t\ttables: string[];\n\t\t} | undefined,\n\t\tcacheConfig: WithCacheConfig | undefined,\n\t\tprivate fields: SelectedFieldsOrdered | undefined,\n\t\tprivate _isResponseInArrayMode: boolean,\n\t\tprivate customResultMapper?: (rows: unknown[][]) => T['execute'],\n\t) {\n\t\tsuper(query, cache, queryMetadata, cacheConfig);\n\t\t// `client.query` is for @neondatabase/serverless v1.0.0 and up, where the\n\t\t// root query function `client` is only usable as a template function;\n\t\t// `client` is a fallback for earlier versions\n\t\tthis.clientQuery = (client as any).query ?? client as any;\n\t}\n\n\tasync execute(placeholderValues: Record<string, unknown> | undefined): Promise<T['execute']>;\n\t/** @internal */\n\tasync execute(placeholderValues: Record<string, unknown> | undefined, token?: NeonAuthToken): Promise<T['execute']>;\n\t/** @internal */\n\tasync execute(\n\t\tplaceholderValues: Record<string, unknown> | undefined = {},\n\t\ttoken: NeonAuthToken | undefined = this.authToken,\n\t): Promise<T['execute']> {\n\t\tconst params = fillPlaceholders(this.query.params, placeholderValues);\n\n\t\tthis.logger.logQuery(this.query.sql, params);\n\n\t\tconst { fields, clientQuery, query, customResultMapper } = this;\n\n\t\tif (!fields && !customResultMapper) {\n\t\t\treturn this.queryWithCache(query.sql, params, async () => {\n\t\t\t\treturn clientQuery(\n\t\t\t\t\tquery.sql,\n\t\t\t\t\tparams,\n\t\t\t\t\ttoken === undefined\n\t\t\t\t\t\t? rawQueryConfig\n\t\t\t\t\t\t: {\n\t\t\t\t\t\t\t...rawQueryConfig,\n\t\t\t\t\t\t\tauthToken: token,\n\t\t\t\t\t\t},\n\t\t\t\t);\n\t\t\t});\n\t\t}\n\n\t\tconst result = await this.queryWithCache(query.sql, params, async () => {\n\t\t\treturn await clientQuery(\n\t\t\t\tquery.sql,\n\t\t\t\tparams,\n\t\t\t\ttoken === undefined\n\t\t\t\t\t? queryConfig\n\t\t\t\t\t: {\n\t\t\t\t\t\t...queryConfig,\n\t\t\t\t\t\tauthToken: token,\n\t\t\t\t\t},\n\t\t\t);\n\t\t});\n\n\t\treturn this.mapResult(result);\n\t}\n\n\toverride mapResult(result: unknown): unknown {\n\t\tif (!this.fields && !this.customResultMapper) {\n\t\t\treturn result;\n\t\t}\n\n\t\tconst rows = (result as FullQueryResults<true>).rows;\n\n\t\tif (this.customResultMapper) {\n\t\t\treturn this.customResultMapper(rows);\n\t\t}\n\n\t\treturn rows.map((row) => mapResultRow(this.fields!, row, this.joinsNotNullableMap));\n\t}\n\n\tall(placeholderValues: Record<string, unknown> | undefined = {}): Promise<T['all']> {\n\t\tconst params = fillPlaceholders(this.query.params, placeholderValues);\n\t\tthis.logger.logQuery(this.query.sql, params);\n\t\treturn this.clientQuery(\n\t\t\tthis.query.sql,\n\t\t\tparams,\n\t\t\tthis.authToken === undefined ? rawQueryConfig : {\n\t\t\t\t...rawQueryConfig,\n\t\t\t\tauthToken: this.authToken,\n\t\t\t},\n\t\t).then((result) => result.rows);\n\t}\n\n\tvalues(placeholderValues: Record<string, unknown> | undefined): Promise<T['values']>;\n\t/** @internal */\n\tvalues(placeholderValues: Record<string, unknown> | undefined, token?: NeonAuthToken): Promise<T['values']>;\n\t/** @internal */\n\tvalues(placeholderValues: Record<string, unknown> | undefined = {}, token?: NeonAuthToken): Promise<T['values']> {\n\t\tconst params = fillPlaceholders(this.query.params, placeholderValues);\n\t\tthis.logger.logQuery(this.query.sql, params);\n\t\treturn this.clientQuery(this.query.sql, params, { arrayMode: true, fullResults: true, authToken: token }).then((\n\t\t\tresult,\n\t\t) => result.rows);\n\t}\n\n\t/** @internal */\n\tisResponseInArrayMode() {\n\t\treturn this._isResponseInArrayMode;\n\t}\n}\n\nexport interface NeonHttpSessionOptions {\n\tlogger?: Logger;\n\tcache?: Cache;\n}\n\nexport class NeonHttpSession<\n\tTFullSchema extends Record<string, unknown>,\n\tTSchema extends TablesRelationalConfig,\n> extends PgSession<NeonHttpQueryResultHKT, TFullSchema, TSchema> {\n\tstatic override readonly [entityKind]: string = 'NeonHttpSession';\n\n\tprivate clientQuery: (sql: string, params: any[], opts: Record<string, any>) => NeonQueryPromise<any, any>;\n\tprivate logger: Logger;\n\tprivate cache: Cache;\n\n\tconstructor(\n\t\tprivate client: NeonHttpClient,\n\t\tdialect: PgDialect,\n\t\tprivate schema: RelationalSchemaConfig<TSchema> | undefined,\n\t\tprivate options: NeonHttpSessionOptions = {},\n\t) {\n\t\tsuper(dialect);\n\t\t// `client.query` is for @neondatabase/serverless v1.0.0 and up, where the\n\t\t// root query function `client` is only usable as a template function;\n\t\t// `client` is a fallback for earlier versions\n\t\tthis.clientQuery = (client as any).query ?? client as any;\n\t\tthis.logger = options.logger ?? new NoopLogger();\n\t\tthis.cache = options.cache ?? new NoopCache();\n\t}\n\n\tprepareQuery<T extends PreparedQueryConfig = PreparedQueryConfig>(\n\t\tquery: Query,\n\t\tfields: SelectedFieldsOrdered | undefined,\n\t\tname: string | undefined,\n\t\tisResponseInArrayMode: boolean,\n\t\tcustomResultMapper?: (rows: unknown[][]) => T['execute'],\n\t\tqueryMetadata?: {\n\t\t\ttype: 'select' | 'update' | 'delete' | 'insert';\n\t\t\ttables: string[];\n\t\t},\n\t\tcacheConfig?: WithCacheConfig,\n\t): PgPreparedQuery<T> {\n\t\treturn new NeonHttpPreparedQuery(\n\t\t\tthis.client,\n\t\t\tquery,\n\t\t\tthis.logger,\n\t\t\tthis.cache,\n\t\t\tqueryMetadata,\n\t\t\tcacheConfig,\n\t\t\tfields,\n\t\t\tisResponseInArrayMode,\n\t\t\tcustomResultMapper,\n\t\t);\n\t}\n\n\tasync batch<U extends BatchItem<'pg'>, T extends Readonly<[U, ...U[]]>>(\n\t\tqueries: T,\n\t) {\n\t\tconst preparedQueries: PreparedQuery[] = [];\n\t\tconst builtQueries: NeonQueryPromise<any, true>[] = [];\n\t\tfor (const query of queries) {\n\t\t\tconst preparedQuery = query._prepare();\n\t\t\tconst builtQuery = preparedQuery.getQuery();\n\t\t\tpreparedQueries.push(preparedQuery);\n\t\t\tbuiltQueries.push(\n\t\t\t\tthis.clientQuery(builtQuery.sql, builtQuery.params, {\n\t\t\t\t\tfullResults: true,\n\t\t\t\t\tarrayMode: preparedQuery.isResponseInArrayMode(),\n\t\t\t\t}),\n\t\t\t);\n\t\t}\n\n\t\tconst batchResults = await this.client.transaction(builtQueries, queryConfig);\n\n\t\treturn batchResults.map((result, i) => preparedQueries[i]!.mapResult(result, true)) as any;\n\t}\n\n\t// change return type to QueryRows<true>\n\tasync query(query: string, params: unknown[]): Promise<FullQueryResults<true>> {\n\t\tthis.logger.logQuery(query, params);\n\t\tconst result = await this.clientQuery(query, params, { arrayMode: true, fullResults: true });\n\t\treturn result;\n\t}\n\n\t// change return type to QueryRows<false>\n\tasync queryObjects(\n\t\tquery: string,\n\t\tparams: unknown[],\n\t): Promise<FullQueryResults<false>> {\n\t\treturn this.clientQuery(query, params, { arrayMode: false, fullResults: true });\n\t}\n\n\toverride async count(sql: SQL): Promise<number>;\n\t/** @internal */\n\toverride async count(sql: SQL, token?: NeonAuthToken): Promise<number>;\n\t/** @internal */\n\toverride async count(sql: SQL, token?: NeonAuthToken): Promise<number> {\n\t\tconst res = await this.execute<{ rows: [{ count: string }] }>(sql, token);\n\n\t\treturn Number(\n\t\t\tres['rows'][0]['count'],\n\t\t);\n\t}\n\n\toverride async transaction<T>(\n\t\t_transaction: (tx: NeonTransaction<TFullSchema, TSchema>) => Promise<T>,\n\t\t// eslint-disable-next-line @typescript-eslint/no-unused-vars\n\t\t_config: PgTransactionConfig = {},\n\t): Promise<T> {\n\t\tthrow new Error('No transactions support in neon-http driver');\n\t}\n}\n\nexport class NeonTransaction<\n\tTFullSchema extends Record<string, unknown>,\n\tTSchema extends TablesRelationalConfig,\n> extends PgTransaction<NeonHttpQueryResultHKT, TFullSchema, TSchema> {\n\tstatic override readonly [entityKind]: string = 'NeonHttpTransaction';\n\n\toverride async transaction<T>(_transaction: (tx: NeonTransaction<TFullSchema, TSchema>) => Promise<T>): Promise<T> {\n\t\tthrow new Error('No transactions support in neon-http driver');\n\t\t// const savepointName = `sp${this.nestedIndex + 1}`;\n\t\t// const tx = new NeonTransaction(this.dialect, this.session, this.schema, this.nestedIndex + 1);\n\t\t// await tx.execute(sql.raw(`savepoint ${savepointName}`));\n\t\t// try {\n\t\t// \tconst result = await transaction(tx);\n\t\t// \tawait tx.execute(sql.raw(`release savepoint ${savepointName}`));\n\t\t// \treturn result;\n\t\t// } catch (e) {\n\t\t// \tawait tx.execute(sql.raw(`rollback to savepoint ${savepointName}`));\n\t\t// \tthrow e;\n\t\t// }\n\t}\n}\n\nexport type NeonHttpQueryResult<T> = Omit<FullQueryResults<false>, 'rows'> & { rows: T[] };\n\nexport interface NeonHttpQueryResultHKT extends PgQueryResultHKT {\n\ttype: NeonHttpQueryResult<this['row']>;\n}\n", "import { entityKind } from '~/entity.ts';\nimport type { Table } from '~/index.ts';\nimport type { CacheConfig } from './types.ts';\n\nexport abstract class Cache {\n\tstatic readonly [entityKind]: string = 'Cache';\n\n\tabstract strategy(): 'explicit' | 'all';\n\n\t/**\n\t * Invoked if we should check cache for cached response\n\t * @param sql\n\t * @param tables\n\t */\n\tabstract get(\n\t\tkey: string,\n\t\ttables: string[],\n\t\tisTag: boolean,\n\t\tisAutoInvalidate?: boolean,\n\t): Promise<any[] | undefined>;\n\n\t/**\n\t * Invoked if new query should be inserted to cache\n\t * @param sql\n\t * @param tables\n\t */\n\tabstract put(\n\t\thashedQuery: string,\n\t\tresponse: any,\n\t\ttables: string[],\n\t\tisTag: boolean,\n\t\tconfig?: CacheConfig,\n\t): Promise<void>;\n\n\t/**\n\t * Invoked if insert, update, delete was invoked\n\t * @param tables\n\t */\n\tabstract onMutate(\n\t\tparams: MutationOption,\n\t): Promise<void>;\n}\n\nexport class NoopCache extends Cache {\n\toverride strategy() {\n\t\treturn 'all' as const;\n\t}\n\n\tstatic override readonly [entityKind]: string = 'NoopCache';\n\n\toverride async get(_key: string): Promise<any[] | undefined> {\n\t\treturn undefined;\n\t}\n\toverride async put(\n\t\t_hashedQuery: string,\n\t\t_response: any,\n\t\t_tables: string[],\n\t\t_config?: any,\n\t): Promise<void> {\n\t\t// noop\n\t}\n\toverride async onMutate(_params: MutationOption): Promise<void> {\n\t\t// noop\n\t}\n}\n\nexport type MutationOption = { tags?: string | string[]; tables?: Table<any> | Table<any>[] | string | string[] };\n\nexport async function hashQuery(sql: string, params?: any[]) {\n\tconst dataToHash = `${sql}-${JSON.stringify(params)}`;\n\tconst encoder = new TextEncoder();\n\tconst data = encoder.encode(dataToHash);\n\tconst hashBuffer = await crypto.subtle.digest('SHA-256', data);\n\tconst hashArray = [...new Uint8Array(hashBuffer)];\n\tconst hashHex = hashArray.map((b) => b.toString(16).padStart(2, '0')).join('');\n\n\treturn hashHex;\n}\n", "import { type Cache, hashQuery, NoopCache } from '~/cache/core/cache.ts';\nimport type { WithCacheConfig } from '~/cache/core/types.ts';\nimport { entityKind, is } from '~/entity.ts';\nimport { DrizzleQueryError, TransactionRollbackError } from '~/errors.ts';\nimport type { TablesRelationalConfig } from '~/relations.ts';\nimport type { PreparedQuery } from '~/session.ts';\nimport { type Query, type SQL, sql } from '~/sql/index.ts';\nimport { tracer } from '~/tracing.ts';\nimport type { NeonAuthToken } from '~/utils.ts';\nimport { PgDatabase } from './db.ts';\nimport type { PgDialect } from './dialect.ts';\nimport type { SelectedFieldsOrdered } from './query-builders/select.types.ts';\n\nexport interface PreparedQueryConfig {\n\texecute: unknown;\n\tall: unknown;\n\tvalues: unknown;\n}\n\nexport abstract class PgPreparedQuery<T extends PreparedQueryConfig> implements PreparedQuery {\n\tconstructor(\n\t\tprotected query: Query,\n\t\t// cache instance\n\t\tprivate cache: Cache | undefined,\n\t\t// per query related metadata\n\t\tprivate queryMetadata: {\n\t\t\ttype: 'select' | 'update' | 'delete' | 'insert';\n\t\t\ttables: string[];\n\t\t} | undefined,\n\t\t// config that was passed through $withCache\n\t\tprivate cacheConfig?: WithCacheConfig,\n\t) {\n\t\t// it means that no $withCache options were passed and it should be just enabled\n\t\tif (cache && cache.strategy() === 'all' && cacheConfig === undefined) {\n\t\t\tthis.cacheConfig = { enable: true, autoInvalidate: true };\n\t\t}\n\t\tif (!this.cacheConfig?.enable) {\n\t\t\tthis.cacheConfig = undefined;\n\t\t}\n\t}\n\n\tprotected authToken?: NeonAuthToken;\n\n\tgetQuery(): Query {\n\t\treturn this.query;\n\t}\n\n\tmapResult(response: unknown, _isFromBatch?: boolean): unknown {\n\t\treturn response;\n\t}\n\n\t/** @internal */\n\tsetToken(token?: NeonAuthToken) {\n\t\tthis.authToken = token;\n\t\treturn this;\n\t}\n\n\tstatic readonly [entityKind]: string = 'PgPreparedQuery';\n\n\t/** @internal */\n\tjoinsNotNullableMap?: Record<string, boolean>;\n\n\t/** @internal */\n\tprotected async queryWithCache<T>(\n\t\tqueryString: string,\n\t\tparams: any[],\n\t\tquery: () => Promise<T>,\n\t): Promise<T> {\n\t\tif (this.cache === undefined || is(this.cache, NoopCache) || this.queryMetadata === undefined) {\n\t\t\ttry {\n\t\t\t\treturn await query();\n\t\t\t} catch (e) {\n\t\t\t\tthrow new DrizzleQueryError(queryString, params, e as Error);\n\t\t\t}\n\t\t}\n\n\t\t// don't do any mutations, if globally is false\n\t\tif (this.cacheConfig && !this.cacheConfig.enable) {\n\t\t\ttry {\n\t\t\t\treturn await query();\n\t\t\t} catch (e) {\n\t\t\t\tthrow new DrizzleQueryError(queryString, params, e as Error);\n\t\t\t}\n\t\t}\n\n\t\t// For mutate queries, we should query the database, wait for a response, and then perform invalidation\n\t\tif (\n\t\t\t(\n\t\t\t\tthis.queryMetadata.type === 'insert' || this.queryMetadata.type === 'update'\n\t\t\t\t|| this.queryMetadata.type === 'delete'\n\t\t\t) && this.queryMetadata.tables.length > 0\n\t\t) {\n\t\t\ttry {\n\t\t\t\tconst [res] = await Promise.all([\n\t\t\t\t\tquery(),\n\t\t\t\t\tthis.cache.onMutate({ tables: this.queryMetadata.tables }),\n\t\t\t\t]);\n\t\t\t\treturn res;\n\t\t\t} catch (e) {\n\t\t\t\tthrow new DrizzleQueryError(queryString, params, e as Error);\n\t\t\t}\n\t\t}\n\n\t\t// don't do any reads if globally disabled\n\t\tif (!this.cacheConfig) {\n\t\t\ttry {\n\t\t\t\treturn await query();\n\t\t\t} catch (e) {\n\t\t\t\tthrow new DrizzleQueryError(queryString, params, e as Error);\n\t\t\t}\n\t\t}\n\n\t\tif (this.queryMetadata.type === 'select') {\n\t\t\tconst fromCache = await this.cache.get(\n\t\t\t\tthis.cacheConfig.tag ?? await hashQuery(queryString, params),\n\t\t\t\tthis.queryMetadata.tables,\n\t\t\t\tthis.cacheConfig.tag !== undefined,\n\t\t\t\tthis.cacheConfig.autoInvalidate,\n\t\t\t);\n\t\t\tif (fromCache === undefined) {\n\t\t\t\tlet result;\n\t\t\t\ttry {\n\t\t\t\t\tresult = await query();\n\t\t\t\t} catch (e) {\n\t\t\t\t\tthrow new DrizzleQueryError(queryString, params, e as Error);\n\t\t\t\t}\n\t\t\t\t// put actual key\n\t\t\t\tawait this.cache.put(\n\t\t\t\t\tthis.cacheConfig.tag ?? await hashQuery(queryString, params),\n\t\t\t\t\tresult,\n\t\t\t\t\t// make sure we send tables that were used in a query only if user wants to invalidate it on each write\n\t\t\t\t\tthis.cacheConfig.autoInvalidate ? this.queryMetadata.tables : [],\n\t\t\t\t\tthis.cacheConfig.tag !== undefined,\n\t\t\t\t\tthis.cacheConfig.config,\n\t\t\t\t);\n\t\t\t\t// put flag if we should invalidate or not\n\t\t\t\treturn result;\n\t\t\t}\n\n\t\t\treturn fromCache as unknown as T;\n\t\t}\n\t\ttry {\n\t\t\treturn await query();\n\t\t} catch (e) {\n\t\t\tthrow new DrizzleQueryError(queryString, params, e as Error);\n\t\t}\n\t}\n\n\tabstract execute(placeholderValues?: Record<string, unknown>): Promise<T['execute']>;\n\t/** @internal */\n\tabstract execute(placeholderValues?: Record<string, unknown>, token?: NeonAuthToken): Promise<T['execute']>;\n\t/** @internal */\n\tabstract execute(placeholderValues?: Record<string, unknown>, token?: NeonAuthToken): Promise<T['execute']>;\n\n\t/** @internal */\n\tabstract all(placeholderValues?: Record<string, unknown>): Promise<T['all']>;\n\n\t/** @internal */\n\tabstract isResponseInArrayMode(): boolean;\n}\n\nexport interface PgTransactionConfig {\n\tisolationLevel?: 'read uncommitted' | 'read committed' | 'repeatable read' | 'serializable';\n\taccessMode?: 'read only' | 'read write';\n\tdeferrable?: boolean;\n}\n\nexport abstract class PgSession<\n\tTQueryResult extends PgQueryResultHKT = PgQueryResultHKT,\n\tTFullSchema extends Record<string, unknown> = Record<string, never>,\n\tTSchema extends TablesRelationalConfig = Record<string, never>,\n> {\n\tstatic readonly [entityKind]: string = 'PgSession';\n\n\tconstructor(protected dialect: PgDialect) {}\n\n\tabstract prepareQuery<T extends PreparedQueryConfig = PreparedQueryConfig>(\n\t\tquery: Query,\n\t\tfields: SelectedFieldsOrdered | undefined,\n\t\tname: string | undefined,\n\t\tisResponseInArrayMode: boolean,\n\t\tcustomResultMapper?: (rows: unknown[][], mapColumnValue?: (value: unknown) => unknown) => T['execute'],\n\t\tqueryMetadata?: {\n\t\t\ttype: 'select' | 'update' | 'delete' | 'insert';\n\t\t\ttables: string[];\n\t\t},\n\t\tcacheConfig?: WithCacheConfig,\n\t): PgPreparedQuery<T>;\n\n\texecute<T>(query: SQL): Promise<T>;\n\t/** @internal */\n\texecute<T>(query: SQL, token?: NeonAuthToken): Promise<T>;\n\t/** @internal */\n\texecute<T>(query: SQL, token?: NeonAuthToken): Promise<T> {\n\t\treturn tracer.startActiveSpan('drizzle.operation', () => {\n\t\t\tconst prepared = tracer.startActiveSpan('drizzle.prepareQuery', () => {\n\t\t\t\treturn this.prepareQuery<PreparedQueryConfig & { execute: T }>(\n\t\t\t\t\tthis.dialect.sqlToQuery(query),\n\t\t\t\t\tundefined,\n\t\t\t\t\tundefined,\n\t\t\t\t\tfalse,\n\t\t\t\t);\n\t\t\t});\n\n\t\t\treturn prepared.setToken(token).execute(undefined, token);\n\t\t});\n\t}\n\n\tall<T = unknown>(query: SQL): Promise<T[]> {\n\t\treturn this.prepareQuery<PreparedQueryConfig & { all: T[] }>(\n\t\t\tthis.dialect.sqlToQuery(query),\n\t\t\tundefined,\n\t\t\tundefined,\n\t\t\tfalse,\n\t\t).all();\n\t}\n\n\tasync count(sql: SQL): Promise<number>;\n\t/** @internal */\n\tasync count(sql: SQL, token?: NeonAuthToken): Promise<number>;\n\t/** @internal */\n\tasync count(sql: SQL, token?: NeonAuthToken): Promise<number> {\n\t\tconst res = await this.execute<[{ count: string }]>(sql, token);\n\n\t\treturn Number(\n\t\t\tres[0]['count'],\n\t\t);\n\t}\n\n\tabstract transaction<T>(\n\t\ttransaction: (tx: PgTransaction<TQueryResult, TFullSchema, TSchema>) => Promise<T>,\n\t\tconfig?: PgTransactionConfig,\n\t): Promise<T>;\n}\n\nexport abstract class PgTransaction<\n\tTQueryResult extends PgQueryResultHKT,\n\tTFullSchema extends Record<string, unknown> = Record<string, never>,\n\tTSchema extends TablesRelationalConfig = Record<string, never>,\n> extends PgDatabase<TQueryResult, TFullSchema, TSchema> {\n\tstatic override readonly [entityKind]: string = 'PgTransaction';\n\n\tconstructor(\n\t\tdialect: PgDialect,\n\t\tsession: PgSession<any, any, any>,\n\t\tprotected schema: {\n\t\t\tfullSchema: Record<string, unknown>;\n\t\t\tschema: TSchema;\n\t\t\ttableNamesMap: Record<string, string>;\n\t\t} | undefined,\n\t\tprotected readonly nestedIndex = 0,\n\t) {\n\t\tsuper(dialect, session, schema);\n\t}\n\n\trollback(): never {\n\t\tthrow new TransactionRollbackError();\n\t}\n\n\t/** @internal */\n\tgetTransactionConfigSQL(config: PgTransactionConfig): SQL {\n\t\tconst chunks: string[] = [];\n\t\tif (config.isolationLevel) {\n\t\t\tchunks.push(`isolation level ${config.isolationLevel}`);\n\t\t}\n\t\tif (config.accessMode) {\n\t\t\tchunks.push(config.accessMode);\n\t\t}\n\t\tif (typeof config.deferrable === 'boolean') {\n\t\t\tchunks.push(config.deferrable ? 'deferrable' : 'not deferrable');\n\t\t}\n\t\treturn sql.raw(chunks.join(' '));\n\t}\n\n\tsetTransaction(config: PgTransactionConfig): Promise<void> {\n\t\treturn this.session.execute(sql`set transaction ${this.getTransactionConfigSQL(config)}`);\n\t}\n\n\tabstract override transaction<T>(\n\t\ttransaction: (tx: PgTransaction<TQueryResult, TFullSchema, TSchema>) => Promise<T>,\n\t): Promise<T>;\n}\n\nexport interface PgQueryResultHKT {\n\treadonly $brand: 'PgQueryResultHKT';\n\treadonly row: unknown;\n\treadonly type: unknown;\n}\n\nexport type PgQueryResultKind<TKind extends PgQueryResultHKT, TRow> = (TKind & {\n\treadonly row: TRow;\n})['type'];\n", "import { Hono } from \"hono\";\r\nimport { eq, and, desc, gt, isNull, ne, sql } from \"drizzle-orm\";\r\nimport bcrypt from \"bcryptjs\";\r\nimport crypto from \"crypto\";\r\nimport dayjs from \"dayjs\";\r\nimport { z } from \"zod\";\r\n\r\nimport { users } from \"../db/tables/users\";\r\nimport { roles } from \"../db/tables/roles\";\r\nimport { userRoles } from \"../db/tables/userRoles\";\r\nimport { passwordResetTokens } from \"../db/tables/passwordResetTokens\";\r\nimport { sendResetEmail } from \"../lib/mail\";\r\nimport { signJwt } from \"../lib/jwt\";\r\nimport type { Env, CtxVars } from \"../lib/types\";\r\nimport { requireAuth } from \"../mw/requireAuth\";\r\n\r\nexport const auth = new Hono<{ Bindings: Env; Variables: CtxVars }>();\r\n\r\n/* ====================== */\r\n/*     REGISTRO / LOGIN   */\r\n/* ====================== */\r\nauth.post(\"/register\", async (c) => {\r\n  try {\r\n    const db = c.var.db;\r\n    const body = await c.req.json();\r\n\r\n    const name = String(body.name ?? \"\").trim();\r\n    const email = String(body.email ?? \"\").trim().toLowerCase();\r\n    const password = String(body.password ?? \"\");\r\n    const roleName = String(body.role ?? \"usuario\").toLowerCase(); // \uD83D\uDC48 vem do frontend\r\n\r\n    if (!name || !email || !password) {\r\n      return c.json({ message: \"Dados inv\u00E1lidos. Informe nome, e-mail e senha.\" }, 400);\r\n    }\r\n\r\n    const [exists] = await db\r\n      .select({ id: users.id })\r\n      .from(users)\r\n      .where(eq(users.email, email))\r\n      .limit(1);\r\n\r\n    if (exists) return c.json({ message: \"E-mail j\u00E1 cadastrado.\" }, 409);\r\n\r\n    // \uD83D\uDD10 gera hash\r\n    const hash = await bcrypt.hash(password, 10);\r\n    await db.insert(users).values({ name, email, passwordHash: hash });\r\n\r\n    // \uD83D\uDD0E pega usu\u00E1rio criado\r\n    const [created] = await db\r\n      .select({ id: users.id, name: users.name, email: users.email })\r\n      .from(users)\r\n      .where(eq(users.email, email))\r\n      .limit(1);\r\n\r\n    if (!created) return c.json({ message: \"Falha ao persistir cadastro.\" }, 500);\r\n\r\n    // \uD83D\uDD0E pega role pelo nome (\"admin\" ou \"usuario\")\r\n    const [role] = await db\r\n      .select({ id: roles.id })\r\n      .from(roles)\r\n      .where(eq(roles.name, roleName))\r\n      .limit(1);\r\n\r\n    if (!role) return c.json({ message: \"Role inv\u00E1lida.\" }, 400);\r\n\r\n    // \uD83D\uDD17 vincula usu\u00E1rio \u00E0 role escolhida\r\n    await db.insert(userRoles).values({ userId: created.id, roleId: role.id });\r\n\r\n    // \uD83D\uDD11 gera token j\u00E1 com role\r\n    const JWT = c.env?.JWT_SECRET ?? process.env.JWT_SECRET;\r\n    let token: string | null = null;\r\n    if (JWT)\r\n      token = await signJwt(\r\n        { sub: created.id, email: created.email, name: created.name, roles: [roleName] },\r\n        JWT\r\n      );\r\n\r\n    return c.json({ message: \"Cadastro realizado com sucesso.\", user: created, token }, 201);\r\n  } catch (err: any) {\r\n    console.error(\"register error:\", err);\r\n    return c.json({ message: \"Erro interno ao cadastrar.\" }, 500);\r\n  }\r\n});\r\n\r\n\r\nauth.post(\"/login\", async (c) => {\r\n  try {\r\n    const db = c.var.db;\r\n    const body = await c.req.json();\r\n    const email = String(body.email ?? \"\").trim().toLowerCase();\r\n    const password = String(body.password ?? \"\");\r\n\r\n    // \uD83D\uDD0E Busca usu\u00E1rio pelo email\r\n    const [row] = await db\r\n      .select({\r\n        id: users.id,\r\n        name: users.name,\r\n        email: users.email,\r\n        passwordHash: users.passwordHash,\r\n      })\r\n      .from(users)\r\n      .where(eq(users.email, email))\r\n      .limit(1);\r\n\r\n    if (!row) return c.json({ message: \"Credenciais inv\u00E1lidas.\" }, 401);\r\n\r\n    // \uD83D\uDD11 Valida senha\r\n    const ok = await bcrypt.compare(password, row.passwordHash);\r\n    if (!ok) return c.json({ message: \"Credenciais inv\u00E1lidas.\" }, 401);\r\n\r\n    // \uD83D\uDD11 Carregar roles do usu\u00E1rio\r\n    const roleRows = await db\r\n      .select({ name: roles.name })\r\n      .from(userRoles)\r\n      .innerJoin(roles, eq(userRoles.roleId, roles.id))\r\n      .where(eq(userRoles.userId, row.id));\r\n\r\n    const rolesArr = roleRows.map(r => r.name); // ex.: [\"usuario\"], [\"admin\"]\r\n\r\n    // \uD83D\uDD11 Gera JWT com roles\r\n    const JWT = c.env?.JWT_SECRET ?? process.env.JWT_SECRET;\r\n    const token = JWT\r\n      ? await signJwt(\r\n          { sub: row.id, email: row.email, name: row.name, roles: rolesArr },\r\n          JWT\r\n        )\r\n      : null;\r\n\r\n    return c.json({\r\n      message: \"Login realizado com sucesso.\",\r\n      user: {\r\n        id: row.id,\r\n        name: row.name,\r\n        email: row.email,\r\n        roles: rolesArr,\r\n      },\r\n      token,\r\n    });\r\n  } catch (err) {\r\n    console.error(\"login error:\", err);\r\n    return c.json({ message: \"Erro interno ao autenticar.\" }, 500);\r\n  }\r\n});\r\n\r\n\r\n\r\n\r\n/* ====================== */\r\n/*  ESQUECI / REDEFINIR   */\r\n/* ====================== */\r\n\r\n/** POST /auth/forgot-password  { email } */\r\nauth.post(\"/forgot-password\", async (c) => {\r\n  const db = c.var.db;\r\n  const body = await c.req.json();\r\n  const parsed = z.object({ email: z.string().email() }).safeParse(body);\r\n  if (!parsed.success) return c.json({ error: \"Dados inv\u00E1lidos\" }, 400);\r\n  const email = parsed.data.email.toLowerCase();\r\n\r\n  const [u] = await db\r\n    .select({ id: users.id, email: users.email })\r\n    .from(users)\r\n    .where(eq(sql`lower(${users.email})`, email))\r\n    .limit(1);\r\n\r\n  if (u) {\r\n    const tokenPlain = crypto.randomBytes(32).toString(\"hex\");\r\n    const tokenHash  = await bcrypt.hash(tokenPlain, 10);\r\n    const expiresAt  = dayjs().add(1, \"hour\").toDate();\r\n\r\n    await db.insert(passwordResetTokens).values({\r\n      userId: u.id,\r\n      tokenHash,\r\n      expiresAt,\r\n    });\r\n\r\n    const base = c.env?.FRONTEND_URL ?? process.env.FRONTEND_URL ?? \"http://localhost:5173\";\r\n    const resetUrl = `${base}/reset-password?token=${tokenPlain}&uid=${u.id}`;\r\n\r\n    try { \r\n      // \u2705 Passando o c.env\r\n      await sendResetEmail(u.email, resetUrl, c.env); \r\n    } catch (e) { \r\n      console.error(\"email error\", e); \r\n    }\r\n  }\r\n\r\n  return c.json({ ok: true, message: \"Se existir uma conta para este e-mail, enviaremos instru\u00E7\u00F5es.\" });\r\n});\r\n\r\n/** POST /auth/reset-password  { uid, token, newPassword } */\r\nauth.post(\"/reset-password\", async (c) => {\r\n  const db = c.var.db;\r\n  const body = await c.req.json();\r\n  const parsed = z.object({\r\n    uid: z.string().uuid(),\r\n    token: z.string().min(32),\r\n    newPassword: z.string().min(8).max(128),\r\n  }).safeParse(body);\r\n  if (!parsed.success) return c.json({ error: \"Dados inv\u00E1lidos\" }, 400);\r\n\r\n  const { uid, token, newPassword } = parsed.data;\r\n\r\n  const validTokens = await db\r\n    .select({ id: passwordResetTokens.id, tokenHash: passwordResetTokens.tokenHash })\r\n    .from(passwordResetTokens)\r\n    .where(and(\r\n      eq(passwordResetTokens.userId, uid),\r\n      isNull(passwordResetTokens.usedAt),\r\n      gt(passwordResetTokens.expiresAt, new Date())\r\n    ))\r\n    .orderBy(desc(passwordResetTokens.createdAt))\r\n    .limit(5);\r\n\r\n  let matched: string | null = null;\r\n  for (const t of validTokens) {\r\n    if (await bcrypt.compare(token, t.tokenHash)) { matched = t.id; break; }\r\n  }\r\n  if (!matched) return c.json({ error: \"Token inv\u00E1lido ou expirado\" }, 400);\r\n\r\n  const passHash = await bcrypt.hash(newPassword, 10);\r\n  await db.update(users)\r\n    .set({ passwordHash: passHash, passwordChangedAt: new Date() })\r\n    .where(eq(users.id, uid));\r\n\r\n  await db.update(passwordResetTokens).set({ usedAt: new Date() })\r\n    .where(eq(passwordResetTokens.id, matched));\r\n  await db.update(passwordResetTokens).set({ usedAt: new Date() })\r\n    .where(and(\r\n      eq(passwordResetTokens.userId, uid),\r\n      ne(passwordResetTokens.id, matched),\r\n      isNull(passwordResetTokens.usedAt)\r\n    ));\r\n\r\n  return c.json({ ok: true, message: \"Senha alterada com sucesso.\" });\r\n});\r\n\r\n/* ====================== */\r\n/*  TROCAR LOGADO (OPC)   */\r\n/* ====================== */\r\n\r\nauth.post(\"/change-password\", requireAuth(), async (c) => {\r\n  const db = c.var.db;\r\n  const body = await c.req.json();\r\n  const parsed = z.object({\r\n    currentPassword: z.string().min(1),\r\n    newPassword: z.string().min(8).max(128),\r\n  }).safeParse(body);\r\n  if (!parsed.success) return c.json({ error: \"Dados inv\u00E1lidos\" }, 400);\r\n\r\n  const { currentPassword, newPassword } = parsed.data;\r\n  const { userId } = c.get(\"auth\") as { userId: string };\r\n\r\n  const [row] = await db\r\n    .select({ passwordHash: users.passwordHash })\r\n    .from(users)\r\n    .where(eq(users.id, userId))\r\n    .limit(1);\r\n  if (!row) return c.json({ error: \"Usu\u00E1rio n\u00E3o encontrado\" }, 404);\r\n\r\n  const ok = await bcrypt.compare(currentPassword, row.passwordHash);\r\n  if (!ok) return c.json({ error: \"Senha atual incorreta\" }, 400);\r\n\r\n  const same = await bcrypt.compare(newPassword, row.passwordHash);\r\n  if (same) return c.json({ error: \"A nova senha n\u00E3o pode ser igual \u00E0 atual\" }, 400);\r\n\r\n  const newHash = await bcrypt.hash(newPassword, 10);\r\n  await db.update(users)\r\n    .set({ passwordHash: newHash, passwordChangedAt: new Date() })\r\n    .where(eq(users.id, userId));\r\n\r\n  return c.json({ ok: true, message: \"Senha alterada com sucesso.\" });\r\n});\r\n", "/*\r\n Copyright (c) 2012 Nevins Bartolomeo <nevins.bartolomeo@gmail.com>\r\n Copyright (c) 2012 Shane Girish <shaneGirish@gmail.com>\r\n Copyright (c) 2025 Daniel Wirtz <dcode@dcode.io>\r\n\r\n Redistribution and use in source and binary forms, with or without\r\n modification, are permitted provided that the following conditions\r\n are met:\r\n 1. Redistributions of source code must retain the above copyright\r\n notice, this list of conditions and the following disclaimer.\r\n 2. Redistributions in binary form must reproduce the above copyright\r\n notice, this list of conditions and the following disclaimer in the\r\n documentation and/or other materials provided with the distribution.\r\n 3. The name of the author may not be used to endorse or promote products\r\n derived from this software without specific prior written permission.\r\n\r\n THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR\r\n IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\r\n OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,\r\n INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\r\n DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\r\n THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\r\n (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\r\n THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n\r\n// The Node.js crypto module is used as a fallback for the Web Crypto API. When\r\n// building for the browser, inclusion of the crypto module should be disabled,\r\n// which the package hints at in its package.json for bundlers that support it.\r\nimport nodeCrypto from \"crypto\";\r\n\r\n/**\r\n * The random implementation to use as a fallback.\r\n * @type {?function(number):!Array.<number>}\r\n * @inner\r\n */\r\nvar randomFallback = null;\r\n\r\n/**\r\n * Generates cryptographically secure random bytes.\r\n * @function\r\n * @param {number} len Bytes length\r\n * @returns {!Array.<number>} Random bytes\r\n * @throws {Error} If no random implementation is available\r\n * @inner\r\n */\r\nfunction randomBytes(len) {\r\n  // Web Crypto API. Globally available in the browser and in Node.js >=23.\r\n  try {\r\n    return crypto.getRandomValues(new Uint8Array(len));\r\n  } catch {}\r\n  // Node.js crypto module for non-browser environments.\r\n  try {\r\n    return nodeCrypto.randomBytes(len);\r\n  } catch {}\r\n  // Custom fallback specified with `setRandomFallback`.\r\n  if (!randomFallback) {\r\n    throw Error(\r\n      \"Neither WebCryptoAPI nor a crypto module is available. Use bcrypt.setRandomFallback to set an alternative\",\r\n    );\r\n  }\r\n  return randomFallback(len);\r\n}\r\n\r\n/**\r\n * Sets the pseudo random number generator to use as a fallback if neither node's `crypto` module nor the Web Crypto\r\n *  API is available. Please note: It is highly important that the PRNG used is cryptographically secure and that it\r\n *  is seeded properly!\r\n * @param {?function(number):!Array.<number>} random Function taking the number of bytes to generate as its\r\n *  sole argument, returning the corresponding array of cryptographically secure random byte values.\r\n * @see http://nodejs.org/api/crypto.html\r\n * @see http://www.w3.org/TR/WebCryptoAPI/\r\n */\r\nexport function setRandomFallback(random) {\r\n  randomFallback = random;\r\n}\r\n\r\n/**\r\n * Synchronously generates a salt.\r\n * @param {number=} rounds Number of rounds to use, defaults to 10 if omitted\r\n * @param {number=} seed_length Not supported.\r\n * @returns {string} Resulting salt\r\n * @throws {Error} If a random fallback is required but not set\r\n */\r\nexport function genSaltSync(rounds, seed_length) {\r\n  rounds = rounds || GENSALT_DEFAULT_LOG2_ROUNDS;\r\n  if (typeof rounds !== \"number\")\r\n    throw Error(\r\n      \"Illegal arguments: \" + typeof rounds + \", \" + typeof seed_length,\r\n    );\r\n  if (rounds < 4) rounds = 4;\r\n  else if (rounds > 31) rounds = 31;\r\n  var salt = [];\r\n  salt.push(\"$2b$\");\r\n  if (rounds < 10) salt.push(\"0\");\r\n  salt.push(rounds.toString());\r\n  salt.push(\"$\");\r\n  salt.push(base64_encode(randomBytes(BCRYPT_SALT_LEN), BCRYPT_SALT_LEN)); // May throw\r\n  return salt.join(\"\");\r\n}\r\n\r\n/**\r\n * Asynchronously generates a salt.\r\n * @param {(number|function(Error, string=))=} rounds Number of rounds to use, defaults to 10 if omitted\r\n * @param {(number|function(Error, string=))=} seed_length Not supported.\r\n * @param {function(Error, string=)=} callback Callback receiving the error, if any, and the resulting salt\r\n * @returns {!Promise} If `callback` has been omitted\r\n * @throws {Error} If `callback` is present but not a function\r\n */\r\nexport function genSalt(rounds, seed_length, callback) {\r\n  if (typeof seed_length === \"function\")\r\n    (callback = seed_length), (seed_length = undefined); // Not supported.\r\n  if (typeof rounds === \"function\") (callback = rounds), (rounds = undefined);\r\n  if (typeof rounds === \"undefined\") rounds = GENSALT_DEFAULT_LOG2_ROUNDS;\r\n  else if (typeof rounds !== \"number\")\r\n    throw Error(\"illegal arguments: \" + typeof rounds);\r\n\r\n  function _async(callback) {\r\n    nextTick(function () {\r\n      // Pretty thin, but salting is fast enough\r\n      try {\r\n        callback(null, genSaltSync(rounds));\r\n      } catch (err) {\r\n        callback(err);\r\n      }\r\n    });\r\n  }\r\n\r\n  if (callback) {\r\n    if (typeof callback !== \"function\")\r\n      throw Error(\"Illegal callback: \" + typeof callback);\r\n    _async(callback);\r\n  } else\r\n    return new Promise(function (resolve, reject) {\r\n      _async(function (err, res) {\r\n        if (err) {\r\n          reject(err);\r\n          return;\r\n        }\r\n        resolve(res);\r\n      });\r\n    });\r\n}\r\n\r\n/**\r\n * Synchronously generates a hash for the given password.\r\n * @param {string} password Password to hash\r\n * @param {(number|string)=} salt Salt length to generate or salt to use, default to 10\r\n * @returns {string} Resulting hash\r\n */\r\nexport function hashSync(password, salt) {\r\n  if (typeof salt === \"undefined\") salt = GENSALT_DEFAULT_LOG2_ROUNDS;\r\n  if (typeof salt === \"number\") salt = genSaltSync(salt);\r\n  if (typeof password !== \"string\" || typeof salt !== \"string\")\r\n    throw Error(\"Illegal arguments: \" + typeof password + \", \" + typeof salt);\r\n  return _hash(password, salt);\r\n}\r\n\r\n/**\r\n * Asynchronously generates a hash for the given password.\r\n * @param {string} password Password to hash\r\n * @param {number|string} salt Salt length to generate or salt to use\r\n * @param {function(Error, string=)=} callback Callback receiving the error, if any, and the resulting hash\r\n * @param {function(number)=} progressCallback Callback successively called with the percentage of rounds completed\r\n *  (0.0 - 1.0), maximally once per `MAX_EXECUTION_TIME = 100` ms.\r\n * @returns {!Promise} If `callback` has been omitted\r\n * @throws {Error} If `callback` is present but not a function\r\n */\r\nexport function hash(password, salt, callback, progressCallback) {\r\n  function _async(callback) {\r\n    if (typeof password === \"string\" && typeof salt === \"number\")\r\n      genSalt(salt, function (err, salt) {\r\n        _hash(password, salt, callback, progressCallback);\r\n      });\r\n    else if (typeof password === \"string\" && typeof salt === \"string\")\r\n      _hash(password, salt, callback, progressCallback);\r\n    else\r\n      nextTick(\r\n        callback.bind(\r\n          this,\r\n          Error(\"Illegal arguments: \" + typeof password + \", \" + typeof salt),\r\n        ),\r\n      );\r\n  }\r\n\r\n  if (callback) {\r\n    if (typeof callback !== \"function\")\r\n      throw Error(\"Illegal callback: \" + typeof callback);\r\n    _async(callback);\r\n  } else\r\n    return new Promise(function (resolve, reject) {\r\n      _async(function (err, res) {\r\n        if (err) {\r\n          reject(err);\r\n          return;\r\n        }\r\n        resolve(res);\r\n      });\r\n    });\r\n}\r\n\r\n/**\r\n * Compares two strings of the same length in constant time.\r\n * @param {string} known Must be of the correct length\r\n * @param {string} unknown Must be the same length as `known`\r\n * @returns {boolean}\r\n * @inner\r\n */\r\nfunction safeStringCompare(known, unknown) {\r\n  var diff = known.length ^ unknown.length;\r\n  for (var i = 0; i < known.length; ++i) {\r\n    diff |= known.charCodeAt(i) ^ unknown.charCodeAt(i);\r\n  }\r\n  return diff === 0;\r\n}\r\n\r\n/**\r\n * Synchronously tests a password against a hash.\r\n * @param {string} password Password to compare\r\n * @param {string} hash Hash to test against\r\n * @returns {boolean} true if matching, otherwise false\r\n * @throws {Error} If an argument is illegal\r\n */\r\nexport function compareSync(password, hash) {\r\n  if (typeof password !== \"string\" || typeof hash !== \"string\")\r\n    throw Error(\"Illegal arguments: \" + typeof password + \", \" + typeof hash);\r\n  if (hash.length !== 60) return false;\r\n  return safeStringCompare(\r\n    hashSync(password, hash.substring(0, hash.length - 31)),\r\n    hash,\r\n  );\r\n}\r\n\r\n/**\r\n * Asynchronously tests a password against a hash.\r\n * @param {string} password Password to compare\r\n * @param {string} hashValue Hash to test against\r\n * @param {function(Error, boolean)=} callback Callback receiving the error, if any, otherwise the result\r\n * @param {function(number)=} progressCallback Callback successively called with the percentage of rounds completed\r\n *  (0.0 - 1.0), maximally once per `MAX_EXECUTION_TIME = 100` ms.\r\n * @returns {!Promise} If `callback` has been omitted\r\n * @throws {Error} If `callback` is present but not a function\r\n */\r\nexport function compare(password, hashValue, callback, progressCallback) {\r\n  function _async(callback) {\r\n    if (typeof password !== \"string\" || typeof hashValue !== \"string\") {\r\n      nextTick(\r\n        callback.bind(\r\n          this,\r\n          Error(\r\n            \"Illegal arguments: \" + typeof password + \", \" + typeof hashValue,\r\n          ),\r\n        ),\r\n      );\r\n      return;\r\n    }\r\n    if (hashValue.length !== 60) {\r\n      nextTick(callback.bind(this, null, false));\r\n      return;\r\n    }\r\n    hash(\r\n      password,\r\n      hashValue.substring(0, 29),\r\n      function (err, comp) {\r\n        if (err) callback(err);\r\n        else callback(null, safeStringCompare(comp, hashValue));\r\n      },\r\n      progressCallback,\r\n    );\r\n  }\r\n\r\n  if (callback) {\r\n    if (typeof callback !== \"function\")\r\n      throw Error(\"Illegal callback: \" + typeof callback);\r\n    _async(callback);\r\n  } else\r\n    return new Promise(function (resolve, reject) {\r\n      _async(function (err, res) {\r\n        if (err) {\r\n          reject(err);\r\n          return;\r\n        }\r\n        resolve(res);\r\n      });\r\n    });\r\n}\r\n\r\n/**\r\n * Gets the number of rounds used to encrypt the specified hash.\r\n * @param {string} hash Hash to extract the used number of rounds from\r\n * @returns {number} Number of rounds used\r\n * @throws {Error} If `hash` is not a string\r\n */\r\nexport function getRounds(hash) {\r\n  if (typeof hash !== \"string\")\r\n    throw Error(\"Illegal arguments: \" + typeof hash);\r\n  return parseInt(hash.split(\"$\")[2], 10);\r\n}\r\n\r\n/**\r\n * Gets the salt portion from a hash. Does not validate the hash.\r\n * @param {string} hash Hash to extract the salt from\r\n * @returns {string} Extracted salt part\r\n * @throws {Error} If `hash` is not a string or otherwise invalid\r\n */\r\nexport function getSalt(hash) {\r\n  if (typeof hash !== \"string\")\r\n    throw Error(\"Illegal arguments: \" + typeof hash);\r\n  if (hash.length !== 60)\r\n    throw Error(\"Illegal hash length: \" + hash.length + \" != 60\");\r\n  return hash.substring(0, 29);\r\n}\r\n\r\n/**\r\n * Tests if a password will be truncated when hashed, that is its length is\r\n * greater than 72 bytes when converted to UTF-8.\r\n * @param {string} password The password to test\r\n * @returns {boolean} `true` if truncated, otherwise `false`\r\n */\r\nexport function truncates(password) {\r\n  if (typeof password !== \"string\")\r\n    throw Error(\"Illegal arguments: \" + typeof password);\r\n  return utf8Length(password) > 72;\r\n}\r\n\r\n/**\r\n * Continues with the callback on the next tick.\r\n * @function\r\n * @param {function(...[*])} callback Callback to execute\r\n * @inner\r\n */\r\nvar nextTick =\r\n  typeof process !== \"undefined\" &&\r\n  process &&\r\n  typeof process.nextTick === \"function\"\r\n    ? typeof setImmediate === \"function\"\r\n      ? setImmediate\r\n      : process.nextTick\r\n    : setTimeout;\r\n\r\n/** Calculates the byte length of a string encoded as UTF8. */\r\nfunction utf8Length(string) {\r\n  var len = 0,\r\n    c = 0;\r\n  for (var i = 0; i < string.length; ++i) {\r\n    c = string.charCodeAt(i);\r\n    if (c < 128) len += 1;\r\n    else if (c < 2048) len += 2;\r\n    else if (\r\n      (c & 0xfc00) === 0xd800 &&\r\n      (string.charCodeAt(i + 1) & 0xfc00) === 0xdc00\r\n    ) {\r\n      ++i;\r\n      len += 4;\r\n    } else len += 3;\r\n  }\r\n  return len;\r\n}\r\n\r\n/** Converts a string to an array of UTF8 bytes. */\r\nfunction utf8Array(string) {\r\n  var offset = 0,\r\n    c1,\r\n    c2;\r\n  var buffer = new Array(utf8Length(string));\r\n  for (var i = 0, k = string.length; i < k; ++i) {\r\n    c1 = string.charCodeAt(i);\r\n    if (c1 < 128) {\r\n      buffer[offset++] = c1;\r\n    } else if (c1 < 2048) {\r\n      buffer[offset++] = (c1 >> 6) | 192;\r\n      buffer[offset++] = (c1 & 63) | 128;\r\n    } else if (\r\n      (c1 & 0xfc00) === 0xd800 &&\r\n      ((c2 = string.charCodeAt(i + 1)) & 0xfc00) === 0xdc00\r\n    ) {\r\n      c1 = 0x10000 + ((c1 & 0x03ff) << 10) + (c2 & 0x03ff);\r\n      ++i;\r\n      buffer[offset++] = (c1 >> 18) | 240;\r\n      buffer[offset++] = ((c1 >> 12) & 63) | 128;\r\n      buffer[offset++] = ((c1 >> 6) & 63) | 128;\r\n      buffer[offset++] = (c1 & 63) | 128;\r\n    } else {\r\n      buffer[offset++] = (c1 >> 12) | 224;\r\n      buffer[offset++] = ((c1 >> 6) & 63) | 128;\r\n      buffer[offset++] = (c1 & 63) | 128;\r\n    }\r\n  }\r\n  return buffer;\r\n}\r\n\r\n// A base64 implementation for the bcrypt algorithm. This is partly non-standard.\r\n\r\n/**\r\n * bcrypt's own non-standard base64 dictionary.\r\n * @type {!Array.<string>}\r\n * @const\r\n * @inner\r\n **/\r\nvar BASE64_CODE =\r\n  \"./ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\".split(\"\");\r\n\r\n/**\r\n * @type {!Array.<number>}\r\n * @const\r\n * @inner\r\n **/\r\nvar BASE64_INDEX = [\r\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n  -1, -1, -1, -1, -1, -1, -1, -1, 0, 1, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63,\r\n  -1, -1, -1, -1, -1, -1, -1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,\r\n  16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, -1, -1, -1, -1, -1, -1, 28,\r\n  29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47,\r\n  48, 49, 50, 51, 52, 53, -1, -1, -1, -1, -1,\r\n];\r\n\r\n/**\r\n * Encodes a byte array to base64 with up to len bytes of input.\r\n * @param {!Array.<number>} b Byte array\r\n * @param {number} len Maximum input length\r\n * @returns {string}\r\n * @inner\r\n */\r\nfunction base64_encode(b, len) {\r\n  var off = 0,\r\n    rs = [],\r\n    c1,\r\n    c2;\r\n  if (len <= 0 || len > b.length) throw Error(\"Illegal len: \" + len);\r\n  while (off < len) {\r\n    c1 = b[off++] & 0xff;\r\n    rs.push(BASE64_CODE[(c1 >> 2) & 0x3f]);\r\n    c1 = (c1 & 0x03) << 4;\r\n    if (off >= len) {\r\n      rs.push(BASE64_CODE[c1 & 0x3f]);\r\n      break;\r\n    }\r\n    c2 = b[off++] & 0xff;\r\n    c1 |= (c2 >> 4) & 0x0f;\r\n    rs.push(BASE64_CODE[c1 & 0x3f]);\r\n    c1 = (c2 & 0x0f) << 2;\r\n    if (off >= len) {\r\n      rs.push(BASE64_CODE[c1 & 0x3f]);\r\n      break;\r\n    }\r\n    c2 = b[off++] & 0xff;\r\n    c1 |= (c2 >> 6) & 0x03;\r\n    rs.push(BASE64_CODE[c1 & 0x3f]);\r\n    rs.push(BASE64_CODE[c2 & 0x3f]);\r\n  }\r\n  return rs.join(\"\");\r\n}\r\n\r\n/**\r\n * Decodes a base64 encoded string to up to len bytes of output.\r\n * @param {string} s String to decode\r\n * @param {number} len Maximum output length\r\n * @returns {!Array.<number>}\r\n * @inner\r\n */\r\nfunction base64_decode(s, len) {\r\n  var off = 0,\r\n    slen = s.length,\r\n    olen = 0,\r\n    rs = [],\r\n    c1,\r\n    c2,\r\n    c3,\r\n    c4,\r\n    o,\r\n    code;\r\n  if (len <= 0) throw Error(\"Illegal len: \" + len);\r\n  while (off < slen - 1 && olen < len) {\r\n    code = s.charCodeAt(off++);\r\n    c1 = code < BASE64_INDEX.length ? BASE64_INDEX[code] : -1;\r\n    code = s.charCodeAt(off++);\r\n    c2 = code < BASE64_INDEX.length ? BASE64_INDEX[code] : -1;\r\n    if (c1 == -1 || c2 == -1) break;\r\n    o = (c1 << 2) >>> 0;\r\n    o |= (c2 & 0x30) >> 4;\r\n    rs.push(String.fromCharCode(o));\r\n    if (++olen >= len || off >= slen) break;\r\n    code = s.charCodeAt(off++);\r\n    c3 = code < BASE64_INDEX.length ? BASE64_INDEX[code] : -1;\r\n    if (c3 == -1) break;\r\n    o = ((c2 & 0x0f) << 4) >>> 0;\r\n    o |= (c3 & 0x3c) >> 2;\r\n    rs.push(String.fromCharCode(o));\r\n    if (++olen >= len || off >= slen) break;\r\n    code = s.charCodeAt(off++);\r\n    c4 = code < BASE64_INDEX.length ? BASE64_INDEX[code] : -1;\r\n    o = ((c3 & 0x03) << 6) >>> 0;\r\n    o |= c4;\r\n    rs.push(String.fromCharCode(o));\r\n    ++olen;\r\n  }\r\n  var res = [];\r\n  for (off = 0; off < olen; off++) res.push(rs[off].charCodeAt(0));\r\n  return res;\r\n}\r\n\r\n/**\r\n * @type {number}\r\n * @const\r\n * @inner\r\n */\r\nvar BCRYPT_SALT_LEN = 16;\r\n\r\n/**\r\n * @type {number}\r\n * @const\r\n * @inner\r\n */\r\nvar GENSALT_DEFAULT_LOG2_ROUNDS = 10;\r\n\r\n/**\r\n * @type {number}\r\n * @const\r\n * @inner\r\n */\r\nvar BLOWFISH_NUM_ROUNDS = 16;\r\n\r\n/**\r\n * @type {number}\r\n * @const\r\n * @inner\r\n */\r\nvar MAX_EXECUTION_TIME = 100;\r\n\r\n/**\r\n * @type {Array.<number>}\r\n * @const\r\n * @inner\r\n */\r\nvar P_ORIG = [\r\n  0x243f6a88, 0x85a308d3, 0x13198a2e, 0x03707344, 0xa4093822, 0x299f31d0,\r\n  0x082efa98, 0xec4e6c89, 0x452821e6, 0x38d01377, 0xbe5466cf, 0x34e90c6c,\r\n  0xc0ac29b7, 0xc97c50dd, 0x3f84d5b5, 0xb5470917, 0x9216d5d9, 0x8979fb1b,\r\n];\r\n\r\n/**\r\n * @type {Array.<number>}\r\n * @const\r\n * @inner\r\n */\r\nvar S_ORIG = [\r\n  0xd1310ba6, 0x98dfb5ac, 0x2ffd72db, 0xd01adfb7, 0xb8e1afed, 0x6a267e96,\r\n  0xba7c9045, 0xf12c7f99, 0x24a19947, 0xb3916cf7, 0x0801f2e2, 0x858efc16,\r\n  0x636920d8, 0x71574e69, 0xa458fea3, 0xf4933d7e, 0x0d95748f, 0x728eb658,\r\n  0x718bcd58, 0x82154aee, 0x7b54a41d, 0xc25a59b5, 0x9c30d539, 0x2af26013,\r\n  0xc5d1b023, 0x286085f0, 0xca417918, 0xb8db38ef, 0x8e79dcb0, 0x603a180e,\r\n  0x6c9e0e8b, 0xb01e8a3e, 0xd71577c1, 0xbd314b27, 0x78af2fda, 0x55605c60,\r\n  0xe65525f3, 0xaa55ab94, 0x57489862, 0x63e81440, 0x55ca396a, 0x2aab10b6,\r\n  0xb4cc5c34, 0x1141e8ce, 0xa15486af, 0x7c72e993, 0xb3ee1411, 0x636fbc2a,\r\n  0x2ba9c55d, 0x741831f6, 0xce5c3e16, 0x9b87931e, 0xafd6ba33, 0x6c24cf5c,\r\n  0x7a325381, 0x28958677, 0x3b8f4898, 0x6b4bb9af, 0xc4bfe81b, 0x66282193,\r\n  0x61d809cc, 0xfb21a991, 0x487cac60, 0x5dec8032, 0xef845d5d, 0xe98575b1,\r\n  0xdc262302, 0xeb651b88, 0x23893e81, 0xd396acc5, 0x0f6d6ff3, 0x83f44239,\r\n  0x2e0b4482, 0xa4842004, 0x69c8f04a, 0x9e1f9b5e, 0x21c66842, 0xf6e96c9a,\r\n  0x670c9c61, 0xabd388f0, 0x6a51a0d2, 0xd8542f68, 0x960fa728, 0xab5133a3,\r\n  0x6eef0b6c, 0x137a3be4, 0xba3bf050, 0x7efb2a98, 0xa1f1651d, 0x39af0176,\r\n  0x66ca593e, 0x82430e88, 0x8cee8619, 0x456f9fb4, 0x7d84a5c3, 0x3b8b5ebe,\r\n  0xe06f75d8, 0x85c12073, 0x401a449f, 0x56c16aa6, 0x4ed3aa62, 0x363f7706,\r\n  0x1bfedf72, 0x429b023d, 0x37d0d724, 0xd00a1248, 0xdb0fead3, 0x49f1c09b,\r\n  0x075372c9, 0x80991b7b, 0x25d479d8, 0xf6e8def7, 0xe3fe501a, 0xb6794c3b,\r\n  0x976ce0bd, 0x04c006ba, 0xc1a94fb6, 0x409f60c4, 0x5e5c9ec2, 0x196a2463,\r\n  0x68fb6faf, 0x3e6c53b5, 0x1339b2eb, 0x3b52ec6f, 0x6dfc511f, 0x9b30952c,\r\n  0xcc814544, 0xaf5ebd09, 0xbee3d004, 0xde334afd, 0x660f2807, 0x192e4bb3,\r\n  0xc0cba857, 0x45c8740f, 0xd20b5f39, 0xb9d3fbdb, 0x5579c0bd, 0x1a60320a,\r\n  0xd6a100c6, 0x402c7279, 0x679f25fe, 0xfb1fa3cc, 0x8ea5e9f8, 0xdb3222f8,\r\n  0x3c7516df, 0xfd616b15, 0x2f501ec8, 0xad0552ab, 0x323db5fa, 0xfd238760,\r\n  0x53317b48, 0x3e00df82, 0x9e5c57bb, 0xca6f8ca0, 0x1a87562e, 0xdf1769db,\r\n  0xd542a8f6, 0x287effc3, 0xac6732c6, 0x8c4f5573, 0x695b27b0, 0xbbca58c8,\r\n  0xe1ffa35d, 0xb8f011a0, 0x10fa3d98, 0xfd2183b8, 0x4afcb56c, 0x2dd1d35b,\r\n  0x9a53e479, 0xb6f84565, 0xd28e49bc, 0x4bfb9790, 0xe1ddf2da, 0xa4cb7e33,\r\n  0x62fb1341, 0xcee4c6e8, 0xef20cada, 0x36774c01, 0xd07e9efe, 0x2bf11fb4,\r\n  0x95dbda4d, 0xae909198, 0xeaad8e71, 0x6b93d5a0, 0xd08ed1d0, 0xafc725e0,\r\n  0x8e3c5b2f, 0x8e7594b7, 0x8ff6e2fb, 0xf2122b64, 0x8888b812, 0x900df01c,\r\n  0x4fad5ea0, 0x688fc31c, 0xd1cff191, 0xb3a8c1ad, 0x2f2f2218, 0xbe0e1777,\r\n  0xea752dfe, 0x8b021fa1, 0xe5a0cc0f, 0xb56f74e8, 0x18acf3d6, 0xce89e299,\r\n  0xb4a84fe0, 0xfd13e0b7, 0x7cc43b81, 0xd2ada8d9, 0x165fa266, 0x80957705,\r\n  0x93cc7314, 0x211a1477, 0xe6ad2065, 0x77b5fa86, 0xc75442f5, 0xfb9d35cf,\r\n  0xebcdaf0c, 0x7b3e89a0, 0xd6411bd3, 0xae1e7e49, 0x00250e2d, 0x2071b35e,\r\n  0x226800bb, 0x57b8e0af, 0x2464369b, 0xf009b91e, 0x5563911d, 0x59dfa6aa,\r\n  0x78c14389, 0xd95a537f, 0x207d5ba2, 0x02e5b9c5, 0x83260376, 0x6295cfa9,\r\n  0x11c81968, 0x4e734a41, 0xb3472dca, 0x7b14a94a, 0x1b510052, 0x9a532915,\r\n  0xd60f573f, 0xbc9bc6e4, 0x2b60a476, 0x81e67400, 0x08ba6fb5, 0x571be91f,\r\n  0xf296ec6b, 0x2a0dd915, 0xb6636521, 0xe7b9f9b6, 0xff34052e, 0xc5855664,\r\n  0x53b02d5d, 0xa99f8fa1, 0x08ba4799, 0x6e85076a, 0x4b7a70e9, 0xb5b32944,\r\n  0xdb75092e, 0xc4192623, 0xad6ea6b0, 0x49a7df7d, 0x9cee60b8, 0x8fedb266,\r\n  0xecaa8c71, 0x699a17ff, 0x5664526c, 0xc2b19ee1, 0x193602a5, 0x75094c29,\r\n  0xa0591340, 0xe4183a3e, 0x3f54989a, 0x5b429d65, 0x6b8fe4d6, 0x99f73fd6,\r\n  0xa1d29c07, 0xefe830f5, 0x4d2d38e6, 0xf0255dc1, 0x4cdd2086, 0x8470eb26,\r\n  0x6382e9c6, 0x021ecc5e, 0x09686b3f, 0x3ebaefc9, 0x3c971814, 0x6b6a70a1,\r\n  0x687f3584, 0x52a0e286, 0xb79c5305, 0xaa500737, 0x3e07841c, 0x7fdeae5c,\r\n  0x8e7d44ec, 0x5716f2b8, 0xb03ada37, 0xf0500c0d, 0xf01c1f04, 0x0200b3ff,\r\n  0xae0cf51a, 0x3cb574b2, 0x25837a58, 0xdc0921bd, 0xd19113f9, 0x7ca92ff6,\r\n  0x94324773, 0x22f54701, 0x3ae5e581, 0x37c2dadc, 0xc8b57634, 0x9af3dda7,\r\n  0xa9446146, 0x0fd0030e, 0xecc8c73e, 0xa4751e41, 0xe238cd99, 0x3bea0e2f,\r\n  0x3280bba1, 0x183eb331, 0x4e548b38, 0x4f6db908, 0x6f420d03, 0xf60a04bf,\r\n  0x2cb81290, 0x24977c79, 0x5679b072, 0xbcaf89af, 0xde9a771f, 0xd9930810,\r\n  0xb38bae12, 0xdccf3f2e, 0x5512721f, 0x2e6b7124, 0x501adde6, 0x9f84cd87,\r\n  0x7a584718, 0x7408da17, 0xbc9f9abc, 0xe94b7d8c, 0xec7aec3a, 0xdb851dfa,\r\n  0x63094366, 0xc464c3d2, 0xef1c1847, 0x3215d908, 0xdd433b37, 0x24c2ba16,\r\n  0x12a14d43, 0x2a65c451, 0x50940002, 0x133ae4dd, 0x71dff89e, 0x10314e55,\r\n  0x81ac77d6, 0x5f11199b, 0x043556f1, 0xd7a3c76b, 0x3c11183b, 0x5924a509,\r\n  0xf28fe6ed, 0x97f1fbfa, 0x9ebabf2c, 0x1e153c6e, 0x86e34570, 0xeae96fb1,\r\n  0x860e5e0a, 0x5a3e2ab3, 0x771fe71c, 0x4e3d06fa, 0x2965dcb9, 0x99e71d0f,\r\n  0x803e89d6, 0x5266c825, 0x2e4cc978, 0x9c10b36a, 0xc6150eba, 0x94e2ea78,\r\n  0xa5fc3c53, 0x1e0a2df4, 0xf2f74ea7, 0x361d2b3d, 0x1939260f, 0x19c27960,\r\n  0x5223a708, 0xf71312b6, 0xebadfe6e, 0xeac31f66, 0xe3bc4595, 0xa67bc883,\r\n  0xb17f37d1, 0x018cff28, 0xc332ddef, 0xbe6c5aa5, 0x65582185, 0x68ab9802,\r\n  0xeecea50f, 0xdb2f953b, 0x2aef7dad, 0x5b6e2f84, 0x1521b628, 0x29076170,\r\n  0xecdd4775, 0x619f1510, 0x13cca830, 0xeb61bd96, 0x0334fe1e, 0xaa0363cf,\r\n  0xb5735c90, 0x4c70a239, 0xd59e9e0b, 0xcbaade14, 0xeecc86bc, 0x60622ca7,\r\n  0x9cab5cab, 0xb2f3846e, 0x648b1eaf, 0x19bdf0ca, 0xa02369b9, 0x655abb50,\r\n  0x40685a32, 0x3c2ab4b3, 0x319ee9d5, 0xc021b8f7, 0x9b540b19, 0x875fa099,\r\n  0x95f7997e, 0x623d7da8, 0xf837889a, 0x97e32d77, 0x11ed935f, 0x16681281,\r\n  0x0e358829, 0xc7e61fd6, 0x96dedfa1, 0x7858ba99, 0x57f584a5, 0x1b227263,\r\n  0x9b83c3ff, 0x1ac24696, 0xcdb30aeb, 0x532e3054, 0x8fd948e4, 0x6dbc3128,\r\n  0x58ebf2ef, 0x34c6ffea, 0xfe28ed61, 0xee7c3c73, 0x5d4a14d9, 0xe864b7e3,\r\n  0x42105d14, 0x203e13e0, 0x45eee2b6, 0xa3aaabea, 0xdb6c4f15, 0xfacb4fd0,\r\n  0xc742f442, 0xef6abbb5, 0x654f3b1d, 0x41cd2105, 0xd81e799e, 0x86854dc7,\r\n  0xe44b476a, 0x3d816250, 0xcf62a1f2, 0x5b8d2646, 0xfc8883a0, 0xc1c7b6a3,\r\n  0x7f1524c3, 0x69cb7492, 0x47848a0b, 0x5692b285, 0x095bbf00, 0xad19489d,\r\n  0x1462b174, 0x23820e00, 0x58428d2a, 0x0c55f5ea, 0x1dadf43e, 0x233f7061,\r\n  0x3372f092, 0x8d937e41, 0xd65fecf1, 0x6c223bdb, 0x7cde3759, 0xcbee7460,\r\n  0x4085f2a7, 0xce77326e, 0xa6078084, 0x19f8509e, 0xe8efd855, 0x61d99735,\r\n  0xa969a7aa, 0xc50c06c2, 0x5a04abfc, 0x800bcadc, 0x9e447a2e, 0xc3453484,\r\n  0xfdd56705, 0x0e1e9ec9, 0xdb73dbd3, 0x105588cd, 0x675fda79, 0xe3674340,\r\n  0xc5c43465, 0x713e38d8, 0x3d28f89e, 0xf16dff20, 0x153e21e7, 0x8fb03d4a,\r\n  0xe6e39f2b, 0xdb83adf7, 0xe93d5a68, 0x948140f7, 0xf64c261c, 0x94692934,\r\n  0x411520f7, 0x7602d4f7, 0xbcf46b2e, 0xd4a20068, 0xd4082471, 0x3320f46a,\r\n  0x43b7d4b7, 0x500061af, 0x1e39f62e, 0x97244546, 0x14214f74, 0xbf8b8840,\r\n  0x4d95fc1d, 0x96b591af, 0x70f4ddd3, 0x66a02f45, 0xbfbc09ec, 0x03bd9785,\r\n  0x7fac6dd0, 0x31cb8504, 0x96eb27b3, 0x55fd3941, 0xda2547e6, 0xabca0a9a,\r\n  0x28507825, 0x530429f4, 0x0a2c86da, 0xe9b66dfb, 0x68dc1462, 0xd7486900,\r\n  0x680ec0a4, 0x27a18dee, 0x4f3ffea2, 0xe887ad8c, 0xb58ce006, 0x7af4d6b6,\r\n  0xaace1e7c, 0xd3375fec, 0xce78a399, 0x406b2a42, 0x20fe9e35, 0xd9f385b9,\r\n  0xee39d7ab, 0x3b124e8b, 0x1dc9faf7, 0x4b6d1856, 0x26a36631, 0xeae397b2,\r\n  0x3a6efa74, 0xdd5b4332, 0x6841e7f7, 0xca7820fb, 0xfb0af54e, 0xd8feb397,\r\n  0x454056ac, 0xba489527, 0x55533a3a, 0x20838d87, 0xfe6ba9b7, 0xd096954b,\r\n  0x55a867bc, 0xa1159a58, 0xcca92963, 0x99e1db33, 0xa62a4a56, 0x3f3125f9,\r\n  0x5ef47e1c, 0x9029317c, 0xfdf8e802, 0x04272f70, 0x80bb155c, 0x05282ce3,\r\n  0x95c11548, 0xe4c66d22, 0x48c1133f, 0xc70f86dc, 0x07f9c9ee, 0x41041f0f,\r\n  0x404779a4, 0x5d886e17, 0x325f51eb, 0xd59bc0d1, 0xf2bcc18f, 0x41113564,\r\n  0x257b7834, 0x602a9c60, 0xdff8e8a3, 0x1f636c1b, 0x0e12b4c2, 0x02e1329e,\r\n  0xaf664fd1, 0xcad18115, 0x6b2395e0, 0x333e92e1, 0x3b240b62, 0xeebeb922,\r\n  0x85b2a20e, 0xe6ba0d99, 0xde720c8c, 0x2da2f728, 0xd0127845, 0x95b794fd,\r\n  0x647d0862, 0xe7ccf5f0, 0x5449a36f, 0x877d48fa, 0xc39dfd27, 0xf33e8d1e,\r\n  0x0a476341, 0x992eff74, 0x3a6f6eab, 0xf4f8fd37, 0xa812dc60, 0xa1ebddf8,\r\n  0x991be14c, 0xdb6e6b0d, 0xc67b5510, 0x6d672c37, 0x2765d43b, 0xdcd0e804,\r\n  0xf1290dc7, 0xcc00ffa3, 0xb5390f92, 0x690fed0b, 0x667b9ffb, 0xcedb7d9c,\r\n  0xa091cf0b, 0xd9155ea3, 0xbb132f88, 0x515bad24, 0x7b9479bf, 0x763bd6eb,\r\n  0x37392eb3, 0xcc115979, 0x8026e297, 0xf42e312d, 0x6842ada7, 0xc66a2b3b,\r\n  0x12754ccc, 0x782ef11c, 0x6a124237, 0xb79251e7, 0x06a1bbe6, 0x4bfb6350,\r\n  0x1a6b1018, 0x11caedfa, 0x3d25bdd8, 0xe2e1c3c9, 0x44421659, 0x0a121386,\r\n  0xd90cec6e, 0xd5abea2a, 0x64af674e, 0xda86a85f, 0xbebfe988, 0x64e4c3fe,\r\n  0x9dbc8057, 0xf0f7c086, 0x60787bf8, 0x6003604d, 0xd1fd8346, 0xf6381fb0,\r\n  0x7745ae04, 0xd736fccc, 0x83426b33, 0xf01eab71, 0xb0804187, 0x3c005e5f,\r\n  0x77a057be, 0xbde8ae24, 0x55464299, 0xbf582e61, 0x4e58f48f, 0xf2ddfda2,\r\n  0xf474ef38, 0x8789bdc2, 0x5366f9c3, 0xc8b38e74, 0xb475f255, 0x46fcd9b9,\r\n  0x7aeb2661, 0x8b1ddf84, 0x846a0e79, 0x915f95e2, 0x466e598e, 0x20b45770,\r\n  0x8cd55591, 0xc902de4c, 0xb90bace1, 0xbb8205d0, 0x11a86248, 0x7574a99e,\r\n  0xb77f19b6, 0xe0a9dc09, 0x662d09a1, 0xc4324633, 0xe85a1f02, 0x09f0be8c,\r\n  0x4a99a025, 0x1d6efe10, 0x1ab93d1d, 0x0ba5a4df, 0xa186f20f, 0x2868f169,\r\n  0xdcb7da83, 0x573906fe, 0xa1e2ce9b, 0x4fcd7f52, 0x50115e01, 0xa70683fa,\r\n  0xa002b5c4, 0x0de6d027, 0x9af88c27, 0x773f8641, 0xc3604c06, 0x61a806b5,\r\n  0xf0177a28, 0xc0f586e0, 0x006058aa, 0x30dc7d62, 0x11e69ed7, 0x2338ea63,\r\n  0x53c2dd94, 0xc2c21634, 0xbbcbee56, 0x90bcb6de, 0xebfc7da1, 0xce591d76,\r\n  0x6f05e409, 0x4b7c0188, 0x39720a3d, 0x7c927c24, 0x86e3725f, 0x724d9db9,\r\n  0x1ac15bb4, 0xd39eb8fc, 0xed545578, 0x08fca5b5, 0xd83d7cd3, 0x4dad0fc4,\r\n  0x1e50ef5e, 0xb161e6f8, 0xa28514d9, 0x6c51133c, 0x6fd5c7e7, 0x56e14ec4,\r\n  0x362abfce, 0xddc6c837, 0xd79a3234, 0x92638212, 0x670efa8e, 0x406000e0,\r\n  0x3a39ce37, 0xd3faf5cf, 0xabc27737, 0x5ac52d1b, 0x5cb0679e, 0x4fa33742,\r\n  0xd3822740, 0x99bc9bbe, 0xd5118e9d, 0xbf0f7315, 0xd62d1c7e, 0xc700c47b,\r\n  0xb78c1b6b, 0x21a19045, 0xb26eb1be, 0x6a366eb4, 0x5748ab2f, 0xbc946e79,\r\n  0xc6a376d2, 0x6549c2c8, 0x530ff8ee, 0x468dde7d, 0xd5730a1d, 0x4cd04dc6,\r\n  0x2939bbdb, 0xa9ba4650, 0xac9526e8, 0xbe5ee304, 0xa1fad5f0, 0x6a2d519a,\r\n  0x63ef8ce2, 0x9a86ee22, 0xc089c2b8, 0x43242ef6, 0xa51e03aa, 0x9cf2d0a4,\r\n  0x83c061ba, 0x9be96a4d, 0x8fe51550, 0xba645bd6, 0x2826a2f9, 0xa73a3ae1,\r\n  0x4ba99586, 0xef5562e9, 0xc72fefd3, 0xf752f7da, 0x3f046f69, 0x77fa0a59,\r\n  0x80e4a915, 0x87b08601, 0x9b09e6ad, 0x3b3ee593, 0xe990fd5a, 0x9e34d797,\r\n  0x2cf0b7d9, 0x022b8b51, 0x96d5ac3a, 0x017da67d, 0xd1cf3ed6, 0x7c7d2d28,\r\n  0x1f9f25cf, 0xadf2b89b, 0x5ad6b472, 0x5a88f54c, 0xe029ac71, 0xe019a5e6,\r\n  0x47b0acfd, 0xed93fa9b, 0xe8d3c48d, 0x283b57cc, 0xf8d56629, 0x79132e28,\r\n  0x785f0191, 0xed756055, 0xf7960e44, 0xe3d35e8c, 0x15056dd4, 0x88f46dba,\r\n  0x03a16125, 0x0564f0bd, 0xc3eb9e15, 0x3c9057a2, 0x97271aec, 0xa93a072a,\r\n  0x1b3f6d9b, 0x1e6321f5, 0xf59c66fb, 0x26dcf319, 0x7533d928, 0xb155fdf5,\r\n  0x03563482, 0x8aba3cbb, 0x28517711, 0xc20ad9f8, 0xabcc5167, 0xccad925f,\r\n  0x4de81751, 0x3830dc8e, 0x379d5862, 0x9320f991, 0xea7a90c2, 0xfb3e7bce,\r\n  0x5121ce64, 0x774fbe32, 0xa8b6e37e, 0xc3293d46, 0x48de5369, 0x6413e680,\r\n  0xa2ae0810, 0xdd6db224, 0x69852dfd, 0x09072166, 0xb39a460a, 0x6445c0dd,\r\n  0x586cdecf, 0x1c20c8ae, 0x5bbef7dd, 0x1b588d40, 0xccd2017f, 0x6bb4e3bb,\r\n  0xdda26a7e, 0x3a59ff45, 0x3e350a44, 0xbcb4cdd5, 0x72eacea8, 0xfa6484bb,\r\n  0x8d6612ae, 0xbf3c6f47, 0xd29be463, 0x542f5d9e, 0xaec2771b, 0xf64e6370,\r\n  0x740e0d8d, 0xe75b1357, 0xf8721671, 0xaf537d5d, 0x4040cb08, 0x4eb4e2cc,\r\n  0x34d2466a, 0x0115af84, 0xe1b00428, 0x95983a1d, 0x06b89fb4, 0xce6ea048,\r\n  0x6f3f3b82, 0x3520ab82, 0x011a1d4b, 0x277227f8, 0x611560b1, 0xe7933fdc,\r\n  0xbb3a792b, 0x344525bd, 0xa08839e1, 0x51ce794b, 0x2f32c9b7, 0xa01fbac9,\r\n  0xe01cc87e, 0xbcc7d1f6, 0xcf0111c3, 0xa1e8aac7, 0x1a908749, 0xd44fbd9a,\r\n  0xd0dadecb, 0xd50ada38, 0x0339c32a, 0xc6913667, 0x8df9317c, 0xe0b12b4f,\r\n  0xf79e59b7, 0x43f5bb3a, 0xf2d519ff, 0x27d9459c, 0xbf97222c, 0x15e6fc2a,\r\n  0x0f91fc71, 0x9b941525, 0xfae59361, 0xceb69ceb, 0xc2a86459, 0x12baa8d1,\r\n  0xb6c1075e, 0xe3056a0c, 0x10d25065, 0xcb03a442, 0xe0ec6e0e, 0x1698db3b,\r\n  0x4c98a0be, 0x3278e964, 0x9f1f9532, 0xe0d392df, 0xd3a0342b, 0x8971f21e,\r\n  0x1b0a7441, 0x4ba3348c, 0xc5be7120, 0xc37632d8, 0xdf359f8d, 0x9b992f2e,\r\n  0xe60b6f47, 0x0fe3f11d, 0xe54cda54, 0x1edad891, 0xce6279cf, 0xcd3e7e6f,\r\n  0x1618b166, 0xfd2c1d05, 0x848fd2c5, 0xf6fb2299, 0xf523f357, 0xa6327623,\r\n  0x93a83531, 0x56cccd02, 0xacf08162, 0x5a75ebb5, 0x6e163697, 0x88d273cc,\r\n  0xde966292, 0x81b949d0, 0x4c50901b, 0x71c65614, 0xe6c6c7bd, 0x327a140a,\r\n  0x45e1d006, 0xc3f27b9a, 0xc9aa53fd, 0x62a80f00, 0xbb25bfe2, 0x35bdd2f6,\r\n  0x71126905, 0xb2040222, 0xb6cbcf7c, 0xcd769c2b, 0x53113ec0, 0x1640e3d3,\r\n  0x38abbd60, 0x2547adf0, 0xba38209c, 0xf746ce76, 0x77afa1c5, 0x20756060,\r\n  0x85cbfe4e, 0x8ae88dd8, 0x7aaaf9b0, 0x4cf9aa7e, 0x1948c25c, 0x02fb8a8c,\r\n  0x01c36ae4, 0xd6ebe1f9, 0x90d4f869, 0xa65cdea0, 0x3f09252d, 0xc208e69f,\r\n  0xb74e6132, 0xce77e25b, 0x578fdfe3, 0x3ac372e6,\r\n];\r\n\r\n/**\r\n * @type {Array.<number>}\r\n * @const\r\n * @inner\r\n */\r\nvar C_ORIG = [\r\n  0x4f727068, 0x65616e42, 0x65686f6c, 0x64657253, 0x63727944, 0x6f756274,\r\n];\r\n\r\n/**\r\n * @param {Array.<number>} lr\r\n * @param {number} off\r\n * @param {Array.<number>} P\r\n * @param {Array.<number>} S\r\n * @returns {Array.<number>}\r\n * @inner\r\n */\r\nfunction _encipher(lr, off, P, S) {\r\n  // This is our bottleneck: 1714/1905 ticks / 90% - see profile.txt\r\n  var n,\r\n    l = lr[off],\r\n    r = lr[off + 1];\r\n\r\n  l ^= P[0];\r\n\r\n  /*\r\n    for (var i=0, k=BLOWFISH_NUM_ROUNDS-2; i<=k;)\r\n        // Feistel substitution on left word\r\n        n  = S[l >>> 24],\r\n        n += S[0x100 | ((l >> 16) & 0xff)],\r\n        n ^= S[0x200 | ((l >> 8) & 0xff)],\r\n        n += S[0x300 | (l & 0xff)],\r\n        r ^= n ^ P[++i],\r\n        // Feistel substitution on right word\r\n        n  = S[r >>> 24],\r\n        n += S[0x100 | ((r >> 16) & 0xff)],\r\n        n ^= S[0x200 | ((r >> 8) & 0xff)],\r\n        n += S[0x300 | (r & 0xff)],\r\n        l ^= n ^ P[++i];\r\n    */\r\n\r\n  //The following is an unrolled version of the above loop.\r\n  //Iteration 0\r\n  n = S[l >>> 24];\r\n  n += S[0x100 | ((l >> 16) & 0xff)];\r\n  n ^= S[0x200 | ((l >> 8) & 0xff)];\r\n  n += S[0x300 | (l & 0xff)];\r\n  r ^= n ^ P[1];\r\n  n = S[r >>> 24];\r\n  n += S[0x100 | ((r >> 16) & 0xff)];\r\n  n ^= S[0x200 | ((r >> 8) & 0xff)];\r\n  n += S[0x300 | (r & 0xff)];\r\n  l ^= n ^ P[2];\r\n  //Iteration 1\r\n  n = S[l >>> 24];\r\n  n += S[0x100 | ((l >> 16) & 0xff)];\r\n  n ^= S[0x200 | ((l >> 8) & 0xff)];\r\n  n += S[0x300 | (l & 0xff)];\r\n  r ^= n ^ P[3];\r\n  n = S[r >>> 24];\r\n  n += S[0x100 | ((r >> 16) & 0xff)];\r\n  n ^= S[0x200 | ((r >> 8) & 0xff)];\r\n  n += S[0x300 | (r & 0xff)];\r\n  l ^= n ^ P[4];\r\n  //Iteration 2\r\n  n = S[l >>> 24];\r\n  n += S[0x100 | ((l >> 16) & 0xff)];\r\n  n ^= S[0x200 | ((l >> 8) & 0xff)];\r\n  n += S[0x300 | (l & 0xff)];\r\n  r ^= n ^ P[5];\r\n  n = S[r >>> 24];\r\n  n += S[0x100 | ((r >> 16) & 0xff)];\r\n  n ^= S[0x200 | ((r >> 8) & 0xff)];\r\n  n += S[0x300 | (r & 0xff)];\r\n  l ^= n ^ P[6];\r\n  //Iteration 3\r\n  n = S[l >>> 24];\r\n  n += S[0x100 | ((l >> 16) & 0xff)];\r\n  n ^= S[0x200 | ((l >> 8) & 0xff)];\r\n  n += S[0x300 | (l & 0xff)];\r\n  r ^= n ^ P[7];\r\n  n = S[r >>> 24];\r\n  n += S[0x100 | ((r >> 16) & 0xff)];\r\n  n ^= S[0x200 | ((r >> 8) & 0xff)];\r\n  n += S[0x300 | (r & 0xff)];\r\n  l ^= n ^ P[8];\r\n  //Iteration 4\r\n  n = S[l >>> 24];\r\n  n += S[0x100 | ((l >> 16) & 0xff)];\r\n  n ^= S[0x200 | ((l >> 8) & 0xff)];\r\n  n += S[0x300 | (l & 0xff)];\r\n  r ^= n ^ P[9];\r\n  n = S[r >>> 24];\r\n  n += S[0x100 | ((r >> 16) & 0xff)];\r\n  n ^= S[0x200 | ((r >> 8) & 0xff)];\r\n  n += S[0x300 | (r & 0xff)];\r\n  l ^= n ^ P[10];\r\n  //Iteration 5\r\n  n = S[l >>> 24];\r\n  n += S[0x100 | ((l >> 16) & 0xff)];\r\n  n ^= S[0x200 | ((l >> 8) & 0xff)];\r\n  n += S[0x300 | (l & 0xff)];\r\n  r ^= n ^ P[11];\r\n  n = S[r >>> 24];\r\n  n += S[0x100 | ((r >> 16) & 0xff)];\r\n  n ^= S[0x200 | ((r >> 8) & 0xff)];\r\n  n += S[0x300 | (r & 0xff)];\r\n  l ^= n ^ P[12];\r\n  //Iteration 6\r\n  n = S[l >>> 24];\r\n  n += S[0x100 | ((l >> 16) & 0xff)];\r\n  n ^= S[0x200 | ((l >> 8) & 0xff)];\r\n  n += S[0x300 | (l & 0xff)];\r\n  r ^= n ^ P[13];\r\n  n = S[r >>> 24];\r\n  n += S[0x100 | ((r >> 16) & 0xff)];\r\n  n ^= S[0x200 | ((r >> 8) & 0xff)];\r\n  n += S[0x300 | (r & 0xff)];\r\n  l ^= n ^ P[14];\r\n  //Iteration 7\r\n  n = S[l >>> 24];\r\n  n += S[0x100 | ((l >> 16) & 0xff)];\r\n  n ^= S[0x200 | ((l >> 8) & 0xff)];\r\n  n += S[0x300 | (l & 0xff)];\r\n  r ^= n ^ P[15];\r\n  n = S[r >>> 24];\r\n  n += S[0x100 | ((r >> 16) & 0xff)];\r\n  n ^= S[0x200 | ((r >> 8) & 0xff)];\r\n  n += S[0x300 | (r & 0xff)];\r\n  l ^= n ^ P[16];\r\n\r\n  lr[off] = r ^ P[BLOWFISH_NUM_ROUNDS + 1];\r\n  lr[off + 1] = l;\r\n  return lr;\r\n}\r\n\r\n/**\r\n * @param {Array.<number>} data\r\n * @param {number} offp\r\n * @returns {{key: number, offp: number}}\r\n * @inner\r\n */\r\nfunction _streamtoword(data, offp) {\r\n  for (var i = 0, word = 0; i < 4; ++i)\r\n    (word = (word << 8) | (data[offp] & 0xff)),\r\n      (offp = (offp + 1) % data.length);\r\n  return { key: word, offp: offp };\r\n}\r\n\r\n/**\r\n * @param {Array.<number>} key\r\n * @param {Array.<number>} P\r\n * @param {Array.<number>} S\r\n * @inner\r\n */\r\nfunction _key(key, P, S) {\r\n  var offset = 0,\r\n    lr = [0, 0],\r\n    plen = P.length,\r\n    slen = S.length,\r\n    sw;\r\n  for (var i = 0; i < plen; i++)\r\n    (sw = _streamtoword(key, offset)),\r\n      (offset = sw.offp),\r\n      (P[i] = P[i] ^ sw.key);\r\n  for (i = 0; i < plen; i += 2)\r\n    (lr = _encipher(lr, 0, P, S)), (P[i] = lr[0]), (P[i + 1] = lr[1]);\r\n  for (i = 0; i < slen; i += 2)\r\n    (lr = _encipher(lr, 0, P, S)), (S[i] = lr[0]), (S[i + 1] = lr[1]);\r\n}\r\n\r\n/**\r\n * Expensive key schedule Blowfish.\r\n * @param {Array.<number>} data\r\n * @param {Array.<number>} key\r\n * @param {Array.<number>} P\r\n * @param {Array.<number>} S\r\n * @inner\r\n */\r\nfunction _ekskey(data, key, P, S) {\r\n  var offp = 0,\r\n    lr = [0, 0],\r\n    plen = P.length,\r\n    slen = S.length,\r\n    sw;\r\n  for (var i = 0; i < plen; i++)\r\n    (sw = _streamtoword(key, offp)), (offp = sw.offp), (P[i] = P[i] ^ sw.key);\r\n  offp = 0;\r\n  for (i = 0; i < plen; i += 2)\r\n    (sw = _streamtoword(data, offp)),\r\n      (offp = sw.offp),\r\n      (lr[0] ^= sw.key),\r\n      (sw = _streamtoword(data, offp)),\r\n      (offp = sw.offp),\r\n      (lr[1] ^= sw.key),\r\n      (lr = _encipher(lr, 0, P, S)),\r\n      (P[i] = lr[0]),\r\n      (P[i + 1] = lr[1]);\r\n  for (i = 0; i < slen; i += 2)\r\n    (sw = _streamtoword(data, offp)),\r\n      (offp = sw.offp),\r\n      (lr[0] ^= sw.key),\r\n      (sw = _streamtoword(data, offp)),\r\n      (offp = sw.offp),\r\n      (lr[1] ^= sw.key),\r\n      (lr = _encipher(lr, 0, P, S)),\r\n      (S[i] = lr[0]),\r\n      (S[i + 1] = lr[1]);\r\n}\r\n\r\n/**\r\n * Internaly crypts a string.\r\n * @param {Array.<number>} b Bytes to crypt\r\n * @param {Array.<number>} salt Salt bytes to use\r\n * @param {number} rounds Number of rounds\r\n * @param {function(Error, Array.<number>=)=} callback Callback receiving the error, if any, and the resulting bytes. If\r\n *  omitted, the operation will be performed synchronously.\r\n *  @param {function(number)=} progressCallback Callback called with the current progress\r\n * @returns {!Array.<number>|undefined} Resulting bytes if callback has been omitted, otherwise `undefined`\r\n * @inner\r\n */\r\nfunction _crypt(b, salt, rounds, callback, progressCallback) {\r\n  var cdata = C_ORIG.slice(),\r\n    clen = cdata.length,\r\n    err;\r\n\r\n  // Validate\r\n  if (rounds < 4 || rounds > 31) {\r\n    err = Error(\"Illegal number of rounds (4-31): \" + rounds);\r\n    if (callback) {\r\n      nextTick(callback.bind(this, err));\r\n      return;\r\n    } else throw err;\r\n  }\r\n  if (salt.length !== BCRYPT_SALT_LEN) {\r\n    err = Error(\r\n      \"Illegal salt length: \" + salt.length + \" != \" + BCRYPT_SALT_LEN,\r\n    );\r\n    if (callback) {\r\n      nextTick(callback.bind(this, err));\r\n      return;\r\n    } else throw err;\r\n  }\r\n  rounds = (1 << rounds) >>> 0;\r\n\r\n  var P,\r\n    S,\r\n    i = 0,\r\n    j;\r\n\r\n  //Use typed arrays when available - huge speedup!\r\n  if (typeof Int32Array === \"function\") {\r\n    P = new Int32Array(P_ORIG);\r\n    S = new Int32Array(S_ORIG);\r\n  } else {\r\n    P = P_ORIG.slice();\r\n    S = S_ORIG.slice();\r\n  }\r\n\r\n  _ekskey(salt, b, P, S);\r\n\r\n  /**\r\n   * Calcualtes the next round.\r\n   * @returns {Array.<number>|undefined} Resulting array if callback has been omitted, otherwise `undefined`\r\n   * @inner\r\n   */\r\n  function next() {\r\n    if (progressCallback) progressCallback(i / rounds);\r\n    if (i < rounds) {\r\n      var start = Date.now();\r\n      for (; i < rounds; ) {\r\n        i = i + 1;\r\n        _key(b, P, S);\r\n        _key(salt, P, S);\r\n        if (Date.now() - start > MAX_EXECUTION_TIME) break;\r\n      }\r\n    } else {\r\n      for (i = 0; i < 64; i++)\r\n        for (j = 0; j < clen >> 1; j++) _encipher(cdata, j << 1, P, S);\r\n      var ret = [];\r\n      for (i = 0; i < clen; i++)\r\n        ret.push(((cdata[i] >> 24) & 0xff) >>> 0),\r\n          ret.push(((cdata[i] >> 16) & 0xff) >>> 0),\r\n          ret.push(((cdata[i] >> 8) & 0xff) >>> 0),\r\n          ret.push((cdata[i] & 0xff) >>> 0);\r\n      if (callback) {\r\n        callback(null, ret);\r\n        return;\r\n      } else return ret;\r\n    }\r\n    if (callback) nextTick(next);\r\n  }\r\n\r\n  // Async\r\n  if (typeof callback !== \"undefined\") {\r\n    next();\r\n\r\n    // Sync\r\n  } else {\r\n    var res;\r\n    while (true) if (typeof (res = next()) !== \"undefined\") return res || [];\r\n  }\r\n}\r\n\r\n/**\r\n * Internally hashes a password.\r\n * @param {string} password Password to hash\r\n * @param {?string} salt Salt to use, actually never null\r\n * @param {function(Error, string=)=} callback Callback receiving the error, if any, and the resulting hash. If omitted,\r\n *  hashing is performed synchronously.\r\n *  @param {function(number)=} progressCallback Callback called with the current progress\r\n * @returns {string|undefined} Resulting hash if callback has been omitted, otherwise `undefined`\r\n * @inner\r\n */\r\nfunction _hash(password, salt, callback, progressCallback) {\r\n  var err;\r\n  if (typeof password !== \"string\" || typeof salt !== \"string\") {\r\n    err = Error(\"Invalid string / salt: Not a string\");\r\n    if (callback) {\r\n      nextTick(callback.bind(this, err));\r\n      return;\r\n    } else throw err;\r\n  }\r\n\r\n  // Validate the salt\r\n  var minor, offset;\r\n  if (salt.charAt(0) !== \"$\" || salt.charAt(1) !== \"2\") {\r\n    err = Error(\"Invalid salt version: \" + salt.substring(0, 2));\r\n    if (callback) {\r\n      nextTick(callback.bind(this, err));\r\n      return;\r\n    } else throw err;\r\n  }\r\n  if (salt.charAt(2) === \"$\") (minor = String.fromCharCode(0)), (offset = 3);\r\n  else {\r\n    minor = salt.charAt(2);\r\n    if (\r\n      (minor !== \"a\" && minor !== \"b\" && minor !== \"y\") ||\r\n      salt.charAt(3) !== \"$\"\r\n    ) {\r\n      err = Error(\"Invalid salt revision: \" + salt.substring(2, 4));\r\n      if (callback) {\r\n        nextTick(callback.bind(this, err));\r\n        return;\r\n      } else throw err;\r\n    }\r\n    offset = 4;\r\n  }\r\n\r\n  // Extract number of rounds\r\n  if (salt.charAt(offset + 2) > \"$\") {\r\n    err = Error(\"Missing salt rounds\");\r\n    if (callback) {\r\n      nextTick(callback.bind(this, err));\r\n      return;\r\n    } else throw err;\r\n  }\r\n  var r1 = parseInt(salt.substring(offset, offset + 1), 10) * 10,\r\n    r2 = parseInt(salt.substring(offset + 1, offset + 2), 10),\r\n    rounds = r1 + r2,\r\n    real_salt = salt.substring(offset + 3, offset + 25);\r\n  password += minor >= \"a\" ? \"\\x00\" : \"\";\r\n\r\n  var passwordb = utf8Array(password),\r\n    saltb = base64_decode(real_salt, BCRYPT_SALT_LEN);\r\n\r\n  /**\r\n   * Finishes hashing.\r\n   * @param {Array.<number>} bytes Byte array\r\n   * @returns {string}\r\n   * @inner\r\n   */\r\n  function finish(bytes) {\r\n    var res = [];\r\n    res.push(\"$2\");\r\n    if (minor >= \"a\") res.push(minor);\r\n    res.push(\"$\");\r\n    if (rounds < 10) res.push(\"0\");\r\n    res.push(rounds.toString());\r\n    res.push(\"$\");\r\n    res.push(base64_encode(saltb, saltb.length));\r\n    res.push(base64_encode(bytes, C_ORIG.length * 4 - 1));\r\n    return res.join(\"\");\r\n  }\r\n\r\n  // Sync\r\n  if (typeof callback == \"undefined\")\r\n    return finish(_crypt(passwordb, saltb, rounds));\r\n  // Async\r\n  else {\r\n    _crypt(\r\n      passwordb,\r\n      saltb,\r\n      rounds,\r\n      function (err, bytes) {\r\n        if (err) callback(err, null);\r\n        else callback(null, finish(bytes));\r\n      },\r\n      progressCallback,\r\n    );\r\n  }\r\n}\r\n\r\n/**\r\n * Encodes a byte array to base64 with up to len bytes of input, using the custom bcrypt alphabet.\r\n * @function\r\n * @param {!Array.<number>} bytes Byte array\r\n * @param {number} length Maximum input length\r\n * @returns {string}\r\n */\r\nexport function encodeBase64(bytes, length) {\r\n  return base64_encode(bytes, length);\r\n}\r\n\r\n/**\r\n * Decodes a base64 encoded string to up to len bytes of output, using the custom bcrypt alphabet.\r\n * @function\r\n * @param {string} string String to decode\r\n * @param {number} length Maximum output length\r\n * @returns {!Array.<number>}\r\n */\r\nexport function decodeBase64(string, length) {\r\n  return base64_decode(string, length);\r\n}\r\n\r\nexport default {\r\n  setRandomFallback,\r\n  genSaltSync,\r\n  genSalt,\r\n  hashSync,\r\n  hash,\r\n  compareSync,\r\n  compare,\r\n  getRounds,\r\n  getSalt,\r\n  truncates,\r\n  encodeBase64,\r\n  decodeBase64,\r\n};\r\n", "import * as z from \"./v4/classic/external.js\";\r\nexport * from \"./v4/classic/external.js\";\r\nexport { z };\r\nexport default z;\r\n", "export * as core from \"../core/index.js\";\r\nexport * from \"./schemas.js\";\r\nexport * from \"./checks.js\";\r\nexport * from \"./errors.js\";\r\nexport * from \"./parse.js\";\r\nexport * from \"./compat.js\";\r\n// zod-specified\r\nimport { config } from \"../core/index.js\";\r\nimport en from \"../locales/en.js\";\r\nconfig(en());\r\nexport { globalRegistry, registry, config, $output, $input, $brand, clone, regexes, treeifyError, prettifyError, formatError, flattenError, toJSONSchema, TimePrecision, util, NEVER, } from \"../core/index.js\";\r\nexport * as locales from \"../locales/index.js\";\r\n// iso\r\n// must be exported from top-level\r\n// https://github.com/colinhacks/zod/issues/4491\r\nexport { ZodISODateTime, ZodISODate, ZodISOTime, ZodISODuration } from \"./iso.js\";\r\nexport * as iso from \"./iso.js\";\r\nexport * as coerce from \"./coerce.js\";\r\n", "export * from \"./core.js\";\r\nexport * from \"./parse.js\";\r\nexport * from \"./errors.js\";\r\nexport * from \"./schemas.js\";\r\nexport * from \"./checks.js\";\r\nexport * from \"./versions.js\";\r\nexport * as util from \"./util.js\";\r\nexport * as regexes from \"./regexes.js\";\r\nexport * as locales from \"../locales/index.js\";\r\nexport * from \"./registries.js\";\r\nexport * from \"./doc.js\";\r\nexport * from \"./api.js\";\r\nexport * from \"./to-json-schema.js\";\r\nexport * as JSONSchema from \"./json-schema.js\";\r\n", "/** A special constant with type `never` */\r\nexport const NEVER = Object.freeze({\r\n    status: \"aborted\",\r\n});\r\nexport /*@__NO_SIDE_EFFECTS__*/ function $constructor(name, initializer, params) {\r\n    function init(inst, def) {\r\n        var _a;\r\n        Object.defineProperty(inst, \"_zod\", {\r\n            value: inst._zod ?? {},\r\n            enumerable: false,\r\n        });\r\n        (_a = inst._zod).traits ?? (_a.traits = new Set());\r\n        inst._zod.traits.add(name);\r\n        initializer(inst, def);\r\n        // support prototype modifications\r\n        for (const k in _.prototype) {\r\n            if (!(k in inst))\r\n                Object.defineProperty(inst, k, { value: _.prototype[k].bind(inst) });\r\n        }\r\n        inst._zod.constr = _;\r\n        inst._zod.def = def;\r\n    }\r\n    // doesn't work if Parent has a constructor with arguments\r\n    const Parent = params?.Parent ?? Object;\r\n    class Definition extends Parent {\r\n    }\r\n    Object.defineProperty(Definition, \"name\", { value: name });\r\n    function _(def) {\r\n        var _a;\r\n        const inst = params?.Parent ? new Definition() : this;\r\n        init(inst, def);\r\n        (_a = inst._zod).deferred ?? (_a.deferred = []);\r\n        for (const fn of inst._zod.deferred) {\r\n            fn();\r\n        }\r\n        return inst;\r\n    }\r\n    Object.defineProperty(_, \"init\", { value: init });\r\n    Object.defineProperty(_, Symbol.hasInstance, {\r\n        value: (inst) => {\r\n            if (params?.Parent && inst instanceof params.Parent)\r\n                return true;\r\n            return inst?._zod?.traits?.has(name);\r\n        },\r\n    });\r\n    Object.defineProperty(_, \"name\", { value: name });\r\n    return _;\r\n}\r\n//////////////////////////////   UTILITIES   ///////////////////////////////////////\r\nexport const $brand = Symbol(\"zod_brand\");\r\nexport class $ZodAsyncError extends Error {\r\n    constructor() {\r\n        super(`Encountered Promise during synchronous parse. Use .parseAsync() instead.`);\r\n    }\r\n}\r\nexport class $ZodEncodeError extends Error {\r\n    constructor(name) {\r\n        super(`Encountered unidirectional transform during encode: ${name}`);\r\n        this.name = \"ZodEncodeError\";\r\n    }\r\n}\r\nexport const globalConfig = {};\r\nexport function config(newConfig) {\r\n    if (newConfig)\r\n        Object.assign(globalConfig, newConfig);\r\n    return globalConfig;\r\n}\r\n", "import * as core from \"./core.js\";\r\nimport * as errors from \"./errors.js\";\r\nimport * as util from \"./util.js\";\r\nexport const _parse = (_Err) => (schema, value, _ctx, _params) => {\r\n    const ctx = _ctx ? Object.assign(_ctx, { async: false }) : { async: false };\r\n    const result = schema._zod.run({ value, issues: [] }, ctx);\r\n    if (result instanceof Promise) {\r\n        throw new core.$ZodAsyncError();\r\n    }\r\n    if (result.issues.length) {\r\n        const e = new (_params?.Err ?? _Err)(result.issues.map((iss) => util.finalizeIssue(iss, ctx, core.config())));\r\n        util.captureStackTrace(e, _params?.callee);\r\n        throw e;\r\n    }\r\n    return result.value;\r\n};\r\nexport const parse = /* @__PURE__*/ _parse(errors.$ZodRealError);\r\nexport const _parseAsync = (_Err) => async (schema, value, _ctx, params) => {\r\n    const ctx = _ctx ? Object.assign(_ctx, { async: true }) : { async: true };\r\n    let result = schema._zod.run({ value, issues: [] }, ctx);\r\n    if (result instanceof Promise)\r\n        result = await result;\r\n    if (result.issues.length) {\r\n        const e = new (params?.Err ?? _Err)(result.issues.map((iss) => util.finalizeIssue(iss, ctx, core.config())));\r\n        util.captureStackTrace(e, params?.callee);\r\n        throw e;\r\n    }\r\n    return result.value;\r\n};\r\nexport const parseAsync = /* @__PURE__*/ _parseAsync(errors.$ZodRealError);\r\nexport const _safeParse = (_Err) => (schema, value, _ctx) => {\r\n    const ctx = _ctx ? { ..._ctx, async: false } : { async: false };\r\n    const result = schema._zod.run({ value, issues: [] }, ctx);\r\n    if (result instanceof Promise) {\r\n        throw new core.$ZodAsyncError();\r\n    }\r\n    return result.issues.length\r\n        ? {\r\n            success: false,\r\n            error: new (_Err ?? errors.$ZodError)(result.issues.map((iss) => util.finalizeIssue(iss, ctx, core.config()))),\r\n        }\r\n        : { success: true, data: result.value };\r\n};\r\nexport const safeParse = /* @__PURE__*/ _safeParse(errors.$ZodRealError);\r\nexport const _safeParseAsync = (_Err) => async (schema, value, _ctx) => {\r\n    const ctx = _ctx ? Object.assign(_ctx, { async: true }) : { async: true };\r\n    let result = schema._zod.run({ value, issues: [] }, ctx);\r\n    if (result instanceof Promise)\r\n        result = await result;\r\n    return result.issues.length\r\n        ? {\r\n            success: false,\r\n            error: new _Err(result.issues.map((iss) => util.finalizeIssue(iss, ctx, core.config()))),\r\n        }\r\n        : { success: true, data: result.value };\r\n};\r\nexport const safeParseAsync = /* @__PURE__*/ _safeParseAsync(errors.$ZodRealError);\r\nexport const _encode = (_Err) => (schema, value, _ctx) => {\r\n    const ctx = _ctx ? Object.assign(_ctx, { direction: \"backward\" }) : { direction: \"backward\" };\r\n    return _parse(_Err)(schema, value, ctx);\r\n};\r\nexport const encode = /* @__PURE__*/ _encode(errors.$ZodRealError);\r\nexport const _decode = (_Err) => (schema, value, _ctx) => {\r\n    return _parse(_Err)(schema, value, _ctx);\r\n};\r\nexport const decode = /* @__PURE__*/ _decode(errors.$ZodRealError);\r\nexport const _encodeAsync = (_Err) => async (schema, value, _ctx) => {\r\n    const ctx = _ctx ? Object.assign(_ctx, { direction: \"backward\" }) : { direction: \"backward\" };\r\n    return _parseAsync(_Err)(schema, value, ctx);\r\n};\r\nexport const encodeAsync = /* @__PURE__*/ _encodeAsync(errors.$ZodRealError);\r\nexport const _decodeAsync = (_Err) => async (schema, value, _ctx) => {\r\n    return _parseAsync(_Err)(schema, value, _ctx);\r\n};\r\nexport const decodeAsync = /* @__PURE__*/ _decodeAsync(errors.$ZodRealError);\r\nexport const _safeEncode = (_Err) => (schema, value, _ctx) => {\r\n    const ctx = _ctx ? Object.assign(_ctx, { direction: \"backward\" }) : { direction: \"backward\" };\r\n    return _safeParse(_Err)(schema, value, ctx);\r\n};\r\nexport const safeEncode = /* @__PURE__*/ _safeEncode(errors.$ZodRealError);\r\nexport const _safeDecode = (_Err) => (schema, value, _ctx) => {\r\n    return _safeParse(_Err)(schema, value, _ctx);\r\n};\r\nexport const safeDecode = /* @__PURE__*/ _safeDecode(errors.$ZodRealError);\r\nexport const _safeEncodeAsync = (_Err) => async (schema, value, _ctx) => {\r\n    const ctx = _ctx ? Object.assign(_ctx, { direction: \"backward\" }) : { direction: \"backward\" };\r\n    return _safeParseAsync(_Err)(schema, value, ctx);\r\n};\r\nexport const safeEncodeAsync = /* @__PURE__*/ _safeEncodeAsync(errors.$ZodRealError);\r\nexport const _safeDecodeAsync = (_Err) => async (schema, value, _ctx) => {\r\n    return _safeParseAsync(_Err)(schema, value, _ctx);\r\n};\r\nexport const safeDecodeAsync = /* @__PURE__*/ _safeDecodeAsync(errors.$ZodRealError);\r\n", "import { $constructor } from \"./core.js\";\r\nimport * as util from \"./util.js\";\r\nconst initializer = (inst, def) => {\r\n    inst.name = \"$ZodError\";\r\n    Object.defineProperty(inst, \"_zod\", {\r\n        value: inst._zod,\r\n        enumerable: false,\r\n    });\r\n    Object.defineProperty(inst, \"issues\", {\r\n        value: def,\r\n        enumerable: false,\r\n    });\r\n    inst.message = JSON.stringify(def, util.jsonStringifyReplacer, 2);\r\n    Object.defineProperty(inst, \"toString\", {\r\n        value: () => inst.message,\r\n        enumerable: false,\r\n    });\r\n};\r\nexport const $ZodError = $constructor(\"$ZodError\", initializer);\r\nexport const $ZodRealError = $constructor(\"$ZodError\", initializer, { Parent: Error });\r\nexport function flattenError(error, mapper = (issue) => issue.message) {\r\n    const fieldErrors = {};\r\n    const formErrors = [];\r\n    for (const sub of error.issues) {\r\n        if (sub.path.length > 0) {\r\n            fieldErrors[sub.path[0]] = fieldErrors[sub.path[0]] || [];\r\n            fieldErrors[sub.path[0]].push(mapper(sub));\r\n        }\r\n        else {\r\n            formErrors.push(mapper(sub));\r\n        }\r\n    }\r\n    return { formErrors, fieldErrors };\r\n}\r\nexport function formatError(error, _mapper) {\r\n    const mapper = _mapper ||\r\n        function (issue) {\r\n            return issue.message;\r\n        };\r\n    const fieldErrors = { _errors: [] };\r\n    const processError = (error) => {\r\n        for (const issue of error.issues) {\r\n            if (issue.code === \"invalid_union\" && issue.errors.length) {\r\n                issue.errors.map((issues) => processError({ issues }));\r\n            }\r\n            else if (issue.code === \"invalid_key\") {\r\n                processError({ issues: issue.issues });\r\n            }\r\n            else if (issue.code === \"invalid_element\") {\r\n                processError({ issues: issue.issues });\r\n            }\r\n            else if (issue.path.length === 0) {\r\n                fieldErrors._errors.push(mapper(issue));\r\n            }\r\n            else {\r\n                let curr = fieldErrors;\r\n                let i = 0;\r\n                while (i < issue.path.length) {\r\n                    const el = issue.path[i];\r\n                    const terminal = i === issue.path.length - 1;\r\n                    if (!terminal) {\r\n                        curr[el] = curr[el] || { _errors: [] };\r\n                    }\r\n                    else {\r\n                        curr[el] = curr[el] || { _errors: [] };\r\n                        curr[el]._errors.push(mapper(issue));\r\n                    }\r\n                    curr = curr[el];\r\n                    i++;\r\n                }\r\n            }\r\n        }\r\n    };\r\n    processError(error);\r\n    return fieldErrors;\r\n}\r\nexport function treeifyError(error, _mapper) {\r\n    const mapper = _mapper ||\r\n        function (issue) {\r\n            return issue.message;\r\n        };\r\n    const result = { errors: [] };\r\n    const processError = (error, path = []) => {\r\n        var _a, _b;\r\n        for (const issue of error.issues) {\r\n            if (issue.code === \"invalid_union\" && issue.errors.length) {\r\n                // regular union error\r\n                issue.errors.map((issues) => processError({ issues }, issue.path));\r\n            }\r\n            else if (issue.code === \"invalid_key\") {\r\n                processError({ issues: issue.issues }, issue.path);\r\n            }\r\n            else if (issue.code === \"invalid_element\") {\r\n                processError({ issues: issue.issues }, issue.path);\r\n            }\r\n            else {\r\n                const fullpath = [...path, ...issue.path];\r\n                if (fullpath.length === 0) {\r\n                    result.errors.push(mapper(issue));\r\n                    continue;\r\n                }\r\n                let curr = result;\r\n                let i = 0;\r\n                while (i < fullpath.length) {\r\n                    const el = fullpath[i];\r\n                    const terminal = i === fullpath.length - 1;\r\n                    if (typeof el === \"string\") {\r\n                        curr.properties ?? (curr.properties = {});\r\n                        (_a = curr.properties)[el] ?? (_a[el] = { errors: [] });\r\n                        curr = curr.properties[el];\r\n                    }\r\n                    else {\r\n                        curr.items ?? (curr.items = []);\r\n                        (_b = curr.items)[el] ?? (_b[el] = { errors: [] });\r\n                        curr = curr.items[el];\r\n                    }\r\n                    if (terminal) {\r\n                        curr.errors.push(mapper(issue));\r\n                    }\r\n                    i++;\r\n                }\r\n            }\r\n        }\r\n    };\r\n    processError(error);\r\n    return result;\r\n}\r\n/** Format a ZodError as a human-readable string in the following form.\r\n *\r\n * From\r\n *\r\n * ```ts\r\n * ZodError {\r\n *   issues: [\r\n *     {\r\n *       expected: 'string',\r\n *       code: 'invalid_type',\r\n *       path: [ 'username' ],\r\n *       message: 'Invalid input: expected string'\r\n *     },\r\n *     {\r\n *       expected: 'number',\r\n *       code: 'invalid_type',\r\n *       path: [ 'favoriteNumbers', 1 ],\r\n *       message: 'Invalid input: expected number'\r\n *     }\r\n *   ];\r\n * }\r\n * ```\r\n *\r\n * to\r\n *\r\n * ```\r\n * username\r\n *   \u2716 Expected number, received string at \"username\r\n * favoriteNumbers[0]\r\n *   \u2716 Invalid input: expected number\r\n * ```\r\n */\r\nexport function toDotPath(_path) {\r\n    const segs = [];\r\n    const path = _path.map((seg) => (typeof seg === \"object\" ? seg.key : seg));\r\n    for (const seg of path) {\r\n        if (typeof seg === \"number\")\r\n            segs.push(`[${seg}]`);\r\n        else if (typeof seg === \"symbol\")\r\n            segs.push(`[${JSON.stringify(String(seg))}]`);\r\n        else if (/[^\\w$]/.test(seg))\r\n            segs.push(`[${JSON.stringify(seg)}]`);\r\n        else {\r\n            if (segs.length)\r\n                segs.push(\".\");\r\n            segs.push(seg);\r\n        }\r\n    }\r\n    return segs.join(\"\");\r\n}\r\nexport function prettifyError(error) {\r\n    const lines = [];\r\n    // sort by path length\r\n    const issues = [...error.issues].sort((a, b) => (a.path ?? []).length - (b.path ?? []).length);\r\n    // Process each issue\r\n    for (const issue of issues) {\r\n        lines.push(`\u2716 ${issue.message}`);\r\n        if (issue.path?.length)\r\n            lines.push(`  \u2192 at ${toDotPath(issue.path)}`);\r\n    }\r\n    // Convert Map to formatted string\r\n    return lines.join(\"\\n\");\r\n}\r\n", "// functions\r\nexport function assertEqual(val) {\r\n    return val;\r\n}\r\nexport function assertNotEqual(val) {\r\n    return val;\r\n}\r\nexport function assertIs(_arg) { }\r\nexport function assertNever(_x) {\r\n    throw new Error();\r\n}\r\nexport function assert(_) { }\r\nexport function getEnumValues(entries) {\r\n    const numericValues = Object.values(entries).filter((v) => typeof v === \"number\");\r\n    const values = Object.entries(entries)\r\n        .filter(([k, _]) => numericValues.indexOf(+k) === -1)\r\n        .map(([_, v]) => v);\r\n    return values;\r\n}\r\nexport function joinValues(array, separator = \"|\") {\r\n    return array.map((val) => stringifyPrimitive(val)).join(separator);\r\n}\r\nexport function jsonStringifyReplacer(_, value) {\r\n    if (typeof value === \"bigint\")\r\n        return value.toString();\r\n    return value;\r\n}\r\nexport function cached(getter) {\r\n    const set = false;\r\n    return {\r\n        get value() {\r\n            if (!set) {\r\n                const value = getter();\r\n                Object.defineProperty(this, \"value\", { value });\r\n                return value;\r\n            }\r\n            throw new Error(\"cached value already set\");\r\n        },\r\n    };\r\n}\r\nexport function nullish(input) {\r\n    return input === null || input === undefined;\r\n}\r\nexport function cleanRegex(source) {\r\n    const start = source.startsWith(\"^\") ? 1 : 0;\r\n    const end = source.endsWith(\"$\") ? source.length - 1 : source.length;\r\n    return source.slice(start, end);\r\n}\r\nexport function floatSafeRemainder(val, step) {\r\n    const valDecCount = (val.toString().split(\".\")[1] || \"\").length;\r\n    const stepString = step.toString();\r\n    let stepDecCount = (stepString.split(\".\")[1] || \"\").length;\r\n    if (stepDecCount === 0 && /\\d?e-\\d?/.test(stepString)) {\r\n        const match = stepString.match(/\\d?e-(\\d?)/);\r\n        if (match?.[1]) {\r\n            stepDecCount = Number.parseInt(match[1]);\r\n        }\r\n    }\r\n    const decCount = valDecCount > stepDecCount ? valDecCount : stepDecCount;\r\n    const valInt = Number.parseInt(val.toFixed(decCount).replace(\".\", \"\"));\r\n    const stepInt = Number.parseInt(step.toFixed(decCount).replace(\".\", \"\"));\r\n    return (valInt % stepInt) / 10 ** decCount;\r\n}\r\nconst EVALUATING = Symbol(\"evaluating\");\r\nexport function defineLazy(object, key, getter) {\r\n    let value = undefined;\r\n    Object.defineProperty(object, key, {\r\n        get() {\r\n            if (value === EVALUATING) {\r\n                // Circular reference detected, return undefined to break the cycle\r\n                return undefined;\r\n            }\r\n            if (value === undefined) {\r\n                value = EVALUATING;\r\n                value = getter();\r\n            }\r\n            return value;\r\n        },\r\n        set(v) {\r\n            Object.defineProperty(object, key, {\r\n                value: v,\r\n                // configurable: true,\r\n            });\r\n            // object[key] = v;\r\n        },\r\n        configurable: true,\r\n    });\r\n}\r\nexport function objectClone(obj) {\r\n    return Object.create(Object.getPrototypeOf(obj), Object.getOwnPropertyDescriptors(obj));\r\n}\r\nexport function assignProp(target, prop, value) {\r\n    Object.defineProperty(target, prop, {\r\n        value,\r\n        writable: true,\r\n        enumerable: true,\r\n        configurable: true,\r\n    });\r\n}\r\nexport function mergeDefs(...defs) {\r\n    const mergedDescriptors = {};\r\n    for (const def of defs) {\r\n        const descriptors = Object.getOwnPropertyDescriptors(def);\r\n        Object.assign(mergedDescriptors, descriptors);\r\n    }\r\n    return Object.defineProperties({}, mergedDescriptors);\r\n}\r\nexport function cloneDef(schema) {\r\n    return mergeDefs(schema._zod.def);\r\n}\r\nexport function getElementAtPath(obj, path) {\r\n    if (!path)\r\n        return obj;\r\n    return path.reduce((acc, key) => acc?.[key], obj);\r\n}\r\nexport function promiseAllObject(promisesObj) {\r\n    const keys = Object.keys(promisesObj);\r\n    const promises = keys.map((key) => promisesObj[key]);\r\n    return Promise.all(promises).then((results) => {\r\n        const resolvedObj = {};\r\n        for (let i = 0; i < keys.length; i++) {\r\n            resolvedObj[keys[i]] = results[i];\r\n        }\r\n        return resolvedObj;\r\n    });\r\n}\r\nexport function randomString(length = 10) {\r\n    const chars = \"abcdefghijklmnopqrstuvwxyz\";\r\n    let str = \"\";\r\n    for (let i = 0; i < length; i++) {\r\n        str += chars[Math.floor(Math.random() * chars.length)];\r\n    }\r\n    return str;\r\n}\r\nexport function esc(str) {\r\n    return JSON.stringify(str);\r\n}\r\nexport const captureStackTrace = (\"captureStackTrace\" in Error ? Error.captureStackTrace : (..._args) => { });\r\nexport function isObject(data) {\r\n    return typeof data === \"object\" && data !== null && !Array.isArray(data);\r\n}\r\nexport const allowsEval = cached(() => {\r\n    // @ts-ignore\r\n    if (typeof navigator !== \"undefined\" && navigator?.userAgent?.includes(\"Cloudflare\")) {\r\n        return false;\r\n    }\r\n    try {\r\n        const F = Function;\r\n        new F(\"\");\r\n        return true;\r\n    }\r\n    catch (_) {\r\n        return false;\r\n    }\r\n});\r\nexport function isPlainObject(o) {\r\n    if (isObject(o) === false)\r\n        return false;\r\n    // modified constructor\r\n    const ctor = o.constructor;\r\n    if (ctor === undefined)\r\n        return true;\r\n    // modified prototype\r\n    const prot = ctor.prototype;\r\n    if (isObject(prot) === false)\r\n        return false;\r\n    // ctor doesn't have static `isPrototypeOf`\r\n    if (Object.prototype.hasOwnProperty.call(prot, \"isPrototypeOf\") === false) {\r\n        return false;\r\n    }\r\n    return true;\r\n}\r\nexport function shallowClone(o) {\r\n    if (isPlainObject(o))\r\n        return { ...o };\r\n    if (Array.isArray(o))\r\n        return [...o];\r\n    return o;\r\n}\r\nexport function numKeys(data) {\r\n    let keyCount = 0;\r\n    for (const key in data) {\r\n        if (Object.prototype.hasOwnProperty.call(data, key)) {\r\n            keyCount++;\r\n        }\r\n    }\r\n    return keyCount;\r\n}\r\nexport const getParsedType = (data) => {\r\n    const t = typeof data;\r\n    switch (t) {\r\n        case \"undefined\":\r\n            return \"undefined\";\r\n        case \"string\":\r\n            return \"string\";\r\n        case \"number\":\r\n            return Number.isNaN(data) ? \"nan\" : \"number\";\r\n        case \"boolean\":\r\n            return \"boolean\";\r\n        case \"function\":\r\n            return \"function\";\r\n        case \"bigint\":\r\n            return \"bigint\";\r\n        case \"symbol\":\r\n            return \"symbol\";\r\n        case \"object\":\r\n            if (Array.isArray(data)) {\r\n                return \"array\";\r\n            }\r\n            if (data === null) {\r\n                return \"null\";\r\n            }\r\n            if (data.then && typeof data.then === \"function\" && data.catch && typeof data.catch === \"function\") {\r\n                return \"promise\";\r\n            }\r\n            if (typeof Map !== \"undefined\" && data instanceof Map) {\r\n                return \"map\";\r\n            }\r\n            if (typeof Set !== \"undefined\" && data instanceof Set) {\r\n                return \"set\";\r\n            }\r\n            if (typeof Date !== \"undefined\" && data instanceof Date) {\r\n                return \"date\";\r\n            }\r\n            // @ts-ignore\r\n            if (typeof File !== \"undefined\" && data instanceof File) {\r\n                return \"file\";\r\n            }\r\n            return \"object\";\r\n        default:\r\n            throw new Error(`Unknown data type: ${t}`);\r\n    }\r\n};\r\nexport const propertyKeyTypes = new Set([\"string\", \"number\", \"symbol\"]);\r\nexport const primitiveTypes = new Set([\"string\", \"number\", \"bigint\", \"boolean\", \"symbol\", \"undefined\"]);\r\nexport function escapeRegex(str) {\r\n    return str.replace(/[.*+?^${}()|[\\]\\\\]/g, \"\\\\$&\");\r\n}\r\n// zod-specific utils\r\nexport function clone(inst, def, params) {\r\n    const cl = new inst._zod.constr(def ?? inst._zod.def);\r\n    if (!def || params?.parent)\r\n        cl._zod.parent = inst;\r\n    return cl;\r\n}\r\nexport function normalizeParams(_params) {\r\n    const params = _params;\r\n    if (!params)\r\n        return {};\r\n    if (typeof params === \"string\")\r\n        return { error: () => params };\r\n    if (params?.message !== undefined) {\r\n        if (params?.error !== undefined)\r\n            throw new Error(\"Cannot specify both `message` and `error` params\");\r\n        params.error = params.message;\r\n    }\r\n    delete params.message;\r\n    if (typeof params.error === \"string\")\r\n        return { ...params, error: () => params.error };\r\n    return params;\r\n}\r\nexport function createTransparentProxy(getter) {\r\n    let target;\r\n    return new Proxy({}, {\r\n        get(_, prop, receiver) {\r\n            target ?? (target = getter());\r\n            return Reflect.get(target, prop, receiver);\r\n        },\r\n        set(_, prop, value, receiver) {\r\n            target ?? (target = getter());\r\n            return Reflect.set(target, prop, value, receiver);\r\n        },\r\n        has(_, prop) {\r\n            target ?? (target = getter());\r\n            return Reflect.has(target, prop);\r\n        },\r\n        deleteProperty(_, prop) {\r\n            target ?? (target = getter());\r\n            return Reflect.deleteProperty(target, prop);\r\n        },\r\n        ownKeys(_) {\r\n            target ?? (target = getter());\r\n            return Reflect.ownKeys(target);\r\n        },\r\n        getOwnPropertyDescriptor(_, prop) {\r\n            target ?? (target = getter());\r\n            return Reflect.getOwnPropertyDescriptor(target, prop);\r\n        },\r\n        defineProperty(_, prop, descriptor) {\r\n            target ?? (target = getter());\r\n            return Reflect.defineProperty(target, prop, descriptor);\r\n        },\r\n    });\r\n}\r\nexport function stringifyPrimitive(value) {\r\n    if (typeof value === \"bigint\")\r\n        return value.toString() + \"n\";\r\n    if (typeof value === \"string\")\r\n        return `\"${value}\"`;\r\n    return `${value}`;\r\n}\r\nexport function optionalKeys(shape) {\r\n    return Object.keys(shape).filter((k) => {\r\n        return shape[k]._zod.optin === \"optional\" && shape[k]._zod.optout === \"optional\";\r\n    });\r\n}\r\nexport const NUMBER_FORMAT_RANGES = {\r\n    safeint: [Number.MIN_SAFE_INTEGER, Number.MAX_SAFE_INTEGER],\r\n    int32: [-2147483648, 2147483647],\r\n    uint32: [0, 4294967295],\r\n    float32: [-3.4028234663852886e38, 3.4028234663852886e38],\r\n    float64: [-Number.MAX_VALUE, Number.MAX_VALUE],\r\n};\r\nexport const BIGINT_FORMAT_RANGES = {\r\n    int64: [/* @__PURE__*/ BigInt(\"-9223372036854775808\"), /* @__PURE__*/ BigInt(\"9223372036854775807\")],\r\n    uint64: [/* @__PURE__*/ BigInt(0), /* @__PURE__*/ BigInt(\"18446744073709551615\")],\r\n};\r\nexport function pick(schema, mask) {\r\n    const currDef = schema._zod.def;\r\n    const def = mergeDefs(schema._zod.def, {\r\n        get shape() {\r\n            const newShape = {};\r\n            for (const key in mask) {\r\n                if (!(key in currDef.shape)) {\r\n                    throw new Error(`Unrecognized key: \"${key}\"`);\r\n                }\r\n                if (!mask[key])\r\n                    continue;\r\n                newShape[key] = currDef.shape[key];\r\n            }\r\n            assignProp(this, \"shape\", newShape); // self-caching\r\n            return newShape;\r\n        },\r\n        checks: [],\r\n    });\r\n    return clone(schema, def);\r\n}\r\nexport function omit(schema, mask) {\r\n    const currDef = schema._zod.def;\r\n    const def = mergeDefs(schema._zod.def, {\r\n        get shape() {\r\n            const newShape = { ...schema._zod.def.shape };\r\n            for (const key in mask) {\r\n                if (!(key in currDef.shape)) {\r\n                    throw new Error(`Unrecognized key: \"${key}\"`);\r\n                }\r\n                if (!mask[key])\r\n                    continue;\r\n                delete newShape[key];\r\n            }\r\n            assignProp(this, \"shape\", newShape); // self-caching\r\n            return newShape;\r\n        },\r\n        checks: [],\r\n    });\r\n    return clone(schema, def);\r\n}\r\nexport function extend(schema, shape) {\r\n    if (!isPlainObject(shape)) {\r\n        throw new Error(\"Invalid input to extend: expected a plain object\");\r\n    }\r\n    const checks = schema._zod.def.checks;\r\n    const hasChecks = checks && checks.length > 0;\r\n    if (hasChecks) {\r\n        throw new Error(\"Object schemas containing refinements cannot be extended. Use `.safeExtend()` instead.\");\r\n    }\r\n    const def = mergeDefs(schema._zod.def, {\r\n        get shape() {\r\n            const _shape = { ...schema._zod.def.shape, ...shape };\r\n            assignProp(this, \"shape\", _shape); // self-caching\r\n            return _shape;\r\n        },\r\n        checks: [],\r\n    });\r\n    return clone(schema, def);\r\n}\r\nexport function safeExtend(schema, shape) {\r\n    if (!isPlainObject(shape)) {\r\n        throw new Error(\"Invalid input to safeExtend: expected a plain object\");\r\n    }\r\n    const def = {\r\n        ...schema._zod.def,\r\n        get shape() {\r\n            const _shape = { ...schema._zod.def.shape, ...shape };\r\n            assignProp(this, \"shape\", _shape); // self-caching\r\n            return _shape;\r\n        },\r\n        checks: schema._zod.def.checks,\r\n    };\r\n    return clone(schema, def);\r\n}\r\nexport function merge(a, b) {\r\n    const def = mergeDefs(a._zod.def, {\r\n        get shape() {\r\n            const _shape = { ...a._zod.def.shape, ...b._zod.def.shape };\r\n            assignProp(this, \"shape\", _shape); // self-caching\r\n            return _shape;\r\n        },\r\n        get catchall() {\r\n            return b._zod.def.catchall;\r\n        },\r\n        checks: [], // delete existing checks\r\n    });\r\n    return clone(a, def);\r\n}\r\nexport function partial(Class, schema, mask) {\r\n    const def = mergeDefs(schema._zod.def, {\r\n        get shape() {\r\n            const oldShape = schema._zod.def.shape;\r\n            const shape = { ...oldShape };\r\n            if (mask) {\r\n                for (const key in mask) {\r\n                    if (!(key in oldShape)) {\r\n                        throw new Error(`Unrecognized key: \"${key}\"`);\r\n                    }\r\n                    if (!mask[key])\r\n                        continue;\r\n                    // if (oldShape[key]!._zod.optin === \"optional\") continue;\r\n                    shape[key] = Class\r\n                        ? new Class({\r\n                            type: \"optional\",\r\n                            innerType: oldShape[key],\r\n                        })\r\n                        : oldShape[key];\r\n                }\r\n            }\r\n            else {\r\n                for (const key in oldShape) {\r\n                    // if (oldShape[key]!._zod.optin === \"optional\") continue;\r\n                    shape[key] = Class\r\n                        ? new Class({\r\n                            type: \"optional\",\r\n                            innerType: oldShape[key],\r\n                        })\r\n                        : oldShape[key];\r\n                }\r\n            }\r\n            assignProp(this, \"shape\", shape); // self-caching\r\n            return shape;\r\n        },\r\n        checks: [],\r\n    });\r\n    return clone(schema, def);\r\n}\r\nexport function required(Class, schema, mask) {\r\n    const def = mergeDefs(schema._zod.def, {\r\n        get shape() {\r\n            const oldShape = schema._zod.def.shape;\r\n            const shape = { ...oldShape };\r\n            if (mask) {\r\n                for (const key in mask) {\r\n                    if (!(key in shape)) {\r\n                        throw new Error(`Unrecognized key: \"${key}\"`);\r\n                    }\r\n                    if (!mask[key])\r\n                        continue;\r\n                    // overwrite with non-optional\r\n                    shape[key] = new Class({\r\n                        type: \"nonoptional\",\r\n                        innerType: oldShape[key],\r\n                    });\r\n                }\r\n            }\r\n            else {\r\n                for (const key in oldShape) {\r\n                    // overwrite with non-optional\r\n                    shape[key] = new Class({\r\n                        type: \"nonoptional\",\r\n                        innerType: oldShape[key],\r\n                    });\r\n                }\r\n            }\r\n            assignProp(this, \"shape\", shape); // self-caching\r\n            return shape;\r\n        },\r\n        checks: [],\r\n    });\r\n    return clone(schema, def);\r\n}\r\n// invalid_type | too_big | too_small | invalid_format | not_multiple_of | unrecognized_keys | invalid_union | invalid_key | invalid_element | invalid_value | custom\r\nexport function aborted(x, startIndex = 0) {\r\n    if (x.aborted === true)\r\n        return true;\r\n    for (let i = startIndex; i < x.issues.length; i++) {\r\n        if (x.issues[i]?.continue !== true) {\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n}\r\nexport function prefixIssues(path, issues) {\r\n    return issues.map((iss) => {\r\n        var _a;\r\n        (_a = iss).path ?? (_a.path = []);\r\n        iss.path.unshift(path);\r\n        return iss;\r\n    });\r\n}\r\nexport function unwrapMessage(message) {\r\n    return typeof message === \"string\" ? message : message?.message;\r\n}\r\nexport function finalizeIssue(iss, ctx, config) {\r\n    const full = { ...iss, path: iss.path ?? [] };\r\n    // for backwards compatibility\r\n    if (!iss.message) {\r\n        const message = unwrapMessage(iss.inst?._zod.def?.error?.(iss)) ??\r\n            unwrapMessage(ctx?.error?.(iss)) ??\r\n            unwrapMessage(config.customError?.(iss)) ??\r\n            unwrapMessage(config.localeError?.(iss)) ??\r\n            \"Invalid input\";\r\n        full.message = message;\r\n    }\r\n    // delete (full as any).def;\r\n    delete full.inst;\r\n    delete full.continue;\r\n    if (!ctx?.reportInput) {\r\n        delete full.input;\r\n    }\r\n    return full;\r\n}\r\nexport function getSizableOrigin(input) {\r\n    if (input instanceof Set)\r\n        return \"set\";\r\n    if (input instanceof Map)\r\n        return \"map\";\r\n    // @ts-ignore\r\n    if (input instanceof File)\r\n        return \"file\";\r\n    return \"unknown\";\r\n}\r\nexport function getLengthableOrigin(input) {\r\n    if (Array.isArray(input))\r\n        return \"array\";\r\n    if (typeof input === \"string\")\r\n        return \"string\";\r\n    return \"unknown\";\r\n}\r\nexport function issue(...args) {\r\n    const [iss, input, inst] = args;\r\n    if (typeof iss === \"string\") {\r\n        return {\r\n            message: iss,\r\n            code: \"custom\",\r\n            input,\r\n            inst,\r\n        };\r\n    }\r\n    return { ...iss };\r\n}\r\nexport function cleanEnum(obj) {\r\n    return Object.entries(obj)\r\n        .filter(([k, _]) => {\r\n        // return true if NaN, meaning it's not a number, thus a string key\r\n        return Number.isNaN(Number.parseInt(k, 10));\r\n    })\r\n        .map((el) => el[1]);\r\n}\r\n// Codec utility functions\r\nexport function base64ToUint8Array(base64) {\r\n    const binaryString = atob(base64);\r\n    const bytes = new Uint8Array(binaryString.length);\r\n    for (let i = 0; i < binaryString.length; i++) {\r\n        bytes[i] = binaryString.charCodeAt(i);\r\n    }\r\n    return bytes;\r\n}\r\nexport function uint8ArrayToBase64(bytes) {\r\n    let binaryString = \"\";\r\n    for (let i = 0; i < bytes.length; i++) {\r\n        binaryString += String.fromCharCode(bytes[i]);\r\n    }\r\n    return btoa(binaryString);\r\n}\r\nexport function base64urlToUint8Array(base64url) {\r\n    const base64 = base64url.replace(/-/g, \"+\").replace(/_/g, \"/\");\r\n    const padding = \"=\".repeat((4 - (base64.length % 4)) % 4);\r\n    return base64ToUint8Array(base64 + padding);\r\n}\r\nexport function uint8ArrayToBase64url(bytes) {\r\n    return uint8ArrayToBase64(bytes).replace(/\\+/g, \"-\").replace(/\\//g, \"_\").replace(/=/g, \"\");\r\n}\r\nexport function hexToUint8Array(hex) {\r\n    const cleanHex = hex.replace(/^0x/, \"\");\r\n    if (cleanHex.length % 2 !== 0) {\r\n        throw new Error(\"Invalid hex string length\");\r\n    }\r\n    const bytes = new Uint8Array(cleanHex.length / 2);\r\n    for (let i = 0; i < cleanHex.length; i += 2) {\r\n        bytes[i / 2] = Number.parseInt(cleanHex.slice(i, i + 2), 16);\r\n    }\r\n    return bytes;\r\n}\r\nexport function uint8ArrayToHex(bytes) {\r\n    return Array.from(bytes)\r\n        .map((b) => b.toString(16).padStart(2, \"0\"))\r\n        .join(\"\");\r\n}\r\n// instanceof\r\nexport class Class {\r\n    constructor(..._args) { }\r\n}\r\n", "import * as checks from \"./checks.js\";\r\nimport * as core from \"./core.js\";\r\nimport { Doc } from \"./doc.js\";\r\nimport { parse, parseAsync, safeParse, safeParseAsync } from \"./parse.js\";\r\nimport * as regexes from \"./regexes.js\";\r\nimport * as util from \"./util.js\";\r\nimport { version } from \"./versions.js\";\r\nexport const $ZodType = /*@__PURE__*/ core.$constructor(\"$ZodType\", (inst, def) => {\r\n    var _a;\r\n    inst ?? (inst = {});\r\n    inst._zod.def = def; // set _def property\r\n    inst._zod.bag = inst._zod.bag || {}; // initialize _bag object\r\n    inst._zod.version = version;\r\n    const checks = [...(inst._zod.def.checks ?? [])];\r\n    // if inst is itself a checks.$ZodCheck, run it as a check\r\n    if (inst._zod.traits.has(\"$ZodCheck\")) {\r\n        checks.unshift(inst);\r\n    }\r\n    for (const ch of checks) {\r\n        for (const fn of ch._zod.onattach) {\r\n            fn(inst);\r\n        }\r\n    }\r\n    if (checks.length === 0) {\r\n        // deferred initializer\r\n        // inst._zod.parse is not yet defined\r\n        (_a = inst._zod).deferred ?? (_a.deferred = []);\r\n        inst._zod.deferred?.push(() => {\r\n            inst._zod.run = inst._zod.parse;\r\n        });\r\n    }\r\n    else {\r\n        const runChecks = (payload, checks, ctx) => {\r\n            let isAborted = util.aborted(payload);\r\n            let asyncResult;\r\n            for (const ch of checks) {\r\n                if (ch._zod.def.when) {\r\n                    const shouldRun = ch._zod.def.when(payload);\r\n                    if (!shouldRun)\r\n                        continue;\r\n                }\r\n                else if (isAborted) {\r\n                    continue;\r\n                }\r\n                const currLen = payload.issues.length;\r\n                const _ = ch._zod.check(payload);\r\n                if (_ instanceof Promise && ctx?.async === false) {\r\n                    throw new core.$ZodAsyncError();\r\n                }\r\n                if (asyncResult || _ instanceof Promise) {\r\n                    asyncResult = (asyncResult ?? Promise.resolve()).then(async () => {\r\n                        await _;\r\n                        const nextLen = payload.issues.length;\r\n                        if (nextLen === currLen)\r\n                            return;\r\n                        if (!isAborted)\r\n                            isAborted = util.aborted(payload, currLen);\r\n                    });\r\n                }\r\n                else {\r\n                    const nextLen = payload.issues.length;\r\n                    if (nextLen === currLen)\r\n                        continue;\r\n                    if (!isAborted)\r\n                        isAborted = util.aborted(payload, currLen);\r\n                }\r\n            }\r\n            if (asyncResult) {\r\n                return asyncResult.then(() => {\r\n                    return payload;\r\n                });\r\n            }\r\n            return payload;\r\n        };\r\n        // const handleChecksResult = (\r\n        //   checkResult: ParsePayload,\r\n        //   originalResult: ParsePayload,\r\n        //   ctx: ParseContextInternal\r\n        // ): util.MaybeAsync<ParsePayload> => {\r\n        //   // if the checks mutated the value && there are no issues, re-parse the result\r\n        //   if (checkResult.value !== originalResult.value && !checkResult.issues.length)\r\n        //     return inst._zod.parse(checkResult, ctx);\r\n        //   return originalResult;\r\n        // };\r\n        const handleCanaryResult = (canary, payload, ctx) => {\r\n            // abort if the canary is aborted\r\n            if (util.aborted(canary)) {\r\n                canary.aborted = true;\r\n                return canary;\r\n            }\r\n            // run checks first, then\r\n            const checkResult = runChecks(payload, checks, ctx);\r\n            if (checkResult instanceof Promise) {\r\n                if (ctx.async === false)\r\n                    throw new core.$ZodAsyncError();\r\n                return checkResult.then((checkResult) => inst._zod.parse(checkResult, ctx));\r\n            }\r\n            return inst._zod.parse(checkResult, ctx);\r\n        };\r\n        inst._zod.run = (payload, ctx) => {\r\n            if (ctx.skipChecks) {\r\n                return inst._zod.parse(payload, ctx);\r\n            }\r\n            if (ctx.direction === \"backward\") {\r\n                // run canary\r\n                // initial pass (no checks)\r\n                const canary = inst._zod.parse({ value: payload.value, issues: [] }, { ...ctx, skipChecks: true });\r\n                if (canary instanceof Promise) {\r\n                    return canary.then((canary) => {\r\n                        return handleCanaryResult(canary, payload, ctx);\r\n                    });\r\n                }\r\n                return handleCanaryResult(canary, payload, ctx);\r\n            }\r\n            // forward\r\n            const result = inst._zod.parse(payload, ctx);\r\n            if (result instanceof Promise) {\r\n                if (ctx.async === false)\r\n                    throw new core.$ZodAsyncError();\r\n                return result.then((result) => runChecks(result, checks, ctx));\r\n            }\r\n            return runChecks(result, checks, ctx);\r\n        };\r\n    }\r\n    inst[\"~standard\"] = {\r\n        validate: (value) => {\r\n            try {\r\n                const r = safeParse(inst, value);\r\n                return r.success ? { value: r.data } : { issues: r.error?.issues };\r\n            }\r\n            catch (_) {\r\n                return safeParseAsync(inst, value).then((r) => (r.success ? { value: r.data } : { issues: r.error?.issues }));\r\n            }\r\n        },\r\n        vendor: \"zod\",\r\n        version: 1,\r\n    };\r\n});\r\nexport { clone } from \"./util.js\";\r\nexport const $ZodString = /*@__PURE__*/ core.$constructor(\"$ZodString\", (inst, def) => {\r\n    $ZodType.init(inst, def);\r\n    inst._zod.pattern = [...(inst?._zod.bag?.patterns ?? [])].pop() ?? regexes.string(inst._zod.bag);\r\n    inst._zod.parse = (payload, _) => {\r\n        if (def.coerce)\r\n            try {\r\n                payload.value = String(payload.value);\r\n            }\r\n            catch (_) { }\r\n        if (typeof payload.value === \"string\")\r\n            return payload;\r\n        payload.issues.push({\r\n            expected: \"string\",\r\n            code: \"invalid_type\",\r\n            input: payload.value,\r\n            inst,\r\n        });\r\n        return payload;\r\n    };\r\n});\r\nexport const $ZodStringFormat = /*@__PURE__*/ core.$constructor(\"$ZodStringFormat\", (inst, def) => {\r\n    // check initialization must come first\r\n    checks.$ZodCheckStringFormat.init(inst, def);\r\n    $ZodString.init(inst, def);\r\n});\r\nexport const $ZodGUID = /*@__PURE__*/ core.$constructor(\"$ZodGUID\", (inst, def) => {\r\n    def.pattern ?? (def.pattern = regexes.guid);\r\n    $ZodStringFormat.init(inst, def);\r\n});\r\nexport const $ZodUUID = /*@__PURE__*/ core.$constructor(\"$ZodUUID\", (inst, def) => {\r\n    if (def.version) {\r\n        const versionMap = {\r\n            v1: 1,\r\n            v2: 2,\r\n            v3: 3,\r\n            v4: 4,\r\n            v5: 5,\r\n            v6: 6,\r\n            v7: 7,\r\n            v8: 8,\r\n        };\r\n        const v = versionMap[def.version];\r\n        if (v === undefined)\r\n            throw new Error(`Invalid UUID version: \"${def.version}\"`);\r\n        def.pattern ?? (def.pattern = regexes.uuid(v));\r\n    }\r\n    else\r\n        def.pattern ?? (def.pattern = regexes.uuid());\r\n    $ZodStringFormat.init(inst, def);\r\n});\r\nexport const $ZodEmail = /*@__PURE__*/ core.$constructor(\"$ZodEmail\", (inst, def) => {\r\n    def.pattern ?? (def.pattern = regexes.email);\r\n    $ZodStringFormat.init(inst, def);\r\n});\r\nexport const $ZodURL = /*@__PURE__*/ core.$constructor(\"$ZodURL\", (inst, def) => {\r\n    $ZodStringFormat.init(inst, def);\r\n    inst._zod.check = (payload) => {\r\n        try {\r\n            // Trim whitespace from input\r\n            const trimmed = payload.value.trim();\r\n            // @ts-ignore\r\n            const url = new URL(trimmed);\r\n            if (def.hostname) {\r\n                def.hostname.lastIndex = 0;\r\n                if (!def.hostname.test(url.hostname)) {\r\n                    payload.issues.push({\r\n                        code: \"invalid_format\",\r\n                        format: \"url\",\r\n                        note: \"Invalid hostname\",\r\n                        pattern: regexes.hostname.source,\r\n                        input: payload.value,\r\n                        inst,\r\n                        continue: !def.abort,\r\n                    });\r\n                }\r\n            }\r\n            if (def.protocol) {\r\n                def.protocol.lastIndex = 0;\r\n                if (!def.protocol.test(url.protocol.endsWith(\":\") ? url.protocol.slice(0, -1) : url.protocol)) {\r\n                    payload.issues.push({\r\n                        code: \"invalid_format\",\r\n                        format: \"url\",\r\n                        note: \"Invalid protocol\",\r\n                        pattern: def.protocol.source,\r\n                        input: payload.value,\r\n                        inst,\r\n                        continue: !def.abort,\r\n                    });\r\n                }\r\n            }\r\n            // Set the output value based on normalize flag\r\n            if (def.normalize) {\r\n                // Use normalized URL\r\n                payload.value = url.href;\r\n            }\r\n            else {\r\n                // Preserve the original input (trimmed)\r\n                payload.value = trimmed;\r\n            }\r\n            return;\r\n        }\r\n        catch (_) {\r\n            payload.issues.push({\r\n                code: \"invalid_format\",\r\n                format: \"url\",\r\n                input: payload.value,\r\n                inst,\r\n                continue: !def.abort,\r\n            });\r\n        }\r\n    };\r\n});\r\nexport const $ZodEmoji = /*@__PURE__*/ core.$constructor(\"$ZodEmoji\", (inst, def) => {\r\n    def.pattern ?? (def.pattern = regexes.emoji());\r\n    $ZodStringFormat.init(inst, def);\r\n});\r\nexport const $ZodNanoID = /*@__PURE__*/ core.$constructor(\"$ZodNanoID\", (inst, def) => {\r\n    def.pattern ?? (def.pattern = regexes.nanoid);\r\n    $ZodStringFormat.init(inst, def);\r\n});\r\nexport const $ZodCUID = /*@__PURE__*/ core.$constructor(\"$ZodCUID\", (inst, def) => {\r\n    def.pattern ?? (def.pattern = regexes.cuid);\r\n    $ZodStringFormat.init(inst, def);\r\n});\r\nexport const $ZodCUID2 = /*@__PURE__*/ core.$constructor(\"$ZodCUID2\", (inst, def) => {\r\n    def.pattern ?? (def.pattern = regexes.cuid2);\r\n    $ZodStringFormat.init(inst, def);\r\n});\r\nexport const $ZodULID = /*@__PURE__*/ core.$constructor(\"$ZodULID\", (inst, def) => {\r\n    def.pattern ?? (def.pattern = regexes.ulid);\r\n    $ZodStringFormat.init(inst, def);\r\n});\r\nexport const $ZodXID = /*@__PURE__*/ core.$constructor(\"$ZodXID\", (inst, def) => {\r\n    def.pattern ?? (def.pattern = regexes.xid);\r\n    $ZodStringFormat.init(inst, def);\r\n});\r\nexport const $ZodKSUID = /*@__PURE__*/ core.$constructor(\"$ZodKSUID\", (inst, def) => {\r\n    def.pattern ?? (def.pattern = regexes.ksuid);\r\n    $ZodStringFormat.init(inst, def);\r\n});\r\nexport const $ZodISODateTime = /*@__PURE__*/ core.$constructor(\"$ZodISODateTime\", (inst, def) => {\r\n    def.pattern ?? (def.pattern = regexes.datetime(def));\r\n    $ZodStringFormat.init(inst, def);\r\n});\r\nexport const $ZodISODate = /*@__PURE__*/ core.$constructor(\"$ZodISODate\", (inst, def) => {\r\n    def.pattern ?? (def.pattern = regexes.date);\r\n    $ZodStringFormat.init(inst, def);\r\n});\r\nexport const $ZodISOTime = /*@__PURE__*/ core.$constructor(\"$ZodISOTime\", (inst, def) => {\r\n    def.pattern ?? (def.pattern = regexes.time(def));\r\n    $ZodStringFormat.init(inst, def);\r\n});\r\nexport const $ZodISODuration = /*@__PURE__*/ core.$constructor(\"$ZodISODuration\", (inst, def) => {\r\n    def.pattern ?? (def.pattern = regexes.duration);\r\n    $ZodStringFormat.init(inst, def);\r\n});\r\nexport const $ZodIPv4 = /*@__PURE__*/ core.$constructor(\"$ZodIPv4\", (inst, def) => {\r\n    def.pattern ?? (def.pattern = regexes.ipv4);\r\n    $ZodStringFormat.init(inst, def);\r\n    inst._zod.onattach.push((inst) => {\r\n        const bag = inst._zod.bag;\r\n        bag.format = `ipv4`;\r\n    });\r\n});\r\nexport const $ZodIPv6 = /*@__PURE__*/ core.$constructor(\"$ZodIPv6\", (inst, def) => {\r\n    def.pattern ?? (def.pattern = regexes.ipv6);\r\n    $ZodStringFormat.init(inst, def);\r\n    inst._zod.onattach.push((inst) => {\r\n        const bag = inst._zod.bag;\r\n        bag.format = `ipv6`;\r\n    });\r\n    inst._zod.check = (payload) => {\r\n        try {\r\n            // @ts-ignore\r\n            new URL(`http://[${payload.value}]`);\r\n            // return;\r\n        }\r\n        catch {\r\n            payload.issues.push({\r\n                code: \"invalid_format\",\r\n                format: \"ipv6\",\r\n                input: payload.value,\r\n                inst,\r\n                continue: !def.abort,\r\n            });\r\n        }\r\n    };\r\n});\r\nexport const $ZodCIDRv4 = /*@__PURE__*/ core.$constructor(\"$ZodCIDRv4\", (inst, def) => {\r\n    def.pattern ?? (def.pattern = regexes.cidrv4);\r\n    $ZodStringFormat.init(inst, def);\r\n});\r\nexport const $ZodCIDRv6 = /*@__PURE__*/ core.$constructor(\"$ZodCIDRv6\", (inst, def) => {\r\n    def.pattern ?? (def.pattern = regexes.cidrv6); // not used for validation\r\n    $ZodStringFormat.init(inst, def);\r\n    inst._zod.check = (payload) => {\r\n        const parts = payload.value.split(\"/\");\r\n        try {\r\n            if (parts.length !== 2)\r\n                throw new Error();\r\n            const [address, prefix] = parts;\r\n            if (!prefix)\r\n                throw new Error();\r\n            const prefixNum = Number(prefix);\r\n            if (`${prefixNum}` !== prefix)\r\n                throw new Error();\r\n            if (prefixNum < 0 || prefixNum > 128)\r\n                throw new Error();\r\n            // @ts-ignore\r\n            new URL(`http://[${address}]`);\r\n        }\r\n        catch {\r\n            payload.issues.push({\r\n                code: \"invalid_format\",\r\n                format: \"cidrv6\",\r\n                input: payload.value,\r\n                inst,\r\n                continue: !def.abort,\r\n            });\r\n        }\r\n    };\r\n});\r\n//////////////////////////////   ZodBase64   //////////////////////////////\r\nexport function isValidBase64(data) {\r\n    if (data === \"\")\r\n        return true;\r\n    if (data.length % 4 !== 0)\r\n        return false;\r\n    try {\r\n        // @ts-ignore\r\n        atob(data);\r\n        return true;\r\n    }\r\n    catch {\r\n        return false;\r\n    }\r\n}\r\nexport const $ZodBase64 = /*@__PURE__*/ core.$constructor(\"$ZodBase64\", (inst, def) => {\r\n    def.pattern ?? (def.pattern = regexes.base64);\r\n    $ZodStringFormat.init(inst, def);\r\n    inst._zod.onattach.push((inst) => {\r\n        inst._zod.bag.contentEncoding = \"base64\";\r\n    });\r\n    inst._zod.check = (payload) => {\r\n        if (isValidBase64(payload.value))\r\n            return;\r\n        payload.issues.push({\r\n            code: \"invalid_format\",\r\n            format: \"base64\",\r\n            input: payload.value,\r\n            inst,\r\n            continue: !def.abort,\r\n        });\r\n    };\r\n});\r\n//////////////////////////////   ZodBase64   //////////////////////////////\r\nexport function isValidBase64URL(data) {\r\n    if (!regexes.base64url.test(data))\r\n        return false;\r\n    const base64 = data.replace(/[-_]/g, (c) => (c === \"-\" ? \"+\" : \"/\"));\r\n    const padded = base64.padEnd(Math.ceil(base64.length / 4) * 4, \"=\");\r\n    return isValidBase64(padded);\r\n}\r\nexport const $ZodBase64URL = /*@__PURE__*/ core.$constructor(\"$ZodBase64URL\", (inst, def) => {\r\n    def.pattern ?? (def.pattern = regexes.base64url);\r\n    $ZodStringFormat.init(inst, def);\r\n    inst._zod.onattach.push((inst) => {\r\n        inst._zod.bag.contentEncoding = \"base64url\";\r\n    });\r\n    inst._zod.check = (payload) => {\r\n        if (isValidBase64URL(payload.value))\r\n            return;\r\n        payload.issues.push({\r\n            code: \"invalid_format\",\r\n            format: \"base64url\",\r\n            input: payload.value,\r\n            inst,\r\n            continue: !def.abort,\r\n        });\r\n    };\r\n});\r\nexport const $ZodE164 = /*@__PURE__*/ core.$constructor(\"$ZodE164\", (inst, def) => {\r\n    def.pattern ?? (def.pattern = regexes.e164);\r\n    $ZodStringFormat.init(inst, def);\r\n});\r\n//////////////////////////////   ZodJWT   //////////////////////////////\r\nexport function isValidJWT(token, algorithm = null) {\r\n    try {\r\n        const tokensParts = token.split(\".\");\r\n        if (tokensParts.length !== 3)\r\n            return false;\r\n        const [header] = tokensParts;\r\n        if (!header)\r\n            return false;\r\n        // @ts-ignore\r\n        const parsedHeader = JSON.parse(atob(header));\r\n        if (\"typ\" in parsedHeader && parsedHeader?.typ !== \"JWT\")\r\n            return false;\r\n        if (!parsedHeader.alg)\r\n            return false;\r\n        if (algorithm && (!(\"alg\" in parsedHeader) || parsedHeader.alg !== algorithm))\r\n            return false;\r\n        return true;\r\n    }\r\n    catch {\r\n        return false;\r\n    }\r\n}\r\nexport const $ZodJWT = /*@__PURE__*/ core.$constructor(\"$ZodJWT\", (inst, def) => {\r\n    $ZodStringFormat.init(inst, def);\r\n    inst._zod.check = (payload) => {\r\n        if (isValidJWT(payload.value, def.alg))\r\n            return;\r\n        payload.issues.push({\r\n            code: \"invalid_format\",\r\n            format: \"jwt\",\r\n            input: payload.value,\r\n            inst,\r\n            continue: !def.abort,\r\n        });\r\n    };\r\n});\r\nexport const $ZodCustomStringFormat = /*@__PURE__*/ core.$constructor(\"$ZodCustomStringFormat\", (inst, def) => {\r\n    $ZodStringFormat.init(inst, def);\r\n    inst._zod.check = (payload) => {\r\n        if (def.fn(payload.value))\r\n            return;\r\n        payload.issues.push({\r\n            code: \"invalid_format\",\r\n            format: def.format,\r\n            input: payload.value,\r\n            inst,\r\n            continue: !def.abort,\r\n        });\r\n    };\r\n});\r\nexport const $ZodNumber = /*@__PURE__*/ core.$constructor(\"$ZodNumber\", (inst, def) => {\r\n    $ZodType.init(inst, def);\r\n    inst._zod.pattern = inst._zod.bag.pattern ?? regexes.number;\r\n    inst._zod.parse = (payload, _ctx) => {\r\n        if (def.coerce)\r\n            try {\r\n                payload.value = Number(payload.value);\r\n            }\r\n            catch (_) { }\r\n        const input = payload.value;\r\n        if (typeof input === \"number\" && !Number.isNaN(input) && Number.isFinite(input)) {\r\n            return payload;\r\n        }\r\n        const received = typeof input === \"number\"\r\n            ? Number.isNaN(input)\r\n                ? \"NaN\"\r\n                : !Number.isFinite(input)\r\n                    ? \"Infinity\"\r\n                    : undefined\r\n            : undefined;\r\n        payload.issues.push({\r\n            expected: \"number\",\r\n            code: \"invalid_type\",\r\n            input,\r\n            inst,\r\n            ...(received ? { received } : {}),\r\n        });\r\n        return payload;\r\n    };\r\n});\r\nexport const $ZodNumberFormat = /*@__PURE__*/ core.$constructor(\"$ZodNumber\", (inst, def) => {\r\n    checks.$ZodCheckNumberFormat.init(inst, def);\r\n    $ZodNumber.init(inst, def); // no format checksp\r\n});\r\nexport const $ZodBoolean = /*@__PURE__*/ core.$constructor(\"$ZodBoolean\", (inst, def) => {\r\n    $ZodType.init(inst, def);\r\n    inst._zod.pattern = regexes.boolean;\r\n    inst._zod.parse = (payload, _ctx) => {\r\n        if (def.coerce)\r\n            try {\r\n                payload.value = Boolean(payload.value);\r\n            }\r\n            catch (_) { }\r\n        const input = payload.value;\r\n        if (typeof input === \"boolean\")\r\n            return payload;\r\n        payload.issues.push({\r\n            expected: \"boolean\",\r\n            code: \"invalid_type\",\r\n            input,\r\n            inst,\r\n        });\r\n        return payload;\r\n    };\r\n});\r\nexport const $ZodBigInt = /*@__PURE__*/ core.$constructor(\"$ZodBigInt\", (inst, def) => {\r\n    $ZodType.init(inst, def);\r\n    inst._zod.pattern = regexes.bigint;\r\n    inst._zod.parse = (payload, _ctx) => {\r\n        if (def.coerce)\r\n            try {\r\n                payload.value = BigInt(payload.value);\r\n            }\r\n            catch (_) { }\r\n        if (typeof payload.value === \"bigint\")\r\n            return payload;\r\n        payload.issues.push({\r\n            expected: \"bigint\",\r\n            code: \"invalid_type\",\r\n            input: payload.value,\r\n            inst,\r\n        });\r\n        return payload;\r\n    };\r\n});\r\nexport const $ZodBigIntFormat = /*@__PURE__*/ core.$constructor(\"$ZodBigInt\", (inst, def) => {\r\n    checks.$ZodCheckBigIntFormat.init(inst, def);\r\n    $ZodBigInt.init(inst, def); // no format checks\r\n});\r\nexport const $ZodSymbol = /*@__PURE__*/ core.$constructor(\"$ZodSymbol\", (inst, def) => {\r\n    $ZodType.init(inst, def);\r\n    inst._zod.parse = (payload, _ctx) => {\r\n        const input = payload.value;\r\n        if (typeof input === \"symbol\")\r\n            return payload;\r\n        payload.issues.push({\r\n            expected: \"symbol\",\r\n            code: \"invalid_type\",\r\n            input,\r\n            inst,\r\n        });\r\n        return payload;\r\n    };\r\n});\r\nexport const $ZodUndefined = /*@__PURE__*/ core.$constructor(\"$ZodUndefined\", (inst, def) => {\r\n    $ZodType.init(inst, def);\r\n    inst._zod.pattern = regexes.undefined;\r\n    inst._zod.values = new Set([undefined]);\r\n    inst._zod.optin = \"optional\";\r\n    inst._zod.optout = \"optional\";\r\n    inst._zod.parse = (payload, _ctx) => {\r\n        const input = payload.value;\r\n        if (typeof input === \"undefined\")\r\n            return payload;\r\n        payload.issues.push({\r\n            expected: \"undefined\",\r\n            code: \"invalid_type\",\r\n            input,\r\n            inst,\r\n        });\r\n        return payload;\r\n    };\r\n});\r\nexport const $ZodNull = /*@__PURE__*/ core.$constructor(\"$ZodNull\", (inst, def) => {\r\n    $ZodType.init(inst, def);\r\n    inst._zod.pattern = regexes.null;\r\n    inst._zod.values = new Set([null]);\r\n    inst._zod.parse = (payload, _ctx) => {\r\n        const input = payload.value;\r\n        if (input === null)\r\n            return payload;\r\n        payload.issues.push({\r\n            expected: \"null\",\r\n            code: \"invalid_type\",\r\n            input,\r\n            inst,\r\n        });\r\n        return payload;\r\n    };\r\n});\r\nexport const $ZodAny = /*@__PURE__*/ core.$constructor(\"$ZodAny\", (inst, def) => {\r\n    $ZodType.init(inst, def);\r\n    inst._zod.parse = (payload) => payload;\r\n});\r\nexport const $ZodUnknown = /*@__PURE__*/ core.$constructor(\"$ZodUnknown\", (inst, def) => {\r\n    $ZodType.init(inst, def);\r\n    inst._zod.parse = (payload) => payload;\r\n});\r\nexport const $ZodNever = /*@__PURE__*/ core.$constructor(\"$ZodNever\", (inst, def) => {\r\n    $ZodType.init(inst, def);\r\n    inst._zod.parse = (payload, _ctx) => {\r\n        payload.issues.push({\r\n            expected: \"never\",\r\n            code: \"invalid_type\",\r\n            input: payload.value,\r\n            inst,\r\n        });\r\n        return payload;\r\n    };\r\n});\r\nexport const $ZodVoid = /*@__PURE__*/ core.$constructor(\"$ZodVoid\", (inst, def) => {\r\n    $ZodType.init(inst, def);\r\n    inst._zod.parse = (payload, _ctx) => {\r\n        const input = payload.value;\r\n        if (typeof input === \"undefined\")\r\n            return payload;\r\n        payload.issues.push({\r\n            expected: \"void\",\r\n            code: \"invalid_type\",\r\n            input,\r\n            inst,\r\n        });\r\n        return payload;\r\n    };\r\n});\r\nexport const $ZodDate = /*@__PURE__*/ core.$constructor(\"$ZodDate\", (inst, def) => {\r\n    $ZodType.init(inst, def);\r\n    inst._zod.parse = (payload, _ctx) => {\r\n        if (def.coerce) {\r\n            try {\r\n                payload.value = new Date(payload.value);\r\n            }\r\n            catch (_err) { }\r\n        }\r\n        const input = payload.value;\r\n        const isDate = input instanceof Date;\r\n        const isValidDate = isDate && !Number.isNaN(input.getTime());\r\n        if (isValidDate)\r\n            return payload;\r\n        payload.issues.push({\r\n            expected: \"date\",\r\n            code: \"invalid_type\",\r\n            input,\r\n            ...(isDate ? { received: \"Invalid Date\" } : {}),\r\n            inst,\r\n        });\r\n        return payload;\r\n    };\r\n});\r\nfunction handleArrayResult(result, final, index) {\r\n    if (result.issues.length) {\r\n        final.issues.push(...util.prefixIssues(index, result.issues));\r\n    }\r\n    final.value[index] = result.value;\r\n}\r\nexport const $ZodArray = /*@__PURE__*/ core.$constructor(\"$ZodArray\", (inst, def) => {\r\n    $ZodType.init(inst, def);\r\n    inst._zod.parse = (payload, ctx) => {\r\n        const input = payload.value;\r\n        if (!Array.isArray(input)) {\r\n            payload.issues.push({\r\n                expected: \"array\",\r\n                code: \"invalid_type\",\r\n                input,\r\n                inst,\r\n            });\r\n            return payload;\r\n        }\r\n        payload.value = Array(input.length);\r\n        const proms = [];\r\n        for (let i = 0; i < input.length; i++) {\r\n            const item = input[i];\r\n            const result = def.element._zod.run({\r\n                value: item,\r\n                issues: [],\r\n            }, ctx);\r\n            if (result instanceof Promise) {\r\n                proms.push(result.then((result) => handleArrayResult(result, payload, i)));\r\n            }\r\n            else {\r\n                handleArrayResult(result, payload, i);\r\n            }\r\n        }\r\n        if (proms.length) {\r\n            return Promise.all(proms).then(() => payload);\r\n        }\r\n        return payload; //handleArrayResultsAsync(parseResults, final);\r\n    };\r\n});\r\nfunction handlePropertyResult(result, final, key, input) {\r\n    if (result.issues.length) {\r\n        final.issues.push(...util.prefixIssues(key, result.issues));\r\n    }\r\n    if (result.value === undefined) {\r\n        if (key in input) {\r\n            final.value[key] = undefined;\r\n        }\r\n    }\r\n    else {\r\n        final.value[key] = result.value;\r\n    }\r\n}\r\nfunction normalizeDef(def) {\r\n    const keys = Object.keys(def.shape);\r\n    for (const k of keys) {\r\n        if (!def.shape?.[k]?._zod?.traits?.has(\"$ZodType\")) {\r\n            throw new Error(`Invalid element at key \"${k}\": expected a Zod schema`);\r\n        }\r\n    }\r\n    const okeys = util.optionalKeys(def.shape);\r\n    return {\r\n        ...def,\r\n        keys,\r\n        keySet: new Set(keys),\r\n        numKeys: keys.length,\r\n        optionalKeys: new Set(okeys),\r\n    };\r\n}\r\nfunction handleCatchall(proms, input, payload, ctx, def, inst) {\r\n    const unrecognized = [];\r\n    // iterate over input keys\r\n    const keySet = def.keySet;\r\n    const _catchall = def.catchall._zod;\r\n    const t = _catchall.def.type;\r\n    for (const key of Object.keys(input)) {\r\n        if (keySet.has(key))\r\n            continue;\r\n        if (t === \"never\") {\r\n            unrecognized.push(key);\r\n            continue;\r\n        }\r\n        const r = _catchall.run({ value: input[key], issues: [] }, ctx);\r\n        if (r instanceof Promise) {\r\n            proms.push(r.then((r) => handlePropertyResult(r, payload, key, input)));\r\n        }\r\n        else {\r\n            handlePropertyResult(r, payload, key, input);\r\n        }\r\n    }\r\n    if (unrecognized.length) {\r\n        payload.issues.push({\r\n            code: \"unrecognized_keys\",\r\n            keys: unrecognized,\r\n            input,\r\n            inst,\r\n        });\r\n    }\r\n    if (!proms.length)\r\n        return payload;\r\n    return Promise.all(proms).then(() => {\r\n        return payload;\r\n    });\r\n}\r\nexport const $ZodObject = /*@__PURE__*/ core.$constructor(\"$ZodObject\", (inst, def) => {\r\n    // requires cast because technically $ZodObject doesn't extend\r\n    $ZodType.init(inst, def);\r\n    // const sh = def.shape;\r\n    const desc = Object.getOwnPropertyDescriptor(def, \"shape\");\r\n    if (!desc?.get) {\r\n        const sh = def.shape;\r\n        Object.defineProperty(def, \"shape\", {\r\n            get: () => {\r\n                const newSh = { ...sh };\r\n                Object.defineProperty(def, \"shape\", {\r\n                    value: newSh,\r\n                });\r\n                return newSh;\r\n            },\r\n        });\r\n    }\r\n    const _normalized = util.cached(() => normalizeDef(def));\r\n    util.defineLazy(inst._zod, \"propValues\", () => {\r\n        const shape = def.shape;\r\n        const propValues = {};\r\n        for (const key in shape) {\r\n            const field = shape[key]._zod;\r\n            if (field.values) {\r\n                propValues[key] ?? (propValues[key] = new Set());\r\n                for (const v of field.values)\r\n                    propValues[key].add(v);\r\n            }\r\n        }\r\n        return propValues;\r\n    });\r\n    const isObject = util.isObject;\r\n    const catchall = def.catchall;\r\n    let value;\r\n    inst._zod.parse = (payload, ctx) => {\r\n        value ?? (value = _normalized.value);\r\n        const input = payload.value;\r\n        if (!isObject(input)) {\r\n            payload.issues.push({\r\n                expected: \"object\",\r\n                code: \"invalid_type\",\r\n                input,\r\n                inst,\r\n            });\r\n            return payload;\r\n        }\r\n        payload.value = {};\r\n        const proms = [];\r\n        const shape = value.shape;\r\n        for (const key of value.keys) {\r\n            const el = shape[key];\r\n            const r = el._zod.run({ value: input[key], issues: [] }, ctx);\r\n            if (r instanceof Promise) {\r\n                proms.push(r.then((r) => handlePropertyResult(r, payload, key, input)));\r\n            }\r\n            else {\r\n                handlePropertyResult(r, payload, key, input);\r\n            }\r\n        }\r\n        if (!catchall) {\r\n            return proms.length ? Promise.all(proms).then(() => payload) : payload;\r\n        }\r\n        return handleCatchall(proms, input, payload, ctx, _normalized.value, inst);\r\n    };\r\n});\r\nexport const $ZodObjectJIT = /*@__PURE__*/ core.$constructor(\"$ZodObjectJIT\", (inst, def) => {\r\n    // requires cast because technically $ZodObject doesn't extend\r\n    $ZodObject.init(inst, def);\r\n    const superParse = inst._zod.parse;\r\n    const _normalized = util.cached(() => normalizeDef(def));\r\n    const generateFastpass = (shape) => {\r\n        const doc = new Doc([\"shape\", \"payload\", \"ctx\"]);\r\n        const normalized = _normalized.value;\r\n        const parseStr = (key) => {\r\n            const k = util.esc(key);\r\n            return `shape[${k}]._zod.run({ value: input[${k}], issues: [] }, ctx)`;\r\n        };\r\n        doc.write(`const input = payload.value;`);\r\n        const ids = Object.create(null);\r\n        let counter = 0;\r\n        for (const key of normalized.keys) {\r\n            ids[key] = `key_${counter++}`;\r\n        }\r\n        // A: preserve key order {\r\n        doc.write(`const newResult = {};`);\r\n        for (const key of normalized.keys) {\r\n            const id = ids[key];\r\n            const k = util.esc(key);\r\n            doc.write(`const ${id} = ${parseStr(key)};`);\r\n            doc.write(`\r\n        if (${id}.issues.length) {\r\n          payload.issues = payload.issues.concat(${id}.issues.map(iss => ({\r\n            ...iss,\r\n            path: iss.path ? [${k}, ...iss.path] : [${k}]\r\n          })));\r\n        }\r\n        \r\n        \r\n        if (${id}.value === undefined) {\r\n          if (${k} in input) {\r\n            newResult[${k}] = undefined;\r\n          }\r\n        } else {\r\n          newResult[${k}] = ${id}.value;\r\n        }\r\n        \r\n      `);\r\n        }\r\n        doc.write(`payload.value = newResult;`);\r\n        doc.write(`return payload;`);\r\n        const fn = doc.compile();\r\n        return (payload, ctx) => fn(shape, payload, ctx);\r\n    };\r\n    let fastpass;\r\n    const isObject = util.isObject;\r\n    const jit = !core.globalConfig.jitless;\r\n    const allowsEval = util.allowsEval;\r\n    const fastEnabled = jit && allowsEval.value; // && !def.catchall;\r\n    const catchall = def.catchall;\r\n    let value;\r\n    inst._zod.parse = (payload, ctx) => {\r\n        value ?? (value = _normalized.value);\r\n        const input = payload.value;\r\n        if (!isObject(input)) {\r\n            payload.issues.push({\r\n                expected: \"object\",\r\n                code: \"invalid_type\",\r\n                input,\r\n                inst,\r\n            });\r\n            return payload;\r\n        }\r\n        if (jit && fastEnabled && ctx?.async === false && ctx.jitless !== true) {\r\n            // always synchronous\r\n            if (!fastpass)\r\n                fastpass = generateFastpass(def.shape);\r\n            payload = fastpass(payload, ctx);\r\n            if (!catchall)\r\n                return payload;\r\n            return handleCatchall([], input, payload, ctx, value, inst);\r\n        }\r\n        return superParse(payload, ctx);\r\n    };\r\n});\r\nfunction handleUnionResults(results, final, inst, ctx) {\r\n    for (const result of results) {\r\n        if (result.issues.length === 0) {\r\n            final.value = result.value;\r\n            return final;\r\n        }\r\n    }\r\n    const nonaborted = results.filter((r) => !util.aborted(r));\r\n    if (nonaborted.length === 1) {\r\n        final.value = nonaborted[0].value;\r\n        return nonaborted[0];\r\n    }\r\n    final.issues.push({\r\n        code: \"invalid_union\",\r\n        input: final.value,\r\n        inst,\r\n        errors: results.map((result) => result.issues.map((iss) => util.finalizeIssue(iss, ctx, core.config()))),\r\n    });\r\n    return final;\r\n}\r\nexport const $ZodUnion = /*@__PURE__*/ core.$constructor(\"$ZodUnion\", (inst, def) => {\r\n    $ZodType.init(inst, def);\r\n    util.defineLazy(inst._zod, \"optin\", () => def.options.some((o) => o._zod.optin === \"optional\") ? \"optional\" : undefined);\r\n    util.defineLazy(inst._zod, \"optout\", () => def.options.some((o) => o._zod.optout === \"optional\") ? \"optional\" : undefined);\r\n    util.defineLazy(inst._zod, \"values\", () => {\r\n        if (def.options.every((o) => o._zod.values)) {\r\n            return new Set(def.options.flatMap((option) => Array.from(option._zod.values)));\r\n        }\r\n        return undefined;\r\n    });\r\n    util.defineLazy(inst._zod, \"pattern\", () => {\r\n        if (def.options.every((o) => o._zod.pattern)) {\r\n            const patterns = def.options.map((o) => o._zod.pattern);\r\n            return new RegExp(`^(${patterns.map((p) => util.cleanRegex(p.source)).join(\"|\")})$`);\r\n        }\r\n        return undefined;\r\n    });\r\n    const single = def.options.length === 1;\r\n    const first = def.options[0]._zod.run;\r\n    inst._zod.parse = (payload, ctx) => {\r\n        if (single) {\r\n            return first(payload, ctx);\r\n        }\r\n        let async = false;\r\n        const results = [];\r\n        for (const option of def.options) {\r\n            const result = option._zod.run({\r\n                value: payload.value,\r\n                issues: [],\r\n            }, ctx);\r\n            if (result instanceof Promise) {\r\n                results.push(result);\r\n                async = true;\r\n            }\r\n            else {\r\n                if (result.issues.length === 0)\r\n                    return result;\r\n                results.push(result);\r\n            }\r\n        }\r\n        if (!async)\r\n            return handleUnionResults(results, payload, inst, ctx);\r\n        return Promise.all(results).then((results) => {\r\n            return handleUnionResults(results, payload, inst, ctx);\r\n        });\r\n    };\r\n});\r\nexport const $ZodDiscriminatedUnion = \r\n/*@__PURE__*/\r\ncore.$constructor(\"$ZodDiscriminatedUnion\", (inst, def) => {\r\n    $ZodUnion.init(inst, def);\r\n    const _super = inst._zod.parse;\r\n    util.defineLazy(inst._zod, \"propValues\", () => {\r\n        const propValues = {};\r\n        for (const option of def.options) {\r\n            const pv = option._zod.propValues;\r\n            if (!pv || Object.keys(pv).length === 0)\r\n                throw new Error(`Invalid discriminated union option at index \"${def.options.indexOf(option)}\"`);\r\n            for (const [k, v] of Object.entries(pv)) {\r\n                if (!propValues[k])\r\n                    propValues[k] = new Set();\r\n                for (const val of v) {\r\n                    propValues[k].add(val);\r\n                }\r\n            }\r\n        }\r\n        return propValues;\r\n    });\r\n    const disc = util.cached(() => {\r\n        const opts = def.options;\r\n        const map = new Map();\r\n        for (const o of opts) {\r\n            const values = o._zod.propValues?.[def.discriminator];\r\n            if (!values || values.size === 0)\r\n                throw new Error(`Invalid discriminated union option at index \"${def.options.indexOf(o)}\"`);\r\n            for (const v of values) {\r\n                if (map.has(v)) {\r\n                    throw new Error(`Duplicate discriminator value \"${String(v)}\"`);\r\n                }\r\n                map.set(v, o);\r\n            }\r\n        }\r\n        return map;\r\n    });\r\n    inst._zod.parse = (payload, ctx) => {\r\n        const input = payload.value;\r\n        if (!util.isObject(input)) {\r\n            payload.issues.push({\r\n                code: \"invalid_type\",\r\n                expected: \"object\",\r\n                input,\r\n                inst,\r\n            });\r\n            return payload;\r\n        }\r\n        const opt = disc.value.get(input?.[def.discriminator]);\r\n        if (opt) {\r\n            return opt._zod.run(payload, ctx);\r\n        }\r\n        if (def.unionFallback) {\r\n            return _super(payload, ctx);\r\n        }\r\n        // no matching discriminator\r\n        payload.issues.push({\r\n            code: \"invalid_union\",\r\n            errors: [],\r\n            note: \"No matching discriminator\",\r\n            discriminator: def.discriminator,\r\n            input,\r\n            path: [def.discriminator],\r\n            inst,\r\n        });\r\n        return payload;\r\n    };\r\n});\r\nexport const $ZodIntersection = /*@__PURE__*/ core.$constructor(\"$ZodIntersection\", (inst, def) => {\r\n    $ZodType.init(inst, def);\r\n    inst._zod.parse = (payload, ctx) => {\r\n        const input = payload.value;\r\n        const left = def.left._zod.run({ value: input, issues: [] }, ctx);\r\n        const right = def.right._zod.run({ value: input, issues: [] }, ctx);\r\n        const async = left instanceof Promise || right instanceof Promise;\r\n        if (async) {\r\n            return Promise.all([left, right]).then(([left, right]) => {\r\n                return handleIntersectionResults(payload, left, right);\r\n            });\r\n        }\r\n        return handleIntersectionResults(payload, left, right);\r\n    };\r\n});\r\nfunction mergeValues(a, b) {\r\n    // const aType = parse.t(a);\r\n    // const bType = parse.t(b);\r\n    if (a === b) {\r\n        return { valid: true, data: a };\r\n    }\r\n    if (a instanceof Date && b instanceof Date && +a === +b) {\r\n        return { valid: true, data: a };\r\n    }\r\n    if (util.isPlainObject(a) && util.isPlainObject(b)) {\r\n        const bKeys = Object.keys(b);\r\n        const sharedKeys = Object.keys(a).filter((key) => bKeys.indexOf(key) !== -1);\r\n        const newObj = { ...a, ...b };\r\n        for (const key of sharedKeys) {\r\n            const sharedValue = mergeValues(a[key], b[key]);\r\n            if (!sharedValue.valid) {\r\n                return {\r\n                    valid: false,\r\n                    mergeErrorPath: [key, ...sharedValue.mergeErrorPath],\r\n                };\r\n            }\r\n            newObj[key] = sharedValue.data;\r\n        }\r\n        return { valid: true, data: newObj };\r\n    }\r\n    if (Array.isArray(a) && Array.isArray(b)) {\r\n        if (a.length !== b.length) {\r\n            return { valid: false, mergeErrorPath: [] };\r\n        }\r\n        const newArray = [];\r\n        for (let index = 0; index < a.length; index++) {\r\n            const itemA = a[index];\r\n            const itemB = b[index];\r\n            const sharedValue = mergeValues(itemA, itemB);\r\n            if (!sharedValue.valid) {\r\n                return {\r\n                    valid: false,\r\n                    mergeErrorPath: [index, ...sharedValue.mergeErrorPath],\r\n                };\r\n            }\r\n            newArray.push(sharedValue.data);\r\n        }\r\n        return { valid: true, data: newArray };\r\n    }\r\n    return { valid: false, mergeErrorPath: [] };\r\n}\r\nfunction handleIntersectionResults(result, left, right) {\r\n    if (left.issues.length) {\r\n        result.issues.push(...left.issues);\r\n    }\r\n    if (right.issues.length) {\r\n        result.issues.push(...right.issues);\r\n    }\r\n    if (util.aborted(result))\r\n        return result;\r\n    const merged = mergeValues(left.value, right.value);\r\n    if (!merged.valid) {\r\n        throw new Error(`Unmergable intersection. Error path: ` + `${JSON.stringify(merged.mergeErrorPath)}`);\r\n    }\r\n    result.value = merged.data;\r\n    return result;\r\n}\r\nexport const $ZodTuple = /*@__PURE__*/ core.$constructor(\"$ZodTuple\", (inst, def) => {\r\n    $ZodType.init(inst, def);\r\n    const items = def.items;\r\n    const optStart = items.length - [...items].reverse().findIndex((item) => item._zod.optin !== \"optional\");\r\n    inst._zod.parse = (payload, ctx) => {\r\n        const input = payload.value;\r\n        if (!Array.isArray(input)) {\r\n            payload.issues.push({\r\n                input,\r\n                inst,\r\n                expected: \"tuple\",\r\n                code: \"invalid_type\",\r\n            });\r\n            return payload;\r\n        }\r\n        payload.value = [];\r\n        const proms = [];\r\n        if (!def.rest) {\r\n            const tooBig = input.length > items.length;\r\n            const tooSmall = input.length < optStart - 1;\r\n            if (tooBig || tooSmall) {\r\n                payload.issues.push({\r\n                    ...(tooBig ? { code: \"too_big\", maximum: items.length } : { code: \"too_small\", minimum: items.length }),\r\n                    input,\r\n                    inst,\r\n                    origin: \"array\",\r\n                });\r\n                return payload;\r\n            }\r\n        }\r\n        let i = -1;\r\n        for (const item of items) {\r\n            i++;\r\n            if (i >= input.length)\r\n                if (i >= optStart)\r\n                    continue;\r\n            const result = item._zod.run({\r\n                value: input[i],\r\n                issues: [],\r\n            }, ctx);\r\n            if (result instanceof Promise) {\r\n                proms.push(result.then((result) => handleTupleResult(result, payload, i)));\r\n            }\r\n            else {\r\n                handleTupleResult(result, payload, i);\r\n            }\r\n        }\r\n        if (def.rest) {\r\n            const rest = input.slice(items.length);\r\n            for (const el of rest) {\r\n                i++;\r\n                const result = def.rest._zod.run({\r\n                    value: el,\r\n                    issues: [],\r\n                }, ctx);\r\n                if (result instanceof Promise) {\r\n                    proms.push(result.then((result) => handleTupleResult(result, payload, i)));\r\n                }\r\n                else {\r\n                    handleTupleResult(result, payload, i);\r\n                }\r\n            }\r\n        }\r\n        if (proms.length)\r\n            return Promise.all(proms).then(() => payload);\r\n        return payload;\r\n    };\r\n});\r\nfunction handleTupleResult(result, final, index) {\r\n    if (result.issues.length) {\r\n        final.issues.push(...util.prefixIssues(index, result.issues));\r\n    }\r\n    final.value[index] = result.value;\r\n}\r\nexport const $ZodRecord = /*@__PURE__*/ core.$constructor(\"$ZodRecord\", (inst, def) => {\r\n    $ZodType.init(inst, def);\r\n    inst._zod.parse = (payload, ctx) => {\r\n        const input = payload.value;\r\n        if (!util.isPlainObject(input)) {\r\n            payload.issues.push({\r\n                expected: \"record\",\r\n                code: \"invalid_type\",\r\n                input,\r\n                inst,\r\n            });\r\n            return payload;\r\n        }\r\n        const proms = [];\r\n        if (def.keyType._zod.values) {\r\n            const values = def.keyType._zod.values;\r\n            payload.value = {};\r\n            for (const key of values) {\r\n                if (typeof key === \"string\" || typeof key === \"number\" || typeof key === \"symbol\") {\r\n                    const result = def.valueType._zod.run({ value: input[key], issues: [] }, ctx);\r\n                    if (result instanceof Promise) {\r\n                        proms.push(result.then((result) => {\r\n                            if (result.issues.length) {\r\n                                payload.issues.push(...util.prefixIssues(key, result.issues));\r\n                            }\r\n                            payload.value[key] = result.value;\r\n                        }));\r\n                    }\r\n                    else {\r\n                        if (result.issues.length) {\r\n                            payload.issues.push(...util.prefixIssues(key, result.issues));\r\n                        }\r\n                        payload.value[key] = result.value;\r\n                    }\r\n                }\r\n            }\r\n            let unrecognized;\r\n            for (const key in input) {\r\n                if (!values.has(key)) {\r\n                    unrecognized = unrecognized ?? [];\r\n                    unrecognized.push(key);\r\n                }\r\n            }\r\n            if (unrecognized && unrecognized.length > 0) {\r\n                payload.issues.push({\r\n                    code: \"unrecognized_keys\",\r\n                    input,\r\n                    inst,\r\n                    keys: unrecognized,\r\n                });\r\n            }\r\n        }\r\n        else {\r\n            payload.value = {};\r\n            for (const key of Reflect.ownKeys(input)) {\r\n                if (key === \"__proto__\")\r\n                    continue;\r\n                const keyResult = def.keyType._zod.run({ value: key, issues: [] }, ctx);\r\n                if (keyResult instanceof Promise) {\r\n                    throw new Error(\"Async schemas not supported in object keys currently\");\r\n                }\r\n                if (keyResult.issues.length) {\r\n                    payload.issues.push({\r\n                        code: \"invalid_key\",\r\n                        origin: \"record\",\r\n                        issues: keyResult.issues.map((iss) => util.finalizeIssue(iss, ctx, core.config())),\r\n                        input: key,\r\n                        path: [key],\r\n                        inst,\r\n                    });\r\n                    payload.value[keyResult.value] = keyResult.value;\r\n                    continue;\r\n                }\r\n                const result = def.valueType._zod.run({ value: input[key], issues: [] }, ctx);\r\n                if (result instanceof Promise) {\r\n                    proms.push(result.then((result) => {\r\n                        if (result.issues.length) {\r\n                            payload.issues.push(...util.prefixIssues(key, result.issues));\r\n                        }\r\n                        payload.value[keyResult.value] = result.value;\r\n                    }));\r\n                }\r\n                else {\r\n                    if (result.issues.length) {\r\n                        payload.issues.push(...util.prefixIssues(key, result.issues));\r\n                    }\r\n                    payload.value[keyResult.value] = result.value;\r\n                }\r\n            }\r\n        }\r\n        if (proms.length) {\r\n            return Promise.all(proms).then(() => payload);\r\n        }\r\n        return payload;\r\n    };\r\n});\r\nexport const $ZodMap = /*@__PURE__*/ core.$constructor(\"$ZodMap\", (inst, def) => {\r\n    $ZodType.init(inst, def);\r\n    inst._zod.parse = (payload, ctx) => {\r\n        const input = payload.value;\r\n        if (!(input instanceof Map)) {\r\n            payload.issues.push({\r\n                expected: \"map\",\r\n                code: \"invalid_type\",\r\n                input,\r\n                inst,\r\n            });\r\n            return payload;\r\n        }\r\n        const proms = [];\r\n        payload.value = new Map();\r\n        for (const [key, value] of input) {\r\n            const keyResult = def.keyType._zod.run({ value: key, issues: [] }, ctx);\r\n            const valueResult = def.valueType._zod.run({ value: value, issues: [] }, ctx);\r\n            if (keyResult instanceof Promise || valueResult instanceof Promise) {\r\n                proms.push(Promise.all([keyResult, valueResult]).then(([keyResult, valueResult]) => {\r\n                    handleMapResult(keyResult, valueResult, payload, key, input, inst, ctx);\r\n                }));\r\n            }\r\n            else {\r\n                handleMapResult(keyResult, valueResult, payload, key, input, inst, ctx);\r\n            }\r\n        }\r\n        if (proms.length)\r\n            return Promise.all(proms).then(() => payload);\r\n        return payload;\r\n    };\r\n});\r\nfunction handleMapResult(keyResult, valueResult, final, key, input, inst, ctx) {\r\n    if (keyResult.issues.length) {\r\n        if (util.propertyKeyTypes.has(typeof key)) {\r\n            final.issues.push(...util.prefixIssues(key, keyResult.issues));\r\n        }\r\n        else {\r\n            final.issues.push({\r\n                code: \"invalid_key\",\r\n                origin: \"map\",\r\n                input,\r\n                inst,\r\n                issues: keyResult.issues.map((iss) => util.finalizeIssue(iss, ctx, core.config())),\r\n            });\r\n        }\r\n    }\r\n    if (valueResult.issues.length) {\r\n        if (util.propertyKeyTypes.has(typeof key)) {\r\n            final.issues.push(...util.prefixIssues(key, valueResult.issues));\r\n        }\r\n        else {\r\n            final.issues.push({\r\n                origin: \"map\",\r\n                code: \"invalid_element\",\r\n                input,\r\n                inst,\r\n                key: key,\r\n                issues: valueResult.issues.map((iss) => util.finalizeIssue(iss, ctx, core.config())),\r\n            });\r\n        }\r\n    }\r\n    final.value.set(keyResult.value, valueResult.value);\r\n}\r\nexport const $ZodSet = /*@__PURE__*/ core.$constructor(\"$ZodSet\", (inst, def) => {\r\n    $ZodType.init(inst, def);\r\n    inst._zod.parse = (payload, ctx) => {\r\n        const input = payload.value;\r\n        if (!(input instanceof Set)) {\r\n            payload.issues.push({\r\n                input,\r\n                inst,\r\n                expected: \"set\",\r\n                code: \"invalid_type\",\r\n            });\r\n            return payload;\r\n        }\r\n        const proms = [];\r\n        payload.value = new Set();\r\n        for (const item of input) {\r\n            const result = def.valueType._zod.run({ value: item, issues: [] }, ctx);\r\n            if (result instanceof Promise) {\r\n                proms.push(result.then((result) => handleSetResult(result, payload)));\r\n            }\r\n            else\r\n                handleSetResult(result, payload);\r\n        }\r\n        if (proms.length)\r\n            return Promise.all(proms).then(() => payload);\r\n        return payload;\r\n    };\r\n});\r\nfunction handleSetResult(result, final) {\r\n    if (result.issues.length) {\r\n        final.issues.push(...result.issues);\r\n    }\r\n    final.value.add(result.value);\r\n}\r\nexport const $ZodEnum = /*@__PURE__*/ core.$constructor(\"$ZodEnum\", (inst, def) => {\r\n    $ZodType.init(inst, def);\r\n    const values = util.getEnumValues(def.entries);\r\n    const valuesSet = new Set(values);\r\n    inst._zod.values = valuesSet;\r\n    inst._zod.pattern = new RegExp(`^(${values\r\n        .filter((k) => util.propertyKeyTypes.has(typeof k))\r\n        .map((o) => (typeof o === \"string\" ? util.escapeRegex(o) : o.toString()))\r\n        .join(\"|\")})$`);\r\n    inst._zod.parse = (payload, _ctx) => {\r\n        const input = payload.value;\r\n        if (valuesSet.has(input)) {\r\n            return payload;\r\n        }\r\n        payload.issues.push({\r\n            code: \"invalid_value\",\r\n            values,\r\n            input,\r\n            inst,\r\n        });\r\n        return payload;\r\n    };\r\n});\r\nexport const $ZodLiteral = /*@__PURE__*/ core.$constructor(\"$ZodLiteral\", (inst, def) => {\r\n    $ZodType.init(inst, def);\r\n    if (def.values.length === 0) {\r\n        throw new Error(\"Cannot create literal schema with no valid values\");\r\n    }\r\n    inst._zod.values = new Set(def.values);\r\n    inst._zod.pattern = new RegExp(`^(${def.values\r\n        .map((o) => (typeof o === \"string\" ? util.escapeRegex(o) : o ? util.escapeRegex(o.toString()) : String(o)))\r\n        .join(\"|\")})$`);\r\n    inst._zod.parse = (payload, _ctx) => {\r\n        const input = payload.value;\r\n        if (inst._zod.values.has(input)) {\r\n            return payload;\r\n        }\r\n        payload.issues.push({\r\n            code: \"invalid_value\",\r\n            values: def.values,\r\n            input,\r\n            inst,\r\n        });\r\n        return payload;\r\n    };\r\n});\r\nexport const $ZodFile = /*@__PURE__*/ core.$constructor(\"$ZodFile\", (inst, def) => {\r\n    $ZodType.init(inst, def);\r\n    inst._zod.parse = (payload, _ctx) => {\r\n        const input = payload.value;\r\n        // @ts-ignore\r\n        if (input instanceof File)\r\n            return payload;\r\n        payload.issues.push({\r\n            expected: \"file\",\r\n            code: \"invalid_type\",\r\n            input,\r\n            inst,\r\n        });\r\n        return payload;\r\n    };\r\n});\r\nexport const $ZodTransform = /*@__PURE__*/ core.$constructor(\"$ZodTransform\", (inst, def) => {\r\n    $ZodType.init(inst, def);\r\n    inst._zod.parse = (payload, ctx) => {\r\n        if (ctx.direction === \"backward\") {\r\n            throw new core.$ZodEncodeError(inst.constructor.name);\r\n        }\r\n        const _out = def.transform(payload.value, payload);\r\n        if (ctx.async) {\r\n            const output = _out instanceof Promise ? _out : Promise.resolve(_out);\r\n            return output.then((output) => {\r\n                payload.value = output;\r\n                return payload;\r\n            });\r\n        }\r\n        if (_out instanceof Promise) {\r\n            throw new core.$ZodAsyncError();\r\n        }\r\n        payload.value = _out;\r\n        return payload;\r\n    };\r\n});\r\nfunction handleOptionalResult(result, input) {\r\n    if (result.issues.length && input === undefined) {\r\n        return { issues: [], value: undefined };\r\n    }\r\n    return result;\r\n}\r\nexport const $ZodOptional = /*@__PURE__*/ core.$constructor(\"$ZodOptional\", (inst, def) => {\r\n    $ZodType.init(inst, def);\r\n    inst._zod.optin = \"optional\";\r\n    inst._zod.optout = \"optional\";\r\n    util.defineLazy(inst._zod, \"values\", () => {\r\n        return def.innerType._zod.values ? new Set([...def.innerType._zod.values, undefined]) : undefined;\r\n    });\r\n    util.defineLazy(inst._zod, \"pattern\", () => {\r\n        const pattern = def.innerType._zod.pattern;\r\n        return pattern ? new RegExp(`^(${util.cleanRegex(pattern.source)})?$`) : undefined;\r\n    });\r\n    inst._zod.parse = (payload, ctx) => {\r\n        if (def.innerType._zod.optin === \"optional\") {\r\n            const result = def.innerType._zod.run(payload, ctx);\r\n            if (result instanceof Promise)\r\n                return result.then((r) => handleOptionalResult(r, payload.value));\r\n            return handleOptionalResult(result, payload.value);\r\n        }\r\n        if (payload.value === undefined) {\r\n            return payload;\r\n        }\r\n        return def.innerType._zod.run(payload, ctx);\r\n    };\r\n});\r\nexport const $ZodNullable = /*@__PURE__*/ core.$constructor(\"$ZodNullable\", (inst, def) => {\r\n    $ZodType.init(inst, def);\r\n    util.defineLazy(inst._zod, \"optin\", () => def.innerType._zod.optin);\r\n    util.defineLazy(inst._zod, \"optout\", () => def.innerType._zod.optout);\r\n    util.defineLazy(inst._zod, \"pattern\", () => {\r\n        const pattern = def.innerType._zod.pattern;\r\n        return pattern ? new RegExp(`^(${util.cleanRegex(pattern.source)}|null)$`) : undefined;\r\n    });\r\n    util.defineLazy(inst._zod, \"values\", () => {\r\n        return def.innerType._zod.values ? new Set([...def.innerType._zod.values, null]) : undefined;\r\n    });\r\n    inst._zod.parse = (payload, ctx) => {\r\n        // Forward direction (decode): allow null to pass through\r\n        if (payload.value === null)\r\n            return payload;\r\n        return def.innerType._zod.run(payload, ctx);\r\n    };\r\n});\r\nexport const $ZodDefault = /*@__PURE__*/ core.$constructor(\"$ZodDefault\", (inst, def) => {\r\n    $ZodType.init(inst, def);\r\n    // inst._zod.qin = \"true\";\r\n    inst._zod.optin = \"optional\";\r\n    util.defineLazy(inst._zod, \"values\", () => def.innerType._zod.values);\r\n    inst._zod.parse = (payload, ctx) => {\r\n        if (ctx.direction === \"backward\") {\r\n            return def.innerType._zod.run(payload, ctx);\r\n        }\r\n        // Forward direction (decode): apply defaults for undefined input\r\n        if (payload.value === undefined) {\r\n            payload.value = def.defaultValue;\r\n            /**\r\n             * $ZodDefault returns the default value immediately in forward direction.\r\n             * It doesn't pass the default value into the validator (\"prefault\"). There's no reason to pass the default value through validation. The validity of the default is enforced by TypeScript statically. Otherwise, it's the responsibility of the user to ensure the default is valid. In the case of pipes with divergent in/out types, you can specify the default on the `in` schema of your ZodPipe to set a \"prefault\" for the pipe.   */\r\n            return payload;\r\n        }\r\n        // Forward direction: continue with default handling\r\n        const result = def.innerType._zod.run(payload, ctx);\r\n        if (result instanceof Promise) {\r\n            return result.then((result) => handleDefaultResult(result, def));\r\n        }\r\n        return handleDefaultResult(result, def);\r\n    };\r\n});\r\nfunction handleDefaultResult(payload, def) {\r\n    if (payload.value === undefined) {\r\n        payload.value = def.defaultValue;\r\n    }\r\n    return payload;\r\n}\r\nexport const $ZodPrefault = /*@__PURE__*/ core.$constructor(\"$ZodPrefault\", (inst, def) => {\r\n    $ZodType.init(inst, def);\r\n    inst._zod.optin = \"optional\";\r\n    util.defineLazy(inst._zod, \"values\", () => def.innerType._zod.values);\r\n    inst._zod.parse = (payload, ctx) => {\r\n        if (ctx.direction === \"backward\") {\r\n            return def.innerType._zod.run(payload, ctx);\r\n        }\r\n        // Forward direction (decode): apply prefault for undefined input\r\n        if (payload.value === undefined) {\r\n            payload.value = def.defaultValue;\r\n        }\r\n        return def.innerType._zod.run(payload, ctx);\r\n    };\r\n});\r\nexport const $ZodNonOptional = /*@__PURE__*/ core.$constructor(\"$ZodNonOptional\", (inst, def) => {\r\n    $ZodType.init(inst, def);\r\n    util.defineLazy(inst._zod, \"values\", () => {\r\n        const v = def.innerType._zod.values;\r\n        return v ? new Set([...v].filter((x) => x !== undefined)) : undefined;\r\n    });\r\n    inst._zod.parse = (payload, ctx) => {\r\n        const result = def.innerType._zod.run(payload, ctx);\r\n        if (result instanceof Promise) {\r\n            return result.then((result) => handleNonOptionalResult(result, inst));\r\n        }\r\n        return handleNonOptionalResult(result, inst);\r\n    };\r\n});\r\nfunction handleNonOptionalResult(payload, inst) {\r\n    if (!payload.issues.length && payload.value === undefined) {\r\n        payload.issues.push({\r\n            code: \"invalid_type\",\r\n            expected: \"nonoptional\",\r\n            input: payload.value,\r\n            inst,\r\n        });\r\n    }\r\n    return payload;\r\n}\r\nexport const $ZodSuccess = /*@__PURE__*/ core.$constructor(\"$ZodSuccess\", (inst, def) => {\r\n    $ZodType.init(inst, def);\r\n    inst._zod.parse = (payload, ctx) => {\r\n        if (ctx.direction === \"backward\") {\r\n            throw new core.$ZodEncodeError(\"ZodSuccess\");\r\n        }\r\n        const result = def.innerType._zod.run(payload, ctx);\r\n        if (result instanceof Promise) {\r\n            return result.then((result) => {\r\n                payload.value = result.issues.length === 0;\r\n                return payload;\r\n            });\r\n        }\r\n        payload.value = result.issues.length === 0;\r\n        return payload;\r\n    };\r\n});\r\nexport const $ZodCatch = /*@__PURE__*/ core.$constructor(\"$ZodCatch\", (inst, def) => {\r\n    $ZodType.init(inst, def);\r\n    util.defineLazy(inst._zod, \"optin\", () => def.innerType._zod.optin);\r\n    util.defineLazy(inst._zod, \"optout\", () => def.innerType._zod.optout);\r\n    util.defineLazy(inst._zod, \"values\", () => def.innerType._zod.values);\r\n    inst._zod.parse = (payload, ctx) => {\r\n        if (ctx.direction === \"backward\") {\r\n            return def.innerType._zod.run(payload, ctx);\r\n        }\r\n        // Forward direction (decode): apply catch logic\r\n        const result = def.innerType._zod.run(payload, ctx);\r\n        if (result instanceof Promise) {\r\n            return result.then((result) => {\r\n                payload.value = result.value;\r\n                if (result.issues.length) {\r\n                    payload.value = def.catchValue({\r\n                        ...payload,\r\n                        error: {\r\n                            issues: result.issues.map((iss) => util.finalizeIssue(iss, ctx, core.config())),\r\n                        },\r\n                        input: payload.value,\r\n                    });\r\n                    payload.issues = [];\r\n                }\r\n                return payload;\r\n            });\r\n        }\r\n        payload.value = result.value;\r\n        if (result.issues.length) {\r\n            payload.value = def.catchValue({\r\n                ...payload,\r\n                error: {\r\n                    issues: result.issues.map((iss) => util.finalizeIssue(iss, ctx, core.config())),\r\n                },\r\n                input: payload.value,\r\n            });\r\n            payload.issues = [];\r\n        }\r\n        return payload;\r\n    };\r\n});\r\nexport const $ZodNaN = /*@__PURE__*/ core.$constructor(\"$ZodNaN\", (inst, def) => {\r\n    $ZodType.init(inst, def);\r\n    inst._zod.parse = (payload, _ctx) => {\r\n        if (typeof payload.value !== \"number\" || !Number.isNaN(payload.value)) {\r\n            payload.issues.push({\r\n                input: payload.value,\r\n                inst,\r\n                expected: \"nan\",\r\n                code: \"invalid_type\",\r\n            });\r\n            return payload;\r\n        }\r\n        return payload;\r\n    };\r\n});\r\nexport const $ZodPipe = /*@__PURE__*/ core.$constructor(\"$ZodPipe\", (inst, def) => {\r\n    $ZodType.init(inst, def);\r\n    util.defineLazy(inst._zod, \"values\", () => def.in._zod.values);\r\n    util.defineLazy(inst._zod, \"optin\", () => def.in._zod.optin);\r\n    util.defineLazy(inst._zod, \"optout\", () => def.out._zod.optout);\r\n    util.defineLazy(inst._zod, \"propValues\", () => def.in._zod.propValues);\r\n    inst._zod.parse = (payload, ctx) => {\r\n        if (ctx.direction === \"backward\") {\r\n            const right = def.out._zod.run(payload, ctx);\r\n            if (right instanceof Promise) {\r\n                return right.then((right) => handlePipeResult(right, def.in, ctx));\r\n            }\r\n            return handlePipeResult(right, def.in, ctx);\r\n        }\r\n        const left = def.in._zod.run(payload, ctx);\r\n        if (left instanceof Promise) {\r\n            return left.then((left) => handlePipeResult(left, def.out, ctx));\r\n        }\r\n        return handlePipeResult(left, def.out, ctx);\r\n    };\r\n});\r\nfunction handlePipeResult(left, next, ctx) {\r\n    if (left.issues.length) {\r\n        // prevent further checks\r\n        left.aborted = true;\r\n        return left;\r\n    }\r\n    return next._zod.run({ value: left.value, issues: left.issues }, ctx);\r\n}\r\nexport const $ZodCodec = /*@__PURE__*/ core.$constructor(\"$ZodCodec\", (inst, def) => {\r\n    $ZodType.init(inst, def);\r\n    util.defineLazy(inst._zod, \"values\", () => def.in._zod.values);\r\n    util.defineLazy(inst._zod, \"optin\", () => def.in._zod.optin);\r\n    util.defineLazy(inst._zod, \"optout\", () => def.out._zod.optout);\r\n    util.defineLazy(inst._zod, \"propValues\", () => def.in._zod.propValues);\r\n    inst._zod.parse = (payload, ctx) => {\r\n        const direction = ctx.direction || \"forward\";\r\n        if (direction === \"forward\") {\r\n            const left = def.in._zod.run(payload, ctx);\r\n            if (left instanceof Promise) {\r\n                return left.then((left) => handleCodecAResult(left, def, ctx));\r\n            }\r\n            return handleCodecAResult(left, def, ctx);\r\n        }\r\n        else {\r\n            const right = def.out._zod.run(payload, ctx);\r\n            if (right instanceof Promise) {\r\n                return right.then((right) => handleCodecAResult(right, def, ctx));\r\n            }\r\n            return handleCodecAResult(right, def, ctx);\r\n        }\r\n    };\r\n});\r\nfunction handleCodecAResult(result, def, ctx) {\r\n    if (result.issues.length) {\r\n        // prevent further checks\r\n        result.aborted = true;\r\n        return result;\r\n    }\r\n    const direction = ctx.direction || \"forward\";\r\n    if (direction === \"forward\") {\r\n        const transformed = def.transform(result.value, result);\r\n        if (transformed instanceof Promise) {\r\n            return transformed.then((value) => handleCodecTxResult(result, value, def.out, ctx));\r\n        }\r\n        return handleCodecTxResult(result, transformed, def.out, ctx);\r\n    }\r\n    else {\r\n        const transformed = def.reverseTransform(result.value, result);\r\n        if (transformed instanceof Promise) {\r\n            return transformed.then((value) => handleCodecTxResult(result, value, def.in, ctx));\r\n        }\r\n        return handleCodecTxResult(result, transformed, def.in, ctx);\r\n    }\r\n}\r\nfunction handleCodecTxResult(left, value, nextSchema, ctx) {\r\n    // Check if transform added any issues\r\n    if (left.issues.length) {\r\n        left.aborted = true;\r\n        return left;\r\n    }\r\n    return nextSchema._zod.run({ value, issues: left.issues }, ctx);\r\n}\r\nexport const $ZodReadonly = /*@__PURE__*/ core.$constructor(\"$ZodReadonly\", (inst, def) => {\r\n    $ZodType.init(inst, def);\r\n    util.defineLazy(inst._zod, \"propValues\", () => def.innerType._zod.propValues);\r\n    util.defineLazy(inst._zod, \"values\", () => def.innerType._zod.values);\r\n    util.defineLazy(inst._zod, \"optin\", () => def.innerType._zod.optin);\r\n    util.defineLazy(inst._zod, \"optout\", () => def.innerType._zod.optout);\r\n    inst._zod.parse = (payload, ctx) => {\r\n        if (ctx.direction === \"backward\") {\r\n            return def.innerType._zod.run(payload, ctx);\r\n        }\r\n        const result = def.innerType._zod.run(payload, ctx);\r\n        if (result instanceof Promise) {\r\n            return result.then(handleReadonlyResult);\r\n        }\r\n        return handleReadonlyResult(result);\r\n    };\r\n});\r\nfunction handleReadonlyResult(payload) {\r\n    payload.value = Object.freeze(payload.value);\r\n    return payload;\r\n}\r\nexport const $ZodTemplateLiteral = /*@__PURE__*/ core.$constructor(\"$ZodTemplateLiteral\", (inst, def) => {\r\n    $ZodType.init(inst, def);\r\n    const regexParts = [];\r\n    for (const part of def.parts) {\r\n        if (typeof part === \"object\" && part !== null) {\r\n            // is Zod schema\r\n            if (!part._zod.pattern) {\r\n                // if (!source)\r\n                throw new Error(`Invalid template literal part, no pattern found: ${[...part._zod.traits].shift()}`);\r\n            }\r\n            const source = part._zod.pattern instanceof RegExp ? part._zod.pattern.source : part._zod.pattern;\r\n            if (!source)\r\n                throw new Error(`Invalid template literal part: ${part._zod.traits}`);\r\n            const start = source.startsWith(\"^\") ? 1 : 0;\r\n            const end = source.endsWith(\"$\") ? source.length - 1 : source.length;\r\n            regexParts.push(source.slice(start, end));\r\n        }\r\n        else if (part === null || util.primitiveTypes.has(typeof part)) {\r\n            regexParts.push(util.escapeRegex(`${part}`));\r\n        }\r\n        else {\r\n            throw new Error(`Invalid template literal part: ${part}`);\r\n        }\r\n    }\r\n    inst._zod.pattern = new RegExp(`^${regexParts.join(\"\")}$`);\r\n    inst._zod.parse = (payload, _ctx) => {\r\n        if (typeof payload.value !== \"string\") {\r\n            payload.issues.push({\r\n                input: payload.value,\r\n                inst,\r\n                expected: \"template_literal\",\r\n                code: \"invalid_type\",\r\n            });\r\n            return payload;\r\n        }\r\n        inst._zod.pattern.lastIndex = 0;\r\n        if (!inst._zod.pattern.test(payload.value)) {\r\n            payload.issues.push({\r\n                input: payload.value,\r\n                inst,\r\n                code: \"invalid_format\",\r\n                format: def.format ?? \"template_literal\",\r\n                pattern: inst._zod.pattern.source,\r\n            });\r\n            return payload;\r\n        }\r\n        return payload;\r\n    };\r\n});\r\nexport const $ZodFunction = /*@__PURE__*/ core.$constructor(\"$ZodFunction\", (inst, def) => {\r\n    $ZodType.init(inst, def);\r\n    inst._def = def;\r\n    inst._zod.def = def;\r\n    inst.implement = (func) => {\r\n        if (typeof func !== \"function\") {\r\n            throw new Error(\"implement() must be called with a function\");\r\n        }\r\n        return function (...args) {\r\n            const parsedArgs = inst._def.input ? parse(inst._def.input, args) : args;\r\n            const result = Reflect.apply(func, this, parsedArgs);\r\n            if (inst._def.output) {\r\n                return parse(inst._def.output, result);\r\n            }\r\n            return result;\r\n        };\r\n    };\r\n    inst.implementAsync = (func) => {\r\n        if (typeof func !== \"function\") {\r\n            throw new Error(\"implementAsync() must be called with a function\");\r\n        }\r\n        return async function (...args) {\r\n            const parsedArgs = inst._def.input ? await parseAsync(inst._def.input, args) : args;\r\n            const result = await Reflect.apply(func, this, parsedArgs);\r\n            if (inst._def.output) {\r\n                return await parseAsync(inst._def.output, result);\r\n            }\r\n            return result;\r\n        };\r\n    };\r\n    inst._zod.parse = (payload, _ctx) => {\r\n        if (typeof payload.value !== \"function\") {\r\n            payload.issues.push({\r\n                code: \"invalid_type\",\r\n                expected: \"function\",\r\n                input: payload.value,\r\n                inst,\r\n            });\r\n            return payload;\r\n        }\r\n        // Check if output is a promise type to determine if we should use async implementation\r\n        const hasPromiseOutput = inst._def.output && inst._def.output._zod.def.type === \"promise\";\r\n        if (hasPromiseOutput) {\r\n            payload.value = inst.implementAsync(payload.value);\r\n        }\r\n        else {\r\n            payload.value = inst.implement(payload.value);\r\n        }\r\n        return payload;\r\n    };\r\n    inst.input = (...args) => {\r\n        const F = inst.constructor;\r\n        if (Array.isArray(args[0])) {\r\n            return new F({\r\n                type: \"function\",\r\n                input: new $ZodTuple({\r\n                    type: \"tuple\",\r\n                    items: args[0],\r\n                    rest: args[1],\r\n                }),\r\n                output: inst._def.output,\r\n            });\r\n        }\r\n        return new F({\r\n            type: \"function\",\r\n            input: args[0],\r\n            output: inst._def.output,\r\n        });\r\n    };\r\n    inst.output = (output) => {\r\n        const F = inst.constructor;\r\n        return new F({\r\n            type: \"function\",\r\n            input: inst._def.input,\r\n            output,\r\n        });\r\n    };\r\n    return inst;\r\n});\r\nexport const $ZodPromise = /*@__PURE__*/ core.$constructor(\"$ZodPromise\", (inst, def) => {\r\n    $ZodType.init(inst, def);\r\n    inst._zod.parse = (payload, ctx) => {\r\n        return Promise.resolve(payload.value).then((inner) => def.innerType._zod.run({ value: inner, issues: [] }, ctx));\r\n    };\r\n});\r\nexport const $ZodLazy = /*@__PURE__*/ core.$constructor(\"$ZodLazy\", (inst, def) => {\r\n    $ZodType.init(inst, def);\r\n    // let _innerType!: any;\r\n    // util.defineLazy(def, \"getter\", () => {\r\n    //   if (!_innerType) {\r\n    //     _innerType = def.getter();\r\n    //   }\r\n    //   return () => _innerType;\r\n    // });\r\n    util.defineLazy(inst._zod, \"innerType\", () => def.getter());\r\n    util.defineLazy(inst._zod, \"pattern\", () => inst._zod.innerType._zod.pattern);\r\n    util.defineLazy(inst._zod, \"propValues\", () => inst._zod.innerType._zod.propValues);\r\n    util.defineLazy(inst._zod, \"optin\", () => inst._zod.innerType._zod.optin ?? undefined);\r\n    util.defineLazy(inst._zod, \"optout\", () => inst._zod.innerType._zod.optout ?? undefined);\r\n    inst._zod.parse = (payload, ctx) => {\r\n        const inner = inst._zod.innerType;\r\n        return inner._zod.run(payload, ctx);\r\n    };\r\n});\r\nexport const $ZodCustom = /*@__PURE__*/ core.$constructor(\"$ZodCustom\", (inst, def) => {\r\n    checks.$ZodCheck.init(inst, def);\r\n    $ZodType.init(inst, def);\r\n    inst._zod.parse = (payload, _) => {\r\n        return payload;\r\n    };\r\n    inst._zod.check = (payload) => {\r\n        const input = payload.value;\r\n        const r = def.fn(input);\r\n        if (r instanceof Promise) {\r\n            return r.then((r) => handleRefineResult(r, payload, input, inst));\r\n        }\r\n        handleRefineResult(r, payload, input, inst);\r\n        return;\r\n    };\r\n});\r\nfunction handleRefineResult(result, payload, input, inst) {\r\n    if (!result) {\r\n        const _iss = {\r\n            code: \"custom\",\r\n            input,\r\n            inst, // incorporates params.error into issue reporting\r\n            path: [...(inst._zod.def.path ?? [])], // incorporates params.error into issue reporting\r\n            continue: !inst._zod.def.abort,\r\n            // params: inst._zod.def.params,\r\n        };\r\n        if (inst._zod.def.params)\r\n            _iss.params = inst._zod.def.params;\r\n        payload.issues.push(util.issue(_iss));\r\n    }\r\n}\r\n", "// import { $ZodType } from \"./schemas.js\";\r\nimport * as core from \"./core.js\";\r\nimport * as regexes from \"./regexes.js\";\r\nimport * as util from \"./util.js\";\r\nexport const $ZodCheck = /*@__PURE__*/ core.$constructor(\"$ZodCheck\", (inst, def) => {\r\n    var _a;\r\n    inst._zod ?? (inst._zod = {});\r\n    inst._zod.def = def;\r\n    (_a = inst._zod).onattach ?? (_a.onattach = []);\r\n});\r\nconst numericOriginMap = {\r\n    number: \"number\",\r\n    bigint: \"bigint\",\r\n    object: \"date\",\r\n};\r\nexport const $ZodCheckLessThan = /*@__PURE__*/ core.$constructor(\"$ZodCheckLessThan\", (inst, def) => {\r\n    $ZodCheck.init(inst, def);\r\n    const origin = numericOriginMap[typeof def.value];\r\n    inst._zod.onattach.push((inst) => {\r\n        const bag = inst._zod.bag;\r\n        const curr = (def.inclusive ? bag.maximum : bag.exclusiveMaximum) ?? Number.POSITIVE_INFINITY;\r\n        if (def.value < curr) {\r\n            if (def.inclusive)\r\n                bag.maximum = def.value;\r\n            else\r\n                bag.exclusiveMaximum = def.value;\r\n        }\r\n    });\r\n    inst._zod.check = (payload) => {\r\n        if (def.inclusive ? payload.value <= def.value : payload.value < def.value) {\r\n            return;\r\n        }\r\n        payload.issues.push({\r\n            origin,\r\n            code: \"too_big\",\r\n            maximum: def.value,\r\n            input: payload.value,\r\n            inclusive: def.inclusive,\r\n            inst,\r\n            continue: !def.abort,\r\n        });\r\n    };\r\n});\r\nexport const $ZodCheckGreaterThan = /*@__PURE__*/ core.$constructor(\"$ZodCheckGreaterThan\", (inst, def) => {\r\n    $ZodCheck.init(inst, def);\r\n    const origin = numericOriginMap[typeof def.value];\r\n    inst._zod.onattach.push((inst) => {\r\n        const bag = inst._zod.bag;\r\n        const curr = (def.inclusive ? bag.minimum : bag.exclusiveMinimum) ?? Number.NEGATIVE_INFINITY;\r\n        if (def.value > curr) {\r\n            if (def.inclusive)\r\n                bag.minimum = def.value;\r\n            else\r\n                bag.exclusiveMinimum = def.value;\r\n        }\r\n    });\r\n    inst._zod.check = (payload) => {\r\n        if (def.inclusive ? payload.value >= def.value : payload.value > def.value) {\r\n            return;\r\n        }\r\n        payload.issues.push({\r\n            origin,\r\n            code: \"too_small\",\r\n            minimum: def.value,\r\n            input: payload.value,\r\n            inclusive: def.inclusive,\r\n            inst,\r\n            continue: !def.abort,\r\n        });\r\n    };\r\n});\r\nexport const $ZodCheckMultipleOf = \r\n/*@__PURE__*/ core.$constructor(\"$ZodCheckMultipleOf\", (inst, def) => {\r\n    $ZodCheck.init(inst, def);\r\n    inst._zod.onattach.push((inst) => {\r\n        var _a;\r\n        (_a = inst._zod.bag).multipleOf ?? (_a.multipleOf = def.value);\r\n    });\r\n    inst._zod.check = (payload) => {\r\n        if (typeof payload.value !== typeof def.value)\r\n            throw new Error(\"Cannot mix number and bigint in multiple_of check.\");\r\n        const isMultiple = typeof payload.value === \"bigint\"\r\n            ? payload.value % def.value === BigInt(0)\r\n            : util.floatSafeRemainder(payload.value, def.value) === 0;\r\n        if (isMultiple)\r\n            return;\r\n        payload.issues.push({\r\n            origin: typeof payload.value,\r\n            code: \"not_multiple_of\",\r\n            divisor: def.value,\r\n            input: payload.value,\r\n            inst,\r\n            continue: !def.abort,\r\n        });\r\n    };\r\n});\r\nexport const $ZodCheckNumberFormat = /*@__PURE__*/ core.$constructor(\"$ZodCheckNumberFormat\", (inst, def) => {\r\n    $ZodCheck.init(inst, def); // no format checks\r\n    def.format = def.format || \"float64\";\r\n    const isInt = def.format?.includes(\"int\");\r\n    const origin = isInt ? \"int\" : \"number\";\r\n    const [minimum, maximum] = util.NUMBER_FORMAT_RANGES[def.format];\r\n    inst._zod.onattach.push((inst) => {\r\n        const bag = inst._zod.bag;\r\n        bag.format = def.format;\r\n        bag.minimum = minimum;\r\n        bag.maximum = maximum;\r\n        if (isInt)\r\n            bag.pattern = regexes.integer;\r\n    });\r\n    inst._zod.check = (payload) => {\r\n        const input = payload.value;\r\n        if (isInt) {\r\n            if (!Number.isInteger(input)) {\r\n                // invalid_format issue\r\n                // payload.issues.push({\r\n                //   expected: def.format,\r\n                //   format: def.format,\r\n                //   code: \"invalid_format\",\r\n                //   input,\r\n                //   inst,\r\n                // });\r\n                // invalid_type issue\r\n                payload.issues.push({\r\n                    expected: origin,\r\n                    format: def.format,\r\n                    code: \"invalid_type\",\r\n                    continue: false,\r\n                    input,\r\n                    inst,\r\n                });\r\n                return;\r\n                // not_multiple_of issue\r\n                // payload.issues.push({\r\n                //   code: \"not_multiple_of\",\r\n                //   origin: \"number\",\r\n                //   input,\r\n                //   inst,\r\n                //   divisor: 1,\r\n                // });\r\n            }\r\n            if (!Number.isSafeInteger(input)) {\r\n                if (input > 0) {\r\n                    // too_big\r\n                    payload.issues.push({\r\n                        input,\r\n                        code: \"too_big\",\r\n                        maximum: Number.MAX_SAFE_INTEGER,\r\n                        note: \"Integers must be within the safe integer range.\",\r\n                        inst,\r\n                        origin,\r\n                        continue: !def.abort,\r\n                    });\r\n                }\r\n                else {\r\n                    // too_small\r\n                    payload.issues.push({\r\n                        input,\r\n                        code: \"too_small\",\r\n                        minimum: Number.MIN_SAFE_INTEGER,\r\n                        note: \"Integers must be within the safe integer range.\",\r\n                        inst,\r\n                        origin,\r\n                        continue: !def.abort,\r\n                    });\r\n                }\r\n                return;\r\n            }\r\n        }\r\n        if (input < minimum) {\r\n            payload.issues.push({\r\n                origin: \"number\",\r\n                input,\r\n                code: \"too_small\",\r\n                minimum,\r\n                inclusive: true,\r\n                inst,\r\n                continue: !def.abort,\r\n            });\r\n        }\r\n        if (input > maximum) {\r\n            payload.issues.push({\r\n                origin: \"number\",\r\n                input,\r\n                code: \"too_big\",\r\n                maximum,\r\n                inst,\r\n            });\r\n        }\r\n    };\r\n});\r\nexport const $ZodCheckBigIntFormat = /*@__PURE__*/ core.$constructor(\"$ZodCheckBigIntFormat\", (inst, def) => {\r\n    $ZodCheck.init(inst, def); // no format checks\r\n    const [minimum, maximum] = util.BIGINT_FORMAT_RANGES[def.format];\r\n    inst._zod.onattach.push((inst) => {\r\n        const bag = inst._zod.bag;\r\n        bag.format = def.format;\r\n        bag.minimum = minimum;\r\n        bag.maximum = maximum;\r\n    });\r\n    inst._zod.check = (payload) => {\r\n        const input = payload.value;\r\n        if (input < minimum) {\r\n            payload.issues.push({\r\n                origin: \"bigint\",\r\n                input,\r\n                code: \"too_small\",\r\n                minimum: minimum,\r\n                inclusive: true,\r\n                inst,\r\n                continue: !def.abort,\r\n            });\r\n        }\r\n        if (input > maximum) {\r\n            payload.issues.push({\r\n                origin: \"bigint\",\r\n                input,\r\n                code: \"too_big\",\r\n                maximum,\r\n                inst,\r\n            });\r\n        }\r\n    };\r\n});\r\nexport const $ZodCheckMaxSize = /*@__PURE__*/ core.$constructor(\"$ZodCheckMaxSize\", (inst, def) => {\r\n    var _a;\r\n    $ZodCheck.init(inst, def);\r\n    (_a = inst._zod.def).when ?? (_a.when = (payload) => {\r\n        const val = payload.value;\r\n        return !util.nullish(val) && val.size !== undefined;\r\n    });\r\n    inst._zod.onattach.push((inst) => {\r\n        const curr = (inst._zod.bag.maximum ?? Number.POSITIVE_INFINITY);\r\n        if (def.maximum < curr)\r\n            inst._zod.bag.maximum = def.maximum;\r\n    });\r\n    inst._zod.check = (payload) => {\r\n        const input = payload.value;\r\n        const size = input.size;\r\n        if (size <= def.maximum)\r\n            return;\r\n        payload.issues.push({\r\n            origin: util.getSizableOrigin(input),\r\n            code: \"too_big\",\r\n            maximum: def.maximum,\r\n            inclusive: true,\r\n            input,\r\n            inst,\r\n            continue: !def.abort,\r\n        });\r\n    };\r\n});\r\nexport const $ZodCheckMinSize = /*@__PURE__*/ core.$constructor(\"$ZodCheckMinSize\", (inst, def) => {\r\n    var _a;\r\n    $ZodCheck.init(inst, def);\r\n    (_a = inst._zod.def).when ?? (_a.when = (payload) => {\r\n        const val = payload.value;\r\n        return !util.nullish(val) && val.size !== undefined;\r\n    });\r\n    inst._zod.onattach.push((inst) => {\r\n        const curr = (inst._zod.bag.minimum ?? Number.NEGATIVE_INFINITY);\r\n        if (def.minimum > curr)\r\n            inst._zod.bag.minimum = def.minimum;\r\n    });\r\n    inst._zod.check = (payload) => {\r\n        const input = payload.value;\r\n        const size = input.size;\r\n        if (size >= def.minimum)\r\n            return;\r\n        payload.issues.push({\r\n            origin: util.getSizableOrigin(input),\r\n            code: \"too_small\",\r\n            minimum: def.minimum,\r\n            inclusive: true,\r\n            input,\r\n            inst,\r\n            continue: !def.abort,\r\n        });\r\n    };\r\n});\r\nexport const $ZodCheckSizeEquals = /*@__PURE__*/ core.$constructor(\"$ZodCheckSizeEquals\", (inst, def) => {\r\n    var _a;\r\n    $ZodCheck.init(inst, def);\r\n    (_a = inst._zod.def).when ?? (_a.when = (payload) => {\r\n        const val = payload.value;\r\n        return !util.nullish(val) && val.size !== undefined;\r\n    });\r\n    inst._zod.onattach.push((inst) => {\r\n        const bag = inst._zod.bag;\r\n        bag.minimum = def.size;\r\n        bag.maximum = def.size;\r\n        bag.size = def.size;\r\n    });\r\n    inst._zod.check = (payload) => {\r\n        const input = payload.value;\r\n        const size = input.size;\r\n        if (size === def.size)\r\n            return;\r\n        const tooBig = size > def.size;\r\n        payload.issues.push({\r\n            origin: util.getSizableOrigin(input),\r\n            ...(tooBig ? { code: \"too_big\", maximum: def.size } : { code: \"too_small\", minimum: def.size }),\r\n            inclusive: true,\r\n            exact: true,\r\n            input: payload.value,\r\n            inst,\r\n            continue: !def.abort,\r\n        });\r\n    };\r\n});\r\nexport const $ZodCheckMaxLength = /*@__PURE__*/ core.$constructor(\"$ZodCheckMaxLength\", (inst, def) => {\r\n    var _a;\r\n    $ZodCheck.init(inst, def);\r\n    (_a = inst._zod.def).when ?? (_a.when = (payload) => {\r\n        const val = payload.value;\r\n        return !util.nullish(val) && val.length !== undefined;\r\n    });\r\n    inst._zod.onattach.push((inst) => {\r\n        const curr = (inst._zod.bag.maximum ?? Number.POSITIVE_INFINITY);\r\n        if (def.maximum < curr)\r\n            inst._zod.bag.maximum = def.maximum;\r\n    });\r\n    inst._zod.check = (payload) => {\r\n        const input = payload.value;\r\n        const length = input.length;\r\n        if (length <= def.maximum)\r\n            return;\r\n        const origin = util.getLengthableOrigin(input);\r\n        payload.issues.push({\r\n            origin,\r\n            code: \"too_big\",\r\n            maximum: def.maximum,\r\n            inclusive: true,\r\n            input,\r\n            inst,\r\n            continue: !def.abort,\r\n        });\r\n    };\r\n});\r\nexport const $ZodCheckMinLength = /*@__PURE__*/ core.$constructor(\"$ZodCheckMinLength\", (inst, def) => {\r\n    var _a;\r\n    $ZodCheck.init(inst, def);\r\n    (_a = inst._zod.def).when ?? (_a.when = (payload) => {\r\n        const val = payload.value;\r\n        return !util.nullish(val) && val.length !== undefined;\r\n    });\r\n    inst._zod.onattach.push((inst) => {\r\n        const curr = (inst._zod.bag.minimum ?? Number.NEGATIVE_INFINITY);\r\n        if (def.minimum > curr)\r\n            inst._zod.bag.minimum = def.minimum;\r\n    });\r\n    inst._zod.check = (payload) => {\r\n        const input = payload.value;\r\n        const length = input.length;\r\n        if (length >= def.minimum)\r\n            return;\r\n        const origin = util.getLengthableOrigin(input);\r\n        payload.issues.push({\r\n            origin,\r\n            code: \"too_small\",\r\n            minimum: def.minimum,\r\n            inclusive: true,\r\n            input,\r\n            inst,\r\n            continue: !def.abort,\r\n        });\r\n    };\r\n});\r\nexport const $ZodCheckLengthEquals = /*@__PURE__*/ core.$constructor(\"$ZodCheckLengthEquals\", (inst, def) => {\r\n    var _a;\r\n    $ZodCheck.init(inst, def);\r\n    (_a = inst._zod.def).when ?? (_a.when = (payload) => {\r\n        const val = payload.value;\r\n        return !util.nullish(val) && val.length !== undefined;\r\n    });\r\n    inst._zod.onattach.push((inst) => {\r\n        const bag = inst._zod.bag;\r\n        bag.minimum = def.length;\r\n        bag.maximum = def.length;\r\n        bag.length = def.length;\r\n    });\r\n    inst._zod.check = (payload) => {\r\n        const input = payload.value;\r\n        const length = input.length;\r\n        if (length === def.length)\r\n            return;\r\n        const origin = util.getLengthableOrigin(input);\r\n        const tooBig = length > def.length;\r\n        payload.issues.push({\r\n            origin,\r\n            ...(tooBig ? { code: \"too_big\", maximum: def.length } : { code: \"too_small\", minimum: def.length }),\r\n            inclusive: true,\r\n            exact: true,\r\n            input: payload.value,\r\n            inst,\r\n            continue: !def.abort,\r\n        });\r\n    };\r\n});\r\nexport const $ZodCheckStringFormat = /*@__PURE__*/ core.$constructor(\"$ZodCheckStringFormat\", (inst, def) => {\r\n    var _a, _b;\r\n    $ZodCheck.init(inst, def);\r\n    inst._zod.onattach.push((inst) => {\r\n        const bag = inst._zod.bag;\r\n        bag.format = def.format;\r\n        if (def.pattern) {\r\n            bag.patterns ?? (bag.patterns = new Set());\r\n            bag.patterns.add(def.pattern);\r\n        }\r\n    });\r\n    if (def.pattern)\r\n        (_a = inst._zod).check ?? (_a.check = (payload) => {\r\n            def.pattern.lastIndex = 0;\r\n            if (def.pattern.test(payload.value))\r\n                return;\r\n            payload.issues.push({\r\n                origin: \"string\",\r\n                code: \"invalid_format\",\r\n                format: def.format,\r\n                input: payload.value,\r\n                ...(def.pattern ? { pattern: def.pattern.toString() } : {}),\r\n                inst,\r\n                continue: !def.abort,\r\n            });\r\n        });\r\n    else\r\n        (_b = inst._zod).check ?? (_b.check = () => { });\r\n});\r\nexport const $ZodCheckRegex = /*@__PURE__*/ core.$constructor(\"$ZodCheckRegex\", (inst, def) => {\r\n    $ZodCheckStringFormat.init(inst, def);\r\n    inst._zod.check = (payload) => {\r\n        def.pattern.lastIndex = 0;\r\n        if (def.pattern.test(payload.value))\r\n            return;\r\n        payload.issues.push({\r\n            origin: \"string\",\r\n            code: \"invalid_format\",\r\n            format: \"regex\",\r\n            input: payload.value,\r\n            pattern: def.pattern.toString(),\r\n            inst,\r\n            continue: !def.abort,\r\n        });\r\n    };\r\n});\r\nexport const $ZodCheckLowerCase = /*@__PURE__*/ core.$constructor(\"$ZodCheckLowerCase\", (inst, def) => {\r\n    def.pattern ?? (def.pattern = regexes.lowercase);\r\n    $ZodCheckStringFormat.init(inst, def);\r\n});\r\nexport const $ZodCheckUpperCase = /*@__PURE__*/ core.$constructor(\"$ZodCheckUpperCase\", (inst, def) => {\r\n    def.pattern ?? (def.pattern = regexes.uppercase);\r\n    $ZodCheckStringFormat.init(inst, def);\r\n});\r\nexport const $ZodCheckIncludes = /*@__PURE__*/ core.$constructor(\"$ZodCheckIncludes\", (inst, def) => {\r\n    $ZodCheck.init(inst, def);\r\n    const escapedRegex = util.escapeRegex(def.includes);\r\n    const pattern = new RegExp(typeof def.position === \"number\" ? `^.{${def.position}}${escapedRegex}` : escapedRegex);\r\n    def.pattern = pattern;\r\n    inst._zod.onattach.push((inst) => {\r\n        const bag = inst._zod.bag;\r\n        bag.patterns ?? (bag.patterns = new Set());\r\n        bag.patterns.add(pattern);\r\n    });\r\n    inst._zod.check = (payload) => {\r\n        if (payload.value.includes(def.includes, def.position))\r\n            return;\r\n        payload.issues.push({\r\n            origin: \"string\",\r\n            code: \"invalid_format\",\r\n            format: \"includes\",\r\n            includes: def.includes,\r\n            input: payload.value,\r\n            inst,\r\n            continue: !def.abort,\r\n        });\r\n    };\r\n});\r\nexport const $ZodCheckStartsWith = /*@__PURE__*/ core.$constructor(\"$ZodCheckStartsWith\", (inst, def) => {\r\n    $ZodCheck.init(inst, def);\r\n    const pattern = new RegExp(`^${util.escapeRegex(def.prefix)}.*`);\r\n    def.pattern ?? (def.pattern = pattern);\r\n    inst._zod.onattach.push((inst) => {\r\n        const bag = inst._zod.bag;\r\n        bag.patterns ?? (bag.patterns = new Set());\r\n        bag.patterns.add(pattern);\r\n    });\r\n    inst._zod.check = (payload) => {\r\n        if (payload.value.startsWith(def.prefix))\r\n            return;\r\n        payload.issues.push({\r\n            origin: \"string\",\r\n            code: \"invalid_format\",\r\n            format: \"starts_with\",\r\n            prefix: def.prefix,\r\n            input: payload.value,\r\n            inst,\r\n            continue: !def.abort,\r\n        });\r\n    };\r\n});\r\nexport const $ZodCheckEndsWith = /*@__PURE__*/ core.$constructor(\"$ZodCheckEndsWith\", (inst, def) => {\r\n    $ZodCheck.init(inst, def);\r\n    const pattern = new RegExp(`.*${util.escapeRegex(def.suffix)}$`);\r\n    def.pattern ?? (def.pattern = pattern);\r\n    inst._zod.onattach.push((inst) => {\r\n        const bag = inst._zod.bag;\r\n        bag.patterns ?? (bag.patterns = new Set());\r\n        bag.patterns.add(pattern);\r\n    });\r\n    inst._zod.check = (payload) => {\r\n        if (payload.value.endsWith(def.suffix))\r\n            return;\r\n        payload.issues.push({\r\n            origin: \"string\",\r\n            code: \"invalid_format\",\r\n            format: \"ends_with\",\r\n            suffix: def.suffix,\r\n            input: payload.value,\r\n            inst,\r\n            continue: !def.abort,\r\n        });\r\n    };\r\n});\r\n///////////////////////////////////\r\n/////    $ZodCheckProperty    /////\r\n///////////////////////////////////\r\nfunction handleCheckPropertyResult(result, payload, property) {\r\n    if (result.issues.length) {\r\n        payload.issues.push(...util.prefixIssues(property, result.issues));\r\n    }\r\n}\r\nexport const $ZodCheckProperty = /*@__PURE__*/ core.$constructor(\"$ZodCheckProperty\", (inst, def) => {\r\n    $ZodCheck.init(inst, def);\r\n    inst._zod.check = (payload) => {\r\n        const result = def.schema._zod.run({\r\n            value: payload.value[def.property],\r\n            issues: [],\r\n        }, {});\r\n        if (result instanceof Promise) {\r\n            return result.then((result) => handleCheckPropertyResult(result, payload, def.property));\r\n        }\r\n        handleCheckPropertyResult(result, payload, def.property);\r\n        return;\r\n    };\r\n});\r\nexport const $ZodCheckMimeType = /*@__PURE__*/ core.$constructor(\"$ZodCheckMimeType\", (inst, def) => {\r\n    $ZodCheck.init(inst, def);\r\n    const mimeSet = new Set(def.mime);\r\n    inst._zod.onattach.push((inst) => {\r\n        inst._zod.bag.mime = def.mime;\r\n    });\r\n    inst._zod.check = (payload) => {\r\n        if (mimeSet.has(payload.value.type))\r\n            return;\r\n        payload.issues.push({\r\n            code: \"invalid_value\",\r\n            values: def.mime,\r\n            input: payload.value.type,\r\n            inst,\r\n            continue: !def.abort,\r\n        });\r\n    };\r\n});\r\nexport const $ZodCheckOverwrite = /*@__PURE__*/ core.$constructor(\"$ZodCheckOverwrite\", (inst, def) => {\r\n    $ZodCheck.init(inst, def);\r\n    inst._zod.check = (payload) => {\r\n        payload.value = def.tx(payload.value);\r\n    };\r\n});\r\n", "export const cuid = /^[cC][^\\s-]{8,}$/;\r\nexport const cuid2 = /^[0-9a-z]+$/;\r\nexport const ulid = /^[0-9A-HJKMNP-TV-Za-hjkmnp-tv-z]{26}$/;\r\nexport const xid = /^[0-9a-vA-V]{20}$/;\r\nexport const ksuid = /^[A-Za-z0-9]{27}$/;\r\nexport const nanoid = /^[a-zA-Z0-9_-]{21}$/;\r\n/** ISO 8601-1 duration regex. Does not support the 8601-2 extensions like negative durations or fractional/negative components. */\r\nexport const duration = /^P(?:(\\d+W)|(?!.*W)(?=\\d|T\\d)(\\d+Y)?(\\d+M)?(\\d+D)?(T(?=\\d)(\\d+H)?(\\d+M)?(\\d+([.,]\\d+)?S)?)?)$/;\r\n/** Implements ISO 8601-2 extensions like explicit +- prefixes, mixing weeks with other units, and fractional/negative components. */\r\nexport const extendedDuration = /^[-+]?P(?!$)(?:(?:[-+]?\\d+Y)|(?:[-+]?\\d+[.,]\\d+Y$))?(?:(?:[-+]?\\d+M)|(?:[-+]?\\d+[.,]\\d+M$))?(?:(?:[-+]?\\d+W)|(?:[-+]?\\d+[.,]\\d+W$))?(?:(?:[-+]?\\d+D)|(?:[-+]?\\d+[.,]\\d+D$))?(?:T(?=[\\d+-])(?:(?:[-+]?\\d+H)|(?:[-+]?\\d+[.,]\\d+H$))?(?:(?:[-+]?\\d+M)|(?:[-+]?\\d+[.,]\\d+M$))?(?:[-+]?\\d+(?:[.,]\\d+)?S)?)??$/;\r\n/** A regex for any UUID-like identifier: 8-4-4-4-12 hex pattern */\r\nexport const guid = /^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12})$/;\r\n/** Returns a regex for validating an RFC 9562/4122 UUID.\r\n *\r\n * @param version Optionally specify a version 1-8. If no version is specified, all versions are supported. */\r\nexport const uuid = (version) => {\r\n    if (!version)\r\n        return /^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000|ffffffff-ffff-ffff-ffff-ffffffffffff)$/;\r\n    return new RegExp(`^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-${version}[0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12})$`);\r\n};\r\nexport const uuid4 = /*@__PURE__*/ uuid(4);\r\nexport const uuid6 = /*@__PURE__*/ uuid(6);\r\nexport const uuid7 = /*@__PURE__*/ uuid(7);\r\n/** Practical email validation */\r\nexport const email = /^(?!\\.)(?!.*\\.\\.)([A-Za-z0-9_'+\\-\\.]*)[A-Za-z0-9_+-]@([A-Za-z0-9][A-Za-z0-9\\-]*\\.)+[A-Za-z]{2,}$/;\r\n/** Equivalent to the HTML5 input[type=email] validation implemented by browsers. Source: https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/email */\r\nexport const html5Email = /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/;\r\n/** The classic emailregex.com regex for RFC 5322-compliant emails */\r\nexport const rfc5322Email = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n/** A loose regex that allows Unicode characters, enforces length limits, and that's about it. */\r\nexport const unicodeEmail = /^[^\\s@\"]{1,64}@[^\\s@]{1,255}$/u;\r\nexport const idnEmail = unicodeEmail;\r\nexport const browserEmail = /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/;\r\n// from https://thekevinscott.com/emojis-in-javascript/#writing-a-regular-expression\r\nconst _emoji = `^(\\\\p{Extended_Pictographic}|\\\\p{Emoji_Component})+$`;\r\nexport function emoji() {\r\n    return new RegExp(_emoji, \"u\");\r\n}\r\nexport const ipv4 = /^(?:(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\\.){3}(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])$/;\r\nexport const ipv6 = /^(([0-9a-fA-F]{1,4}:){7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:))$/;\r\nexport const cidrv4 = /^((25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\\.){3}(25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\\/([0-9]|[1-2][0-9]|3[0-2])$/;\r\nexport const cidrv6 = /^(([0-9a-fA-F]{1,4}:){7}[0-9a-fA-F]{1,4}|::|([0-9a-fA-F]{1,4})?::([0-9a-fA-F]{1,4}:?){0,6})\\/(12[0-8]|1[01][0-9]|[1-9]?[0-9])$/;\r\n// https://stackoverflow.com/questions/7860392/determine-if-string-is-in-base64-using-javascript\r\nexport const base64 = /^$|^(?:[0-9a-zA-Z+/]{4})*(?:(?:[0-9a-zA-Z+/]{2}==)|(?:[0-9a-zA-Z+/]{3}=))?$/;\r\nexport const base64url = /^[A-Za-z0-9_-]*$/;\r\n// based on https://stackoverflow.com/questions/106179/regular-expression-to-match-dns-hostname-or-ip-address\r\n// export const hostname: RegExp = /^([a-zA-Z0-9-]+\\.)*[a-zA-Z0-9-]+$/;\r\nexport const hostname = /^(?=.{1,253}\\.?$)[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[-0-9a-zA-Z]{0,61}[0-9a-zA-Z])?)*\\.?$/;\r\nexport const domain = /^([a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?\\.)+[a-zA-Z]{2,}$/;\r\n// https://blog.stevenlevithan.com/archives/validate-phone-number#r4-3 (regex sans spaces)\r\nexport const e164 = /^\\+(?:[0-9]){6,14}[0-9]$/;\r\n// const dateSource = `((\\\\d\\\\d[2468][048]|\\\\d\\\\d[13579][26]|\\\\d\\\\d0[48]|[02468][048]00|[13579][26]00)-02-29|\\\\d{4}-((0[13578]|1[02])-(0[1-9]|[12]\\\\d|3[01])|(0[469]|11)-(0[1-9]|[12]\\\\d|30)|(02)-(0[1-9]|1\\\\d|2[0-8])))`;\r\nconst dateSource = `(?:(?:\\\\d\\\\d[2468][048]|\\\\d\\\\d[13579][26]|\\\\d\\\\d0[48]|[02468][048]00|[13579][26]00)-02-29|\\\\d{4}-(?:(?:0[13578]|1[02])-(?:0[1-9]|[12]\\\\d|3[01])|(?:0[469]|11)-(?:0[1-9]|[12]\\\\d|30)|(?:02)-(?:0[1-9]|1\\\\d|2[0-8])))`;\r\nexport const date = /*@__PURE__*/ new RegExp(`^${dateSource}$`);\r\nfunction timeSource(args) {\r\n    const hhmm = `(?:[01]\\\\d|2[0-3]):[0-5]\\\\d`;\r\n    const regex = typeof args.precision === \"number\"\r\n        ? args.precision === -1\r\n            ? `${hhmm}`\r\n            : args.precision === 0\r\n                ? `${hhmm}:[0-5]\\\\d`\r\n                : `${hhmm}:[0-5]\\\\d\\\\.\\\\d{${args.precision}}`\r\n        : `${hhmm}(?::[0-5]\\\\d(?:\\\\.\\\\d+)?)?`;\r\n    return regex;\r\n}\r\nexport function time(args) {\r\n    return new RegExp(`^${timeSource(args)}$`);\r\n}\r\n// Adapted from https://stackoverflow.com/a/3143231\r\nexport function datetime(args) {\r\n    const time = timeSource({ precision: args.precision });\r\n    const opts = [\"Z\"];\r\n    if (args.local)\r\n        opts.push(\"\");\r\n    // if (args.offset) opts.push(`([+-]\\\\d{2}:\\\\d{2})`);\r\n    if (args.offset)\r\n        opts.push(`([+-](?:[01]\\\\d|2[0-3]):[0-5]\\\\d)`);\r\n    const timeRegex = `${time}(?:${opts.join(\"|\")})`;\r\n    return new RegExp(`^${dateSource}T(?:${timeRegex})$`);\r\n}\r\nexport const string = (params) => {\r\n    const regex = params ? `[\\\\s\\\\S]{${params?.minimum ?? 0},${params?.maximum ?? \"\"}}` : `[\\\\s\\\\S]*`;\r\n    return new RegExp(`^${regex}$`);\r\n};\r\nexport const bigint = /^-?\\d+n?$/;\r\nexport const integer = /^-?\\d+$/;\r\nexport const number = /^-?\\d+(?:\\.\\d+)?/;\r\nexport const boolean = /^(?:true|false)$/i;\r\nconst _null = /^null$/i;\r\nexport { _null as null };\r\nconst _undefined = /^undefined$/i;\r\nexport { _undefined as undefined };\r\n// regex for string with no uppercase letters\r\nexport const lowercase = /^[^A-Z]*$/;\r\n// regex for string with no lowercase letters\r\nexport const uppercase = /^[^a-z]*$/;\r\n// regex for hexadecimal strings (any length)\r\nexport const hex = /^[0-9a-fA-F]*$/;\r\n// Hash regexes for different algorithms and encodings\r\n// Helper function to create base64 regex with exact length and padding\r\nfunction fixedBase64(bodyLength, padding) {\r\n    return new RegExp(`^[A-Za-z0-9+/]{${bodyLength}}${padding}$`);\r\n}\r\n// Helper function to create base64url regex with exact length (no padding)\r\nfunction fixedBase64url(length) {\r\n    return new RegExp(`^[A-Za-z0-9_-]{${length}}$`);\r\n}\r\n// MD5 (16 bytes): base64 = 24 chars total (22 + \"==\")\r\nexport const md5_hex = /^[0-9a-fA-F]{32}$/;\r\nexport const md5_base64 = /*@__PURE__*/ fixedBase64(22, \"==\");\r\nexport const md5_base64url = /*@__PURE__*/ fixedBase64url(22);\r\n// SHA1 (20 bytes): base64 = 28 chars total (27 + \"=\")\r\nexport const sha1_hex = /^[0-9a-fA-F]{40}$/;\r\nexport const sha1_base64 = /*@__PURE__*/ fixedBase64(27, \"=\");\r\nexport const sha1_base64url = /*@__PURE__*/ fixedBase64url(27);\r\n// SHA256 (32 bytes): base64 = 44 chars total (43 + \"=\")\r\nexport const sha256_hex = /^[0-9a-fA-F]{64}$/;\r\nexport const sha256_base64 = /*@__PURE__*/ fixedBase64(43, \"=\");\r\nexport const sha256_base64url = /*@__PURE__*/ fixedBase64url(43);\r\n// SHA384 (48 bytes): base64 = 64 chars total (no padding)\r\nexport const sha384_hex = /^[0-9a-fA-F]{96}$/;\r\nexport const sha384_base64 = /*@__PURE__*/ fixedBase64(64, \"\");\r\nexport const sha384_base64url = /*@__PURE__*/ fixedBase64url(64);\r\n// SHA512 (64 bytes): base64 = 88 chars total (86 + \"==\")\r\nexport const sha512_hex = /^[0-9a-fA-F]{128}$/;\r\nexport const sha512_base64 = /*@__PURE__*/ fixedBase64(86, \"==\");\r\nexport const sha512_base64url = /*@__PURE__*/ fixedBase64url(86);\r\n", "export class Doc {\r\n    constructor(args = []) {\r\n        this.content = [];\r\n        this.indent = 0;\r\n        if (this)\r\n            this.args = args;\r\n    }\r\n    indented(fn) {\r\n        this.indent += 1;\r\n        fn(this);\r\n        this.indent -= 1;\r\n    }\r\n    write(arg) {\r\n        if (typeof arg === \"function\") {\r\n            arg(this, { execution: \"sync\" });\r\n            arg(this, { execution: \"async\" });\r\n            return;\r\n        }\r\n        const content = arg;\r\n        const lines = content.split(\"\\n\").filter((x) => x);\r\n        const minIndent = Math.min(...lines.map((x) => x.length - x.trimStart().length));\r\n        const dedented = lines.map((x) => x.slice(minIndent)).map((x) => \" \".repeat(this.indent * 2) + x);\r\n        for (const line of dedented) {\r\n            this.content.push(line);\r\n        }\r\n    }\r\n    compile() {\r\n        const F = Function;\r\n        const args = this?.args;\r\n        const content = this?.content ?? [``];\r\n        const lines = [...content.map((x) => `  ${x}`)];\r\n        // console.log(lines.join(\"\\n\"));\r\n        return new F(...args, lines.join(\"\\n\"));\r\n    }\r\n}\r\n", "export const version = {\r\n    major: 4,\r\n    minor: 1,\r\n    patch: 11,\r\n};\r\n", "export { default as ar } from \"./ar.js\";\r\nexport { default as az } from \"./az.js\";\r\nexport { default as be } from \"./be.js\";\r\nexport { default as ca } from \"./ca.js\";\r\nexport { default as cs } from \"./cs.js\";\r\nexport { default as da } from \"./da.js\";\r\nexport { default as de } from \"./de.js\";\r\nexport { default as en } from \"./en.js\";\r\nexport { default as eo } from \"./eo.js\";\r\nexport { default as es } from \"./es.js\";\r\nexport { default as fa } from \"./fa.js\";\r\nexport { default as fi } from \"./fi.js\";\r\nexport { default as fr } from \"./fr.js\";\r\nexport { default as frCA } from \"./fr-CA.js\";\r\nexport { default as he } from \"./he.js\";\r\nexport { default as hu } from \"./hu.js\";\r\nexport { default as id } from \"./id.js\";\r\nexport { default as is } from \"./is.js\";\r\nexport { default as it } from \"./it.js\";\r\nexport { default as ja } from \"./ja.js\";\r\nexport { default as ka } from \"./ka.js\";\r\nexport { default as kh } from \"./kh.js\";\r\nexport { default as km } from \"./km.js\";\r\nexport { default as ko } from \"./ko.js\";\r\nexport { default as lt } from \"./lt.js\";\r\nexport { default as mk } from \"./mk.js\";\r\nexport { default as ms } from \"./ms.js\";\r\nexport { default as nl } from \"./nl.js\";\r\nexport { default as no } from \"./no.js\";\r\nexport { default as ota } from \"./ota.js\";\r\nexport { default as ps } from \"./ps.js\";\r\nexport { default as pl } from \"./pl.js\";\r\nexport { default as pt } from \"./pt.js\";\r\nexport { default as ru } from \"./ru.js\";\r\nexport { default as sl } from \"./sl.js\";\r\nexport { default as sv } from \"./sv.js\";\r\nexport { default as ta } from \"./ta.js\";\r\nexport { default as th } from \"./th.js\";\r\nexport { default as tr } from \"./tr.js\";\r\nexport { default as ua } from \"./ua.js\";\r\nexport { default as uk } from \"./uk.js\";\r\nexport { default as ur } from \"./ur.js\";\r\nexport { default as vi } from \"./vi.js\";\r\nexport { default as zhCN } from \"./zh-CN.js\";\r\nexport { default as zhTW } from \"./zh-TW.js\";\r\nexport { default as yo } from \"./yo.js\";\r\n", "import * as util from \"../core/util.js\";\r\nconst error = () => {\r\n    const Sizable = {\r\n        string: { unit: \"\u062D\u0631\u0641\", verb: \"\u0623\u0646 \u064A\u062D\u0648\u064A\" },\r\n        file: { unit: \"\u0628\u0627\u064A\u062A\", verb: \"\u0623\u0646 \u064A\u062D\u0648\u064A\" },\r\n        array: { unit: \"\u0639\u0646\u0635\u0631\", verb: \"\u0623\u0646 \u064A\u062D\u0648\u064A\" },\r\n        set: { unit: \"\u0639\u0646\u0635\u0631\", verb: \"\u0623\u0646 \u064A\u062D\u0648\u064A\" },\r\n    };\r\n    function getSizing(origin) {\r\n        return Sizable[origin] ?? null;\r\n    }\r\n    const parsedType = (data) => {\r\n        const t = typeof data;\r\n        switch (t) {\r\n            case \"number\": {\r\n                return Number.isNaN(data) ? \"NaN\" : \"number\";\r\n            }\r\n            case \"object\": {\r\n                if (Array.isArray(data)) {\r\n                    return \"array\";\r\n                }\r\n                if (data === null) {\r\n                    return \"null\";\r\n                }\r\n                if (Object.getPrototypeOf(data) !== Object.prototype && data.constructor) {\r\n                    return data.constructor.name;\r\n                }\r\n            }\r\n        }\r\n        return t;\r\n    };\r\n    const Nouns = {\r\n        regex: \"\u0645\u062F\u062E\u0644\",\r\n        email: \"\u0628\u0631\u064A\u062F \u0625\u0644\u0643\u062A\u0631\u0648\u0646\u064A\",\r\n        url: \"\u0631\u0627\u0628\u0637\",\r\n        emoji: \"\u0625\u064A\u0645\u0648\u062C\u064A\",\r\n        uuid: \"UUID\",\r\n        uuidv4: \"UUIDv4\",\r\n        uuidv6: \"UUIDv6\",\r\n        nanoid: \"nanoid\",\r\n        guid: \"GUID\",\r\n        cuid: \"cuid\",\r\n        cuid2: \"cuid2\",\r\n        ulid: \"ULID\",\r\n        xid: \"XID\",\r\n        ksuid: \"KSUID\",\r\n        datetime: \"\u062A\u0627\u0631\u064A\u062E \u0648\u0648\u0642\u062A \u0628\u0645\u0639\u064A\u0627\u0631 ISO\",\r\n        date: \"\u062A\u0627\u0631\u064A\u062E \u0628\u0645\u0639\u064A\u0627\u0631 ISO\",\r\n        time: \"\u0648\u0642\u062A \u0628\u0645\u0639\u064A\u0627\u0631 ISO\",\r\n        duration: \"\u0645\u062F\u0629 \u0628\u0645\u0639\u064A\u0627\u0631 ISO\",\r\n        ipv4: \"\u0639\u0646\u0648\u0627\u0646 IPv4\",\r\n        ipv6: \"\u0639\u0646\u0648\u0627\u0646 IPv6\",\r\n        cidrv4: \"\u0645\u062F\u0649 \u0639\u0646\u0627\u0648\u064A\u0646 \u0628\u0635\u064A\u063A\u0629 IPv4\",\r\n        cidrv6: \"\u0645\u062F\u0649 \u0639\u0646\u0627\u0648\u064A\u0646 \u0628\u0635\u064A\u063A\u0629 IPv6\",\r\n        base64: \"\u0646\u064E\u0635 \u0628\u062A\u0631\u0645\u064A\u0632 base64-encoded\",\r\n        base64url: \"\u0646\u064E\u0635 \u0628\u062A\u0631\u0645\u064A\u0632 base64url-encoded\",\r\n        json_string: \"\u0646\u064E\u0635 \u0639\u0644\u0649 \u0647\u064A\u0626\u0629 JSON\",\r\n        e164: \"\u0631\u0642\u0645 \u0647\u0627\u062A\u0641 \u0628\u0645\u0639\u064A\u0627\u0631 E.164\",\r\n        jwt: \"JWT\",\r\n        template_literal: \"\u0645\u062F\u062E\u0644\",\r\n    };\r\n    return (issue) => {\r\n        switch (issue.code) {\r\n            case \"invalid_type\":\r\n                return `\u0645\u062F\u062E\u0644\u0627\u062A \u063A\u064A\u0631 \u0645\u0642\u0628\u0648\u0644\u0629: \u064A\u0641\u062A\u0631\u0636 \u0625\u062F\u062E\u0627\u0644 ${issue.expected}\u060C \u0648\u0644\u0643\u0646 \u062A\u0645 \u0625\u062F\u062E\u0627\u0644 ${parsedType(issue.input)}`;\r\n            case \"invalid_value\":\r\n                if (issue.values.length === 1)\r\n                    return `\u0645\u062F\u062E\u0644\u0627\u062A \u063A\u064A\u0631 \u0645\u0642\u0628\u0648\u0644\u0629: \u064A\u0641\u062A\u0631\u0636 \u0625\u062F\u062E\u0627\u0644 ${util.stringifyPrimitive(issue.values[0])}`;\r\n                return `\u0627\u062E\u062A\u064A\u0627\u0631 \u063A\u064A\u0631 \u0645\u0642\u0628\u0648\u0644: \u064A\u062A\u0648\u0642\u0639 \u0627\u0646\u062A\u0642\u0627\u0621 \u0623\u062D\u062F \u0647\u0630\u0647 \u0627\u0644\u062E\u064A\u0627\u0631\u0627\u062A: ${util.joinValues(issue.values, \"|\")}`;\r\n            case \"too_big\": {\r\n                const adj = issue.inclusive ? \"<=\" : \"<\";\r\n                const sizing = getSizing(issue.origin);\r\n                if (sizing)\r\n                    return ` \u0623\u0643\u0628\u0631 \u0645\u0646 \u0627\u0644\u0644\u0627\u0632\u0645: \u064A\u0641\u062A\u0631\u0636 \u0623\u0646 \u062A\u0643\u0648\u0646 ${issue.origin ?? \"\u0627\u0644\u0642\u064A\u0645\u0629\"} ${adj} ${issue.maximum.toString()} ${sizing.unit ?? \"\u0639\u0646\u0635\u0631\"}`;\r\n                return `\u0623\u0643\u0628\u0631 \u0645\u0646 \u0627\u0644\u0644\u0627\u0632\u0645: \u064A\u0641\u062A\u0631\u0636 \u0623\u0646 \u062A\u0643\u0648\u0646 ${issue.origin ?? \"\u0627\u0644\u0642\u064A\u0645\u0629\"} ${adj} ${issue.maximum.toString()}`;\r\n            }\r\n            case \"too_small\": {\r\n                const adj = issue.inclusive ? \">=\" : \">\";\r\n                const sizing = getSizing(issue.origin);\r\n                if (sizing) {\r\n                    return `\u0623\u0635\u063A\u0631 \u0645\u0646 \u0627\u0644\u0644\u0627\u0632\u0645: \u064A\u0641\u062A\u0631\u0636 \u0644\u0640 ${issue.origin} \u0623\u0646 \u064A\u0643\u0648\u0646 ${adj} ${issue.minimum.toString()} ${sizing.unit}`;\r\n                }\r\n                return `\u0623\u0635\u063A\u0631 \u0645\u0646 \u0627\u0644\u0644\u0627\u0632\u0645: \u064A\u0641\u062A\u0631\u0636 \u0644\u0640 ${issue.origin} \u0623\u0646 \u064A\u0643\u0648\u0646 ${adj} ${issue.minimum.toString()}`;\r\n            }\r\n            case \"invalid_format\": {\r\n                const _issue = issue;\r\n                if (_issue.format === \"starts_with\")\r\n                    return `\u0646\u064E\u0635 \u063A\u064A\u0631 \u0645\u0642\u0628\u0648\u0644: \u064A\u062C\u0628 \u0623\u0646 \u064A\u0628\u062F\u0623 \u0628\u0640 \"${issue.prefix}\"`;\r\n                if (_issue.format === \"ends_with\")\r\n                    return `\u0646\u064E\u0635 \u063A\u064A\u0631 \u0645\u0642\u0628\u0648\u0644: \u064A\u062C\u0628 \u0623\u0646 \u064A\u0646\u062A\u0647\u064A \u0628\u0640 \"${_issue.suffix}\"`;\r\n                if (_issue.format === \"includes\")\r\n                    return `\u0646\u064E\u0635 \u063A\u064A\u0631 \u0645\u0642\u0628\u0648\u0644: \u064A\u062C\u0628 \u0623\u0646 \u064A\u062A\u0636\u0645\u0651\u064E\u0646 \"${_issue.includes}\"`;\r\n                if (_issue.format === \"regex\")\r\n                    return `\u0646\u064E\u0635 \u063A\u064A\u0631 \u0645\u0642\u0628\u0648\u0644: \u064A\u062C\u0628 \u0623\u0646 \u064A\u0637\u0627\u0628\u0642 \u0627\u0644\u0646\u0645\u0637 ${_issue.pattern}`;\r\n                return `${Nouns[_issue.format] ?? issue.format} \u063A\u064A\u0631 \u0645\u0642\u0628\u0648\u0644`;\r\n            }\r\n            case \"not_multiple_of\":\r\n                return `\u0631\u0642\u0645 \u063A\u064A\u0631 \u0645\u0642\u0628\u0648\u0644: \u064A\u062C\u0628 \u0623\u0646 \u064A\u0643\u0648\u0646 \u0645\u0646 \u0645\u0636\u0627\u0639\u0641\u0627\u062A ${issue.divisor}`;\r\n            case \"unrecognized_keys\":\r\n                return `\u0645\u0639\u0631\u0641${issue.keys.length > 1 ? \"\u0627\u062A\" : \"\"} \u063A\u0631\u064A\u0628${issue.keys.length > 1 ? \"\u0629\" : \"\"}: ${util.joinValues(issue.keys, \"\u060C \")}`;\r\n            case \"invalid_key\":\r\n                return `\u0645\u0639\u0631\u0641 \u063A\u064A\u0631 \u0645\u0642\u0628\u0648\u0644 \u0641\u064A ${issue.origin}`;\r\n            case \"invalid_union\":\r\n                return \"\u0645\u062F\u062E\u0644 \u063A\u064A\u0631 \u0645\u0642\u0628\u0648\u0644\";\r\n            case \"invalid_element\":\r\n                return `\u0645\u062F\u062E\u0644 \u063A\u064A\u0631 \u0645\u0642\u0628\u0648\u0644 \u0641\u064A ${issue.origin}`;\r\n            default:\r\n                return \"\u0645\u062F\u062E\u0644 \u063A\u064A\u0631 \u0645\u0642\u0628\u0648\u0644\";\r\n        }\r\n    };\r\n};\r\nexport default function () {\r\n    return {\r\n        localeError: error(),\r\n    };\r\n}\r\n", "import * as util from \"../core/util.js\";\r\nconst error = () => {\r\n    const Sizable = {\r\n        string: { unit: \"simvol\", verb: \"olmal\u0131d\u0131r\" },\r\n        file: { unit: \"bayt\", verb: \"olmal\u0131d\u0131r\" },\r\n        array: { unit: \"element\", verb: \"olmal\u0131d\u0131r\" },\r\n        set: { unit: \"element\", verb: \"olmal\u0131d\u0131r\" },\r\n    };\r\n    function getSizing(origin) {\r\n        return Sizable[origin] ?? null;\r\n    }\r\n    const parsedType = (data) => {\r\n        const t = typeof data;\r\n        switch (t) {\r\n            case \"number\": {\r\n                return Number.isNaN(data) ? \"NaN\" : \"number\";\r\n            }\r\n            case \"object\": {\r\n                if (Array.isArray(data)) {\r\n                    return \"array\";\r\n                }\r\n                if (data === null) {\r\n                    return \"null\";\r\n                }\r\n                if (Object.getPrototypeOf(data) !== Object.prototype && data.constructor) {\r\n                    return data.constructor.name;\r\n                }\r\n            }\r\n        }\r\n        return t;\r\n    };\r\n    const Nouns = {\r\n        regex: \"input\",\r\n        email: \"email address\",\r\n        url: \"URL\",\r\n        emoji: \"emoji\",\r\n        uuid: \"UUID\",\r\n        uuidv4: \"UUIDv4\",\r\n        uuidv6: \"UUIDv6\",\r\n        nanoid: \"nanoid\",\r\n        guid: \"GUID\",\r\n        cuid: \"cuid\",\r\n        cuid2: \"cuid2\",\r\n        ulid: \"ULID\",\r\n        xid: \"XID\",\r\n        ksuid: \"KSUID\",\r\n        datetime: \"ISO datetime\",\r\n        date: \"ISO date\",\r\n        time: \"ISO time\",\r\n        duration: \"ISO duration\",\r\n        ipv4: \"IPv4 address\",\r\n        ipv6: \"IPv6 address\",\r\n        cidrv4: \"IPv4 range\",\r\n        cidrv6: \"IPv6 range\",\r\n        base64: \"base64-encoded string\",\r\n        base64url: \"base64url-encoded string\",\r\n        json_string: \"JSON string\",\r\n        e164: \"E.164 number\",\r\n        jwt: \"JWT\",\r\n        template_literal: \"input\",\r\n    };\r\n    return (issue) => {\r\n        switch (issue.code) {\r\n            case \"invalid_type\":\r\n                return `Yanl\u0131\u015F d\u0259y\u0259r: g\u00F6zl\u0259nil\u0259n ${issue.expected}, daxil olan ${parsedType(issue.input)}`;\r\n            case \"invalid_value\":\r\n                if (issue.values.length === 1)\r\n                    return `Yanl\u0131\u015F d\u0259y\u0259r: g\u00F6zl\u0259nil\u0259n ${util.stringifyPrimitive(issue.values[0])}`;\r\n                return `Yanl\u0131\u015F se\u00E7im: a\u015Fa\u011F\u0131dak\u0131lardan biri olmal\u0131d\u0131r: ${util.joinValues(issue.values, \"|\")}`;\r\n            case \"too_big\": {\r\n                const adj = issue.inclusive ? \"<=\" : \"<\";\r\n                const sizing = getSizing(issue.origin);\r\n                if (sizing)\r\n                    return `\u00C7ox b\u00F6y\u00FCk: g\u00F6zl\u0259nil\u0259n ${issue.origin ?? \"d\u0259y\u0259r\"} ${adj}${issue.maximum.toString()} ${sizing.unit ?? \"element\"}`;\r\n                return `\u00C7ox b\u00F6y\u00FCk: g\u00F6zl\u0259nil\u0259n ${issue.origin ?? \"d\u0259y\u0259r\"} ${adj}${issue.maximum.toString()}`;\r\n            }\r\n            case \"too_small\": {\r\n                const adj = issue.inclusive ? \">=\" : \">\";\r\n                const sizing = getSizing(issue.origin);\r\n                if (sizing)\r\n                    return `\u00C7ox ki\u00E7ik: g\u00F6zl\u0259nil\u0259n ${issue.origin} ${adj}${issue.minimum.toString()} ${sizing.unit}`;\r\n                return `\u00C7ox ki\u00E7ik: g\u00F6zl\u0259nil\u0259n ${issue.origin} ${adj}${issue.minimum.toString()}`;\r\n            }\r\n            case \"invalid_format\": {\r\n                const _issue = issue;\r\n                if (_issue.format === \"starts_with\")\r\n                    return `Yanl\u0131\u015F m\u0259tn: \"${_issue.prefix}\" il\u0259 ba\u015Flamal\u0131d\u0131r`;\r\n                if (_issue.format === \"ends_with\")\r\n                    return `Yanl\u0131\u015F m\u0259tn: \"${_issue.suffix}\" il\u0259 bitm\u0259lidir`;\r\n                if (_issue.format === \"includes\")\r\n                    return `Yanl\u0131\u015F m\u0259tn: \"${_issue.includes}\" daxil olmal\u0131d\u0131r`;\r\n                if (_issue.format === \"regex\")\r\n                    return `Yanl\u0131\u015F m\u0259tn: ${_issue.pattern} \u015Fablonuna uy\u011Fun olmal\u0131d\u0131r`;\r\n                return `Yanl\u0131\u015F ${Nouns[_issue.format] ?? issue.format}`;\r\n            }\r\n            case \"not_multiple_of\":\r\n                return `Yanl\u0131\u015F \u0259d\u0259d: ${issue.divisor} il\u0259 b\u00F6l\u00FCn\u0259 bil\u0259n olmal\u0131d\u0131r`;\r\n            case \"unrecognized_keys\":\r\n                return `Tan\u0131nmayan a\u00E7ar${issue.keys.length > 1 ? \"lar\" : \"\"}: ${util.joinValues(issue.keys, \", \")}`;\r\n            case \"invalid_key\":\r\n                return `${issue.origin} daxilind\u0259 yanl\u0131\u015F a\u00E7ar`;\r\n            case \"invalid_union\":\r\n                return \"Yanl\u0131\u015F d\u0259y\u0259r\";\r\n            case \"invalid_element\":\r\n                return `${issue.origin} daxilind\u0259 yanl\u0131\u015F d\u0259y\u0259r`;\r\n            default:\r\n                return `Yanl\u0131\u015F d\u0259y\u0259r`;\r\n        }\r\n    };\r\n};\r\nexport default function () {\r\n    return {\r\n        localeError: error(),\r\n    };\r\n}\r\n", "import * as util from \"../core/util.js\";\r\nfunction getBelarusianPlural(count, one, few, many) {\r\n    const absCount = Math.abs(count);\r\n    const lastDigit = absCount % 10;\r\n    const lastTwoDigits = absCount % 100;\r\n    if (lastTwoDigits >= 11 && lastTwoDigits <= 19) {\r\n        return many;\r\n    }\r\n    if (lastDigit === 1) {\r\n        return one;\r\n    }\r\n    if (lastDigit >= 2 && lastDigit <= 4) {\r\n        return few;\r\n    }\r\n    return many;\r\n}\r\nconst error = () => {\r\n    const Sizable = {\r\n        string: {\r\n            unit: {\r\n                one: \"\u0441\u0456\u043C\u0432\u0430\u043B\",\r\n                few: \"\u0441\u0456\u043C\u0432\u0430\u043B\u044B\",\r\n                many: \"\u0441\u0456\u043C\u0432\u0430\u043B\u0430\u045E\",\r\n            },\r\n            verb: \"\u043C\u0435\u0446\u044C\",\r\n        },\r\n        array: {\r\n            unit: {\r\n                one: \"\u044D\u043B\u0435\u043C\u0435\u043D\u0442\",\r\n                few: \"\u044D\u043B\u0435\u043C\u0435\u043D\u0442\u044B\",\r\n                many: \"\u044D\u043B\u0435\u043C\u0435\u043D\u0442\u0430\u045E\",\r\n            },\r\n            verb: \"\u043C\u0435\u0446\u044C\",\r\n        },\r\n        set: {\r\n            unit: {\r\n                one: \"\u044D\u043B\u0435\u043C\u0435\u043D\u0442\",\r\n                few: \"\u044D\u043B\u0435\u043C\u0435\u043D\u0442\u044B\",\r\n                many: \"\u044D\u043B\u0435\u043C\u0435\u043D\u0442\u0430\u045E\",\r\n            },\r\n            verb: \"\u043C\u0435\u0446\u044C\",\r\n        },\r\n        file: {\r\n            unit: {\r\n                one: \"\u0431\u0430\u0439\u0442\",\r\n                few: \"\u0431\u0430\u0439\u0442\u044B\",\r\n                many: \"\u0431\u0430\u0439\u0442\u0430\u045E\",\r\n            },\r\n            verb: \"\u043C\u0435\u0446\u044C\",\r\n        },\r\n    };\r\n    function getSizing(origin) {\r\n        return Sizable[origin] ?? null;\r\n    }\r\n    const parsedType = (data) => {\r\n        const t = typeof data;\r\n        switch (t) {\r\n            case \"number\": {\r\n                return Number.isNaN(data) ? \"NaN\" : \"\u043B\u0456\u043A\";\r\n            }\r\n            case \"object\": {\r\n                if (Array.isArray(data)) {\r\n                    return \"\u043C\u0430\u0441\u0456\u045E\";\r\n                }\r\n                if (data === null) {\r\n                    return \"null\";\r\n                }\r\n                if (Object.getPrototypeOf(data) !== Object.prototype && data.constructor) {\r\n                    return data.constructor.name;\r\n                }\r\n            }\r\n        }\r\n        return t;\r\n    };\r\n    const Nouns = {\r\n        regex: \"\u0443\u0432\u043E\u0434\",\r\n        email: \"email \u0430\u0434\u0440\u0430\u0441\",\r\n        url: \"URL\",\r\n        emoji: \"\u044D\u043C\u043E\u0434\u0437\u0456\",\r\n        uuid: \"UUID\",\r\n        uuidv4: \"UUIDv4\",\r\n        uuidv6: \"UUIDv6\",\r\n        nanoid: \"nanoid\",\r\n        guid: \"GUID\",\r\n        cuid: \"cuid\",\r\n        cuid2: \"cuid2\",\r\n        ulid: \"ULID\",\r\n        xid: \"XID\",\r\n        ksuid: \"KSUID\",\r\n        datetime: \"ISO \u0434\u0430\u0442\u0430 \u0456 \u0447\u0430\u0441\",\r\n        date: \"ISO \u0434\u0430\u0442\u0430\",\r\n        time: \"ISO \u0447\u0430\u0441\",\r\n        duration: \"ISO \u043F\u0440\u0430\u0446\u044F\u0433\u043B\u0430\u0441\u0446\u044C\",\r\n        ipv4: \"IPv4 \u0430\u0434\u0440\u0430\u0441\",\r\n        ipv6: \"IPv6 \u0430\u0434\u0440\u0430\u0441\",\r\n        cidrv4: \"IPv4 \u0434\u044B\u044F\u043F\u0430\u0437\u043E\u043D\",\r\n        cidrv6: \"IPv6 \u0434\u044B\u044F\u043F\u0430\u0437\u043E\u043D\",\r\n        base64: \"\u0440\u0430\u0434\u043E\u043A \u0443 \u0444\u0430\u0440\u043C\u0430\u0446\u0435 base64\",\r\n        base64url: \"\u0440\u0430\u0434\u043E\u043A \u0443 \u0444\u0430\u0440\u043C\u0430\u0446\u0435 base64url\",\r\n        json_string: \"JSON \u0440\u0430\u0434\u043E\u043A\",\r\n        e164: \"\u043D\u0443\u043C\u0430\u0440 E.164\",\r\n        jwt: \"JWT\",\r\n        template_literal: \"\u0443\u0432\u043E\u0434\",\r\n    };\r\n    return (issue) => {\r\n        switch (issue.code) {\r\n            case \"invalid_type\":\r\n                return `\u041D\u044F\u043F\u0440\u0430\u0432\u0456\u043B\u044C\u043D\u044B \u045E\u0432\u043E\u0434: \u0447\u0430\u043A\u0430\u045E\u0441\u044F ${issue.expected}, \u0430\u0442\u0440\u044B\u043C\u0430\u043D\u0430 ${parsedType(issue.input)}`;\r\n            case \"invalid_value\":\r\n                if (issue.values.length === 1)\r\n                    return `\u041D\u044F\u043F\u0440\u0430\u0432\u0456\u043B\u044C\u043D\u044B \u045E\u0432\u043E\u0434: \u0447\u0430\u043A\u0430\u043B\u0430\u0441\u044F ${util.stringifyPrimitive(issue.values[0])}`;\r\n                return `\u041D\u044F\u043F\u0440\u0430\u0432\u0456\u043B\u044C\u043D\u044B \u0432\u0430\u0440\u044B\u044F\u043D\u0442: \u0447\u0430\u043A\u0430\u045E\u0441\u044F \u0430\u0434\u0437\u0456\u043D \u0437 ${util.joinValues(issue.values, \"|\")}`;\r\n            case \"too_big\": {\r\n                const adj = issue.inclusive ? \"<=\" : \"<\";\r\n                const sizing = getSizing(issue.origin);\r\n                if (sizing) {\r\n                    const maxValue = Number(issue.maximum);\r\n                    const unit = getBelarusianPlural(maxValue, sizing.unit.one, sizing.unit.few, sizing.unit.many);\r\n                    return `\u0417\u0430\u043D\u0430\u0434\u0442\u0430 \u0432\u044F\u043B\u0456\u043A\u0456: \u0447\u0430\u043A\u0430\u043B\u0430\u0441\u044F, \u0448\u0442\u043E ${issue.origin ?? \"\u0437\u043D\u0430\u0447\u044D\u043D\u043D\u0435\"} \u043F\u0430\u0432\u0456\u043D\u043D\u0430 ${sizing.verb} ${adj}${issue.maximum.toString()} ${unit}`;\r\n                }\r\n                return `\u0417\u0430\u043D\u0430\u0434\u0442\u0430 \u0432\u044F\u043B\u0456\u043A\u0456: \u0447\u0430\u043A\u0430\u043B\u0430\u0441\u044F, \u0448\u0442\u043E ${issue.origin ?? \"\u0437\u043D\u0430\u0447\u044D\u043D\u043D\u0435\"} \u043F\u0430\u0432\u0456\u043D\u043D\u0430 \u0431\u044B\u0446\u044C ${adj}${issue.maximum.toString()}`;\r\n            }\r\n            case \"too_small\": {\r\n                const adj = issue.inclusive ? \">=\" : \">\";\r\n                const sizing = getSizing(issue.origin);\r\n                if (sizing) {\r\n                    const minValue = Number(issue.minimum);\r\n                    const unit = getBelarusianPlural(minValue, sizing.unit.one, sizing.unit.few, sizing.unit.many);\r\n                    return `\u0417\u0430\u043D\u0430\u0434\u0442\u0430 \u043C\u0430\u043B\u044B: \u0447\u0430\u043A\u0430\u043B\u0430\u0441\u044F, \u0448\u0442\u043E ${issue.origin} \u043F\u0430\u0432\u0456\u043D\u043D\u0430 ${sizing.verb} ${adj}${issue.minimum.toString()} ${unit}`;\r\n                }\r\n                return `\u0417\u0430\u043D\u0430\u0434\u0442\u0430 \u043C\u0430\u043B\u044B: \u0447\u0430\u043A\u0430\u043B\u0430\u0441\u044F, \u0448\u0442\u043E ${issue.origin} \u043F\u0430\u0432\u0456\u043D\u043D\u0430 \u0431\u044B\u0446\u044C ${adj}${issue.minimum.toString()}`;\r\n            }\r\n            case \"invalid_format\": {\r\n                const _issue = issue;\r\n                if (_issue.format === \"starts_with\")\r\n                    return `\u041D\u044F\u043F\u0440\u0430\u0432\u0456\u043B\u044C\u043D\u044B \u0440\u0430\u0434\u043E\u043A: \u043F\u0430\u0432\u0456\u043D\u0435\u043D \u043F\u0430\u0447\u044B\u043D\u0430\u0446\u0446\u0430 \u0437 \"${_issue.prefix}\"`;\r\n                if (_issue.format === \"ends_with\")\r\n                    return `\u041D\u044F\u043F\u0440\u0430\u0432\u0456\u043B\u044C\u043D\u044B \u0440\u0430\u0434\u043E\u043A: \u043F\u0430\u0432\u0456\u043D\u0435\u043D \u0437\u0430\u043A\u0430\u043D\u0447\u0432\u0430\u0446\u0446\u0430 \u043D\u0430 \"${_issue.suffix}\"`;\r\n                if (_issue.format === \"includes\")\r\n                    return `\u041D\u044F\u043F\u0440\u0430\u0432\u0456\u043B\u044C\u043D\u044B \u0440\u0430\u0434\u043E\u043A: \u043F\u0430\u0432\u0456\u043D\u0435\u043D \u0437\u043C\u044F\u0448\u0447\u0430\u0446\u044C \"${_issue.includes}\"`;\r\n                if (_issue.format === \"regex\")\r\n                    return `\u041D\u044F\u043F\u0440\u0430\u0432\u0456\u043B\u044C\u043D\u044B \u0440\u0430\u0434\u043E\u043A: \u043F\u0430\u0432\u0456\u043D\u0435\u043D \u0430\u0434\u043F\u0430\u0432\u044F\u0434\u0430\u0446\u044C \u0448\u0430\u0431\u043B\u043E\u043D\u0443 ${_issue.pattern}`;\r\n                return `\u041D\u044F\u043F\u0440\u0430\u0432\u0456\u043B\u044C\u043D\u044B ${Nouns[_issue.format] ?? issue.format}`;\r\n            }\r\n            case \"not_multiple_of\":\r\n                return `\u041D\u044F\u043F\u0440\u0430\u0432\u0456\u043B\u044C\u043D\u044B \u043B\u0456\u043A: \u043F\u0430\u0432\u0456\u043D\u0435\u043D \u0431\u044B\u0446\u044C \u043A\u0440\u0430\u0442\u043D\u044B\u043C ${issue.divisor}`;\r\n            case \"unrecognized_keys\":\r\n                return `\u041D\u0435\u0440\u0430\u0441\u043F\u0430\u0437\u043D\u0430\u043D\u044B ${issue.keys.length > 1 ? \"\u043A\u043B\u044E\u0447\u044B\" : \"\u043A\u043B\u044E\u0447\"}: ${util.joinValues(issue.keys, \", \")}`;\r\n            case \"invalid_key\":\r\n                return `\u041D\u044F\u043F\u0440\u0430\u0432\u0456\u043B\u044C\u043D\u044B \u043A\u043B\u044E\u0447 \u0443 ${issue.origin}`;\r\n            case \"invalid_union\":\r\n                return \"\u041D\u044F\u043F\u0440\u0430\u0432\u0456\u043B\u044C\u043D\u044B \u045E\u0432\u043E\u0434\";\r\n            case \"invalid_element\":\r\n                return `\u041D\u044F\u043F\u0440\u0430\u0432\u0456\u043B\u044C\u043D\u0430\u0435 \u0437\u043D\u0430\u0447\u044D\u043D\u043D\u0435 \u045E ${issue.origin}`;\r\n            default:\r\n                return `\u041D\u044F\u043F\u0440\u0430\u0432\u0456\u043B\u044C\u043D\u044B \u045E\u0432\u043E\u0434`;\r\n        }\r\n    };\r\n};\r\nexport default function () {\r\n    return {\r\n        localeError: error(),\r\n    };\r\n}\r\n", "import * as util from \"../core/util.js\";\r\nconst error = () => {\r\n    const Sizable = {\r\n        string: { unit: \"car\u00E0cters\", verb: \"contenir\" },\r\n        file: { unit: \"bytes\", verb: \"contenir\" },\r\n        array: { unit: \"elements\", verb: \"contenir\" },\r\n        set: { unit: \"elements\", verb: \"contenir\" },\r\n    };\r\n    function getSizing(origin) {\r\n        return Sizable[origin] ?? null;\r\n    }\r\n    const parsedType = (data) => {\r\n        const t = typeof data;\r\n        switch (t) {\r\n            case \"number\": {\r\n                return Number.isNaN(data) ? \"NaN\" : \"number\";\r\n            }\r\n            case \"object\": {\r\n                if (Array.isArray(data)) {\r\n                    return \"array\";\r\n                }\r\n                if (data === null) {\r\n                    return \"null\";\r\n                }\r\n                if (Object.getPrototypeOf(data) !== Object.prototype && data.constructor) {\r\n                    return data.constructor.name;\r\n                }\r\n            }\r\n        }\r\n        return t;\r\n    };\r\n    const Nouns = {\r\n        regex: \"entrada\",\r\n        email: \"adre\u00E7a electr\u00F2nica\",\r\n        url: \"URL\",\r\n        emoji: \"emoji\",\r\n        uuid: \"UUID\",\r\n        uuidv4: \"UUIDv4\",\r\n        uuidv6: \"UUIDv6\",\r\n        nanoid: \"nanoid\",\r\n        guid: \"GUID\",\r\n        cuid: \"cuid\",\r\n        cuid2: \"cuid2\",\r\n        ulid: \"ULID\",\r\n        xid: \"XID\",\r\n        ksuid: \"KSUID\",\r\n        datetime: \"data i hora ISO\",\r\n        date: \"data ISO\",\r\n        time: \"hora ISO\",\r\n        duration: \"durada ISO\",\r\n        ipv4: \"adre\u00E7a IPv4\",\r\n        ipv6: \"adre\u00E7a IPv6\",\r\n        cidrv4: \"rang IPv4\",\r\n        cidrv6: \"rang IPv6\",\r\n        base64: \"cadena codificada en base64\",\r\n        base64url: \"cadena codificada en base64url\",\r\n        json_string: \"cadena JSON\",\r\n        e164: \"n\u00FAmero E.164\",\r\n        jwt: \"JWT\",\r\n        template_literal: \"entrada\",\r\n    };\r\n    return (issue) => {\r\n        switch (issue.code) {\r\n            case \"invalid_type\":\r\n                return `Tipus inv\u00E0lid: s'esperava ${issue.expected}, s'ha rebut ${parsedType(issue.input)}`;\r\n            // return `Tipus inv\u00E0lid: s'esperava ${issue.expected}, s'ha rebut ${util.getParsedType(issue.input)}`;\r\n            case \"invalid_value\":\r\n                if (issue.values.length === 1)\r\n                    return `Valor inv\u00E0lid: s'esperava ${util.stringifyPrimitive(issue.values[0])}`;\r\n                return `Opci\u00F3 inv\u00E0lida: s'esperava una de ${util.joinValues(issue.values, \" o \")}`;\r\n            case \"too_big\": {\r\n                const adj = issue.inclusive ? \"com a m\u00E0xim\" : \"menys de\";\r\n                const sizing = getSizing(issue.origin);\r\n                if (sizing)\r\n                    return `Massa gran: s'esperava que ${issue.origin ?? \"el valor\"} contingu\u00E9s ${adj} ${issue.maximum.toString()} ${sizing.unit ?? \"elements\"}`;\r\n                return `Massa gran: s'esperava que ${issue.origin ?? \"el valor\"} fos ${adj} ${issue.maximum.toString()}`;\r\n            }\r\n            case \"too_small\": {\r\n                const adj = issue.inclusive ? \"com a m\u00EDnim\" : \"m\u00E9s de\";\r\n                const sizing = getSizing(issue.origin);\r\n                if (sizing) {\r\n                    return `Massa petit: s'esperava que ${issue.origin} contingu\u00E9s ${adj} ${issue.minimum.toString()} ${sizing.unit}`;\r\n                }\r\n                return `Massa petit: s'esperava que ${issue.origin} fos ${adj} ${issue.minimum.toString()}`;\r\n            }\r\n            case \"invalid_format\": {\r\n                const _issue = issue;\r\n                if (_issue.format === \"starts_with\") {\r\n                    return `Format inv\u00E0lid: ha de comen\u00E7ar amb \"${_issue.prefix}\"`;\r\n                }\r\n                if (_issue.format === \"ends_with\")\r\n                    return `Format inv\u00E0lid: ha d'acabar amb \"${_issue.suffix}\"`;\r\n                if (_issue.format === \"includes\")\r\n                    return `Format inv\u00E0lid: ha d'incloure \"${_issue.includes}\"`;\r\n                if (_issue.format === \"regex\")\r\n                    return `Format inv\u00E0lid: ha de coincidir amb el patr\u00F3 ${_issue.pattern}`;\r\n                return `Format inv\u00E0lid per a ${Nouns[_issue.format] ?? issue.format}`;\r\n            }\r\n            case \"not_multiple_of\":\r\n                return `N\u00FAmero inv\u00E0lid: ha de ser m\u00FAltiple de ${issue.divisor}`;\r\n            case \"unrecognized_keys\":\r\n                return `Clau${issue.keys.length > 1 ? \"s\" : \"\"} no reconeguda${issue.keys.length > 1 ? \"s\" : \"\"}: ${util.joinValues(issue.keys, \", \")}`;\r\n            case \"invalid_key\":\r\n                return `Clau inv\u00E0lida a ${issue.origin}`;\r\n            case \"invalid_union\":\r\n                return \"Entrada inv\u00E0lida\"; // Could also be \"Tipus d'uni\u00F3 inv\u00E0lid\" but \"Entrada inv\u00E0lida\" is more general\r\n            case \"invalid_element\":\r\n                return `Element inv\u00E0lid a ${issue.origin}`;\r\n            default:\r\n                return `Entrada inv\u00E0lida`;\r\n        }\r\n    };\r\n};\r\nexport default function () {\r\n    return {\r\n        localeError: error(),\r\n    };\r\n}\r\n", "import * as util from \"../core/util.js\";\r\nconst error = () => {\r\n    const Sizable = {\r\n        string: { unit: \"znak\u016F\", verb: \"m\u00EDt\" },\r\n        file: { unit: \"bajt\u016F\", verb: \"m\u00EDt\" },\r\n        array: { unit: \"prvk\u016F\", verb: \"m\u00EDt\" },\r\n        set: { unit: \"prvk\u016F\", verb: \"m\u00EDt\" },\r\n    };\r\n    function getSizing(origin) {\r\n        return Sizable[origin] ?? null;\r\n    }\r\n    const parsedType = (data) => {\r\n        const t = typeof data;\r\n        switch (t) {\r\n            case \"number\": {\r\n                return Number.isNaN(data) ? \"NaN\" : \"\u010D\u00EDslo\";\r\n            }\r\n            case \"string\": {\r\n                return \"\u0159et\u011Bzec\";\r\n            }\r\n            case \"boolean\": {\r\n                return \"boolean\";\r\n            }\r\n            case \"bigint\": {\r\n                return \"bigint\";\r\n            }\r\n            case \"function\": {\r\n                return \"funkce\";\r\n            }\r\n            case \"symbol\": {\r\n                return \"symbol\";\r\n            }\r\n            case \"undefined\": {\r\n                return \"undefined\";\r\n            }\r\n            case \"object\": {\r\n                if (Array.isArray(data)) {\r\n                    return \"pole\";\r\n                }\r\n                if (data === null) {\r\n                    return \"null\";\r\n                }\r\n                if (Object.getPrototypeOf(data) !== Object.prototype && data.constructor) {\r\n                    return data.constructor.name;\r\n                }\r\n            }\r\n        }\r\n        return t;\r\n    };\r\n    const Nouns = {\r\n        regex: \"regul\u00E1rn\u00ED v\u00FDraz\",\r\n        email: \"e-mailov\u00E1 adresa\",\r\n        url: \"URL\",\r\n        emoji: \"emoji\",\r\n        uuid: \"UUID\",\r\n        uuidv4: \"UUIDv4\",\r\n        uuidv6: \"UUIDv6\",\r\n        nanoid: \"nanoid\",\r\n        guid: \"GUID\",\r\n        cuid: \"cuid\",\r\n        cuid2: \"cuid2\",\r\n        ulid: \"ULID\",\r\n        xid: \"XID\",\r\n        ksuid: \"KSUID\",\r\n        datetime: \"datum a \u010Das ve form\u00E1tu ISO\",\r\n        date: \"datum ve form\u00E1tu ISO\",\r\n        time: \"\u010Das ve form\u00E1tu ISO\",\r\n        duration: \"doba trv\u00E1n\u00ED ISO\",\r\n        ipv4: \"IPv4 adresa\",\r\n        ipv6: \"IPv6 adresa\",\r\n        cidrv4: \"rozsah IPv4\",\r\n        cidrv6: \"rozsah IPv6\",\r\n        base64: \"\u0159et\u011Bzec zak\u00F3dovan\u00FD ve form\u00E1tu base64\",\r\n        base64url: \"\u0159et\u011Bzec zak\u00F3dovan\u00FD ve form\u00E1tu base64url\",\r\n        json_string: \"\u0159et\u011Bzec ve form\u00E1tu JSON\",\r\n        e164: \"\u010D\u00EDslo E.164\",\r\n        jwt: \"JWT\",\r\n        template_literal: \"vstup\",\r\n    };\r\n    return (issue) => {\r\n        switch (issue.code) {\r\n            case \"invalid_type\":\r\n                return `Neplatn\u00FD vstup: o\u010Dek\u00E1v\u00E1no ${issue.expected}, obdr\u017Eeno ${parsedType(issue.input)}`;\r\n            case \"invalid_value\":\r\n                if (issue.values.length === 1)\r\n                    return `Neplatn\u00FD vstup: o\u010Dek\u00E1v\u00E1no ${util.stringifyPrimitive(issue.values[0])}`;\r\n                return `Neplatn\u00E1 mo\u017Enost: o\u010Dek\u00E1v\u00E1na jedna z hodnot ${util.joinValues(issue.values, \"|\")}`;\r\n            case \"too_big\": {\r\n                const adj = issue.inclusive ? \"<=\" : \"<\";\r\n                const sizing = getSizing(issue.origin);\r\n                if (sizing) {\r\n                    return `Hodnota je p\u0159\u00EDli\u0161 velk\u00E1: ${issue.origin ?? \"hodnota\"} mus\u00ED m\u00EDt ${adj}${issue.maximum.toString()} ${sizing.unit ?? \"prvk\u016F\"}`;\r\n                }\r\n                return `Hodnota je p\u0159\u00EDli\u0161 velk\u00E1: ${issue.origin ?? \"hodnota\"} mus\u00ED b\u00FDt ${adj}${issue.maximum.toString()}`;\r\n            }\r\n            case \"too_small\": {\r\n                const adj = issue.inclusive ? \">=\" : \">\";\r\n                const sizing = getSizing(issue.origin);\r\n                if (sizing) {\r\n                    return `Hodnota je p\u0159\u00EDli\u0161 mal\u00E1: ${issue.origin ?? \"hodnota\"} mus\u00ED m\u00EDt ${adj}${issue.minimum.toString()} ${sizing.unit ?? \"prvk\u016F\"}`;\r\n                }\r\n                return `Hodnota je p\u0159\u00EDli\u0161 mal\u00E1: ${issue.origin ?? \"hodnota\"} mus\u00ED b\u00FDt ${adj}${issue.minimum.toString()}`;\r\n            }\r\n            case \"invalid_format\": {\r\n                const _issue = issue;\r\n                if (_issue.format === \"starts_with\")\r\n                    return `Neplatn\u00FD \u0159et\u011Bzec: mus\u00ED za\u010D\u00EDnat na \"${_issue.prefix}\"`;\r\n                if (_issue.format === \"ends_with\")\r\n                    return `Neplatn\u00FD \u0159et\u011Bzec: mus\u00ED kon\u010Dit na \"${_issue.suffix}\"`;\r\n                if (_issue.format === \"includes\")\r\n                    return `Neplatn\u00FD \u0159et\u011Bzec: mus\u00ED obsahovat \"${_issue.includes}\"`;\r\n                if (_issue.format === \"regex\")\r\n                    return `Neplatn\u00FD \u0159et\u011Bzec: mus\u00ED odpov\u00EDdat vzoru ${_issue.pattern}`;\r\n                return `Neplatn\u00FD form\u00E1t ${Nouns[_issue.format] ?? issue.format}`;\r\n            }\r\n            case \"not_multiple_of\":\r\n                return `Neplatn\u00E9 \u010D\u00EDslo: mus\u00ED b\u00FDt n\u00E1sobkem ${issue.divisor}`;\r\n            case \"unrecognized_keys\":\r\n                return `Nezn\u00E1m\u00E9 kl\u00ED\u010De: ${util.joinValues(issue.keys, \", \")}`;\r\n            case \"invalid_key\":\r\n                return `Neplatn\u00FD kl\u00ED\u010D v ${issue.origin}`;\r\n            case \"invalid_union\":\r\n                return \"Neplatn\u00FD vstup\";\r\n            case \"invalid_element\":\r\n                return `Neplatn\u00E1 hodnota v ${issue.origin}`;\r\n            default:\r\n                return `Neplatn\u00FD vstup`;\r\n        }\r\n    };\r\n};\r\nexport default function () {\r\n    return {\r\n        localeError: error(),\r\n    };\r\n}\r\n", "import * as util from \"../core/util.js\";\r\nconst error = () => {\r\n    const Sizable = {\r\n        string: { unit: \"tegn\", verb: \"havde\" },\r\n        file: { unit: \"bytes\", verb: \"havde\" },\r\n        array: { unit: \"elementer\", verb: \"indeholdt\" },\r\n        set: { unit: \"elementer\", verb: \"indeholdt\" },\r\n    };\r\n    const TypeNames = {\r\n        string: \"streng\",\r\n        number: \"tal\",\r\n        boolean: \"boolean\",\r\n        array: \"liste\",\r\n        object: \"objekt\",\r\n        set: \"s\u00E6t\",\r\n        file: \"fil\",\r\n    };\r\n    function getSizing(origin) {\r\n        return Sizable[origin] ?? null;\r\n    }\r\n    function getTypeName(type) {\r\n        return TypeNames[type] ?? type;\r\n    }\r\n    const parsedType = (data) => {\r\n        const t = typeof data;\r\n        switch (t) {\r\n            case \"number\": {\r\n                return Number.isNaN(data) ? \"NaN\" : \"tal\";\r\n            }\r\n            case \"object\": {\r\n                if (Array.isArray(data)) {\r\n                    return \"liste\";\r\n                }\r\n                if (data === null) {\r\n                    return \"null\";\r\n                }\r\n                if (Object.getPrototypeOf(data) !== Object.prototype && data.constructor) {\r\n                    return data.constructor.name;\r\n                }\r\n                return \"objekt\";\r\n            }\r\n        }\r\n        return t;\r\n    };\r\n    const Nouns = {\r\n        regex: \"input\",\r\n        email: \"e-mailadresse\",\r\n        url: \"URL\",\r\n        emoji: \"emoji\",\r\n        uuid: \"UUID\",\r\n        uuidv4: \"UUIDv4\",\r\n        uuidv6: \"UUIDv6\",\r\n        nanoid: \"nanoid\",\r\n        guid: \"GUID\",\r\n        cuid: \"cuid\",\r\n        cuid2: \"cuid2\",\r\n        ulid: \"ULID\",\r\n        xid: \"XID\",\r\n        ksuid: \"KSUID\",\r\n        datetime: \"ISO dato- og klokkesl\u00E6t\",\r\n        date: \"ISO-dato\",\r\n        time: \"ISO-klokkesl\u00E6t\",\r\n        duration: \"ISO-varighed\",\r\n        ipv4: \"IPv4-omr\u00E5de\",\r\n        ipv6: \"IPv6-omr\u00E5de\",\r\n        cidrv4: \"IPv4-spektrum\",\r\n        cidrv6: \"IPv6-spektrum\",\r\n        base64: \"base64-kodet streng\",\r\n        base64url: \"base64url-kodet streng\",\r\n        json_string: \"JSON-streng\",\r\n        e164: \"E.164-nummer\",\r\n        jwt: \"JWT\",\r\n        template_literal: \"input\",\r\n    };\r\n    return (issue) => {\r\n        switch (issue.code) {\r\n            case \"invalid_type\":\r\n                return `Ugyldigt input: forventede ${getTypeName(issue.expected)}, fik ${getTypeName(parsedType(issue.input))}`;\r\n            case \"invalid_value\":\r\n                if (issue.values.length === 1)\r\n                    return `Ugyldig v\u00E6rdi: forventede ${util.stringifyPrimitive(issue.values[0])}`;\r\n                return `Ugyldigt valg: forventede en af f\u00F8lgende ${util.joinValues(issue.values, \"|\")}`;\r\n            case \"too_big\": {\r\n                const adj = issue.inclusive ? \"<=\" : \"<\";\r\n                const sizing = getSizing(issue.origin);\r\n                const origin = getTypeName(issue.origin);\r\n                if (sizing)\r\n                    return `For stor: forventede ${origin ?? \"value\"} ${sizing.verb} ${adj} ${issue.maximum.toString()} ${sizing.unit ?? \"elementer\"}`;\r\n                return `For stor: forventede ${origin ?? \"value\"} havde ${adj} ${issue.maximum.toString()}`;\r\n            }\r\n            case \"too_small\": {\r\n                const adj = issue.inclusive ? \">=\" : \">\";\r\n                const sizing = getSizing(issue.origin);\r\n                const origin = getTypeName(issue.origin);\r\n                if (sizing) {\r\n                    return `For lille: forventede ${origin} ${sizing.verb} ${adj} ${issue.minimum.toString()} ${sizing.unit}`;\r\n                }\r\n                return `For lille: forventede ${origin} havde ${adj} ${issue.minimum.toString()}`;\r\n            }\r\n            case \"invalid_format\": {\r\n                const _issue = issue;\r\n                if (_issue.format === \"starts_with\")\r\n                    return `Ugyldig streng: skal starte med \"${_issue.prefix}\"`;\r\n                if (_issue.format === \"ends_with\")\r\n                    return `Ugyldig streng: skal ende med \"${_issue.suffix}\"`;\r\n                if (_issue.format === \"includes\")\r\n                    return `Ugyldig streng: skal indeholde \"${_issue.includes}\"`;\r\n                if (_issue.format === \"regex\")\r\n                    return `Ugyldig streng: skal matche m\u00F8nsteret ${_issue.pattern}`;\r\n                return `Ugyldig ${Nouns[_issue.format] ?? issue.format}`;\r\n            }\r\n            case \"not_multiple_of\":\r\n                return `Ugyldigt tal: skal v\u00E6re deleligt med ${issue.divisor}`;\r\n            case \"unrecognized_keys\":\r\n                return `${issue.keys.length > 1 ? \"Ukendte n\u00F8gler\" : \"Ukendt n\u00F8gle\"}: ${util.joinValues(issue.keys, \", \")}`;\r\n            case \"invalid_key\":\r\n                return `Ugyldig n\u00F8gle i ${issue.origin}`;\r\n            case \"invalid_union\":\r\n                return \"Ugyldigt input: matcher ingen af de tilladte typer\";\r\n            case \"invalid_element\":\r\n                return `Ugyldig v\u00E6rdi i ${issue.origin}`;\r\n            default:\r\n                return `Ugyldigt input`;\r\n        }\r\n    };\r\n};\r\nexport default function () {\r\n    return {\r\n        localeError: error(),\r\n    };\r\n}\r\n", "import * as util from \"../core/util.js\";\r\nconst error = () => {\r\n    const Sizable = {\r\n        string: { unit: \"Zeichen\", verb: \"zu haben\" },\r\n        file: { unit: \"Bytes\", verb: \"zu haben\" },\r\n        array: { unit: \"Elemente\", verb: \"zu haben\" },\r\n        set: { unit: \"Elemente\", verb: \"zu haben\" },\r\n    };\r\n    function getSizing(origin) {\r\n        return Sizable[origin] ?? null;\r\n    }\r\n    const parsedType = (data) => {\r\n        const t = typeof data;\r\n        switch (t) {\r\n            case \"number\": {\r\n                return Number.isNaN(data) ? \"NaN\" : \"Zahl\";\r\n            }\r\n            case \"object\": {\r\n                if (Array.isArray(data)) {\r\n                    return \"Array\";\r\n                }\r\n                if (data === null) {\r\n                    return \"null\";\r\n                }\r\n                if (Object.getPrototypeOf(data) !== Object.prototype && data.constructor) {\r\n                    return data.constructor.name;\r\n                }\r\n            }\r\n        }\r\n        return t;\r\n    };\r\n    const Nouns = {\r\n        regex: \"Eingabe\",\r\n        email: \"E-Mail-Adresse\",\r\n        url: \"URL\",\r\n        emoji: \"Emoji\",\r\n        uuid: \"UUID\",\r\n        uuidv4: \"UUIDv4\",\r\n        uuidv6: \"UUIDv6\",\r\n        nanoid: \"nanoid\",\r\n        guid: \"GUID\",\r\n        cuid: \"cuid\",\r\n        cuid2: \"cuid2\",\r\n        ulid: \"ULID\",\r\n        xid: \"XID\",\r\n        ksuid: \"KSUID\",\r\n        datetime: \"ISO-Datum und -Uhrzeit\",\r\n        date: \"ISO-Datum\",\r\n        time: \"ISO-Uhrzeit\",\r\n        duration: \"ISO-Dauer\",\r\n        ipv4: \"IPv4-Adresse\",\r\n        ipv6: \"IPv6-Adresse\",\r\n        cidrv4: \"IPv4-Bereich\",\r\n        cidrv6: \"IPv6-Bereich\",\r\n        base64: \"Base64-codierter String\",\r\n        base64url: \"Base64-URL-codierter String\",\r\n        json_string: \"JSON-String\",\r\n        e164: \"E.164-Nummer\",\r\n        jwt: \"JWT\",\r\n        template_literal: \"Eingabe\",\r\n    };\r\n    return (issue) => {\r\n        switch (issue.code) {\r\n            case \"invalid_type\":\r\n                return `Ung\u00FCltige Eingabe: erwartet ${issue.expected}, erhalten ${parsedType(issue.input)}`;\r\n            case \"invalid_value\":\r\n                if (issue.values.length === 1)\r\n                    return `Ung\u00FCltige Eingabe: erwartet ${util.stringifyPrimitive(issue.values[0])}`;\r\n                return `Ung\u00FCltige Option: erwartet eine von ${util.joinValues(issue.values, \"|\")}`;\r\n            case \"too_big\": {\r\n                const adj = issue.inclusive ? \"<=\" : \"<\";\r\n                const sizing = getSizing(issue.origin);\r\n                if (sizing)\r\n                    return `Zu gro\u00DF: erwartet, dass ${issue.origin ?? \"Wert\"} ${adj}${issue.maximum.toString()} ${sizing.unit ?? \"Elemente\"} hat`;\r\n                return `Zu gro\u00DF: erwartet, dass ${issue.origin ?? \"Wert\"} ${adj}${issue.maximum.toString()} ist`;\r\n            }\r\n            case \"too_small\": {\r\n                const adj = issue.inclusive ? \">=\" : \">\";\r\n                const sizing = getSizing(issue.origin);\r\n                if (sizing) {\r\n                    return `Zu klein: erwartet, dass ${issue.origin} ${adj}${issue.minimum.toString()} ${sizing.unit} hat`;\r\n                }\r\n                return `Zu klein: erwartet, dass ${issue.origin} ${adj}${issue.minimum.toString()} ist`;\r\n            }\r\n            case \"invalid_format\": {\r\n                const _issue = issue;\r\n                if (_issue.format === \"starts_with\")\r\n                    return `Ung\u00FCltiger String: muss mit \"${_issue.prefix}\" beginnen`;\r\n                if (_issue.format === \"ends_with\")\r\n                    return `Ung\u00FCltiger String: muss mit \"${_issue.suffix}\" enden`;\r\n                if (_issue.format === \"includes\")\r\n                    return `Ung\u00FCltiger String: muss \"${_issue.includes}\" enthalten`;\r\n                if (_issue.format === \"regex\")\r\n                    return `Ung\u00FCltiger String: muss dem Muster ${_issue.pattern} entsprechen`;\r\n                return `Ung\u00FCltig: ${Nouns[_issue.format] ?? issue.format}`;\r\n            }\r\n            case \"not_multiple_of\":\r\n                return `Ung\u00FCltige Zahl: muss ein Vielfaches von ${issue.divisor} sein`;\r\n            case \"unrecognized_keys\":\r\n                return `${issue.keys.length > 1 ? \"Unbekannte Schl\u00FCssel\" : \"Unbekannter Schl\u00FCssel\"}: ${util.joinValues(issue.keys, \", \")}`;\r\n            case \"invalid_key\":\r\n                return `Ung\u00FCltiger Schl\u00FCssel in ${issue.origin}`;\r\n            case \"invalid_union\":\r\n                return \"Ung\u00FCltige Eingabe\";\r\n            case \"invalid_element\":\r\n                return `Ung\u00FCltiger Wert in ${issue.origin}`;\r\n            default:\r\n                return `Ung\u00FCltige Eingabe`;\r\n        }\r\n    };\r\n};\r\nexport default function () {\r\n    return {\r\n        localeError: error(),\r\n    };\r\n}\r\n", "import * as util from \"../core/util.js\";\r\nexport const parsedType = (data) => {\r\n    const t = typeof data;\r\n    switch (t) {\r\n        case \"number\": {\r\n            return Number.isNaN(data) ? \"NaN\" : \"number\";\r\n        }\r\n        case \"object\": {\r\n            if (Array.isArray(data)) {\r\n                return \"array\";\r\n            }\r\n            if (data === null) {\r\n                return \"null\";\r\n            }\r\n            if (Object.getPrototypeOf(data) !== Object.prototype && data.constructor) {\r\n                return data.constructor.name;\r\n            }\r\n        }\r\n    }\r\n    return t;\r\n};\r\nconst error = () => {\r\n    const Sizable = {\r\n        string: { unit: \"characters\", verb: \"to have\" },\r\n        file: { unit: \"bytes\", verb: \"to have\" },\r\n        array: { unit: \"items\", verb: \"to have\" },\r\n        set: { unit: \"items\", verb: \"to have\" },\r\n    };\r\n    function getSizing(origin) {\r\n        return Sizable[origin] ?? null;\r\n    }\r\n    const Nouns = {\r\n        regex: \"input\",\r\n        email: \"email address\",\r\n        url: \"URL\",\r\n        emoji: \"emoji\",\r\n        uuid: \"UUID\",\r\n        uuidv4: \"UUIDv4\",\r\n        uuidv6: \"UUIDv6\",\r\n        nanoid: \"nanoid\",\r\n        guid: \"GUID\",\r\n        cuid: \"cuid\",\r\n        cuid2: \"cuid2\",\r\n        ulid: \"ULID\",\r\n        xid: \"XID\",\r\n        ksuid: \"KSUID\",\r\n        datetime: \"ISO datetime\",\r\n        date: \"ISO date\",\r\n        time: \"ISO time\",\r\n        duration: \"ISO duration\",\r\n        ipv4: \"IPv4 address\",\r\n        ipv6: \"IPv6 address\",\r\n        cidrv4: \"IPv4 range\",\r\n        cidrv6: \"IPv6 range\",\r\n        base64: \"base64-encoded string\",\r\n        base64url: \"base64url-encoded string\",\r\n        json_string: \"JSON string\",\r\n        e164: \"E.164 number\",\r\n        jwt: \"JWT\",\r\n        template_literal: \"input\",\r\n    };\r\n    return (issue) => {\r\n        switch (issue.code) {\r\n            case \"invalid_type\":\r\n                return `Invalid input: expected ${issue.expected}, received ${parsedType(issue.input)}`;\r\n            case \"invalid_value\":\r\n                if (issue.values.length === 1)\r\n                    return `Invalid input: expected ${util.stringifyPrimitive(issue.values[0])}`;\r\n                return `Invalid option: expected one of ${util.joinValues(issue.values, \"|\")}`;\r\n            case \"too_big\": {\r\n                const adj = issue.inclusive ? \"<=\" : \"<\";\r\n                const sizing = getSizing(issue.origin);\r\n                if (sizing)\r\n                    return `Too big: expected ${issue.origin ?? \"value\"} to have ${adj}${issue.maximum.toString()} ${sizing.unit ?? \"elements\"}`;\r\n                return `Too big: expected ${issue.origin ?? \"value\"} to be ${adj}${issue.maximum.toString()}`;\r\n            }\r\n            case \"too_small\": {\r\n                const adj = issue.inclusive ? \">=\" : \">\";\r\n                const sizing = getSizing(issue.origin);\r\n                if (sizing) {\r\n                    return `Too small: expected ${issue.origin} to have ${adj}${issue.minimum.toString()} ${sizing.unit}`;\r\n                }\r\n                return `Too small: expected ${issue.origin} to be ${adj}${issue.minimum.toString()}`;\r\n            }\r\n            case \"invalid_format\": {\r\n                const _issue = issue;\r\n                if (_issue.format === \"starts_with\") {\r\n                    return `Invalid string: must start with \"${_issue.prefix}\"`;\r\n                }\r\n                if (_issue.format === \"ends_with\")\r\n                    return `Invalid string: must end with \"${_issue.suffix}\"`;\r\n                if (_issue.format === \"includes\")\r\n                    return `Invalid string: must include \"${_issue.includes}\"`;\r\n                if (_issue.format === \"regex\")\r\n                    return `Invalid string: must match pattern ${_issue.pattern}`;\r\n                return `Invalid ${Nouns[_issue.format] ?? issue.format}`;\r\n            }\r\n            case \"not_multiple_of\":\r\n                return `Invalid number: must be a multiple of ${issue.divisor}`;\r\n            case \"unrecognized_keys\":\r\n                return `Unrecognized key${issue.keys.length > 1 ? \"s\" : \"\"}: ${util.joinValues(issue.keys, \", \")}`;\r\n            case \"invalid_key\":\r\n                return `Invalid key in ${issue.origin}`;\r\n            case \"invalid_union\":\r\n                return \"Invalid input\";\r\n            case \"invalid_element\":\r\n                return `Invalid value in ${issue.origin}`;\r\n            default:\r\n                return `Invalid input`;\r\n        }\r\n    };\r\n};\r\nexport default function () {\r\n    return {\r\n        localeError: error(),\r\n    };\r\n}\r\n", "import * as util from \"../core/util.js\";\r\nexport const parsedType = (data) => {\r\n    const t = typeof data;\r\n    switch (t) {\r\n        case \"number\": {\r\n            return Number.isNaN(data) ? \"NaN\" : \"nombro\";\r\n        }\r\n        case \"object\": {\r\n            if (Array.isArray(data)) {\r\n                return \"tabelo\";\r\n            }\r\n            if (data === null) {\r\n                return \"senvalora\";\r\n            }\r\n            if (Object.getPrototypeOf(data) !== Object.prototype && data.constructor) {\r\n                return data.constructor.name;\r\n            }\r\n        }\r\n    }\r\n    return t;\r\n};\r\nconst error = () => {\r\n    const Sizable = {\r\n        string: { unit: \"karaktrojn\", verb: \"havi\" },\r\n        file: { unit: \"bajtojn\", verb: \"havi\" },\r\n        array: { unit: \"elementojn\", verb: \"havi\" },\r\n        set: { unit: \"elementojn\", verb: \"havi\" },\r\n    };\r\n    function getSizing(origin) {\r\n        return Sizable[origin] ?? null;\r\n    }\r\n    const Nouns = {\r\n        regex: \"enigo\",\r\n        email: \"retadreso\",\r\n        url: \"URL\",\r\n        emoji: \"emo\u011Dio\",\r\n        uuid: \"UUID\",\r\n        uuidv4: \"UUIDv4\",\r\n        uuidv6: \"UUIDv6\",\r\n        nanoid: \"nanoid\",\r\n        guid: \"GUID\",\r\n        cuid: \"cuid\",\r\n        cuid2: \"cuid2\",\r\n        ulid: \"ULID\",\r\n        xid: \"XID\",\r\n        ksuid: \"KSUID\",\r\n        datetime: \"ISO-datotempo\",\r\n        date: \"ISO-dato\",\r\n        time: \"ISO-tempo\",\r\n        duration: \"ISO-da\u016Dro\",\r\n        ipv4: \"IPv4-adreso\",\r\n        ipv6: \"IPv6-adreso\",\r\n        cidrv4: \"IPv4-rango\",\r\n        cidrv6: \"IPv6-rango\",\r\n        base64: \"64-ume kodita karaktraro\",\r\n        base64url: \"URL-64-ume kodita karaktraro\",\r\n        json_string: \"JSON-karaktraro\",\r\n        e164: \"E.164-nombro\",\r\n        jwt: \"JWT\",\r\n        template_literal: \"enigo\",\r\n    };\r\n    return (issue) => {\r\n        switch (issue.code) {\r\n            case \"invalid_type\":\r\n                return `Nevalida enigo: atendi\u011Dis ${issue.expected}, ricevi\u011Dis ${parsedType(issue.input)}`;\r\n            case \"invalid_value\":\r\n                if (issue.values.length === 1)\r\n                    return `Nevalida enigo: atendi\u011Dis ${util.stringifyPrimitive(issue.values[0])}`;\r\n                return `Nevalida opcio: atendi\u011Dis unu el ${util.joinValues(issue.values, \"|\")}`;\r\n            case \"too_big\": {\r\n                const adj = issue.inclusive ? \"<=\" : \"<\";\r\n                const sizing = getSizing(issue.origin);\r\n                if (sizing)\r\n                    return `Tro granda: atendi\u011Dis ke ${issue.origin ?? \"valoro\"} havu ${adj}${issue.maximum.toString()} ${sizing.unit ?? \"elementojn\"}`;\r\n                return `Tro granda: atendi\u011Dis ke ${issue.origin ?? \"valoro\"} havu ${adj}${issue.maximum.toString()}`;\r\n            }\r\n            case \"too_small\": {\r\n                const adj = issue.inclusive ? \">=\" : \">\";\r\n                const sizing = getSizing(issue.origin);\r\n                if (sizing) {\r\n                    return `Tro malgranda: atendi\u011Dis ke ${issue.origin} havu ${adj}${issue.minimum.toString()} ${sizing.unit}`;\r\n                }\r\n                return `Tro malgranda: atendi\u011Dis ke ${issue.origin} estu ${adj}${issue.minimum.toString()}`;\r\n            }\r\n            case \"invalid_format\": {\r\n                const _issue = issue;\r\n                if (_issue.format === \"starts_with\")\r\n                    return `Nevalida karaktraro: devas komenci\u011Di per \"${_issue.prefix}\"`;\r\n                if (_issue.format === \"ends_with\")\r\n                    return `Nevalida karaktraro: devas fini\u011Di per \"${_issue.suffix}\"`;\r\n                if (_issue.format === \"includes\")\r\n                    return `Nevalida karaktraro: devas inkluzivi \"${_issue.includes}\"`;\r\n                if (_issue.format === \"regex\")\r\n                    return `Nevalida karaktraro: devas kongrui kun la modelo ${_issue.pattern}`;\r\n                return `Nevalida ${Nouns[_issue.format] ?? issue.format}`;\r\n            }\r\n            case \"not_multiple_of\":\r\n                return `Nevalida nombro: devas esti oblo de ${issue.divisor}`;\r\n            case \"unrecognized_keys\":\r\n                return `Nekonata${issue.keys.length > 1 ? \"j\" : \"\"} \u015Dlosilo${issue.keys.length > 1 ? \"j\" : \"\"}: ${util.joinValues(issue.keys, \", \")}`;\r\n            case \"invalid_key\":\r\n                return `Nevalida \u015Dlosilo en ${issue.origin}`;\r\n            case \"invalid_union\":\r\n                return \"Nevalida enigo\";\r\n            case \"invalid_element\":\r\n                return `Nevalida valoro en ${issue.origin}`;\r\n            default:\r\n                return `Nevalida enigo`;\r\n        }\r\n    };\r\n};\r\nexport default function () {\r\n    return {\r\n        localeError: error(),\r\n    };\r\n}\r\n", "import * as util from \"../core/util.js\";\r\nconst error = () => {\r\n    const Sizable = {\r\n        string: { unit: \"caracteres\", verb: \"tener\" },\r\n        file: { unit: \"bytes\", verb: \"tener\" },\r\n        array: { unit: \"elementos\", verb: \"tener\" },\r\n        set: { unit: \"elementos\", verb: \"tener\" },\r\n    };\r\n    const TypeNames = {\r\n        string: \"texto\",\r\n        number: \"n\u00FAmero\",\r\n        boolean: \"booleano\",\r\n        array: \"arreglo\",\r\n        object: \"objeto\",\r\n        set: \"conjunto\",\r\n        file: \"archivo\",\r\n        date: \"fecha\",\r\n        bigint: \"n\u00FAmero grande\",\r\n        symbol: \"s\u00EDmbolo\",\r\n        undefined: \"indefinido\",\r\n        null: \"nulo\",\r\n        function: \"funci\u00F3n\",\r\n        map: \"mapa\",\r\n        record: \"registro\",\r\n        tuple: \"tupla\",\r\n        enum: \"enumeraci\u00F3n\",\r\n        union: \"uni\u00F3n\",\r\n        literal: \"literal\",\r\n        promise: \"promesa\",\r\n        void: \"vac\u00EDo\",\r\n        never: \"nunca\",\r\n        unknown: \"desconocido\",\r\n        any: \"cualquiera\",\r\n    };\r\n    function getSizing(origin) {\r\n        return Sizable[origin] ?? null;\r\n    }\r\n    function getTypeName(type) {\r\n        return TypeNames[type] ?? type;\r\n    }\r\n    const parsedType = (data) => {\r\n        const t = typeof data;\r\n        switch (t) {\r\n            case \"number\": {\r\n                return Number.isNaN(data) ? \"NaN\" : \"number\";\r\n            }\r\n            case \"object\": {\r\n                if (Array.isArray(data)) {\r\n                    return \"array\";\r\n                }\r\n                if (data === null) {\r\n                    return \"null\";\r\n                }\r\n                if (Object.getPrototypeOf(data) !== Object.prototype) {\r\n                    return data.constructor.name;\r\n                }\r\n                return \"object\";\r\n            }\r\n        }\r\n        return t;\r\n    };\r\n    const Nouns = {\r\n        regex: \"entrada\",\r\n        email: \"direcci\u00F3n de correo electr\u00F3nico\",\r\n        url: \"URL\",\r\n        emoji: \"emoji\",\r\n        uuid: \"UUID\",\r\n        uuidv4: \"UUIDv4\",\r\n        uuidv6: \"UUIDv6\",\r\n        nanoid: \"nanoid\",\r\n        guid: \"GUID\",\r\n        cuid: \"cuid\",\r\n        cuid2: \"cuid2\",\r\n        ulid: \"ULID\",\r\n        xid: \"XID\",\r\n        ksuid: \"KSUID\",\r\n        datetime: \"fecha y hora ISO\",\r\n        date: \"fecha ISO\",\r\n        time: \"hora ISO\",\r\n        duration: \"duraci\u00F3n ISO\",\r\n        ipv4: \"direcci\u00F3n IPv4\",\r\n        ipv6: \"direcci\u00F3n IPv6\",\r\n        cidrv4: \"rango IPv4\",\r\n        cidrv6: \"rango IPv6\",\r\n        base64: \"cadena codificada en base64\",\r\n        base64url: \"URL codificada en base64\",\r\n        json_string: \"cadena JSON\",\r\n        e164: \"n\u00FAmero E.164\",\r\n        jwt: \"JWT\",\r\n        template_literal: \"entrada\",\r\n    };\r\n    return (issue) => {\r\n        switch (issue.code) {\r\n            case \"invalid_type\":\r\n                return `Entrada inv\u00E1lida: se esperaba ${getTypeName(issue.expected)}, recibido ${getTypeName(parsedType(issue.input))}`;\r\n            // return `Entrada inv\u00E1lida: se esperaba ${issue.expected}, recibido ${util.getParsedType(issue.input)}`;\r\n            case \"invalid_value\":\r\n                if (issue.values.length === 1)\r\n                    return `Entrada inv\u00E1lida: se esperaba ${util.stringifyPrimitive(issue.values[0])}`;\r\n                return `Opci\u00F3n inv\u00E1lida: se esperaba una de ${util.joinValues(issue.values, \"|\")}`;\r\n            case \"too_big\": {\r\n                const adj = issue.inclusive ? \"<=\" : \"<\";\r\n                const sizing = getSizing(issue.origin);\r\n                const origin = getTypeName(issue.origin);\r\n                if (sizing)\r\n                    return `Demasiado grande: se esperaba que ${origin ?? \"valor\"} tuviera ${adj}${issue.maximum.toString()} ${sizing.unit ?? \"elementos\"}`;\r\n                return `Demasiado grande: se esperaba que ${origin ?? \"valor\"} fuera ${adj}${issue.maximum.toString()}`;\r\n            }\r\n            case \"too_small\": {\r\n                const adj = issue.inclusive ? \">=\" : \">\";\r\n                const sizing = getSizing(issue.origin);\r\n                const origin = getTypeName(issue.origin);\r\n                if (sizing) {\r\n                    return `Demasiado peque\u00F1o: se esperaba que ${origin} tuviera ${adj}${issue.minimum.toString()} ${sizing.unit}`;\r\n                }\r\n                return `Demasiado peque\u00F1o: se esperaba que ${origin} fuera ${adj}${issue.minimum.toString()}`;\r\n            }\r\n            case \"invalid_format\": {\r\n                const _issue = issue;\r\n                if (_issue.format === \"starts_with\")\r\n                    return `Cadena inv\u00E1lida: debe comenzar con \"${_issue.prefix}\"`;\r\n                if (_issue.format === \"ends_with\")\r\n                    return `Cadena inv\u00E1lida: debe terminar en \"${_issue.suffix}\"`;\r\n                if (_issue.format === \"includes\")\r\n                    return `Cadena inv\u00E1lida: debe incluir \"${_issue.includes}\"`;\r\n                if (_issue.format === \"regex\")\r\n                    return `Cadena inv\u00E1lida: debe coincidir con el patr\u00F3n ${_issue.pattern}`;\r\n                return `Inv\u00E1lido ${Nouns[_issue.format] ?? issue.format}`;\r\n            }\r\n            case \"not_multiple_of\":\r\n                return `N\u00FAmero inv\u00E1lido: debe ser m\u00FAltiplo de ${issue.divisor}`;\r\n            case \"unrecognized_keys\":\r\n                return `Llave${issue.keys.length > 1 ? \"s\" : \"\"} desconocida${issue.keys.length > 1 ? \"s\" : \"\"}: ${util.joinValues(issue.keys, \", \")}`;\r\n            case \"invalid_key\":\r\n                return `Llave inv\u00E1lida en ${getTypeName(issue.origin)}`;\r\n            case \"invalid_union\":\r\n                return \"Entrada inv\u00E1lida\";\r\n            case \"invalid_element\":\r\n                return `Valor inv\u00E1lido en ${getTypeName(issue.origin)}`;\r\n            default:\r\n                return `Entrada inv\u00E1lida`;\r\n        }\r\n    };\r\n};\r\nexport default function () {\r\n    return {\r\n        localeError: error(),\r\n    };\r\n}\r\n", "import * as util from \"../core/util.js\";\r\nconst error = () => {\r\n    const Sizable = {\r\n        string: { unit: \"\u06A9\u0627\u0631\u0627\u06A9\u062A\u0631\", verb: \"\u062F\u0627\u0634\u062A\u0647 \u0628\u0627\u0634\u062F\" },\r\n        file: { unit: \"\u0628\u0627\u06CC\u062A\", verb: \"\u062F\u0627\u0634\u062A\u0647 \u0628\u0627\u0634\u062F\" },\r\n        array: { unit: \"\u0622\u06CC\u062A\u0645\", verb: \"\u062F\u0627\u0634\u062A\u0647 \u0628\u0627\u0634\u062F\" },\r\n        set: { unit: \"\u0622\u06CC\u062A\u0645\", verb: \"\u062F\u0627\u0634\u062A\u0647 \u0628\u0627\u0634\u062F\" },\r\n    };\r\n    function getSizing(origin) {\r\n        return Sizable[origin] ?? null;\r\n    }\r\n    const parsedType = (data) => {\r\n        const t = typeof data;\r\n        switch (t) {\r\n            case \"number\": {\r\n                return Number.isNaN(data) ? \"NaN\" : \"\u0639\u062F\u062F\";\r\n            }\r\n            case \"object\": {\r\n                if (Array.isArray(data)) {\r\n                    return \"\u0622\u0631\u0627\u06CC\u0647\";\r\n                }\r\n                if (data === null) {\r\n                    return \"null\";\r\n                }\r\n                if (Object.getPrototypeOf(data) !== Object.prototype && data.constructor) {\r\n                    return data.constructor.name;\r\n                }\r\n            }\r\n        }\r\n        return t;\r\n    };\r\n    const Nouns = {\r\n        regex: \"\u0648\u0631\u0648\u062F\u06CC\",\r\n        email: \"\u0622\u062F\u0631\u0633 \u0627\u06CC\u0645\u06CC\u0644\",\r\n        url: \"URL\",\r\n        emoji: \"\u0627\u06CC\u0645\u0648\u062C\u06CC\",\r\n        uuid: \"UUID\",\r\n        uuidv4: \"UUIDv4\",\r\n        uuidv6: \"UUIDv6\",\r\n        nanoid: \"nanoid\",\r\n        guid: \"GUID\",\r\n        cuid: \"cuid\",\r\n        cuid2: \"cuid2\",\r\n        ulid: \"ULID\",\r\n        xid: \"XID\",\r\n        ksuid: \"KSUID\",\r\n        datetime: \"\u062A\u0627\u0631\u06CC\u062E \u0648 \u0632\u0645\u0627\u0646 \u0627\u06CC\u0632\u0648\",\r\n        date: \"\u062A\u0627\u0631\u06CC\u062E \u0627\u06CC\u0632\u0648\",\r\n        time: \"\u0632\u0645\u0627\u0646 \u0627\u06CC\u0632\u0648\",\r\n        duration: \"\u0645\u062F\u062A \u0632\u0645\u0627\u0646 \u0627\u06CC\u0632\u0648\",\r\n        ipv4: \"IPv4 \u0622\u062F\u0631\u0633\",\r\n        ipv6: \"IPv6 \u0622\u062F\u0631\u0633\",\r\n        cidrv4: \"IPv4 \u062F\u0627\u0645\u0646\u0647\",\r\n        cidrv6: \"IPv6 \u062F\u0627\u0645\u0646\u0647\",\r\n        base64: \"base64-encoded \u0631\u0634\u062A\u0647\",\r\n        base64url: \"base64url-encoded \u0631\u0634\u062A\u0647\",\r\n        json_string: \"JSON \u0631\u0634\u062A\u0647\",\r\n        e164: \"E.164 \u0639\u062F\u062F\",\r\n        jwt: \"JWT\",\r\n        template_literal: \"\u0648\u0631\u0648\u062F\u06CC\",\r\n    };\r\n    return (issue) => {\r\n        switch (issue.code) {\r\n            case \"invalid_type\":\r\n                return `\u0648\u0631\u0648\u062F\u06CC \u0646\u0627\u0645\u0639\u062A\u0628\u0631: \u0645\u06CC\u200C\u0628\u0627\u06CC\u0633\u062A ${issue.expected} \u0645\u06CC\u200C\u0628\u0648\u062F\u060C ${parsedType(issue.input)} \u062F\u0631\u06CC\u0627\u0641\u062A \u0634\u062F`;\r\n            case \"invalid_value\":\r\n                if (issue.values.length === 1) {\r\n                    return `\u0648\u0631\u0648\u062F\u06CC \u0646\u0627\u0645\u0639\u062A\u0628\u0631: \u0645\u06CC\u200C\u0628\u0627\u06CC\u0633\u062A ${util.stringifyPrimitive(issue.values[0])} \u0645\u06CC\u200C\u0628\u0648\u062F`;\r\n                }\r\n                return `\u06AF\u0632\u06CC\u0646\u0647 \u0646\u0627\u0645\u0639\u062A\u0628\u0631: \u0645\u06CC\u200C\u0628\u0627\u06CC\u0633\u062A \u06CC\u06A9\u06CC \u0627\u0632 ${util.joinValues(issue.values, \"|\")} \u0645\u06CC\u200C\u0628\u0648\u062F`;\r\n            case \"too_big\": {\r\n                const adj = issue.inclusive ? \"<=\" : \"<\";\r\n                const sizing = getSizing(issue.origin);\r\n                if (sizing) {\r\n                    return `\u062E\u06CC\u0644\u06CC \u0628\u0632\u0631\u06AF: ${issue.origin ?? \"\u0645\u0642\u062F\u0627\u0631\"} \u0628\u0627\u06CC\u062F ${adj}${issue.maximum.toString()} ${sizing.unit ?? \"\u0639\u0646\u0635\u0631\"} \u0628\u0627\u0634\u062F`;\r\n                }\r\n                return `\u062E\u06CC\u0644\u06CC \u0628\u0632\u0631\u06AF: ${issue.origin ?? \"\u0645\u0642\u062F\u0627\u0631\"} \u0628\u0627\u06CC\u062F ${adj}${issue.maximum.toString()} \u0628\u0627\u0634\u062F`;\r\n            }\r\n            case \"too_small\": {\r\n                const adj = issue.inclusive ? \">=\" : \">\";\r\n                const sizing = getSizing(issue.origin);\r\n                if (sizing) {\r\n                    return `\u062E\u06CC\u0644\u06CC \u06A9\u0648\u0686\u06A9: ${issue.origin} \u0628\u0627\u06CC\u062F ${adj}${issue.minimum.toString()} ${sizing.unit} \u0628\u0627\u0634\u062F`;\r\n                }\r\n                return `\u062E\u06CC\u0644\u06CC \u06A9\u0648\u0686\u06A9: ${issue.origin} \u0628\u0627\u06CC\u062F ${adj}${issue.minimum.toString()} \u0628\u0627\u0634\u062F`;\r\n            }\r\n            case \"invalid_format\": {\r\n                const _issue = issue;\r\n                if (_issue.format === \"starts_with\") {\r\n                    return `\u0631\u0634\u062A\u0647 \u0646\u0627\u0645\u0639\u062A\u0628\u0631: \u0628\u0627\u06CC\u062F \u0628\u0627 \"${_issue.prefix}\" \u0634\u0631\u0648\u0639 \u0634\u0648\u062F`;\r\n                }\r\n                if (_issue.format === \"ends_with\") {\r\n                    return `\u0631\u0634\u062A\u0647 \u0646\u0627\u0645\u0639\u062A\u0628\u0631: \u0628\u0627\u06CC\u062F \u0628\u0627 \"${_issue.suffix}\" \u062A\u0645\u0627\u0645 \u0634\u0648\u062F`;\r\n                }\r\n                if (_issue.format === \"includes\") {\r\n                    return `\u0631\u0634\u062A\u0647 \u0646\u0627\u0645\u0639\u062A\u0628\u0631: \u0628\u0627\u06CC\u062F \u0634\u0627\u0645\u0644 \"${_issue.includes}\" \u0628\u0627\u0634\u062F`;\r\n                }\r\n                if (_issue.format === \"regex\") {\r\n                    return `\u0631\u0634\u062A\u0647 \u0646\u0627\u0645\u0639\u062A\u0628\u0631: \u0628\u0627\u06CC\u062F \u0628\u0627 \u0627\u0644\u06AF\u0648\u06CC ${_issue.pattern} \u0645\u0637\u0627\u0628\u0642\u062A \u062F\u0627\u0634\u062A\u0647 \u0628\u0627\u0634\u062F`;\r\n                }\r\n                return `${Nouns[_issue.format] ?? issue.format} \u0646\u0627\u0645\u0639\u062A\u0628\u0631`;\r\n            }\r\n            case \"not_multiple_of\":\r\n                return `\u0639\u062F\u062F \u0646\u0627\u0645\u0639\u062A\u0628\u0631: \u0628\u0627\u06CC\u062F \u0645\u0636\u0631\u0628 ${issue.divisor} \u0628\u0627\u0634\u062F`;\r\n            case \"unrecognized_keys\":\r\n                return `\u06A9\u0644\u06CC\u062F${issue.keys.length > 1 ? \"\u0647\u0627\u06CC\" : \"\"} \u0646\u0627\u0634\u0646\u0627\u0633: ${util.joinValues(issue.keys, \", \")}`;\r\n            case \"invalid_key\":\r\n                return `\u06A9\u0644\u06CC\u062F \u0646\u0627\u0634\u0646\u0627\u0633 \u062F\u0631 ${issue.origin}`;\r\n            case \"invalid_union\":\r\n                return `\u0648\u0631\u0648\u062F\u06CC \u0646\u0627\u0645\u0639\u062A\u0628\u0631`;\r\n            case \"invalid_element\":\r\n                return `\u0645\u0642\u062F\u0627\u0631 \u0646\u0627\u0645\u0639\u062A\u0628\u0631 \u062F\u0631 ${issue.origin}`;\r\n            default:\r\n                return `\u0648\u0631\u0648\u062F\u06CC \u0646\u0627\u0645\u0639\u062A\u0628\u0631`;\r\n        }\r\n    };\r\n};\r\nexport default function () {\r\n    return {\r\n        localeError: error(),\r\n    };\r\n}\r\n", "import * as util from \"../core/util.js\";\r\nconst error = () => {\r\n    const Sizable = {\r\n        string: { unit: \"merkki\u00E4\", subject: \"merkkijonon\" },\r\n        file: { unit: \"tavua\", subject: \"tiedoston\" },\r\n        array: { unit: \"alkiota\", subject: \"listan\" },\r\n        set: { unit: \"alkiota\", subject: \"joukon\" },\r\n        number: { unit: \"\", subject: \"luvun\" },\r\n        bigint: { unit: \"\", subject: \"suuren kokonaisluvun\" },\r\n        int: { unit: \"\", subject: \"kokonaisluvun\" },\r\n        date: { unit: \"\", subject: \"p\u00E4iv\u00E4m\u00E4\u00E4r\u00E4n\" },\r\n    };\r\n    function getSizing(origin) {\r\n        return Sizable[origin] ?? null;\r\n    }\r\n    const parsedType = (data) => {\r\n        const t = typeof data;\r\n        switch (t) {\r\n            case \"number\": {\r\n                return Number.isNaN(data) ? \"NaN\" : \"number\";\r\n            }\r\n            case \"object\": {\r\n                if (Array.isArray(data)) {\r\n                    return \"array\";\r\n                }\r\n                if (data === null) {\r\n                    return \"null\";\r\n                }\r\n                if (Object.getPrototypeOf(data) !== Object.prototype && data.constructor) {\r\n                    return data.constructor.name;\r\n                }\r\n            }\r\n        }\r\n        return t;\r\n    };\r\n    const Nouns = {\r\n        regex: \"s\u00E4\u00E4nn\u00F6llinen lauseke\",\r\n        email: \"s\u00E4hk\u00F6postiosoite\",\r\n        url: \"URL-osoite\",\r\n        emoji: \"emoji\",\r\n        uuid: \"UUID\",\r\n        uuidv4: \"UUIDv4\",\r\n        uuidv6: \"UUIDv6\",\r\n        nanoid: \"nanoid\",\r\n        guid: \"GUID\",\r\n        cuid: \"cuid\",\r\n        cuid2: \"cuid2\",\r\n        ulid: \"ULID\",\r\n        xid: \"XID\",\r\n        ksuid: \"KSUID\",\r\n        datetime: \"ISO-aikaleima\",\r\n        date: \"ISO-p\u00E4iv\u00E4m\u00E4\u00E4r\u00E4\",\r\n        time: \"ISO-aika\",\r\n        duration: \"ISO-kesto\",\r\n        ipv4: \"IPv4-osoite\",\r\n        ipv6: \"IPv6-osoite\",\r\n        cidrv4: \"IPv4-alue\",\r\n        cidrv6: \"IPv6-alue\",\r\n        base64: \"base64-koodattu merkkijono\",\r\n        base64url: \"base64url-koodattu merkkijono\",\r\n        json_string: \"JSON-merkkijono\",\r\n        e164: \"E.164-luku\",\r\n        jwt: \"JWT\",\r\n        template_literal: \"templaattimerkkijono\",\r\n    };\r\n    return (issue) => {\r\n        switch (issue.code) {\r\n            case \"invalid_type\":\r\n                return `Virheellinen tyyppi: odotettiin ${issue.expected}, oli ${parsedType(issue.input)}`;\r\n            case \"invalid_value\":\r\n                if (issue.values.length === 1)\r\n                    return `Virheellinen sy\u00F6te: t\u00E4ytyy olla ${util.stringifyPrimitive(issue.values[0])}`;\r\n                return `Virheellinen valinta: t\u00E4ytyy olla yksi seuraavista: ${util.joinValues(issue.values, \"|\")}`;\r\n            case \"too_big\": {\r\n                const adj = issue.inclusive ? \"<=\" : \"<\";\r\n                const sizing = getSizing(issue.origin);\r\n                if (sizing) {\r\n                    return `Liian suuri: ${sizing.subject} t\u00E4ytyy olla ${adj}${issue.maximum.toString()} ${sizing.unit}`.trim();\r\n                }\r\n                return `Liian suuri: arvon t\u00E4ytyy olla ${adj}${issue.maximum.toString()}`;\r\n            }\r\n            case \"too_small\": {\r\n                const adj = issue.inclusive ? \">=\" : \">\";\r\n                const sizing = getSizing(issue.origin);\r\n                if (sizing) {\r\n                    return `Liian pieni: ${sizing.subject} t\u00E4ytyy olla ${adj}${issue.minimum.toString()} ${sizing.unit}`.trim();\r\n                }\r\n                return `Liian pieni: arvon t\u00E4ytyy olla ${adj}${issue.minimum.toString()}`;\r\n            }\r\n            case \"invalid_format\": {\r\n                const _issue = issue;\r\n                if (_issue.format === \"starts_with\")\r\n                    return `Virheellinen sy\u00F6te: t\u00E4ytyy alkaa \"${_issue.prefix}\"`;\r\n                if (_issue.format === \"ends_with\")\r\n                    return `Virheellinen sy\u00F6te: t\u00E4ytyy loppua \"${_issue.suffix}\"`;\r\n                if (_issue.format === \"includes\")\r\n                    return `Virheellinen sy\u00F6te: t\u00E4ytyy sis\u00E4lt\u00E4\u00E4 \"${_issue.includes}\"`;\r\n                if (_issue.format === \"regex\") {\r\n                    return `Virheellinen sy\u00F6te: t\u00E4ytyy vastata s\u00E4\u00E4nn\u00F6llist\u00E4 lauseketta ${_issue.pattern}`;\r\n                }\r\n                return `Virheellinen ${Nouns[_issue.format] ?? issue.format}`;\r\n            }\r\n            case \"not_multiple_of\":\r\n                return `Virheellinen luku: t\u00E4ytyy olla luvun ${issue.divisor} monikerta`;\r\n            case \"unrecognized_keys\":\r\n                return `${issue.keys.length > 1 ? \"Tuntemattomat avaimet\" : \"Tuntematon avain\"}: ${util.joinValues(issue.keys, \", \")}`;\r\n            case \"invalid_key\":\r\n                return \"Virheellinen avain tietueessa\";\r\n            case \"invalid_union\":\r\n                return \"Virheellinen unioni\";\r\n            case \"invalid_element\":\r\n                return \"Virheellinen arvo joukossa\";\r\n            default:\r\n                return `Virheellinen sy\u00F6te`;\r\n        }\r\n    };\r\n};\r\nexport default function () {\r\n    return {\r\n        localeError: error(),\r\n    };\r\n}\r\n", "import * as util from \"../core/util.js\";\r\nconst error = () => {\r\n    const Sizable = {\r\n        string: { unit: \"caract\u00E8res\", verb: \"avoir\" },\r\n        file: { unit: \"octets\", verb: \"avoir\" },\r\n        array: { unit: \"\u00E9l\u00E9ments\", verb: \"avoir\" },\r\n        set: { unit: \"\u00E9l\u00E9ments\", verb: \"avoir\" },\r\n    };\r\n    function getSizing(origin) {\r\n        return Sizable[origin] ?? null;\r\n    }\r\n    const parsedType = (data) => {\r\n        const t = typeof data;\r\n        switch (t) {\r\n            case \"number\": {\r\n                return Number.isNaN(data) ? \"NaN\" : \"nombre\";\r\n            }\r\n            case \"object\": {\r\n                if (Array.isArray(data)) {\r\n                    return \"tableau\";\r\n                }\r\n                if (data === null) {\r\n                    return \"null\";\r\n                }\r\n                if (Object.getPrototypeOf(data) !== Object.prototype && data.constructor) {\r\n                    return data.constructor.name;\r\n                }\r\n            }\r\n        }\r\n        return t;\r\n    };\r\n    const Nouns = {\r\n        regex: \"entr\u00E9e\",\r\n        email: \"adresse e-mail\",\r\n        url: \"URL\",\r\n        emoji: \"emoji\",\r\n        uuid: \"UUID\",\r\n        uuidv4: \"UUIDv4\",\r\n        uuidv6: \"UUIDv6\",\r\n        nanoid: \"nanoid\",\r\n        guid: \"GUID\",\r\n        cuid: \"cuid\",\r\n        cuid2: \"cuid2\",\r\n        ulid: \"ULID\",\r\n        xid: \"XID\",\r\n        ksuid: \"KSUID\",\r\n        datetime: \"date et heure ISO\",\r\n        date: \"date ISO\",\r\n        time: \"heure ISO\",\r\n        duration: \"dur\u00E9e ISO\",\r\n        ipv4: \"adresse IPv4\",\r\n        ipv6: \"adresse IPv6\",\r\n        cidrv4: \"plage IPv4\",\r\n        cidrv6: \"plage IPv6\",\r\n        base64: \"cha\u00EEne encod\u00E9e en base64\",\r\n        base64url: \"cha\u00EEne encod\u00E9e en base64url\",\r\n        json_string: \"cha\u00EEne JSON\",\r\n        e164: \"num\u00E9ro E.164\",\r\n        jwt: \"JWT\",\r\n        template_literal: \"entr\u00E9e\",\r\n    };\r\n    return (issue) => {\r\n        switch (issue.code) {\r\n            case \"invalid_type\":\r\n                return `Entr\u00E9e invalide : ${issue.expected} attendu, ${parsedType(issue.input)} re\u00E7u`;\r\n            case \"invalid_value\":\r\n                if (issue.values.length === 1)\r\n                    return `Entr\u00E9e invalide : ${util.stringifyPrimitive(issue.values[0])} attendu`;\r\n                return `Option invalide : une valeur parmi ${util.joinValues(issue.values, \"|\")} attendue`;\r\n            case \"too_big\": {\r\n                const adj = issue.inclusive ? \"<=\" : \"<\";\r\n                const sizing = getSizing(issue.origin);\r\n                if (sizing)\r\n                    return `Trop grand : ${issue.origin ?? \"valeur\"} doit ${sizing.verb} ${adj}${issue.maximum.toString()} ${sizing.unit ?? \"\u00E9l\u00E9ment(s)\"}`;\r\n                return `Trop grand : ${issue.origin ?? \"valeur\"} doit \u00EAtre ${adj}${issue.maximum.toString()}`;\r\n            }\r\n            case \"too_small\": {\r\n                const adj = issue.inclusive ? \">=\" : \">\";\r\n                const sizing = getSizing(issue.origin);\r\n                if (sizing) {\r\n                    return `Trop petit : ${issue.origin} doit ${sizing.verb} ${adj}${issue.minimum.toString()} ${sizing.unit}`;\r\n                }\r\n                return `Trop petit : ${issue.origin} doit \u00EAtre ${adj}${issue.minimum.toString()}`;\r\n            }\r\n            case \"invalid_format\": {\r\n                const _issue = issue;\r\n                if (_issue.format === \"starts_with\")\r\n                    return `Cha\u00EEne invalide : doit commencer par \"${_issue.prefix}\"`;\r\n                if (_issue.format === \"ends_with\")\r\n                    return `Cha\u00EEne invalide : doit se terminer par \"${_issue.suffix}\"`;\r\n                if (_issue.format === \"includes\")\r\n                    return `Cha\u00EEne invalide : doit inclure \"${_issue.includes}\"`;\r\n                if (_issue.format === \"regex\")\r\n                    return `Cha\u00EEne invalide : doit correspondre au mod\u00E8le ${_issue.pattern}`;\r\n                return `${Nouns[_issue.format] ?? issue.format} invalide`;\r\n            }\r\n            case \"not_multiple_of\":\r\n                return `Nombre invalide : doit \u00EAtre un multiple de ${issue.divisor}`;\r\n            case \"unrecognized_keys\":\r\n                return `Cl\u00E9${issue.keys.length > 1 ? \"s\" : \"\"} non reconnue${issue.keys.length > 1 ? \"s\" : \"\"} : ${util.joinValues(issue.keys, \", \")}`;\r\n            case \"invalid_key\":\r\n                return `Cl\u00E9 invalide dans ${issue.origin}`;\r\n            case \"invalid_union\":\r\n                return \"Entr\u00E9e invalide\";\r\n            case \"invalid_element\":\r\n                return `Valeur invalide dans ${issue.origin}`;\r\n            default:\r\n                return `Entr\u00E9e invalide`;\r\n        }\r\n    };\r\n};\r\nexport default function () {\r\n    return {\r\n        localeError: error(),\r\n    };\r\n}\r\n", "import * as util from \"../core/util.js\";\r\nconst error = () => {\r\n    const Sizable = {\r\n        string: { unit: \"caract\u00E8res\", verb: \"avoir\" },\r\n        file: { unit: \"octets\", verb: \"avoir\" },\r\n        array: { unit: \"\u00E9l\u00E9ments\", verb: \"avoir\" },\r\n        set: { unit: \"\u00E9l\u00E9ments\", verb: \"avoir\" },\r\n    };\r\n    function getSizing(origin) {\r\n        return Sizable[origin] ?? null;\r\n    }\r\n    const parsedType = (data) => {\r\n        const t = typeof data;\r\n        switch (t) {\r\n            case \"number\": {\r\n                return Number.isNaN(data) ? \"NaN\" : \"number\";\r\n            }\r\n            case \"object\": {\r\n                if (Array.isArray(data)) {\r\n                    return \"array\";\r\n                }\r\n                if (data === null) {\r\n                    return \"null\";\r\n                }\r\n                if (Object.getPrototypeOf(data) !== Object.prototype && data.constructor) {\r\n                    return data.constructor.name;\r\n                }\r\n            }\r\n        }\r\n        return t;\r\n    };\r\n    const Nouns = {\r\n        regex: \"entr\u00E9e\",\r\n        email: \"adresse courriel\",\r\n        url: \"URL\",\r\n        emoji: \"emoji\",\r\n        uuid: \"UUID\",\r\n        uuidv4: \"UUIDv4\",\r\n        uuidv6: \"UUIDv6\",\r\n        nanoid: \"nanoid\",\r\n        guid: \"GUID\",\r\n        cuid: \"cuid\",\r\n        cuid2: \"cuid2\",\r\n        ulid: \"ULID\",\r\n        xid: \"XID\",\r\n        ksuid: \"KSUID\",\r\n        datetime: \"date-heure ISO\",\r\n        date: \"date ISO\",\r\n        time: \"heure ISO\",\r\n        duration: \"dur\u00E9e ISO\",\r\n        ipv4: \"adresse IPv4\",\r\n        ipv6: \"adresse IPv6\",\r\n        cidrv4: \"plage IPv4\",\r\n        cidrv6: \"plage IPv6\",\r\n        base64: \"cha\u00EEne encod\u00E9e en base64\",\r\n        base64url: \"cha\u00EEne encod\u00E9e en base64url\",\r\n        json_string: \"cha\u00EEne JSON\",\r\n        e164: \"num\u00E9ro E.164\",\r\n        jwt: \"JWT\",\r\n        template_literal: \"entr\u00E9e\",\r\n    };\r\n    return (issue) => {\r\n        switch (issue.code) {\r\n            case \"invalid_type\":\r\n                return `Entr\u00E9e invalide : attendu ${issue.expected}, re\u00E7u ${parsedType(issue.input)}`;\r\n            case \"invalid_value\":\r\n                if (issue.values.length === 1)\r\n                    return `Entr\u00E9e invalide : attendu ${util.stringifyPrimitive(issue.values[0])}`;\r\n                return `Option invalide : attendu l'une des valeurs suivantes ${util.joinValues(issue.values, \"|\")}`;\r\n            case \"too_big\": {\r\n                const adj = issue.inclusive ? \"\u2264\" : \"<\";\r\n                const sizing = getSizing(issue.origin);\r\n                if (sizing)\r\n                    return `Trop grand : attendu que ${issue.origin ?? \"la valeur\"} ait ${adj}${issue.maximum.toString()} ${sizing.unit}`;\r\n                return `Trop grand : attendu que ${issue.origin ?? \"la valeur\"} soit ${adj}${issue.maximum.toString()}`;\r\n            }\r\n            case \"too_small\": {\r\n                const adj = issue.inclusive ? \"\u2265\" : \">\";\r\n                const sizing = getSizing(issue.origin);\r\n                if (sizing) {\r\n                    return `Trop petit : attendu que ${issue.origin} ait ${adj}${issue.minimum.toString()} ${sizing.unit}`;\r\n                }\r\n                return `Trop petit : attendu que ${issue.origin} soit ${adj}${issue.minimum.toString()}`;\r\n            }\r\n            case \"invalid_format\": {\r\n                const _issue = issue;\r\n                if (_issue.format === \"starts_with\") {\r\n                    return `Cha\u00EEne invalide : doit commencer par \"${_issue.prefix}\"`;\r\n                }\r\n                if (_issue.format === \"ends_with\")\r\n                    return `Cha\u00EEne invalide : doit se terminer par \"${_issue.suffix}\"`;\r\n                if (_issue.format === \"includes\")\r\n                    return `Cha\u00EEne invalide : doit inclure \"${_issue.includes}\"`;\r\n                if (_issue.format === \"regex\")\r\n                    return `Cha\u00EEne invalide : doit correspondre au motif ${_issue.pattern}`;\r\n                return `${Nouns[_issue.format] ?? issue.format} invalide`;\r\n            }\r\n            case \"not_multiple_of\":\r\n                return `Nombre invalide : doit \u00EAtre un multiple de ${issue.divisor}`;\r\n            case \"unrecognized_keys\":\r\n                return `Cl\u00E9${issue.keys.length > 1 ? \"s\" : \"\"} non reconnue${issue.keys.length > 1 ? \"s\" : \"\"} : ${util.joinValues(issue.keys, \", \")}`;\r\n            case \"invalid_key\":\r\n                return `Cl\u00E9 invalide dans ${issue.origin}`;\r\n            case \"invalid_union\":\r\n                return \"Entr\u00E9e invalide\";\r\n            case \"invalid_element\":\r\n                return `Valeur invalide dans ${issue.origin}`;\r\n            default:\r\n                return `Entr\u00E9e invalide`;\r\n        }\r\n    };\r\n};\r\nexport default function () {\r\n    return {\r\n        localeError: error(),\r\n    };\r\n}\r\n", "import * as util from \"../core/util.js\";\r\nconst error = () => {\r\n    const Sizable = {\r\n        string: { unit: \"\u05D0\u05D5\u05EA\u05D9\u05D5\u05EA\", verb: \"\u05DC\u05DB\u05DC\u05D5\u05DC\" },\r\n        file: { unit: \"\u05D1\u05D9\u05D9\u05D8\u05D9\u05DD\", verb: \"\u05DC\u05DB\u05DC\u05D5\u05DC\" },\r\n        array: { unit: \"\u05E4\u05E8\u05D9\u05D8\u05D9\u05DD\", verb: \"\u05DC\u05DB\u05DC\u05D5\u05DC\" },\r\n        set: { unit: \"\u05E4\u05E8\u05D9\u05D8\u05D9\u05DD\", verb: \"\u05DC\u05DB\u05DC\u05D5\u05DC\" },\r\n    };\r\n    function getSizing(origin) {\r\n        return Sizable[origin] ?? null;\r\n    }\r\n    const parsedType = (data) => {\r\n        const t = typeof data;\r\n        switch (t) {\r\n            case \"number\": {\r\n                return Number.isNaN(data) ? \"NaN\" : \"number\";\r\n            }\r\n            case \"object\": {\r\n                if (Array.isArray(data)) {\r\n                    return \"array\";\r\n                }\r\n                if (data === null) {\r\n                    return \"null\";\r\n                }\r\n                if (Object.getPrototypeOf(data) !== Object.prototype && data.constructor) {\r\n                    return data.constructor.name;\r\n                }\r\n            }\r\n        }\r\n        return t;\r\n    };\r\n    const Nouns = {\r\n        regex: \"\u05E7\u05DC\u05D8\",\r\n        email: \"\u05DB\u05EA\u05D5\u05D1\u05EA \u05D0\u05D9\u05DE\u05D9\u05D9\u05DC\",\r\n        url: \"\u05DB\u05EA\u05D5\u05D1\u05EA \u05E8\u05E9\u05EA\",\r\n        emoji: \"\u05D0\u05D9\u05DE\u05D5\u05D2'\u05D9\",\r\n        uuid: \"UUID\",\r\n        uuidv4: \"UUIDv4\",\r\n        uuidv6: \"UUIDv6\",\r\n        nanoid: \"nanoid\",\r\n        guid: \"GUID\",\r\n        cuid: \"cuid\",\r\n        cuid2: \"cuid2\",\r\n        ulid: \"ULID\",\r\n        xid: \"XID\",\r\n        ksuid: \"KSUID\",\r\n        datetime: \"\u05EA\u05D0\u05E8\u05D9\u05DA \u05D5\u05D6\u05DE\u05DF ISO\",\r\n        date: \"\u05EA\u05D0\u05E8\u05D9\u05DA ISO\",\r\n        time: \"\u05D6\u05DE\u05DF ISO\",\r\n        duration: \"\u05DE\u05E9\u05DA \u05D6\u05DE\u05DF ISO\",\r\n        ipv4: \"\u05DB\u05EA\u05D5\u05D1\u05EA IPv4\",\r\n        ipv6: \"\u05DB\u05EA\u05D5\u05D1\u05EA IPv6\",\r\n        cidrv4: \"\u05D8\u05D5\u05D5\u05D7 IPv4\",\r\n        cidrv6: \"\u05D8\u05D5\u05D5\u05D7 IPv6\",\r\n        base64: \"\u05DE\u05D7\u05E8\u05D5\u05D6\u05EA \u05D1\u05D1\u05E1\u05D9\u05E1 64\",\r\n        base64url: \"\u05DE\u05D7\u05E8\u05D5\u05D6\u05EA \u05D1\u05D1\u05E1\u05D9\u05E1 64 \u05DC\u05DB\u05EA\u05D5\u05D1\u05D5\u05EA \u05E8\u05E9\u05EA\",\r\n        json_string: \"\u05DE\u05D7\u05E8\u05D5\u05D6\u05EA JSON\",\r\n        e164: \"\u05DE\u05E1\u05E4\u05E8 E.164\",\r\n        jwt: \"JWT\",\r\n        template_literal: \"\u05E7\u05DC\u05D8\",\r\n    };\r\n    return (issue) => {\r\n        switch (issue.code) {\r\n            case \"invalid_type\":\r\n                return `\u05E7\u05DC\u05D8 \u05DC\u05D0 \u05EA\u05E7\u05D9\u05DF: \u05E6\u05E8\u05D9\u05DA ${issue.expected}, \u05D4\u05EA\u05E7\u05D1\u05DC ${parsedType(issue.input)}`;\r\n            // return `Invalid input: expected ${issue.expected}, received ${util.getParsedType(issue.input)}`;\r\n            case \"invalid_value\":\r\n                if (issue.values.length === 1)\r\n                    return `\u05E7\u05DC\u05D8 \u05DC\u05D0 \u05EA\u05E7\u05D9\u05DF: \u05E6\u05E8\u05D9\u05DA ${util.stringifyPrimitive(issue.values[0])}`;\r\n                return `\u05E7\u05DC\u05D8 \u05DC\u05D0 \u05EA\u05E7\u05D9\u05DF: \u05E6\u05E8\u05D9\u05DA \u05D0\u05D7\u05EA \u05DE\u05D4\u05D0\u05E4\u05E9\u05E8\u05D5\u05D9\u05D5\u05EA  ${util.joinValues(issue.values, \"|\")}`;\r\n            case \"too_big\": {\r\n                const adj = issue.inclusive ? \"<=\" : \"<\";\r\n                const sizing = getSizing(issue.origin);\r\n                if (sizing)\r\n                    return `\u05D2\u05D3\u05D5\u05DC \u05DE\u05D3\u05D9: ${issue.origin ?? \"value\"} \u05E6\u05E8\u05D9\u05DA \u05DC\u05D4\u05D9\u05D5\u05EA ${adj}${issue.maximum.toString()} ${sizing.unit ?? \"elements\"}`;\r\n                return `\u05D2\u05D3\u05D5\u05DC \u05DE\u05D3\u05D9: ${issue.origin ?? \"value\"} \u05E6\u05E8\u05D9\u05DA \u05DC\u05D4\u05D9\u05D5\u05EA ${adj}${issue.maximum.toString()}`;\r\n            }\r\n            case \"too_small\": {\r\n                const adj = issue.inclusive ? \">=\" : \">\";\r\n                const sizing = getSizing(issue.origin);\r\n                if (sizing) {\r\n                    return `\u05E7\u05D8\u05DF \u05DE\u05D3\u05D9: ${issue.origin} \u05E6\u05E8\u05D9\u05DA \u05DC\u05D4\u05D9\u05D5\u05EA ${adj}${issue.minimum.toString()} ${sizing.unit}`;\r\n                }\r\n                return `\u05E7\u05D8\u05DF \u05DE\u05D3\u05D9: ${issue.origin} \u05E6\u05E8\u05D9\u05DA \u05DC\u05D4\u05D9\u05D5\u05EA ${adj}${issue.minimum.toString()}`;\r\n            }\r\n            case \"invalid_format\": {\r\n                const _issue = issue;\r\n                if (_issue.format === \"starts_with\")\r\n                    return `\u05DE\u05D7\u05E8\u05D5\u05D6\u05EA \u05DC\u05D0 \u05EA\u05E7\u05D9\u05E0\u05D4: \u05D7\u05D9\u05D9\u05D1\u05EA \u05DC\u05D4\u05EA\u05D7\u05D9\u05DC \u05D1\"${_issue.prefix}\"`;\r\n                if (_issue.format === \"ends_with\")\r\n                    return `\u05DE\u05D7\u05E8\u05D5\u05D6\u05EA \u05DC\u05D0 \u05EA\u05E7\u05D9\u05E0\u05D4: \u05D7\u05D9\u05D9\u05D1\u05EA \u05DC\u05D4\u05E1\u05EA\u05D9\u05D9\u05DD \u05D1 \"${_issue.suffix}\"`;\r\n                if (_issue.format === \"includes\")\r\n                    return `\u05DE\u05D7\u05E8\u05D5\u05D6\u05EA \u05DC\u05D0 \u05EA\u05E7\u05D9\u05E0\u05D4: \u05D7\u05D9\u05D9\u05D1\u05EA \u05DC\u05DB\u05DC\u05D5\u05DC \"${_issue.includes}\"`;\r\n                if (_issue.format === \"regex\")\r\n                    return `\u05DE\u05D7\u05E8\u05D5\u05D6\u05EA \u05DC\u05D0 \u05EA\u05E7\u05D9\u05E0\u05D4: \u05D7\u05D9\u05D9\u05D1\u05EA \u05DC\u05D4\u05EA\u05D0\u05D9\u05DD \u05DC\u05EA\u05D1\u05E0\u05D9\u05EA ${_issue.pattern}`;\r\n                return `${Nouns[_issue.format] ?? issue.format} \u05DC\u05D0 \u05EA\u05E7\u05D9\u05DF`;\r\n            }\r\n            case \"not_multiple_of\":\r\n                return `\u05DE\u05E1\u05E4\u05E8 \u05DC\u05D0 \u05EA\u05E7\u05D9\u05DF: \u05D7\u05D9\u05D9\u05D1 \u05DC\u05D4\u05D9\u05D5\u05EA \u05DE\u05DB\u05E4\u05DC\u05D4 \u05E9\u05DC ${issue.divisor}`;\r\n            case \"unrecognized_keys\":\r\n                return `\u05DE\u05E4\u05EA\u05D7${issue.keys.length > 1 ? \"\u05D5\u05EA\" : \"\"} \u05DC\u05D0 \u05DE\u05D6\u05D5\u05D4${issue.keys.length > 1 ? \"\u05D9\u05DD\" : \"\u05D4\"}: ${util.joinValues(issue.keys, \", \")}`;\r\n            case \"invalid_key\":\r\n                return `\u05DE\u05E4\u05EA\u05D7 \u05DC\u05D0 \u05EA\u05E7\u05D9\u05DF \u05D1${issue.origin}`;\r\n            case \"invalid_union\":\r\n                return \"\u05E7\u05DC\u05D8 \u05DC\u05D0 \u05EA\u05E7\u05D9\u05DF\";\r\n            case \"invalid_element\":\r\n                return `\u05E2\u05E8\u05DA \u05DC\u05D0 \u05EA\u05E7\u05D9\u05DF \u05D1${issue.origin}`;\r\n            default:\r\n                return `\u05E7\u05DC\u05D8 \u05DC\u05D0 \u05EA\u05E7\u05D9\u05DF`;\r\n        }\r\n    };\r\n};\r\nexport default function () {\r\n    return {\r\n        localeError: error(),\r\n    };\r\n}\r\n", "import * as util from \"../core/util.js\";\r\nconst error = () => {\r\n    const Sizable = {\r\n        string: { unit: \"karakter\", verb: \"legyen\" },\r\n        file: { unit: \"byte\", verb: \"legyen\" },\r\n        array: { unit: \"elem\", verb: \"legyen\" },\r\n        set: { unit: \"elem\", verb: \"legyen\" },\r\n    };\r\n    function getSizing(origin) {\r\n        return Sizable[origin] ?? null;\r\n    }\r\n    const parsedType = (data) => {\r\n        const t = typeof data;\r\n        switch (t) {\r\n            case \"number\": {\r\n                return Number.isNaN(data) ? \"NaN\" : \"sz\u00E1m\";\r\n            }\r\n            case \"object\": {\r\n                if (Array.isArray(data)) {\r\n                    return \"t\u00F6mb\";\r\n                }\r\n                if (data === null) {\r\n                    return \"null\";\r\n                }\r\n                if (Object.getPrototypeOf(data) !== Object.prototype && data.constructor) {\r\n                    return data.constructor.name;\r\n                }\r\n            }\r\n        }\r\n        return t;\r\n    };\r\n    const Nouns = {\r\n        regex: \"bemenet\",\r\n        email: \"email c\u00EDm\",\r\n        url: \"URL\",\r\n        emoji: \"emoji\",\r\n        uuid: \"UUID\",\r\n        uuidv4: \"UUIDv4\",\r\n        uuidv6: \"UUIDv6\",\r\n        nanoid: \"nanoid\",\r\n        guid: \"GUID\",\r\n        cuid: \"cuid\",\r\n        cuid2: \"cuid2\",\r\n        ulid: \"ULID\",\r\n        xid: \"XID\",\r\n        ksuid: \"KSUID\",\r\n        datetime: \"ISO id\u0151b\u00E9lyeg\",\r\n        date: \"ISO d\u00E1tum\",\r\n        time: \"ISO id\u0151\",\r\n        duration: \"ISO id\u0151intervallum\",\r\n        ipv4: \"IPv4 c\u00EDm\",\r\n        ipv6: \"IPv6 c\u00EDm\",\r\n        cidrv4: \"IPv4 tartom\u00E1ny\",\r\n        cidrv6: \"IPv6 tartom\u00E1ny\",\r\n        base64: \"base64-k\u00F3dolt string\",\r\n        base64url: \"base64url-k\u00F3dolt string\",\r\n        json_string: \"JSON string\",\r\n        e164: \"E.164 sz\u00E1m\",\r\n        jwt: \"JWT\",\r\n        template_literal: \"bemenet\",\r\n    };\r\n    return (issue) => {\r\n        switch (issue.code) {\r\n            case \"invalid_type\":\r\n                return `\u00C9rv\u00E9nytelen bemenet: a v\u00E1rt \u00E9rt\u00E9k ${issue.expected}, a kapott \u00E9rt\u00E9k ${parsedType(issue.input)}`;\r\n            // return `Invalid input: expected ${issue.expected}, received ${util.getParsedType(issue.input)}`;\r\n            case \"invalid_value\":\r\n                if (issue.values.length === 1)\r\n                    return `\u00C9rv\u00E9nytelen bemenet: a v\u00E1rt \u00E9rt\u00E9k ${util.stringifyPrimitive(issue.values[0])}`;\r\n                return `\u00C9rv\u00E9nytelen opci\u00F3: valamelyik \u00E9rt\u00E9k v\u00E1rt ${util.joinValues(issue.values, \"|\")}`;\r\n            case \"too_big\": {\r\n                const adj = issue.inclusive ? \"<=\" : \"<\";\r\n                const sizing = getSizing(issue.origin);\r\n                if (sizing)\r\n                    return `T\u00FAl nagy: ${issue.origin ?? \"\u00E9rt\u00E9k\"} m\u00E9rete t\u00FAl nagy ${adj}${issue.maximum.toString()} ${sizing.unit ?? \"elem\"}`;\r\n                return `T\u00FAl nagy: a bemeneti \u00E9rt\u00E9k ${issue.origin ?? \"\u00E9rt\u00E9k\"} t\u00FAl nagy: ${adj}${issue.maximum.toString()}`;\r\n            }\r\n            case \"too_small\": {\r\n                const adj = issue.inclusive ? \">=\" : \">\";\r\n                const sizing = getSizing(issue.origin);\r\n                if (sizing) {\r\n                    return `T\u00FAl kicsi: a bemeneti \u00E9rt\u00E9k ${issue.origin} m\u00E9rete t\u00FAl kicsi ${adj}${issue.minimum.toString()} ${sizing.unit}`;\r\n                }\r\n                return `T\u00FAl kicsi: a bemeneti \u00E9rt\u00E9k ${issue.origin} t\u00FAl kicsi ${adj}${issue.minimum.toString()}`;\r\n            }\r\n            case \"invalid_format\": {\r\n                const _issue = issue;\r\n                if (_issue.format === \"starts_with\")\r\n                    return `\u00C9rv\u00E9nytelen string: \"${_issue.prefix}\" \u00E9rt\u00E9kkel kell kezd\u0151dnie`;\r\n                if (_issue.format === \"ends_with\")\r\n                    return `\u00C9rv\u00E9nytelen string: \"${_issue.suffix}\" \u00E9rt\u00E9kkel kell v\u00E9gz\u0151dnie`;\r\n                if (_issue.format === \"includes\")\r\n                    return `\u00C9rv\u00E9nytelen string: \"${_issue.includes}\" \u00E9rt\u00E9ket kell tartalmaznia`;\r\n                if (_issue.format === \"regex\")\r\n                    return `\u00C9rv\u00E9nytelen string: ${_issue.pattern} mint\u00E1nak kell megfelelnie`;\r\n                return `\u00C9rv\u00E9nytelen ${Nouns[_issue.format] ?? issue.format}`;\r\n            }\r\n            case \"not_multiple_of\":\r\n                return `\u00C9rv\u00E9nytelen sz\u00E1m: ${issue.divisor} t\u00F6bbsz\u00F6r\u00F6s\u00E9nek kell lennie`;\r\n            case \"unrecognized_keys\":\r\n                return `Ismeretlen kulcs${issue.keys.length > 1 ? \"s\" : \"\"}: ${util.joinValues(issue.keys, \", \")}`;\r\n            case \"invalid_key\":\r\n                return `\u00C9rv\u00E9nytelen kulcs ${issue.origin}`;\r\n            case \"invalid_union\":\r\n                return \"\u00C9rv\u00E9nytelen bemenet\";\r\n            case \"invalid_element\":\r\n                return `\u00C9rv\u00E9nytelen \u00E9rt\u00E9k: ${issue.origin}`;\r\n            default:\r\n                return `\u00C9rv\u00E9nytelen bemenet`;\r\n        }\r\n    };\r\n};\r\nexport default function () {\r\n    return {\r\n        localeError: error(),\r\n    };\r\n}\r\n", "import * as util from \"../core/util.js\";\r\nconst error = () => {\r\n    const Sizable = {\r\n        string: { unit: \"karakter\", verb: \"memiliki\" },\r\n        file: { unit: \"byte\", verb: \"memiliki\" },\r\n        array: { unit: \"item\", verb: \"memiliki\" },\r\n        set: { unit: \"item\", verb: \"memiliki\" },\r\n    };\r\n    function getSizing(origin) {\r\n        return Sizable[origin] ?? null;\r\n    }\r\n    const parsedType = (data) => {\r\n        const t = typeof data;\r\n        switch (t) {\r\n            case \"number\": {\r\n                return Number.isNaN(data) ? \"NaN\" : \"number\";\r\n            }\r\n            case \"object\": {\r\n                if (Array.isArray(data)) {\r\n                    return \"array\";\r\n                }\r\n                if (data === null) {\r\n                    return \"null\";\r\n                }\r\n                if (Object.getPrototypeOf(data) !== Object.prototype && data.constructor) {\r\n                    return data.constructor.name;\r\n                }\r\n            }\r\n        }\r\n        return t;\r\n    };\r\n    const Nouns = {\r\n        regex: \"input\",\r\n        email: \"alamat email\",\r\n        url: \"URL\",\r\n        emoji: \"emoji\",\r\n        uuid: \"UUID\",\r\n        uuidv4: \"UUIDv4\",\r\n        uuidv6: \"UUIDv6\",\r\n        nanoid: \"nanoid\",\r\n        guid: \"GUID\",\r\n        cuid: \"cuid\",\r\n        cuid2: \"cuid2\",\r\n        ulid: \"ULID\",\r\n        xid: \"XID\",\r\n        ksuid: \"KSUID\",\r\n        datetime: \"tanggal dan waktu format ISO\",\r\n        date: \"tanggal format ISO\",\r\n        time: \"jam format ISO\",\r\n        duration: \"durasi format ISO\",\r\n        ipv4: \"alamat IPv4\",\r\n        ipv6: \"alamat IPv6\",\r\n        cidrv4: \"rentang alamat IPv4\",\r\n        cidrv6: \"rentang alamat IPv6\",\r\n        base64: \"string dengan enkode base64\",\r\n        base64url: \"string dengan enkode base64url\",\r\n        json_string: \"string JSON\",\r\n        e164: \"angka E.164\",\r\n        jwt: \"JWT\",\r\n        template_literal: \"input\",\r\n    };\r\n    return (issue) => {\r\n        switch (issue.code) {\r\n            case \"invalid_type\":\r\n                return `Input tidak valid: diharapkan ${issue.expected}, diterima ${parsedType(issue.input)}`;\r\n            case \"invalid_value\":\r\n                if (issue.values.length === 1)\r\n                    return `Input tidak valid: diharapkan ${util.stringifyPrimitive(issue.values[0])}`;\r\n                return `Pilihan tidak valid: diharapkan salah satu dari ${util.joinValues(issue.values, \"|\")}`;\r\n            case \"too_big\": {\r\n                const adj = issue.inclusive ? \"<=\" : \"<\";\r\n                const sizing = getSizing(issue.origin);\r\n                if (sizing)\r\n                    return `Terlalu besar: diharapkan ${issue.origin ?? \"value\"} memiliki ${adj}${issue.maximum.toString()} ${sizing.unit ?? \"elemen\"}`;\r\n                return `Terlalu besar: diharapkan ${issue.origin ?? \"value\"} menjadi ${adj}${issue.maximum.toString()}`;\r\n            }\r\n            case \"too_small\": {\r\n                const adj = issue.inclusive ? \">=\" : \">\";\r\n                const sizing = getSizing(issue.origin);\r\n                if (sizing) {\r\n                    return `Terlalu kecil: diharapkan ${issue.origin} memiliki ${adj}${issue.minimum.toString()} ${sizing.unit}`;\r\n                }\r\n                return `Terlalu kecil: diharapkan ${issue.origin} menjadi ${adj}${issue.minimum.toString()}`;\r\n            }\r\n            case \"invalid_format\": {\r\n                const _issue = issue;\r\n                if (_issue.format === \"starts_with\")\r\n                    return `String tidak valid: harus dimulai dengan \"${_issue.prefix}\"`;\r\n                if (_issue.format === \"ends_with\")\r\n                    return `String tidak valid: harus berakhir dengan \"${_issue.suffix}\"`;\r\n                if (_issue.format === \"includes\")\r\n                    return `String tidak valid: harus menyertakan \"${_issue.includes}\"`;\r\n                if (_issue.format === \"regex\")\r\n                    return `String tidak valid: harus sesuai pola ${_issue.pattern}`;\r\n                return `${Nouns[_issue.format] ?? issue.format} tidak valid`;\r\n            }\r\n            case \"not_multiple_of\":\r\n                return `Angka tidak valid: harus kelipatan dari ${issue.divisor}`;\r\n            case \"unrecognized_keys\":\r\n                return `Kunci tidak dikenali ${issue.keys.length > 1 ? \"s\" : \"\"}: ${util.joinValues(issue.keys, \", \")}`;\r\n            case \"invalid_key\":\r\n                return `Kunci tidak valid di ${issue.origin}`;\r\n            case \"invalid_union\":\r\n                return \"Input tidak valid\";\r\n            case \"invalid_element\":\r\n                return `Nilai tidak valid di ${issue.origin}`;\r\n            default:\r\n                return `Input tidak valid`;\r\n        }\r\n    };\r\n};\r\nexport default function () {\r\n    return {\r\n        localeError: error(),\r\n    };\r\n}\r\n", "import * as util from \"../core/util.js\";\r\nexport const parsedType = (data) => {\r\n    const t = typeof data;\r\n    switch (t) {\r\n        case \"number\": {\r\n            return Number.isNaN(data) ? \"NaN\" : \"n\u00FAmer\";\r\n        }\r\n        case \"object\": {\r\n            if (Array.isArray(data)) {\r\n                return \"fylki\";\r\n            }\r\n            if (data === null) {\r\n                return \"null\";\r\n            }\r\n            if (Object.getPrototypeOf(data) !== Object.prototype && data.constructor) {\r\n                return data.constructor.name;\r\n            }\r\n        }\r\n    }\r\n    return t;\r\n};\r\nconst error = () => {\r\n    const Sizable = {\r\n        string: { unit: \"stafi\", verb: \"a\u00F0 hafa\" },\r\n        file: { unit: \"b\u00E6ti\", verb: \"a\u00F0 hafa\" },\r\n        array: { unit: \"hluti\", verb: \"a\u00F0 hafa\" },\r\n        set: { unit: \"hluti\", verb: \"a\u00F0 hafa\" },\r\n    };\r\n    function getSizing(origin) {\r\n        return Sizable[origin] ?? null;\r\n    }\r\n    const Nouns = {\r\n        regex: \"gildi\",\r\n        email: \"netfang\",\r\n        url: \"vefsl\u00F3\u00F0\",\r\n        emoji: \"emoji\",\r\n        uuid: \"UUID\",\r\n        uuidv4: \"UUIDv4\",\r\n        uuidv6: \"UUIDv6\",\r\n        nanoid: \"nanoid\",\r\n        guid: \"GUID\",\r\n        cuid: \"cuid\",\r\n        cuid2: \"cuid2\",\r\n        ulid: \"ULID\",\r\n        xid: \"XID\",\r\n        ksuid: \"KSUID\",\r\n        datetime: \"ISO dagsetning og t\u00EDmi\",\r\n        date: \"ISO dagsetning\",\r\n        time: \"ISO t\u00EDmi\",\r\n        duration: \"ISO t\u00EDmalengd\",\r\n        ipv4: \"IPv4 address\",\r\n        ipv6: \"IPv6 address\",\r\n        cidrv4: \"IPv4 range\",\r\n        cidrv6: \"IPv6 range\",\r\n        base64: \"base64-encoded strengur\",\r\n        base64url: \"base64url-encoded strengur\",\r\n        json_string: \"JSON strengur\",\r\n        e164: \"E.164 t\u00F6lugildi\",\r\n        jwt: \"JWT\",\r\n        template_literal: \"gildi\",\r\n    };\r\n    return (issue) => {\r\n        switch (issue.code) {\r\n            case \"invalid_type\":\r\n                return `Rangt gildi: \u00DE\u00FA sl\u00F3st inn ${parsedType(issue.input)} \u00FEar sem \u00E1 a\u00F0 vera ${issue.expected}`;\r\n            case \"invalid_value\":\r\n                if (issue.values.length === 1)\r\n                    return `Rangt gildi: gert r\u00E1\u00F0 fyrir ${util.stringifyPrimitive(issue.values[0])}`;\r\n                return `\u00D3gilt val: m\u00E1 vera eitt af eftirfarandi ${util.joinValues(issue.values, \"|\")}`;\r\n            case \"too_big\": {\r\n                const adj = issue.inclusive ? \"<=\" : \"<\";\r\n                const sizing = getSizing(issue.origin);\r\n                if (sizing)\r\n                    return `Of st\u00F3rt: gert er r\u00E1\u00F0 fyrir a\u00F0 ${issue.origin ?? \"gildi\"} hafi ${adj}${issue.maximum.toString()} ${sizing.unit ?? \"hluti\"}`;\r\n                return `Of st\u00F3rt: gert er r\u00E1\u00F0 fyrir a\u00F0 ${issue.origin ?? \"gildi\"} s\u00E9 ${adj}${issue.maximum.toString()}`;\r\n            }\r\n            case \"too_small\": {\r\n                const adj = issue.inclusive ? \">=\" : \">\";\r\n                const sizing = getSizing(issue.origin);\r\n                if (sizing) {\r\n                    return `Of l\u00EDti\u00F0: gert er r\u00E1\u00F0 fyrir a\u00F0 ${issue.origin} hafi ${adj}${issue.minimum.toString()} ${sizing.unit}`;\r\n                }\r\n                return `Of l\u00EDti\u00F0: gert er r\u00E1\u00F0 fyrir a\u00F0 ${issue.origin} s\u00E9 ${adj}${issue.minimum.toString()}`;\r\n            }\r\n            case \"invalid_format\": {\r\n                const _issue = issue;\r\n                if (_issue.format === \"starts_with\") {\r\n                    return `\u00D3gildur strengur: ver\u00F0ur a\u00F0 byrja \u00E1 \"${_issue.prefix}\"`;\r\n                }\r\n                if (_issue.format === \"ends_with\")\r\n                    return `\u00D3gildur strengur: ver\u00F0ur a\u00F0 enda \u00E1 \"${_issue.suffix}\"`;\r\n                if (_issue.format === \"includes\")\r\n                    return `\u00D3gildur strengur: ver\u00F0ur a\u00F0 innihalda \"${_issue.includes}\"`;\r\n                if (_issue.format === \"regex\")\r\n                    return `\u00D3gildur strengur: ver\u00F0ur a\u00F0 fylgja mynstri ${_issue.pattern}`;\r\n                return `Rangt ${Nouns[_issue.format] ?? issue.format}`;\r\n            }\r\n            case \"not_multiple_of\":\r\n                return `R\u00F6ng tala: ver\u00F0ur a\u00F0 vera margfeldi af ${issue.divisor}`;\r\n            case \"unrecognized_keys\":\r\n                return `\u00D3\u00FEekkt ${issue.keys.length > 1 ? \"ir lyklar\" : \"ur lykill\"}: ${util.joinValues(issue.keys, \", \")}`;\r\n            case \"invalid_key\":\r\n                return `Rangur lykill \u00ED ${issue.origin}`;\r\n            case \"invalid_union\":\r\n                return \"Rangt gildi\";\r\n            case \"invalid_element\":\r\n                return `Rangt gildi \u00ED ${issue.origin}`;\r\n            default:\r\n                return `Rangt gildi`;\r\n        }\r\n    };\r\n};\r\nexport default function () {\r\n    return {\r\n        localeError: error(),\r\n    };\r\n}\r\n", "import * as util from \"../core/util.js\";\r\nconst error = () => {\r\n    const Sizable = {\r\n        string: { unit: \"caratteri\", verb: \"avere\" },\r\n        file: { unit: \"byte\", verb: \"avere\" },\r\n        array: { unit: \"elementi\", verb: \"avere\" },\r\n        set: { unit: \"elementi\", verb: \"avere\" },\r\n    };\r\n    function getSizing(origin) {\r\n        return Sizable[origin] ?? null;\r\n    }\r\n    const parsedType = (data) => {\r\n        const t = typeof data;\r\n        switch (t) {\r\n            case \"number\": {\r\n                return Number.isNaN(data) ? \"NaN\" : \"numero\";\r\n            }\r\n            case \"object\": {\r\n                if (Array.isArray(data)) {\r\n                    return \"vettore\";\r\n                }\r\n                if (data === null) {\r\n                    return \"null\";\r\n                }\r\n                if (Object.getPrototypeOf(data) !== Object.prototype && data.constructor) {\r\n                    return data.constructor.name;\r\n                }\r\n            }\r\n        }\r\n        return t;\r\n    };\r\n    const Nouns = {\r\n        regex: \"input\",\r\n        email: \"indirizzo email\",\r\n        url: \"URL\",\r\n        emoji: \"emoji\",\r\n        uuid: \"UUID\",\r\n        uuidv4: \"UUIDv4\",\r\n        uuidv6: \"UUIDv6\",\r\n        nanoid: \"nanoid\",\r\n        guid: \"GUID\",\r\n        cuid: \"cuid\",\r\n        cuid2: \"cuid2\",\r\n        ulid: \"ULID\",\r\n        xid: \"XID\",\r\n        ksuid: \"KSUID\",\r\n        datetime: \"data e ora ISO\",\r\n        date: \"data ISO\",\r\n        time: \"ora ISO\",\r\n        duration: \"durata ISO\",\r\n        ipv4: \"indirizzo IPv4\",\r\n        ipv6: \"indirizzo IPv6\",\r\n        cidrv4: \"intervallo IPv4\",\r\n        cidrv6: \"intervallo IPv6\",\r\n        base64: \"stringa codificata in base64\",\r\n        base64url: \"URL codificata in base64\",\r\n        json_string: \"stringa JSON\",\r\n        e164: \"numero E.164\",\r\n        jwt: \"JWT\",\r\n        template_literal: \"input\",\r\n    };\r\n    return (issue) => {\r\n        switch (issue.code) {\r\n            case \"invalid_type\":\r\n                return `Input non valido: atteso ${issue.expected}, ricevuto ${parsedType(issue.input)}`;\r\n            // return `Input non valido: atteso ${issue.expected}, ricevuto ${util.getParsedType(issue.input)}`;\r\n            case \"invalid_value\":\r\n                if (issue.values.length === 1)\r\n                    return `Input non valido: atteso ${util.stringifyPrimitive(issue.values[0])}`;\r\n                return `Opzione non valida: atteso uno tra ${util.joinValues(issue.values, \"|\")}`;\r\n            case \"too_big\": {\r\n                const adj = issue.inclusive ? \"<=\" : \"<\";\r\n                const sizing = getSizing(issue.origin);\r\n                if (sizing)\r\n                    return `Troppo grande: ${issue.origin ?? \"valore\"} deve avere ${adj}${issue.maximum.toString()} ${sizing.unit ?? \"elementi\"}`;\r\n                return `Troppo grande: ${issue.origin ?? \"valore\"} deve essere ${adj}${issue.maximum.toString()}`;\r\n            }\r\n            case \"too_small\": {\r\n                const adj = issue.inclusive ? \">=\" : \">\";\r\n                const sizing = getSizing(issue.origin);\r\n                if (sizing) {\r\n                    return `Troppo piccolo: ${issue.origin} deve avere ${adj}${issue.minimum.toString()} ${sizing.unit}`;\r\n                }\r\n                return `Troppo piccolo: ${issue.origin} deve essere ${adj}${issue.minimum.toString()}`;\r\n            }\r\n            case \"invalid_format\": {\r\n                const _issue = issue;\r\n                if (_issue.format === \"starts_with\")\r\n                    return `Stringa non valida: deve iniziare con \"${_issue.prefix}\"`;\r\n                if (_issue.format === \"ends_with\")\r\n                    return `Stringa non valida: deve terminare con \"${_issue.suffix}\"`;\r\n                if (_issue.format === \"includes\")\r\n                    return `Stringa non valida: deve includere \"${_issue.includes}\"`;\r\n                if (_issue.format === \"regex\")\r\n                    return `Stringa non valida: deve corrispondere al pattern ${_issue.pattern}`;\r\n                return `Invalid ${Nouns[_issue.format] ?? issue.format}`;\r\n            }\r\n            case \"not_multiple_of\":\r\n                return `Numero non valido: deve essere un multiplo di ${issue.divisor}`;\r\n            case \"unrecognized_keys\":\r\n                return `Chiav${issue.keys.length > 1 ? \"i\" : \"e\"} non riconosciut${issue.keys.length > 1 ? \"e\" : \"a\"}: ${util.joinValues(issue.keys, \", \")}`;\r\n            case \"invalid_key\":\r\n                return `Chiave non valida in ${issue.origin}`;\r\n            case \"invalid_union\":\r\n                return \"Input non valido\";\r\n            case \"invalid_element\":\r\n                return `Valore non valido in ${issue.origin}`;\r\n            default:\r\n                return `Input non valido`;\r\n        }\r\n    };\r\n};\r\nexport default function () {\r\n    return {\r\n        localeError: error(),\r\n    };\r\n}\r\n", "import * as util from \"../core/util.js\";\r\nconst error = () => {\r\n    const Sizable = {\r\n        string: { unit: \"\u6587\u5B57\", verb: \"\u3067\u3042\u308B\" },\r\n        file: { unit: \"\u30D0\u30A4\u30C8\", verb: \"\u3067\u3042\u308B\" },\r\n        array: { unit: \"\u8981\u7D20\", verb: \"\u3067\u3042\u308B\" },\r\n        set: { unit: \"\u8981\u7D20\", verb: \"\u3067\u3042\u308B\" },\r\n    };\r\n    function getSizing(origin) {\r\n        return Sizable[origin] ?? null;\r\n    }\r\n    const parsedType = (data) => {\r\n        const t = typeof data;\r\n        switch (t) {\r\n            case \"number\": {\r\n                return Number.isNaN(data) ? \"NaN\" : \"\u6570\u5024\";\r\n            }\r\n            case \"object\": {\r\n                if (Array.isArray(data)) {\r\n                    return \"\u914D\u5217\";\r\n                }\r\n                if (data === null) {\r\n                    return \"null\";\r\n                }\r\n                if (Object.getPrototypeOf(data) !== Object.prototype && data.constructor) {\r\n                    return data.constructor.name;\r\n                }\r\n            }\r\n        }\r\n        return t;\r\n    };\r\n    const Nouns = {\r\n        regex: \"\u5165\u529B\u5024\",\r\n        email: \"\u30E1\u30FC\u30EB\u30A2\u30C9\u30EC\u30B9\",\r\n        url: \"URL\",\r\n        emoji: \"\u7D75\u6587\u5B57\",\r\n        uuid: \"UUID\",\r\n        uuidv4: \"UUIDv4\",\r\n        uuidv6: \"UUIDv6\",\r\n        nanoid: \"nanoid\",\r\n        guid: \"GUID\",\r\n        cuid: \"cuid\",\r\n        cuid2: \"cuid2\",\r\n        ulid: \"ULID\",\r\n        xid: \"XID\",\r\n        ksuid: \"KSUID\",\r\n        datetime: \"ISO\u65E5\u6642\",\r\n        date: \"ISO\u65E5\u4ED8\",\r\n        time: \"ISO\u6642\u523B\",\r\n        duration: \"ISO\u671F\u9593\",\r\n        ipv4: \"IPv4\u30A2\u30C9\u30EC\u30B9\",\r\n        ipv6: \"IPv6\u30A2\u30C9\u30EC\u30B9\",\r\n        cidrv4: \"IPv4\u7BC4\u56F2\",\r\n        cidrv6: \"IPv6\u7BC4\u56F2\",\r\n        base64: \"base64\u30A8\u30F3\u30B3\u30FC\u30C9\u6587\u5B57\u5217\",\r\n        base64url: \"base64url\u30A8\u30F3\u30B3\u30FC\u30C9\u6587\u5B57\u5217\",\r\n        json_string: \"JSON\u6587\u5B57\u5217\",\r\n        e164: \"E.164\u756A\u53F7\",\r\n        jwt: \"JWT\",\r\n        template_literal: \"\u5165\u529B\u5024\",\r\n    };\r\n    return (issue) => {\r\n        switch (issue.code) {\r\n            case \"invalid_type\":\r\n                return `\u7121\u52B9\u306A\u5165\u529B: ${issue.expected}\u304C\u671F\u5F85\u3055\u308C\u307E\u3057\u305F\u304C\u3001${parsedType(issue.input)}\u304C\u5165\u529B\u3055\u308C\u307E\u3057\u305F`;\r\n            case \"invalid_value\":\r\n                if (issue.values.length === 1)\r\n                    return `\u7121\u52B9\u306A\u5165\u529B: ${util.stringifyPrimitive(issue.values[0])}\u304C\u671F\u5F85\u3055\u308C\u307E\u3057\u305F`;\r\n                return `\u7121\u52B9\u306A\u9078\u629E: ${util.joinValues(issue.values, \"\u3001\")}\u306E\u3044\u305A\u308C\u304B\u3067\u3042\u308B\u5FC5\u8981\u304C\u3042\u308A\u307E\u3059`;\r\n            case \"too_big\": {\r\n                const adj = issue.inclusive ? \"\u4EE5\u4E0B\u3067\u3042\u308B\" : \"\u3088\u308A\u5C0F\u3055\u3044\";\r\n                const sizing = getSizing(issue.origin);\r\n                if (sizing)\r\n                    return `\u5927\u304D\u3059\u304E\u308B\u5024: ${issue.origin ?? \"\u5024\"}\u306F${issue.maximum.toString()}${sizing.unit ?? \"\u8981\u7D20\"}${adj}\u5FC5\u8981\u304C\u3042\u308A\u307E\u3059`;\r\n                return `\u5927\u304D\u3059\u304E\u308B\u5024: ${issue.origin ?? \"\u5024\"}\u306F${issue.maximum.toString()}${adj}\u5FC5\u8981\u304C\u3042\u308A\u307E\u3059`;\r\n            }\r\n            case \"too_small\": {\r\n                const adj = issue.inclusive ? \"\u4EE5\u4E0A\u3067\u3042\u308B\" : \"\u3088\u308A\u5927\u304D\u3044\";\r\n                const sizing = getSizing(issue.origin);\r\n                if (sizing)\r\n                    return `\u5C0F\u3055\u3059\u304E\u308B\u5024: ${issue.origin}\u306F${issue.minimum.toString()}${sizing.unit}${adj}\u5FC5\u8981\u304C\u3042\u308A\u307E\u3059`;\r\n                return `\u5C0F\u3055\u3059\u304E\u308B\u5024: ${issue.origin}\u306F${issue.minimum.toString()}${adj}\u5FC5\u8981\u304C\u3042\u308A\u307E\u3059`;\r\n            }\r\n            case \"invalid_format\": {\r\n                const _issue = issue;\r\n                if (_issue.format === \"starts_with\")\r\n                    return `\u7121\u52B9\u306A\u6587\u5B57\u5217: \"${_issue.prefix}\"\u3067\u59CB\u307E\u308B\u5FC5\u8981\u304C\u3042\u308A\u307E\u3059`;\r\n                if (_issue.format === \"ends_with\")\r\n                    return `\u7121\u52B9\u306A\u6587\u5B57\u5217: \"${_issue.suffix}\"\u3067\u7D42\u308F\u308B\u5FC5\u8981\u304C\u3042\u308A\u307E\u3059`;\r\n                if (_issue.format === \"includes\")\r\n                    return `\u7121\u52B9\u306A\u6587\u5B57\u5217: \"${_issue.includes}\"\u3092\u542B\u3080\u5FC5\u8981\u304C\u3042\u308A\u307E\u3059`;\r\n                if (_issue.format === \"regex\")\r\n                    return `\u7121\u52B9\u306A\u6587\u5B57\u5217: \u30D1\u30BF\u30FC\u30F3${_issue.pattern}\u306B\u4E00\u81F4\u3059\u308B\u5FC5\u8981\u304C\u3042\u308A\u307E\u3059`;\r\n                return `\u7121\u52B9\u306A${Nouns[_issue.format] ?? issue.format}`;\r\n            }\r\n            case \"not_multiple_of\":\r\n                return `\u7121\u52B9\u306A\u6570\u5024: ${issue.divisor}\u306E\u500D\u6570\u3067\u3042\u308B\u5FC5\u8981\u304C\u3042\u308A\u307E\u3059`;\r\n            case \"unrecognized_keys\":\r\n                return `\u8A8D\u8B58\u3055\u308C\u3066\u3044\u306A\u3044\u30AD\u30FC${issue.keys.length > 1 ? \"\u7FA4\" : \"\"}: ${util.joinValues(issue.keys, \"\u3001\")}`;\r\n            case \"invalid_key\":\r\n                return `${issue.origin}\u5185\u306E\u7121\u52B9\u306A\u30AD\u30FC`;\r\n            case \"invalid_union\":\r\n                return \"\u7121\u52B9\u306A\u5165\u529B\";\r\n            case \"invalid_element\":\r\n                return `${issue.origin}\u5185\u306E\u7121\u52B9\u306A\u5024`;\r\n            default:\r\n                return `\u7121\u52B9\u306A\u5165\u529B`;\r\n        }\r\n    };\r\n};\r\nexport default function () {\r\n    return {\r\n        localeError: error(),\r\n    };\r\n}\r\n", "import * as util from \"../core/util.js\";\r\nexport const parsedType = (data) => {\r\n    const t = typeof data;\r\n    switch (t) {\r\n        case \"number\": {\r\n            return Number.isNaN(data) ? \"NaN\" : \"\u10E0\u10D8\u10EA\u10EE\u10D5\u10D8\";\r\n        }\r\n        case \"object\": {\r\n            if (Array.isArray(data)) {\r\n                return \"\u10DB\u10D0\u10E1\u10D8\u10D5\u10D8\";\r\n            }\r\n            if (data === null) {\r\n                return \"null\";\r\n            }\r\n            if (Object.getPrototypeOf(data) !== Object.prototype && data.constructor) {\r\n                return data.constructor.name;\r\n            }\r\n        }\r\n    }\r\n    const typeMap = {\r\n        string: \"\u10E1\u10E2\u10E0\u10D8\u10DC\u10D2\u10D8\",\r\n        boolean: \"\u10D1\u10E3\u10DA\u10D4\u10D0\u10DC\u10D8\",\r\n        undefined: \"undefined\",\r\n        bigint: \"bigint\",\r\n        symbol: \"symbol\",\r\n        function: \"\u10E4\u10E3\u10DC\u10E5\u10EA\u10D8\u10D0\",\r\n    };\r\n    return typeMap[t] ?? t;\r\n};\r\nconst error = () => {\r\n    const Sizable = {\r\n        string: { unit: \"\u10E1\u10D8\u10DB\u10D1\u10DD\u10DA\u10DD\", verb: \"\u10E3\u10DC\u10D3\u10D0 \u10E8\u10D4\u10D8\u10EA\u10D0\u10D5\u10D3\u10D4\u10E1\" },\r\n        file: { unit: \"\u10D1\u10D0\u10D8\u10E2\u10D8\", verb: \"\u10E3\u10DC\u10D3\u10D0 \u10E8\u10D4\u10D8\u10EA\u10D0\u10D5\u10D3\u10D4\u10E1\" },\r\n        array: { unit: \"\u10D4\u10DA\u10D4\u10DB\u10D4\u10DC\u10E2\u10D8\", verb: \"\u10E3\u10DC\u10D3\u10D0 \u10E8\u10D4\u10D8\u10EA\u10D0\u10D5\u10D3\u10D4\u10E1\" },\r\n        set: { unit: \"\u10D4\u10DA\u10D4\u10DB\u10D4\u10DC\u10E2\u10D8\", verb: \"\u10E3\u10DC\u10D3\u10D0 \u10E8\u10D4\u10D8\u10EA\u10D0\u10D5\u10D3\u10D4\u10E1\" },\r\n    };\r\n    function getSizing(origin) {\r\n        return Sizable[origin] ?? null;\r\n    }\r\n    const Nouns = {\r\n        regex: \"\u10E8\u10D4\u10E7\u10D5\u10D0\u10DC\u10D0\",\r\n        email: \"\u10D4\u10DA-\u10E4\u10DD\u10E1\u10E2\u10D8\u10E1 \u10DB\u10D8\u10E1\u10D0\u10DB\u10D0\u10E0\u10D7\u10D8\",\r\n        url: \"URL\",\r\n        emoji: \"\u10D4\u10DB\u10DD\u10EF\u10D8\",\r\n        uuid: \"UUID\",\r\n        uuidv4: \"UUIDv4\",\r\n        uuidv6: \"UUIDv6\",\r\n        nanoid: \"nanoid\",\r\n        guid: \"GUID\",\r\n        cuid: \"cuid\",\r\n        cuid2: \"cuid2\",\r\n        ulid: \"ULID\",\r\n        xid: \"XID\",\r\n        ksuid: \"KSUID\",\r\n        datetime: \"\u10D7\u10D0\u10E0\u10D8\u10E6\u10D8-\u10D3\u10E0\u10DD\",\r\n        date: \"\u10D7\u10D0\u10E0\u10D8\u10E6\u10D8\",\r\n        time: \"\u10D3\u10E0\u10DD\",\r\n        duration: \"\u10EE\u10D0\u10DC\u10D2\u10E0\u10EB\u10DA\u10D8\u10D5\u10DD\u10D1\u10D0\",\r\n        ipv4: \"IPv4 \u10DB\u10D8\u10E1\u10D0\u10DB\u10D0\u10E0\u10D7\u10D8\",\r\n        ipv6: \"IPv6 \u10DB\u10D8\u10E1\u10D0\u10DB\u10D0\u10E0\u10D7\u10D8\",\r\n        cidrv4: \"IPv4 \u10D3\u10D8\u10D0\u10DE\u10D0\u10D6\u10DD\u10DC\u10D8\",\r\n        cidrv6: \"IPv6 \u10D3\u10D8\u10D0\u10DE\u10D0\u10D6\u10DD\u10DC\u10D8\",\r\n        base64: \"base64-\u10D9\u10DD\u10D3\u10D8\u10E0\u10D4\u10D1\u10E3\u10DA\u10D8 \u10E1\u10E2\u10E0\u10D8\u10DC\u10D2\u10D8\",\r\n        base64url: \"base64url-\u10D9\u10DD\u10D3\u10D8\u10E0\u10D4\u10D1\u10E3\u10DA\u10D8 \u10E1\u10E2\u10E0\u10D8\u10DC\u10D2\u10D8\",\r\n        json_string: \"JSON \u10E1\u10E2\u10E0\u10D8\u10DC\u10D2\u10D8\",\r\n        e164: \"E.164 \u10DC\u10DD\u10DB\u10D4\u10E0\u10D8\",\r\n        jwt: \"JWT\",\r\n        template_literal: \"\u10E8\u10D4\u10E7\u10D5\u10D0\u10DC\u10D0\",\r\n    };\r\n    return (issue) => {\r\n        switch (issue.code) {\r\n            case \"invalid_type\":\r\n                return `\u10D0\u10E0\u10D0\u10E1\u10EC\u10DD\u10E0\u10D8 \u10E8\u10D4\u10E7\u10D5\u10D0\u10DC\u10D0: \u10DB\u10DD\u10E1\u10D0\u10DA\u10DD\u10D3\u10DC\u10D4\u10DA\u10D8 ${issue.expected}, \u10DB\u10D8\u10E6\u10D4\u10D1\u10E3\u10DA\u10D8 ${parsedType(issue.input)}`;\r\n            case \"invalid_value\":\r\n                if (issue.values.length === 1)\r\n                    return `\u10D0\u10E0\u10D0\u10E1\u10EC\u10DD\u10E0\u10D8 \u10E8\u10D4\u10E7\u10D5\u10D0\u10DC\u10D0: \u10DB\u10DD\u10E1\u10D0\u10DA\u10DD\u10D3\u10DC\u10D4\u10DA\u10D8 ${util.stringifyPrimitive(issue.values[0])}`;\r\n                return `\u10D0\u10E0\u10D0\u10E1\u10EC\u10DD\u10E0\u10D8 \u10D5\u10D0\u10E0\u10D8\u10D0\u10DC\u10E2\u10D8: \u10DB\u10DD\u10E1\u10D0\u10DA\u10DD\u10D3\u10DC\u10D4\u10DA\u10D8\u10D0 \u10D4\u10E0\u10D7-\u10D4\u10E0\u10D7\u10D8 ${util.joinValues(issue.values, \"|\")}-\u10D3\u10D0\u10DC`;\r\n            case \"too_big\": {\r\n                const adj = issue.inclusive ? \"<=\" : \"<\";\r\n                const sizing = getSizing(issue.origin);\r\n                if (sizing)\r\n                    return `\u10D6\u10D4\u10D3\u10DB\u10D4\u10E2\u10D0\u10D3 \u10D3\u10D8\u10D3\u10D8: \u10DB\u10DD\u10E1\u10D0\u10DA\u10DD\u10D3\u10DC\u10D4\u10DA\u10D8 ${issue.origin ?? \"\u10DB\u10DC\u10D8\u10E8\u10D5\u10DC\u10D4\u10DA\u10DD\u10D1\u10D0\"} ${sizing.verb} ${adj}${issue.maximum.toString()} ${sizing.unit}`;\r\n                return `\u10D6\u10D4\u10D3\u10DB\u10D4\u10E2\u10D0\u10D3 \u10D3\u10D8\u10D3\u10D8: \u10DB\u10DD\u10E1\u10D0\u10DA\u10DD\u10D3\u10DC\u10D4\u10DA\u10D8 ${issue.origin ?? \"\u10DB\u10DC\u10D8\u10E8\u10D5\u10DC\u10D4\u10DA\u10DD\u10D1\u10D0\"} \u10D8\u10E7\u10DD\u10E1 ${adj}${issue.maximum.toString()}`;\r\n            }\r\n            case \"too_small\": {\r\n                const adj = issue.inclusive ? \">=\" : \">\";\r\n                const sizing = getSizing(issue.origin);\r\n                if (sizing) {\r\n                    return `\u10D6\u10D4\u10D3\u10DB\u10D4\u10E2\u10D0\u10D3 \u10DE\u10D0\u10E2\u10D0\u10E0\u10D0: \u10DB\u10DD\u10E1\u10D0\u10DA\u10DD\u10D3\u10DC\u10D4\u10DA\u10D8 ${issue.origin} ${sizing.verb} ${adj}${issue.minimum.toString()} ${sizing.unit}`;\r\n                }\r\n                return `\u10D6\u10D4\u10D3\u10DB\u10D4\u10E2\u10D0\u10D3 \u10DE\u10D0\u10E2\u10D0\u10E0\u10D0: \u10DB\u10DD\u10E1\u10D0\u10DA\u10DD\u10D3\u10DC\u10D4\u10DA\u10D8 ${issue.origin} \u10D8\u10E7\u10DD\u10E1 ${adj}${issue.minimum.toString()}`;\r\n            }\r\n            case \"invalid_format\": {\r\n                const _issue = issue;\r\n                if (_issue.format === \"starts_with\") {\r\n                    return `\u10D0\u10E0\u10D0\u10E1\u10EC\u10DD\u10E0\u10D8 \u10E1\u10E2\u10E0\u10D8\u10DC\u10D2\u10D8: \u10E3\u10DC\u10D3\u10D0 \u10D8\u10EC\u10E7\u10D4\u10D1\u10DD\u10D3\u10D4\u10E1 \"${_issue.prefix}\"-\u10D8\u10D7`;\r\n                }\r\n                if (_issue.format === \"ends_with\")\r\n                    return `\u10D0\u10E0\u10D0\u10E1\u10EC\u10DD\u10E0\u10D8 \u10E1\u10E2\u10E0\u10D8\u10DC\u10D2\u10D8: \u10E3\u10DC\u10D3\u10D0 \u10DB\u10D7\u10D0\u10D5\u10E0\u10D3\u10D4\u10D1\u10DD\u10D3\u10D4\u10E1 \"${_issue.suffix}\"-\u10D8\u10D7`;\r\n                if (_issue.format === \"includes\")\r\n                    return `\u10D0\u10E0\u10D0\u10E1\u10EC\u10DD\u10E0\u10D8 \u10E1\u10E2\u10E0\u10D8\u10DC\u10D2\u10D8: \u10E3\u10DC\u10D3\u10D0 \u10E8\u10D4\u10D8\u10EA\u10D0\u10D5\u10D3\u10D4\u10E1 \"${_issue.includes}\"-\u10E1`;\r\n                if (_issue.format === \"regex\")\r\n                    return `\u10D0\u10E0\u10D0\u10E1\u10EC\u10DD\u10E0\u10D8 \u10E1\u10E2\u10E0\u10D8\u10DC\u10D2\u10D8: \u10E3\u10DC\u10D3\u10D0 \u10E8\u10D4\u10D4\u10E1\u10D0\u10D1\u10D0\u10DB\u10D4\u10D1\u10DD\u10D3\u10D4\u10E1 \u10E8\u10D0\u10D1\u10DA\u10DD\u10DC\u10E1 ${_issue.pattern}`;\r\n                return `\u10D0\u10E0\u10D0\u10E1\u10EC\u10DD\u10E0\u10D8 ${Nouns[_issue.format] ?? issue.format}`;\r\n            }\r\n            case \"not_multiple_of\":\r\n                return `\u10D0\u10E0\u10D0\u10E1\u10EC\u10DD\u10E0\u10D8 \u10E0\u10D8\u10EA\u10EE\u10D5\u10D8: \u10E3\u10DC\u10D3\u10D0 \u10D8\u10E7\u10DD\u10E1 ${issue.divisor}-\u10D8\u10E1 \u10EF\u10D4\u10E0\u10D0\u10D3\u10D8`;\r\n            case \"unrecognized_keys\":\r\n                return `\u10E3\u10EA\u10DC\u10DD\u10D1\u10D8 \u10D2\u10D0\u10E1\u10D0\u10E6\u10D4\u10D1${issue.keys.length > 1 ? \"\u10D4\u10D1\u10D8\" : \"\u10D8\"}: ${util.joinValues(issue.keys, \", \")}`;\r\n            case \"invalid_key\":\r\n                return `\u10D0\u10E0\u10D0\u10E1\u10EC\u10DD\u10E0\u10D8 \u10D2\u10D0\u10E1\u10D0\u10E6\u10D4\u10D1\u10D8 ${issue.origin}-\u10E8\u10D8`;\r\n            case \"invalid_union\":\r\n                return \"\u10D0\u10E0\u10D0\u10E1\u10EC\u10DD\u10E0\u10D8 \u10E8\u10D4\u10E7\u10D5\u10D0\u10DC\u10D0\";\r\n            case \"invalid_element\":\r\n                return `\u10D0\u10E0\u10D0\u10E1\u10EC\u10DD\u10E0\u10D8 \u10DB\u10DC\u10D8\u10E8\u10D5\u10DC\u10D4\u10DA\u10DD\u10D1\u10D0 ${issue.origin}-\u10E8\u10D8`;\r\n            default:\r\n                return `\u10D0\u10E0\u10D0\u10E1\u10EC\u10DD\u10E0\u10D8 \u10E8\u10D4\u10E7\u10D5\u10D0\u10DC\u10D0`;\r\n        }\r\n    };\r\n};\r\nexport default function () {\r\n    return {\r\n        localeError: error(),\r\n    };\r\n}\r\n", "import km from \"./km.js\";\r\n/** @deprecated Use `km` instead. */\r\nexport default function () {\r\n    return km();\r\n}\r\n", "import * as util from \"../core/util.js\";\r\nconst error = () => {\r\n    const Sizable = {\r\n        string: { unit: \"\u178F\u17BD\u17A2\u1780\u17D2\u179F\u179A\", verb: \"\u1782\u17BD\u179A\u1798\u17B6\u1793\" },\r\n        file: { unit: \"\u1794\u17C3\", verb: \"\u1782\u17BD\u179A\u1798\u17B6\u1793\" },\r\n        array: { unit: \"\u1792\u17B6\u178F\u17BB\", verb: \"\u1782\u17BD\u179A\u1798\u17B6\u1793\" },\r\n        set: { unit: \"\u1792\u17B6\u178F\u17BB\", verb: \"\u1782\u17BD\u179A\u1798\u17B6\u1793\" },\r\n    };\r\n    function getSizing(origin) {\r\n        return Sizable[origin] ?? null;\r\n    }\r\n    const parsedType = (data) => {\r\n        const t = typeof data;\r\n        switch (t) {\r\n            case \"number\": {\r\n                return Number.isNaN(data) ? \"\u1798\u17B7\u1793\u1798\u17C2\u1793\u1787\u17B6\u179B\u17C1\u1781 (NaN)\" : \"\u179B\u17C1\u1781\";\r\n            }\r\n            case \"object\": {\r\n                if (Array.isArray(data)) {\r\n                    return \"\u17A2\u17B6\u179A\u17C1 (Array)\";\r\n                }\r\n                if (data === null) {\r\n                    return \"\u1782\u17D2\u1798\u17B6\u1793\u178F\u1798\u17D2\u179B\u17C3 (null)\";\r\n                }\r\n                if (Object.getPrototypeOf(data) !== Object.prototype && data.constructor) {\r\n                    return data.constructor.name;\r\n                }\r\n            }\r\n        }\r\n        return t;\r\n    };\r\n    const Nouns = {\r\n        regex: \"\u1791\u17B7\u1793\u17D2\u1793\u1793\u17D0\u1799\u1794\u1789\u17D2\u1785\u17BC\u179B\",\r\n        email: \"\u17A2\u17B6\u179F\u1799\u178A\u17D2\u178B\u17B6\u1793\u17A2\u17CA\u17B8\u1798\u17C2\u179B\",\r\n        url: \"URL\",\r\n        emoji: \"\u179F\u1789\u17D2\u1789\u17B6\u17A2\u17B6\u179A\u1798\u17D2\u1798\u178E\u17CD\",\r\n        uuid: \"UUID\",\r\n        uuidv4: \"UUIDv4\",\r\n        uuidv6: \"UUIDv6\",\r\n        nanoid: \"nanoid\",\r\n        guid: \"GUID\",\r\n        cuid: \"cuid\",\r\n        cuid2: \"cuid2\",\r\n        ulid: \"ULID\",\r\n        xid: \"XID\",\r\n        ksuid: \"KSUID\",\r\n        datetime: \"\u1780\u17B6\u179B\u1794\u179A\u17B7\u1785\u17D2\u1786\u17C1\u1791 \u1793\u17B7\u1784\u1798\u17C9\u17C4\u1784 ISO\",\r\n        date: \"\u1780\u17B6\u179B\u1794\u179A\u17B7\u1785\u17D2\u1786\u17C1\u1791 ISO\",\r\n        time: \"\u1798\u17C9\u17C4\u1784 ISO\",\r\n        duration: \"\u179A\u1799\u17C8\u1796\u17C1\u179B ISO\",\r\n        ipv4: \"\u17A2\u17B6\u179F\u1799\u178A\u17D2\u178B\u17B6\u1793 IPv4\",\r\n        ipv6: \"\u17A2\u17B6\u179F\u1799\u178A\u17D2\u178B\u17B6\u1793 IPv6\",\r\n        cidrv4: \"\u178A\u17C2\u1793\u17A2\u17B6\u179F\u1799\u178A\u17D2\u178B\u17B6\u1793 IPv4\",\r\n        cidrv6: \"\u178A\u17C2\u1793\u17A2\u17B6\u179F\u1799\u178A\u17D2\u178B\u17B6\u1793 IPv6\",\r\n        base64: \"\u1781\u17D2\u179F\u17C2\u17A2\u1780\u17D2\u179F\u179A\u17A2\u17CA\u17B7\u1780\u17BC\u178A base64\",\r\n        base64url: \"\u1781\u17D2\u179F\u17C2\u17A2\u1780\u17D2\u179F\u179A\u17A2\u17CA\u17B7\u1780\u17BC\u178A base64url\",\r\n        json_string: \"\u1781\u17D2\u179F\u17C2\u17A2\u1780\u17D2\u179F\u179A JSON\",\r\n        e164: \"\u179B\u17C1\u1781 E.164\",\r\n        jwt: \"JWT\",\r\n        template_literal: \"\u1791\u17B7\u1793\u17D2\u1793\u1793\u17D0\u1799\u1794\u1789\u17D2\u1785\u17BC\u179B\",\r\n    };\r\n    return (issue) => {\r\n        switch (issue.code) {\r\n            case \"invalid_type\":\r\n                return `\u1791\u17B7\u1793\u17D2\u1793\u1793\u17D0\u1799\u1794\u1789\u17D2\u1785\u17BC\u179B\u1798\u17B7\u1793\u178F\u17D2\u179A\u17B9\u1798\u178F\u17D2\u179A\u17BC\u179C\u17D6 \u178F\u17D2\u179A\u17BC\u179C\u1780\u17B6\u179A ${issue.expected} \u1794\u17C9\u17BB\u1793\u17D2\u178F\u17C2\u1791\u1791\u17BD\u179B\u1794\u17B6\u1793 ${parsedType(issue.input)}`;\r\n            case \"invalid_value\":\r\n                if (issue.values.length === 1)\r\n                    return `\u1791\u17B7\u1793\u17D2\u1793\u1793\u17D0\u1799\u1794\u1789\u17D2\u1785\u17BC\u179B\u1798\u17B7\u1793\u178F\u17D2\u179A\u17B9\u1798\u178F\u17D2\u179A\u17BC\u179C\u17D6 \u178F\u17D2\u179A\u17BC\u179C\u1780\u17B6\u179A ${util.stringifyPrimitive(issue.values[0])}`;\r\n                return `\u1787\u1798\u17D2\u179A\u17BE\u179F\u1798\u17B7\u1793\u178F\u17D2\u179A\u17B9\u1798\u178F\u17D2\u179A\u17BC\u179C\u17D6 \u178F\u17D2\u179A\u17BC\u179C\u1787\u17B6\u1798\u17BD\u1799\u1780\u17D2\u1793\u17BB\u1784\u1785\u17C6\u178E\u17C4\u1798 ${util.joinValues(issue.values, \"|\")}`;\r\n            case \"too_big\": {\r\n                const adj = issue.inclusive ? \"<=\" : \"<\";\r\n                const sizing = getSizing(issue.origin);\r\n                if (sizing)\r\n                    return `\u1792\u17C6\u1796\u17C1\u1780\u17D6 \u178F\u17D2\u179A\u17BC\u179C\u1780\u17B6\u179A ${issue.origin ?? \"\u178F\u1798\u17D2\u179B\u17C3\"} ${adj} ${issue.maximum.toString()} ${sizing.unit ?? \"\u1792\u17B6\u178F\u17BB\"}`;\r\n                return `\u1792\u17C6\u1796\u17C1\u1780\u17D6 \u178F\u17D2\u179A\u17BC\u179C\u1780\u17B6\u179A ${issue.origin ?? \"\u178F\u1798\u17D2\u179B\u17C3\"} ${adj} ${issue.maximum.toString()}`;\r\n            }\r\n            case \"too_small\": {\r\n                const adj = issue.inclusive ? \">=\" : \">\";\r\n                const sizing = getSizing(issue.origin);\r\n                if (sizing) {\r\n                    return `\u178F\u17BC\u1785\u1796\u17C1\u1780\u17D6 \u178F\u17D2\u179A\u17BC\u179C\u1780\u17B6\u179A ${issue.origin} ${adj} ${issue.minimum.toString()} ${sizing.unit}`;\r\n                }\r\n                return `\u178F\u17BC\u1785\u1796\u17C1\u1780\u17D6 \u178F\u17D2\u179A\u17BC\u179C\u1780\u17B6\u179A ${issue.origin} ${adj} ${issue.minimum.toString()}`;\r\n            }\r\n            case \"invalid_format\": {\r\n                const _issue = issue;\r\n                if (_issue.format === \"starts_with\") {\r\n                    return `\u1781\u17D2\u179F\u17C2\u17A2\u1780\u17D2\u179F\u179A\u1798\u17B7\u1793\u178F\u17D2\u179A\u17B9\u1798\u178F\u17D2\u179A\u17BC\u179C\u17D6 \u178F\u17D2\u179A\u17BC\u179C\u1785\u17B6\u1794\u17CB\u1795\u17D2\u178F\u17BE\u1798\u178A\u17C4\u1799 \"${_issue.prefix}\"`;\r\n                }\r\n                if (_issue.format === \"ends_with\")\r\n                    return `\u1781\u17D2\u179F\u17C2\u17A2\u1780\u17D2\u179F\u179A\u1798\u17B7\u1793\u178F\u17D2\u179A\u17B9\u1798\u178F\u17D2\u179A\u17BC\u179C\u17D6 \u178F\u17D2\u179A\u17BC\u179C\u1794\u1789\u17D2\u1785\u1794\u17CB\u178A\u17C4\u1799 \"${_issue.suffix}\"`;\r\n                if (_issue.format === \"includes\")\r\n                    return `\u1781\u17D2\u179F\u17C2\u17A2\u1780\u17D2\u179F\u179A\u1798\u17B7\u1793\u178F\u17D2\u179A\u17B9\u1798\u178F\u17D2\u179A\u17BC\u179C\u17D6 \u178F\u17D2\u179A\u17BC\u179C\u1798\u17B6\u1793 \"${_issue.includes}\"`;\r\n                if (_issue.format === \"regex\")\r\n                    return `\u1781\u17D2\u179F\u17C2\u17A2\u1780\u17D2\u179F\u179A\u1798\u17B7\u1793\u178F\u17D2\u179A\u17B9\u1798\u178F\u17D2\u179A\u17BC\u179C\u17D6 \u178F\u17D2\u179A\u17BC\u179C\u178F\u17C2\u1795\u17D2\u1782\u17BC\u1795\u17D2\u1782\u1784\u1793\u17B9\u1784\u1791\u1798\u17D2\u179A\u1784\u17CB\u178A\u17C2\u179B\u1794\u17B6\u1793\u1780\u17C6\u178E\u178F\u17CB ${_issue.pattern}`;\r\n                return `\u1798\u17B7\u1793\u178F\u17D2\u179A\u17B9\u1798\u178F\u17D2\u179A\u17BC\u179C\u17D6 ${Nouns[_issue.format] ?? issue.format}`;\r\n            }\r\n            case \"not_multiple_of\":\r\n                return `\u179B\u17C1\u1781\u1798\u17B7\u1793\u178F\u17D2\u179A\u17B9\u1798\u178F\u17D2\u179A\u17BC\u179C\u17D6 \u178F\u17D2\u179A\u17BC\u179C\u178F\u17C2\u1787\u17B6\u1796\u17A0\u17BB\u1782\u17BB\u178E\u1793\u17C3 ${issue.divisor}`;\r\n            case \"unrecognized_keys\":\r\n                return `\u179A\u1780\u1783\u17BE\u1789\u179F\u17C4\u1798\u17B7\u1793\u179F\u17D2\u1782\u17B6\u179B\u17CB\u17D6 ${util.joinValues(issue.keys, \", \")}`;\r\n            case \"invalid_key\":\r\n                return `\u179F\u17C4\u1798\u17B7\u1793\u178F\u17D2\u179A\u17B9\u1798\u178F\u17D2\u179A\u17BC\u179C\u1793\u17C5\u1780\u17D2\u1793\u17BB\u1784 ${issue.origin}`;\r\n            case \"invalid_union\":\r\n                return `\u1791\u17B7\u1793\u17D2\u1793\u1793\u17D0\u1799\u1798\u17B7\u1793\u178F\u17D2\u179A\u17B9\u1798\u178F\u17D2\u179A\u17BC\u179C`;\r\n            case \"invalid_element\":\r\n                return `\u1791\u17B7\u1793\u17D2\u1793\u1793\u17D0\u1799\u1798\u17B7\u1793\u178F\u17D2\u179A\u17B9\u1798\u178F\u17D2\u179A\u17BC\u179C\u1793\u17C5\u1780\u17D2\u1793\u17BB\u1784 ${issue.origin}`;\r\n            default:\r\n                return `\u1791\u17B7\u1793\u17D2\u1793\u1793\u17D0\u1799\u1798\u17B7\u1793\u178F\u17D2\u179A\u17B9\u1798\u178F\u17D2\u179A\u17BC\u179C`;\r\n        }\r\n    };\r\n};\r\nexport default function () {\r\n    return {\r\n        localeError: error(),\r\n    };\r\n}\r\n", "import * as util from \"../core/util.js\";\r\nconst error = () => {\r\n    const Sizable = {\r\n        string: { unit: \"\uBB38\uC790\", verb: \"to have\" },\r\n        file: { unit: \"\uBC14\uC774\uD2B8\", verb: \"to have\" },\r\n        array: { unit: \"\uAC1C\", verb: \"to have\" },\r\n        set: { unit: \"\uAC1C\", verb: \"to have\" },\r\n    };\r\n    function getSizing(origin) {\r\n        return Sizable[origin] ?? null;\r\n    }\r\n    const parsedType = (data) => {\r\n        const t = typeof data;\r\n        switch (t) {\r\n            case \"number\": {\r\n                return Number.isNaN(data) ? \"NaN\" : \"number\";\r\n            }\r\n            case \"object\": {\r\n                if (Array.isArray(data)) {\r\n                    return \"array\";\r\n                }\r\n                if (data === null) {\r\n                    return \"null\";\r\n                }\r\n                if (Object.getPrototypeOf(data) !== Object.prototype && data.constructor) {\r\n                    return data.constructor.name;\r\n                }\r\n            }\r\n        }\r\n        return t;\r\n    };\r\n    const Nouns = {\r\n        regex: \"\uC785\uB825\",\r\n        email: \"\uC774\uBA54\uC77C \uC8FC\uC18C\",\r\n        url: \"URL\",\r\n        emoji: \"\uC774\uBAA8\uC9C0\",\r\n        uuid: \"UUID\",\r\n        uuidv4: \"UUIDv4\",\r\n        uuidv6: \"UUIDv6\",\r\n        nanoid: \"nanoid\",\r\n        guid: \"GUID\",\r\n        cuid: \"cuid\",\r\n        cuid2: \"cuid2\",\r\n        ulid: \"ULID\",\r\n        xid: \"XID\",\r\n        ksuid: \"KSUID\",\r\n        datetime: \"ISO \uB0A0\uC9DC\uC2DC\uAC04\",\r\n        date: \"ISO \uB0A0\uC9DC\",\r\n        time: \"ISO \uC2DC\uAC04\",\r\n        duration: \"ISO \uAE30\uAC04\",\r\n        ipv4: \"IPv4 \uC8FC\uC18C\",\r\n        ipv6: \"IPv6 \uC8FC\uC18C\",\r\n        cidrv4: \"IPv4 \uBC94\uC704\",\r\n        cidrv6: \"IPv6 \uBC94\uC704\",\r\n        base64: \"base64 \uC778\uCF54\uB529 \uBB38\uC790\uC5F4\",\r\n        base64url: \"base64url \uC778\uCF54\uB529 \uBB38\uC790\uC5F4\",\r\n        json_string: \"JSON \uBB38\uC790\uC5F4\",\r\n        e164: \"E.164 \uBC88\uD638\",\r\n        jwt: \"JWT\",\r\n        template_literal: \"\uC785\uB825\",\r\n    };\r\n    return (issue) => {\r\n        switch (issue.code) {\r\n            case \"invalid_type\":\r\n                return `\uC798\uBABB\uB41C \uC785\uB825: \uC608\uC0C1 \uD0C0\uC785\uC740 ${issue.expected}, \uBC1B\uC740 \uD0C0\uC785\uC740 ${parsedType(issue.input)}\uC785\uB2C8\uB2E4`;\r\n            case \"invalid_value\":\r\n                if (issue.values.length === 1)\r\n                    return `\uC798\uBABB\uB41C \uC785\uB825: \uAC12\uC740 ${util.stringifyPrimitive(issue.values[0])} \uC774\uC5B4\uC57C \uD569\uB2C8\uB2E4`;\r\n                return `\uC798\uBABB\uB41C \uC635\uC158: ${util.joinValues(issue.values, \"\uB610\uB294 \")} \uC911 \uD558\uB098\uC5EC\uC57C \uD569\uB2C8\uB2E4`;\r\n            case \"too_big\": {\r\n                const adj = issue.inclusive ? \"\uC774\uD558\" : \"\uBBF8\uB9CC\";\r\n                const suffix = adj === \"\uBBF8\uB9CC\" ? \"\uC774\uC5B4\uC57C \uD569\uB2C8\uB2E4\" : \"\uC5EC\uC57C \uD569\uB2C8\uB2E4\";\r\n                const sizing = getSizing(issue.origin);\r\n                const unit = sizing?.unit ?? \"\uC694\uC18C\";\r\n                if (sizing)\r\n                    return `${issue.origin ?? \"\uAC12\"}\uC774 \uB108\uBB34 \uD07D\uB2C8\uB2E4: ${issue.maximum.toString()}${unit} ${adj}${suffix}`;\r\n                return `${issue.origin ?? \"\uAC12\"}\uC774 \uB108\uBB34 \uD07D\uB2C8\uB2E4: ${issue.maximum.toString()} ${adj}${suffix}`;\r\n            }\r\n            case \"too_small\": {\r\n                const adj = issue.inclusive ? \"\uC774\uC0C1\" : \"\uCD08\uACFC\";\r\n                const suffix = adj === \"\uC774\uC0C1\" ? \"\uC774\uC5B4\uC57C \uD569\uB2C8\uB2E4\" : \"\uC5EC\uC57C \uD569\uB2C8\uB2E4\";\r\n                const sizing = getSizing(issue.origin);\r\n                const unit = sizing?.unit ?? \"\uC694\uC18C\";\r\n                if (sizing) {\r\n                    return `${issue.origin ?? \"\uAC12\"}\uC774 \uB108\uBB34 \uC791\uC2B5\uB2C8\uB2E4: ${issue.minimum.toString()}${unit} ${adj}${suffix}`;\r\n                }\r\n                return `${issue.origin ?? \"\uAC12\"}\uC774 \uB108\uBB34 \uC791\uC2B5\uB2C8\uB2E4: ${issue.minimum.toString()} ${adj}${suffix}`;\r\n            }\r\n            case \"invalid_format\": {\r\n                const _issue = issue;\r\n                if (_issue.format === \"starts_with\") {\r\n                    return `\uC798\uBABB\uB41C \uBB38\uC790\uC5F4: \"${_issue.prefix}\"(\uC73C)\uB85C \uC2DC\uC791\uD574\uC57C \uD569\uB2C8\uB2E4`;\r\n                }\r\n                if (_issue.format === \"ends_with\")\r\n                    return `\uC798\uBABB\uB41C \uBB38\uC790\uC5F4: \"${_issue.suffix}\"(\uC73C)\uB85C \uB05D\uB098\uC57C \uD569\uB2C8\uB2E4`;\r\n                if (_issue.format === \"includes\")\r\n                    return `\uC798\uBABB\uB41C \uBB38\uC790\uC5F4: \"${_issue.includes}\"\uC744(\uB97C) \uD3EC\uD568\uD574\uC57C \uD569\uB2C8\uB2E4`;\r\n                if (_issue.format === \"regex\")\r\n                    return `\uC798\uBABB\uB41C \uBB38\uC790\uC5F4: \uC815\uADDC\uC2DD ${_issue.pattern} \uD328\uD134\uACFC \uC77C\uCE58\uD574\uC57C \uD569\uB2C8\uB2E4`;\r\n                return `\uC798\uBABB\uB41C ${Nouns[_issue.format] ?? issue.format}`;\r\n            }\r\n            case \"not_multiple_of\":\r\n                return `\uC798\uBABB\uB41C \uC22B\uC790: ${issue.divisor}\uC758 \uBC30\uC218\uC5EC\uC57C \uD569\uB2C8\uB2E4`;\r\n            case \"unrecognized_keys\":\r\n                return `\uC778\uC2DD\uD560 \uC218 \uC5C6\uB294 \uD0A4: ${util.joinValues(issue.keys, \", \")}`;\r\n            case \"invalid_key\":\r\n                return `\uC798\uBABB\uB41C \uD0A4: ${issue.origin}`;\r\n            case \"invalid_union\":\r\n                return `\uC798\uBABB\uB41C \uC785\uB825`;\r\n            case \"invalid_element\":\r\n                return `\uC798\uBABB\uB41C \uAC12: ${issue.origin}`;\r\n            default:\r\n                return `\uC798\uBABB\uB41C \uC785\uB825`;\r\n        }\r\n    };\r\n};\r\nexport default function () {\r\n    return {\r\n        localeError: error(),\r\n    };\r\n}\r\n", "import * as util from \"../core/util.js\";\r\nexport const parsedType = (data) => {\r\n    const t = typeof data;\r\n    return parsedTypeFromType(t, data);\r\n};\r\nconst parsedTypeFromType = (t, data = undefined) => {\r\n    switch (t) {\r\n        case \"number\": {\r\n            return Number.isNaN(data) ? \"NaN\" : \"skai\u010Dius\";\r\n        }\r\n        case \"bigint\": {\r\n            return \"sveikasis skai\u010Dius\";\r\n        }\r\n        case \"string\": {\r\n            return \"eilut\u0117\";\r\n        }\r\n        case \"boolean\": {\r\n            return \"login\u0117 reik\u0161m\u0117\";\r\n        }\r\n        case \"undefined\":\r\n        case \"void\": {\r\n            return \"neapibr\u0117\u017Eta reik\u0161m\u0117\";\r\n        }\r\n        case \"function\": {\r\n            return \"funkcija\";\r\n        }\r\n        case \"symbol\": {\r\n            return \"simbolis\";\r\n        }\r\n        case \"object\": {\r\n            if (data === undefined)\r\n                return \"ne\u017Einomas objektas\";\r\n            if (data === null)\r\n                return \"nulin\u0117 reik\u0161m\u0117\";\r\n            if (Array.isArray(data))\r\n                return \"masyvas\";\r\n            if (Object.getPrototypeOf(data) !== Object.prototype && data.constructor) {\r\n                return data.constructor.name;\r\n            }\r\n            return \"objektas\";\r\n        }\r\n        //Zod types below\r\n        case \"null\": {\r\n            return \"nulin\u0117 reik\u0161m\u0117\";\r\n        }\r\n    }\r\n    return t;\r\n};\r\nconst capitalizeFirstCharacter = (text) => {\r\n    return text.charAt(0).toUpperCase() + text.slice(1);\r\n};\r\nfunction getUnitTypeFromNumber(number) {\r\n    const abs = Math.abs(number);\r\n    const last = abs % 10;\r\n    const last2 = abs % 100;\r\n    if ((last2 >= 11 && last2 <= 19) || last === 0)\r\n        return \"many\";\r\n    if (last === 1)\r\n        return \"one\";\r\n    return \"few\";\r\n}\r\nconst error = () => {\r\n    const Sizable = {\r\n        string: {\r\n            unit: {\r\n                one: \"simbolis\",\r\n                few: \"simboliai\",\r\n                many: \"simboli\u0173\",\r\n            },\r\n            verb: {\r\n                smaller: {\r\n                    inclusive: \"turi b\u016Bti ne ilgesn\u0117 kaip\",\r\n                    notInclusive: \"turi b\u016Bti trumpesn\u0117 kaip\",\r\n                },\r\n                bigger: {\r\n                    inclusive: \"turi b\u016Bti ne trumpesn\u0117 kaip\",\r\n                    notInclusive: \"turi b\u016Bti ilgesn\u0117 kaip\",\r\n                },\r\n            },\r\n        },\r\n        file: {\r\n            unit: {\r\n                one: \"baitas\",\r\n                few: \"baitai\",\r\n                many: \"bait\u0173\",\r\n            },\r\n            verb: {\r\n                smaller: {\r\n                    inclusive: \"turi b\u016Bti ne didesnis kaip\",\r\n                    notInclusive: \"turi b\u016Bti ma\u017Eesnis kaip\",\r\n                },\r\n                bigger: {\r\n                    inclusive: \"turi b\u016Bti ne ma\u017Eesnis kaip\",\r\n                    notInclusive: \"turi b\u016Bti didesnis kaip\",\r\n                },\r\n            },\r\n        },\r\n        array: {\r\n            unit: {\r\n                one: \"element\u0105\",\r\n                few: \"elementus\",\r\n                many: \"element\u0173\",\r\n            },\r\n            verb: {\r\n                smaller: {\r\n                    inclusive: \"turi tur\u0117ti ne daugiau kaip\",\r\n                    notInclusive: \"turi tur\u0117ti ma\u017Eiau kaip\",\r\n                },\r\n                bigger: {\r\n                    inclusive: \"turi tur\u0117ti ne ma\u017Eiau kaip\",\r\n                    notInclusive: \"turi tur\u0117ti daugiau kaip\",\r\n                },\r\n            },\r\n        },\r\n        set: {\r\n            unit: {\r\n                one: \"element\u0105\",\r\n                few: \"elementus\",\r\n                many: \"element\u0173\",\r\n            },\r\n            verb: {\r\n                smaller: {\r\n                    inclusive: \"turi tur\u0117ti ne daugiau kaip\",\r\n                    notInclusive: \"turi tur\u0117ti ma\u017Eiau kaip\",\r\n                },\r\n                bigger: {\r\n                    inclusive: \"turi tur\u0117ti ne ma\u017Eiau kaip\",\r\n                    notInclusive: \"turi tur\u0117ti daugiau kaip\",\r\n                },\r\n            },\r\n        },\r\n    };\r\n    function getSizing(origin, unitType, inclusive, targetShouldBe) {\r\n        const result = Sizable[origin] ?? null;\r\n        if (result === null)\r\n            return result;\r\n        return {\r\n            unit: result.unit[unitType],\r\n            verb: result.verb[targetShouldBe][inclusive ? \"inclusive\" : \"notInclusive\"],\r\n        };\r\n    }\r\n    const Nouns = {\r\n        regex: \"\u012Fvestis\",\r\n        email: \"el. pa\u0161to adresas\",\r\n        url: \"URL\",\r\n        emoji: \"jaustukas\",\r\n        uuid: \"UUID\",\r\n        uuidv4: \"UUIDv4\",\r\n        uuidv6: \"UUIDv6\",\r\n        nanoid: \"nanoid\",\r\n        guid: \"GUID\",\r\n        cuid: \"cuid\",\r\n        cuid2: \"cuid2\",\r\n        ulid: \"ULID\",\r\n        xid: \"XID\",\r\n        ksuid: \"KSUID\",\r\n        datetime: \"ISO data ir laikas\",\r\n        date: \"ISO data\",\r\n        time: \"ISO laikas\",\r\n        duration: \"ISO trukm\u0117\",\r\n        ipv4: \"IPv4 adresas\",\r\n        ipv6: \"IPv6 adresas\",\r\n        cidrv4: \"IPv4 tinklo prefiksas (CIDR)\",\r\n        cidrv6: \"IPv6 tinklo prefiksas (CIDR)\",\r\n        base64: \"base64 u\u017Ekoduota eilut\u0117\",\r\n        base64url: \"base64url u\u017Ekoduota eilut\u0117\",\r\n        json_string: \"JSON eilut\u0117\",\r\n        e164: \"E.164 numeris\",\r\n        jwt: \"JWT\",\r\n        template_literal: \"\u012Fvestis\",\r\n    };\r\n    return (issue) => {\r\n        switch (issue.code) {\r\n            case \"invalid_type\":\r\n                return `Gautas tipas ${parsedType(issue.input)}, o tik\u0117tasi - ${parsedTypeFromType(issue.expected)}`;\r\n            case \"invalid_value\":\r\n                if (issue.values.length === 1)\r\n                    return `Privalo b\u016Bti ${util.stringifyPrimitive(issue.values[0])}`;\r\n                return `Privalo b\u016Bti vienas i\u0161 ${util.joinValues(issue.values, \"|\")} pasirinkim\u0173`;\r\n            case \"too_big\": {\r\n                const origin = parsedTypeFromType(issue.origin);\r\n                const sizing = getSizing(issue.origin, getUnitTypeFromNumber(Number(issue.maximum)), issue.inclusive ?? false, \"smaller\");\r\n                if (sizing?.verb)\r\n                    return `${capitalizeFirstCharacter(origin ?? issue.origin ?? \"reik\u0161m\u0117\")} ${sizing.verb} ${issue.maximum.toString()} ${sizing.unit ?? \"element\u0173\"}`;\r\n                const adj = issue.inclusive ? \"ne didesnis kaip\" : \"ma\u017Eesnis kaip\";\r\n                return `${capitalizeFirstCharacter(origin ?? issue.origin ?? \"reik\u0161m\u0117\")} turi b\u016Bti ${adj} ${issue.maximum.toString()} ${sizing?.unit}`;\r\n            }\r\n            case \"too_small\": {\r\n                const origin = parsedTypeFromType(issue.origin);\r\n                const sizing = getSizing(issue.origin, getUnitTypeFromNumber(Number(issue.minimum)), issue.inclusive ?? false, \"bigger\");\r\n                if (sizing?.verb)\r\n                    return `${capitalizeFirstCharacter(origin ?? issue.origin ?? \"reik\u0161m\u0117\")} ${sizing.verb} ${issue.minimum.toString()} ${sizing.unit ?? \"element\u0173\"}`;\r\n                const adj = issue.inclusive ? \"ne ma\u017Eesnis kaip\" : \"didesnis kaip\";\r\n                return `${capitalizeFirstCharacter(origin ?? issue.origin ?? \"reik\u0161m\u0117\")} turi b\u016Bti ${adj} ${issue.minimum.toString()} ${sizing?.unit}`;\r\n            }\r\n            case \"invalid_format\": {\r\n                const _issue = issue;\r\n                if (_issue.format === \"starts_with\") {\r\n                    return `Eilut\u0117 privalo prasid\u0117ti \"${_issue.prefix}\"`;\r\n                }\r\n                if (_issue.format === \"ends_with\")\r\n                    return `Eilut\u0117 privalo pasibaigti \"${_issue.suffix}\"`;\r\n                if (_issue.format === \"includes\")\r\n                    return `Eilut\u0117 privalo \u012Ftraukti \"${_issue.includes}\"`;\r\n                if (_issue.format === \"regex\")\r\n                    return `Eilut\u0117 privalo atitikti ${_issue.pattern}`;\r\n                return `Neteisingas ${Nouns[_issue.format] ?? issue.format}`;\r\n            }\r\n            case \"not_multiple_of\":\r\n                return `Skai\u010Dius privalo b\u016Bti ${issue.divisor} kartotinis.`;\r\n            case \"unrecognized_keys\":\r\n                return `Neatpa\u017Eint${issue.keys.length > 1 ? \"i\" : \"as\"} rakt${issue.keys.length > 1 ? \"ai\" : \"as\"}: ${util.joinValues(issue.keys, \", \")}`;\r\n            case \"invalid_key\":\r\n                return \"Rastas klaidingas raktas\";\r\n            case \"invalid_union\":\r\n                return \"Klaidinga \u012Fvestis\";\r\n            case \"invalid_element\": {\r\n                const origin = parsedTypeFromType(issue.origin);\r\n                return `${capitalizeFirstCharacter(origin ?? issue.origin ?? \"reik\u0161m\u0117\")} turi klaiding\u0105 \u012Fvest\u012F`;\r\n            }\r\n            default:\r\n                return \"Klaidinga \u012Fvestis\";\r\n        }\r\n    };\r\n};\r\nexport default function () {\r\n    return {\r\n        localeError: error(),\r\n    };\r\n}\r\n", "import * as util from \"../core/util.js\";\r\nconst error = () => {\r\n    const Sizable = {\r\n        string: { unit: \"\u0437\u043D\u0430\u0446\u0438\", verb: \"\u0434\u0430 \u0438\u043C\u0430\u0430\u0442\" },\r\n        file: { unit: \"\u0431\u0430\u0458\u0442\u0438\", verb: \"\u0434\u0430 \u0438\u043C\u0430\u0430\u0442\" },\r\n        array: { unit: \"\u0441\u0442\u0430\u0432\u043A\u0438\", verb: \"\u0434\u0430 \u0438\u043C\u0430\u0430\u0442\" },\r\n        set: { unit: \"\u0441\u0442\u0430\u0432\u043A\u0438\", verb: \"\u0434\u0430 \u0438\u043C\u0430\u0430\u0442\" },\r\n    };\r\n    function getSizing(origin) {\r\n        return Sizable[origin] ?? null;\r\n    }\r\n    const parsedType = (data) => {\r\n        const t = typeof data;\r\n        switch (t) {\r\n            case \"number\": {\r\n                return Number.isNaN(data) ? \"NaN\" : \"\u0431\u0440\u043E\u0458\";\r\n            }\r\n            case \"object\": {\r\n                if (Array.isArray(data)) {\r\n                    return \"\u043D\u0438\u0437\u0430\";\r\n                }\r\n                if (data === null) {\r\n                    return \"null\";\r\n                }\r\n                if (Object.getPrototypeOf(data) !== Object.prototype && data.constructor) {\r\n                    return data.constructor.name;\r\n                }\r\n            }\r\n        }\r\n        return t;\r\n    };\r\n    const Nouns = {\r\n        regex: \"\u0432\u043D\u0435\u0441\",\r\n        email: \"\u0430\u0434\u0440\u0435\u0441\u0430 \u043D\u0430 \u0435-\u043F\u043E\u0448\u0442\u0430\",\r\n        url: \"URL\",\r\n        emoji: \"\u0435\u043C\u043E\u045F\u0438\",\r\n        uuid: \"UUID\",\r\n        uuidv4: \"UUIDv4\",\r\n        uuidv6: \"UUIDv6\",\r\n        nanoid: \"nanoid\",\r\n        guid: \"GUID\",\r\n        cuid: \"cuid\",\r\n        cuid2: \"cuid2\",\r\n        ulid: \"ULID\",\r\n        xid: \"XID\",\r\n        ksuid: \"KSUID\",\r\n        datetime: \"ISO \u0434\u0430\u0442\u0443\u043C \u0438 \u0432\u0440\u0435\u043C\u0435\",\r\n        date: \"ISO \u0434\u0430\u0442\u0443\u043C\",\r\n        time: \"ISO \u0432\u0440\u0435\u043C\u0435\",\r\n        duration: \"ISO \u0432\u0440\u0435\u043C\u0435\u0442\u0440\u0430\u0435\u045A\u0435\",\r\n        ipv4: \"IPv4 \u0430\u0434\u0440\u0435\u0441\u0430\",\r\n        ipv6: \"IPv6 \u0430\u0434\u0440\u0435\u0441\u0430\",\r\n        cidrv4: \"IPv4 \u043E\u043F\u0441\u0435\u0433\",\r\n        cidrv6: \"IPv6 \u043E\u043F\u0441\u0435\u0433\",\r\n        base64: \"base64-\u0435\u043D\u043A\u043E\u0434\u0438\u0440\u0430\u043D\u0430 \u043D\u0438\u0437\u0430\",\r\n        base64url: \"base64url-\u0435\u043D\u043A\u043E\u0434\u0438\u0440\u0430\u043D\u0430 \u043D\u0438\u0437\u0430\",\r\n        json_string: \"JSON \u043D\u0438\u0437\u0430\",\r\n        e164: \"E.164 \u0431\u0440\u043E\u0458\",\r\n        jwt: \"JWT\",\r\n        template_literal: \"\u0432\u043D\u0435\u0441\",\r\n    };\r\n    return (issue) => {\r\n        switch (issue.code) {\r\n            case \"invalid_type\":\r\n                return `\u0413\u0440\u0435\u0448\u0435\u043D \u0432\u043D\u0435\u0441: \u0441\u0435 \u043E\u0447\u0435\u043A\u0443\u0432\u0430 ${issue.expected}, \u043F\u0440\u0438\u043C\u0435\u043D\u043E ${parsedType(issue.input)}`;\r\n            // return `Invalid input: expected ${issue.expected}, received ${util.getParsedType(issue.input)}`;\r\n            case \"invalid_value\":\r\n                if (issue.values.length === 1)\r\n                    return `Invalid input: expected ${util.stringifyPrimitive(issue.values[0])}`;\r\n                return `\u0413\u0440\u0435\u0448\u0430\u043D\u0430 \u043E\u043F\u0446\u0438\u0458\u0430: \u0441\u0435 \u043E\u0447\u0435\u043A\u0443\u0432\u0430 \u0435\u0434\u043D\u0430 ${util.joinValues(issue.values, \"|\")}`;\r\n            case \"too_big\": {\r\n                const adj = issue.inclusive ? \"<=\" : \"<\";\r\n                const sizing = getSizing(issue.origin);\r\n                if (sizing)\r\n                    return `\u041F\u0440\u0435\u043C\u043D\u043E\u0433\u0443 \u0433\u043E\u043B\u0435\u043C: \u0441\u0435 \u043E\u0447\u0435\u043A\u0443\u0432\u0430 ${issue.origin ?? \"\u0432\u0440\u0435\u0434\u043D\u043E\u0441\u0442\u0430\"} \u0434\u0430 \u0438\u043C\u0430 ${adj}${issue.maximum.toString()} ${sizing.unit ?? \"\u0435\u043B\u0435\u043C\u0435\u043D\u0442\u0438\"}`;\r\n                return `\u041F\u0440\u0435\u043C\u043D\u043E\u0433\u0443 \u0433\u043E\u043B\u0435\u043C: \u0441\u0435 \u043E\u0447\u0435\u043A\u0443\u0432\u0430 ${issue.origin ?? \"\u0432\u0440\u0435\u0434\u043D\u043E\u0441\u0442\u0430\"} \u0434\u0430 \u0431\u0438\u0434\u0435 ${adj}${issue.maximum.toString()}`;\r\n            }\r\n            case \"too_small\": {\r\n                const adj = issue.inclusive ? \">=\" : \">\";\r\n                const sizing = getSizing(issue.origin);\r\n                if (sizing) {\r\n                    return `\u041F\u0440\u0435\u043C\u043D\u043E\u0433\u0443 \u043C\u0430\u043B: \u0441\u0435 \u043E\u0447\u0435\u043A\u0443\u0432\u0430 ${issue.origin} \u0434\u0430 \u0438\u043C\u0430 ${adj}${issue.minimum.toString()} ${sizing.unit}`;\r\n                }\r\n                return `\u041F\u0440\u0435\u043C\u043D\u043E\u0433\u0443 \u043C\u0430\u043B: \u0441\u0435 \u043E\u0447\u0435\u043A\u0443\u0432\u0430 ${issue.origin} \u0434\u0430 \u0431\u0438\u0434\u0435 ${adj}${issue.minimum.toString()}`;\r\n            }\r\n            case \"invalid_format\": {\r\n                const _issue = issue;\r\n                if (_issue.format === \"starts_with\") {\r\n                    return `\u041D\u0435\u0432\u0430\u0436\u0435\u0447\u043A\u0430 \u043D\u0438\u0437\u0430: \u043C\u043E\u0440\u0430 \u0434\u0430 \u0437\u0430\u043F\u043E\u0447\u043D\u0443\u0432\u0430 \u0441\u043E \"${_issue.prefix}\"`;\r\n                }\r\n                if (_issue.format === \"ends_with\")\r\n                    return `\u041D\u0435\u0432\u0430\u0436\u0435\u0447\u043A\u0430 \u043D\u0438\u0437\u0430: \u043C\u043E\u0440\u0430 \u0434\u0430 \u0437\u0430\u0432\u0440\u0448\u0443\u0432\u0430 \u0441\u043E \"${_issue.suffix}\"`;\r\n                if (_issue.format === \"includes\")\r\n                    return `\u041D\u0435\u0432\u0430\u0436\u0435\u0447\u043A\u0430 \u043D\u0438\u0437\u0430: \u043C\u043E\u0440\u0430 \u0434\u0430 \u0432\u043A\u043B\u0443\u0447\u0443\u0432\u0430 \"${_issue.includes}\"`;\r\n                if (_issue.format === \"regex\")\r\n                    return `\u041D\u0435\u0432\u0430\u0436\u0435\u0447\u043A\u0430 \u043D\u0438\u0437\u0430: \u043C\u043E\u0440\u0430 \u0434\u0430 \u043E\u0434\u0433\u043E\u0430\u0440\u0430 \u043D\u0430 \u043F\u0430\u0442\u0435\u0440\u043D\u043E\u0442 ${_issue.pattern}`;\r\n                return `Invalid ${Nouns[_issue.format] ?? issue.format}`;\r\n            }\r\n            case \"not_multiple_of\":\r\n                return `\u0413\u0440\u0435\u0448\u0435\u043D \u0431\u0440\u043E\u0458: \u043C\u043E\u0440\u0430 \u0434\u0430 \u0431\u0438\u0434\u0435 \u0434\u0435\u043B\u0438\u0432 \u0441\u043E ${issue.divisor}`;\r\n            case \"unrecognized_keys\":\r\n                return `${issue.keys.length > 1 ? \"\u041D\u0435\u043F\u0440\u0435\u043F\u043E\u0437\u043D\u0430\u0435\u043D\u0438 \u043A\u043B\u0443\u0447\u0435\u0432\u0438\" : \"\u041D\u0435\u043F\u0440\u0435\u043F\u043E\u0437\u043D\u0430\u0435\u043D \u043A\u043B\u0443\u0447\"}: ${util.joinValues(issue.keys, \", \")}`;\r\n            case \"invalid_key\":\r\n                return `\u0413\u0440\u0435\u0448\u0435\u043D \u043A\u043B\u0443\u0447 \u0432\u043E ${issue.origin}`;\r\n            case \"invalid_union\":\r\n                return \"\u0413\u0440\u0435\u0448\u0435\u043D \u0432\u043D\u0435\u0441\";\r\n            case \"invalid_element\":\r\n                return `\u0413\u0440\u0435\u0448\u043D\u0430 \u0432\u0440\u0435\u0434\u043D\u043E\u0441\u0442 \u0432\u043E ${issue.origin}`;\r\n            default:\r\n                return `\u0413\u0440\u0435\u0448\u0435\u043D \u0432\u043D\u0435\u0441`;\r\n        }\r\n    };\r\n};\r\nexport default function () {\r\n    return {\r\n        localeError: error(),\r\n    };\r\n}\r\n", "import * as util from \"../core/util.js\";\r\nconst error = () => {\r\n    const Sizable = {\r\n        string: { unit: \"aksara\", verb: \"mempunyai\" },\r\n        file: { unit: \"bait\", verb: \"mempunyai\" },\r\n        array: { unit: \"elemen\", verb: \"mempunyai\" },\r\n        set: { unit: \"elemen\", verb: \"mempunyai\" },\r\n    };\r\n    function getSizing(origin) {\r\n        return Sizable[origin] ?? null;\r\n    }\r\n    const parsedType = (data) => {\r\n        const t = typeof data;\r\n        switch (t) {\r\n            case \"number\": {\r\n                return Number.isNaN(data) ? \"NaN\" : \"nombor\";\r\n            }\r\n            case \"object\": {\r\n                if (Array.isArray(data)) {\r\n                    return \"array\";\r\n                }\r\n                if (data === null) {\r\n                    return \"null\";\r\n                }\r\n                if (Object.getPrototypeOf(data) !== Object.prototype && data.constructor) {\r\n                    return data.constructor.name;\r\n                }\r\n            }\r\n        }\r\n        return t;\r\n    };\r\n    const Nouns = {\r\n        regex: \"input\",\r\n        email: \"alamat e-mel\",\r\n        url: \"URL\",\r\n        emoji: \"emoji\",\r\n        uuid: \"UUID\",\r\n        uuidv4: \"UUIDv4\",\r\n        uuidv6: \"UUIDv6\",\r\n        nanoid: \"nanoid\",\r\n        guid: \"GUID\",\r\n        cuid: \"cuid\",\r\n        cuid2: \"cuid2\",\r\n        ulid: \"ULID\",\r\n        xid: \"XID\",\r\n        ksuid: \"KSUID\",\r\n        datetime: \"tarikh masa ISO\",\r\n        date: \"tarikh ISO\",\r\n        time: \"masa ISO\",\r\n        duration: \"tempoh ISO\",\r\n        ipv4: \"alamat IPv4\",\r\n        ipv6: \"alamat IPv6\",\r\n        cidrv4: \"julat IPv4\",\r\n        cidrv6: \"julat IPv6\",\r\n        base64: \"string dikodkan base64\",\r\n        base64url: \"string dikodkan base64url\",\r\n        json_string: \"string JSON\",\r\n        e164: \"nombor E.164\",\r\n        jwt: \"JWT\",\r\n        template_literal: \"input\",\r\n    };\r\n    return (issue) => {\r\n        switch (issue.code) {\r\n            case \"invalid_type\":\r\n                return `Input tidak sah: dijangka ${issue.expected}, diterima ${parsedType(issue.input)}`;\r\n            case \"invalid_value\":\r\n                if (issue.values.length === 1)\r\n                    return `Input tidak sah: dijangka ${util.stringifyPrimitive(issue.values[0])}`;\r\n                return `Pilihan tidak sah: dijangka salah satu daripada ${util.joinValues(issue.values, \"|\")}`;\r\n            case \"too_big\": {\r\n                const adj = issue.inclusive ? \"<=\" : \"<\";\r\n                const sizing = getSizing(issue.origin);\r\n                if (sizing)\r\n                    return `Terlalu besar: dijangka ${issue.origin ?? \"nilai\"} ${sizing.verb} ${adj}${issue.maximum.toString()} ${sizing.unit ?? \"elemen\"}`;\r\n                return `Terlalu besar: dijangka ${issue.origin ?? \"nilai\"} adalah ${adj}${issue.maximum.toString()}`;\r\n            }\r\n            case \"too_small\": {\r\n                const adj = issue.inclusive ? \">=\" : \">\";\r\n                const sizing = getSizing(issue.origin);\r\n                if (sizing) {\r\n                    return `Terlalu kecil: dijangka ${issue.origin} ${sizing.verb} ${adj}${issue.minimum.toString()} ${sizing.unit}`;\r\n                }\r\n                return `Terlalu kecil: dijangka ${issue.origin} adalah ${adj}${issue.minimum.toString()}`;\r\n            }\r\n            case \"invalid_format\": {\r\n                const _issue = issue;\r\n                if (_issue.format === \"starts_with\")\r\n                    return `String tidak sah: mesti bermula dengan \"${_issue.prefix}\"`;\r\n                if (_issue.format === \"ends_with\")\r\n                    return `String tidak sah: mesti berakhir dengan \"${_issue.suffix}\"`;\r\n                if (_issue.format === \"includes\")\r\n                    return `String tidak sah: mesti mengandungi \"${_issue.includes}\"`;\r\n                if (_issue.format === \"regex\")\r\n                    return `String tidak sah: mesti sepadan dengan corak ${_issue.pattern}`;\r\n                return `${Nouns[_issue.format] ?? issue.format} tidak sah`;\r\n            }\r\n            case \"not_multiple_of\":\r\n                return `Nombor tidak sah: perlu gandaan ${issue.divisor}`;\r\n            case \"unrecognized_keys\":\r\n                return `Kunci tidak dikenali: ${util.joinValues(issue.keys, \", \")}`;\r\n            case \"invalid_key\":\r\n                return `Kunci tidak sah dalam ${issue.origin}`;\r\n            case \"invalid_union\":\r\n                return \"Input tidak sah\";\r\n            case \"invalid_element\":\r\n                return `Nilai tidak sah dalam ${issue.origin}`;\r\n            default:\r\n                return `Input tidak sah`;\r\n        }\r\n    };\r\n};\r\nexport default function () {\r\n    return {\r\n        localeError: error(),\r\n    };\r\n}\r\n", "import * as util from \"../core/util.js\";\r\nconst error = () => {\r\n    const Sizable = {\r\n        string: { unit: \"tekens\" },\r\n        file: { unit: \"bytes\" },\r\n        array: { unit: \"elementen\" },\r\n        set: { unit: \"elementen\" },\r\n    };\r\n    function getSizing(origin) {\r\n        return Sizable[origin] ?? null;\r\n    }\r\n    const parsedType = (data) => {\r\n        const t = typeof data;\r\n        switch (t) {\r\n            case \"number\": {\r\n                return Number.isNaN(data) ? \"NaN\" : \"getal\";\r\n            }\r\n            case \"object\": {\r\n                if (Array.isArray(data)) {\r\n                    return \"array\";\r\n                }\r\n                if (data === null) {\r\n                    return \"null\";\r\n                }\r\n                if (Object.getPrototypeOf(data) !== Object.prototype && data.constructor) {\r\n                    return data.constructor.name;\r\n                }\r\n            }\r\n        }\r\n        return t;\r\n    };\r\n    const Nouns = {\r\n        regex: \"invoer\",\r\n        email: \"emailadres\",\r\n        url: \"URL\",\r\n        emoji: \"emoji\",\r\n        uuid: \"UUID\",\r\n        uuidv4: \"UUIDv4\",\r\n        uuidv6: \"UUIDv6\",\r\n        nanoid: \"nanoid\",\r\n        guid: \"GUID\",\r\n        cuid: \"cuid\",\r\n        cuid2: \"cuid2\",\r\n        ulid: \"ULID\",\r\n        xid: \"XID\",\r\n        ksuid: \"KSUID\",\r\n        datetime: \"ISO datum en tijd\",\r\n        date: \"ISO datum\",\r\n        time: \"ISO tijd\",\r\n        duration: \"ISO duur\",\r\n        ipv4: \"IPv4-adres\",\r\n        ipv6: \"IPv6-adres\",\r\n        cidrv4: \"IPv4-bereik\",\r\n        cidrv6: \"IPv6-bereik\",\r\n        base64: \"base64-gecodeerde tekst\",\r\n        base64url: \"base64 URL-gecodeerde tekst\",\r\n        json_string: \"JSON string\",\r\n        e164: \"E.164-nummer\",\r\n        jwt: \"JWT\",\r\n        template_literal: \"invoer\",\r\n    };\r\n    return (issue) => {\r\n        switch (issue.code) {\r\n            case \"invalid_type\":\r\n                return `Ongeldige invoer: verwacht ${issue.expected}, ontving ${parsedType(issue.input)}`;\r\n            case \"invalid_value\":\r\n                if (issue.values.length === 1)\r\n                    return `Ongeldige invoer: verwacht ${util.stringifyPrimitive(issue.values[0])}`;\r\n                return `Ongeldige optie: verwacht \u00E9\u00E9n van ${util.joinValues(issue.values, \"|\")}`;\r\n            case \"too_big\": {\r\n                const adj = issue.inclusive ? \"<=\" : \"<\";\r\n                const sizing = getSizing(issue.origin);\r\n                if (sizing)\r\n                    return `Te lang: verwacht dat ${issue.origin ?? \"waarde\"} ${adj}${issue.maximum.toString()} ${sizing.unit ?? \"elementen\"} bevat`;\r\n                return `Te lang: verwacht dat ${issue.origin ?? \"waarde\"} ${adj}${issue.maximum.toString()} is`;\r\n            }\r\n            case \"too_small\": {\r\n                const adj = issue.inclusive ? \">=\" : \">\";\r\n                const sizing = getSizing(issue.origin);\r\n                if (sizing) {\r\n                    return `Te kort: verwacht dat ${issue.origin} ${adj}${issue.minimum.toString()} ${sizing.unit} bevat`;\r\n                }\r\n                return `Te kort: verwacht dat ${issue.origin} ${adj}${issue.minimum.toString()} is`;\r\n            }\r\n            case \"invalid_format\": {\r\n                const _issue = issue;\r\n                if (_issue.format === \"starts_with\") {\r\n                    return `Ongeldige tekst: moet met \"${_issue.prefix}\" beginnen`;\r\n                }\r\n                if (_issue.format === \"ends_with\")\r\n                    return `Ongeldige tekst: moet op \"${_issue.suffix}\" eindigen`;\r\n                if (_issue.format === \"includes\")\r\n                    return `Ongeldige tekst: moet \"${_issue.includes}\" bevatten`;\r\n                if (_issue.format === \"regex\")\r\n                    return `Ongeldige tekst: moet overeenkomen met patroon ${_issue.pattern}`;\r\n                return `Ongeldig: ${Nouns[_issue.format] ?? issue.format}`;\r\n            }\r\n            case \"not_multiple_of\":\r\n                return `Ongeldig getal: moet een veelvoud van ${issue.divisor} zijn`;\r\n            case \"unrecognized_keys\":\r\n                return `Onbekende key${issue.keys.length > 1 ? \"s\" : \"\"}: ${util.joinValues(issue.keys, \", \")}`;\r\n            case \"invalid_key\":\r\n                return `Ongeldige key in ${issue.origin}`;\r\n            case \"invalid_union\":\r\n                return \"Ongeldige invoer\";\r\n            case \"invalid_element\":\r\n                return `Ongeldige waarde in ${issue.origin}`;\r\n            default:\r\n                return `Ongeldige invoer`;\r\n        }\r\n    };\r\n};\r\nexport default function () {\r\n    return {\r\n        localeError: error(),\r\n    };\r\n}\r\n", "import * as util from \"../core/util.js\";\r\nconst error = () => {\r\n    const Sizable = {\r\n        string: { unit: \"tegn\", verb: \"\u00E5 ha\" },\r\n        file: { unit: \"bytes\", verb: \"\u00E5 ha\" },\r\n        array: { unit: \"elementer\", verb: \"\u00E5 inneholde\" },\r\n        set: { unit: \"elementer\", verb: \"\u00E5 inneholde\" },\r\n    };\r\n    function getSizing(origin) {\r\n        return Sizable[origin] ?? null;\r\n    }\r\n    const parsedType = (data) => {\r\n        const t = typeof data;\r\n        switch (t) {\r\n            case \"number\": {\r\n                return Number.isNaN(data) ? \"NaN\" : \"tall\";\r\n            }\r\n            case \"object\": {\r\n                if (Array.isArray(data)) {\r\n                    return \"liste\";\r\n                }\r\n                if (data === null) {\r\n                    return \"null\";\r\n                }\r\n                if (Object.getPrototypeOf(data) !== Object.prototype && data.constructor) {\r\n                    return data.constructor.name;\r\n                }\r\n            }\r\n        }\r\n        return t;\r\n    };\r\n    const Nouns = {\r\n        regex: \"input\",\r\n        email: \"e-postadresse\",\r\n        url: \"URL\",\r\n        emoji: \"emoji\",\r\n        uuid: \"UUID\",\r\n        uuidv4: \"UUIDv4\",\r\n        uuidv6: \"UUIDv6\",\r\n        nanoid: \"nanoid\",\r\n        guid: \"GUID\",\r\n        cuid: \"cuid\",\r\n        cuid2: \"cuid2\",\r\n        ulid: \"ULID\",\r\n        xid: \"XID\",\r\n        ksuid: \"KSUID\",\r\n        datetime: \"ISO dato- og klokkeslett\",\r\n        date: \"ISO-dato\",\r\n        time: \"ISO-klokkeslett\",\r\n        duration: \"ISO-varighet\",\r\n        ipv4: \"IPv4-omr\u00E5de\",\r\n        ipv6: \"IPv6-omr\u00E5de\",\r\n        cidrv4: \"IPv4-spekter\",\r\n        cidrv6: \"IPv6-spekter\",\r\n        base64: \"base64-enkodet streng\",\r\n        base64url: \"base64url-enkodet streng\",\r\n        json_string: \"JSON-streng\",\r\n        e164: \"E.164-nummer\",\r\n        jwt: \"JWT\",\r\n        template_literal: \"input\",\r\n    };\r\n    return (issue) => {\r\n        switch (issue.code) {\r\n            case \"invalid_type\":\r\n                return `Ugyldig input: forventet ${issue.expected}, fikk ${parsedType(issue.input)}`;\r\n            case \"invalid_value\":\r\n                if (issue.values.length === 1)\r\n                    return `Ugyldig verdi: forventet ${util.stringifyPrimitive(issue.values[0])}`;\r\n                return `Ugyldig valg: forventet en av ${util.joinValues(issue.values, \"|\")}`;\r\n            case \"too_big\": {\r\n                const adj = issue.inclusive ? \"<=\" : \"<\";\r\n                const sizing = getSizing(issue.origin);\r\n                if (sizing)\r\n                    return `For stor(t): forventet ${issue.origin ?? \"value\"} til \u00E5 ha ${adj}${issue.maximum.toString()} ${sizing.unit ?? \"elementer\"}`;\r\n                return `For stor(t): forventet ${issue.origin ?? \"value\"} til \u00E5 ha ${adj}${issue.maximum.toString()}`;\r\n            }\r\n            case \"too_small\": {\r\n                const adj = issue.inclusive ? \">=\" : \">\";\r\n                const sizing = getSizing(issue.origin);\r\n                if (sizing) {\r\n                    return `For lite(n): forventet ${issue.origin} til \u00E5 ha ${adj}${issue.minimum.toString()} ${sizing.unit}`;\r\n                }\r\n                return `For lite(n): forventet ${issue.origin} til \u00E5 ha ${adj}${issue.minimum.toString()}`;\r\n            }\r\n            case \"invalid_format\": {\r\n                const _issue = issue;\r\n                if (_issue.format === \"starts_with\")\r\n                    return `Ugyldig streng: m\u00E5 starte med \"${_issue.prefix}\"`;\r\n                if (_issue.format === \"ends_with\")\r\n                    return `Ugyldig streng: m\u00E5 ende med \"${_issue.suffix}\"`;\r\n                if (_issue.format === \"includes\")\r\n                    return `Ugyldig streng: m\u00E5 inneholde \"${_issue.includes}\"`;\r\n                if (_issue.format === \"regex\")\r\n                    return `Ugyldig streng: m\u00E5 matche m\u00F8nsteret ${_issue.pattern}`;\r\n                return `Ugyldig ${Nouns[_issue.format] ?? issue.format}`;\r\n            }\r\n            case \"not_multiple_of\":\r\n                return `Ugyldig tall: m\u00E5 v\u00E6re et multiplum av ${issue.divisor}`;\r\n            case \"unrecognized_keys\":\r\n                return `${issue.keys.length > 1 ? \"Ukjente n\u00F8kler\" : \"Ukjent n\u00F8kkel\"}: ${util.joinValues(issue.keys, \", \")}`;\r\n            case \"invalid_key\":\r\n                return `Ugyldig n\u00F8kkel i ${issue.origin}`;\r\n            case \"invalid_union\":\r\n                return \"Ugyldig input\";\r\n            case \"invalid_element\":\r\n                return `Ugyldig verdi i ${issue.origin}`;\r\n            default:\r\n                return `Ugyldig input`;\r\n        }\r\n    };\r\n};\r\nexport default function () {\r\n    return {\r\n        localeError: error(),\r\n    };\r\n}\r\n", "import * as util from \"../core/util.js\";\r\nconst error = () => {\r\n    const Sizable = {\r\n        string: { unit: \"harf\", verb: \"olmal\u0131d\u0131r\" },\r\n        file: { unit: \"bayt\", verb: \"olmal\u0131d\u0131r\" },\r\n        array: { unit: \"unsur\", verb: \"olmal\u0131d\u0131r\" },\r\n        set: { unit: \"unsur\", verb: \"olmal\u0131d\u0131r\" },\r\n    };\r\n    function getSizing(origin) {\r\n        return Sizable[origin] ?? null;\r\n    }\r\n    const parsedType = (data) => {\r\n        const t = typeof data;\r\n        switch (t) {\r\n            case \"number\": {\r\n                return Number.isNaN(data) ? \"NaN\" : \"numara\";\r\n            }\r\n            case \"object\": {\r\n                if (Array.isArray(data)) {\r\n                    return \"saf\";\r\n                }\r\n                if (data === null) {\r\n                    return \"gayb\";\r\n                }\r\n                if (Object.getPrototypeOf(data) !== Object.prototype && data.constructor) {\r\n                    return data.constructor.name;\r\n                }\r\n            }\r\n        }\r\n        return t;\r\n    };\r\n    const Nouns = {\r\n        regex: \"giren\",\r\n        email: \"epostag\u00E2h\",\r\n        url: \"URL\",\r\n        emoji: \"emoji\",\r\n        uuid: \"UUID\",\r\n        uuidv4: \"UUIDv4\",\r\n        uuidv6: \"UUIDv6\",\r\n        nanoid: \"nanoid\",\r\n        guid: \"GUID\",\r\n        cuid: \"cuid\",\r\n        cuid2: \"cuid2\",\r\n        ulid: \"ULID\",\r\n        xid: \"XID\",\r\n        ksuid: \"KSUID\",\r\n        datetime: \"ISO heng\u00E2m\u0131\",\r\n        date: \"ISO tarihi\",\r\n        time: \"ISO zaman\u0131\",\r\n        duration: \"ISO m\u00FCddeti\",\r\n        ipv4: \"IPv4 ni\u015F\u00E2n\u0131\",\r\n        ipv6: \"IPv6 ni\u015F\u00E2n\u0131\",\r\n        cidrv4: \"IPv4 menzili\",\r\n        cidrv6: \"IPv6 menzili\",\r\n        base64: \"base64-\u015Fifreli metin\",\r\n        base64url: \"base64url-\u015Fifreli metin\",\r\n        json_string: \"JSON metin\",\r\n        e164: \"E.164 say\u0131s\u0131\",\r\n        jwt: \"JWT\",\r\n        template_literal: \"giren\",\r\n    };\r\n    return (issue) => {\r\n        switch (issue.code) {\r\n            case \"invalid_type\":\r\n                return `F\u00E2sit giren: umulan ${issue.expected}, al\u0131nan ${parsedType(issue.input)}`;\r\n            // return `F\u00E2sit giren: umulan ${issue.expected}, al\u0131nan ${util.getParsedType(issue.input)}`;\r\n            case \"invalid_value\":\r\n                if (issue.values.length === 1)\r\n                    return `F\u00E2sit giren: umulan ${util.stringifyPrimitive(issue.values[0])}`;\r\n                return `F\u00E2sit tercih: m\u00FBteberler ${util.joinValues(issue.values, \"|\")}`;\r\n            case \"too_big\": {\r\n                const adj = issue.inclusive ? \"<=\" : \"<\";\r\n                const sizing = getSizing(issue.origin);\r\n                if (sizing)\r\n                    return `Fazla b\u00FCy\u00FCk: ${issue.origin ?? \"value\"}, ${adj}${issue.maximum.toString()} ${sizing.unit ?? \"elements\"} sahip olmal\u0131yd\u0131.`;\r\n                return `Fazla b\u00FCy\u00FCk: ${issue.origin ?? \"value\"}, ${adj}${issue.maximum.toString()} olmal\u0131yd\u0131.`;\r\n            }\r\n            case \"too_small\": {\r\n                const adj = issue.inclusive ? \">=\" : \">\";\r\n                const sizing = getSizing(issue.origin);\r\n                if (sizing) {\r\n                    return `Fazla k\u00FC\u00E7\u00FCk: ${issue.origin}, ${adj}${issue.minimum.toString()} ${sizing.unit} sahip olmal\u0131yd\u0131.`;\r\n                }\r\n                return `Fazla k\u00FC\u00E7\u00FCk: ${issue.origin}, ${adj}${issue.minimum.toString()} olmal\u0131yd\u0131.`;\r\n            }\r\n            case \"invalid_format\": {\r\n                const _issue = issue;\r\n                if (_issue.format === \"starts_with\")\r\n                    return `F\u00E2sit metin: \"${_issue.prefix}\" ile ba\u015Flamal\u0131.`;\r\n                if (_issue.format === \"ends_with\")\r\n                    return `F\u00E2sit metin: \"${_issue.suffix}\" ile bitmeli.`;\r\n                if (_issue.format === \"includes\")\r\n                    return `F\u00E2sit metin: \"${_issue.includes}\" ihtiv\u00E2 etmeli.`;\r\n                if (_issue.format === \"regex\")\r\n                    return `F\u00E2sit metin: ${_issue.pattern} nak\u015F\u0131na uymal\u0131.`;\r\n                return `F\u00E2sit ${Nouns[_issue.format] ?? issue.format}`;\r\n            }\r\n            case \"not_multiple_of\":\r\n                return `F\u00E2sit say\u0131: ${issue.divisor} kat\u0131 olmal\u0131yd\u0131.`;\r\n            case \"unrecognized_keys\":\r\n                return `Tan\u0131nmayan anahtar ${issue.keys.length > 1 ? \"s\" : \"\"}: ${util.joinValues(issue.keys, \", \")}`;\r\n            case \"invalid_key\":\r\n                return `${issue.origin} i\u00E7in tan\u0131nmayan anahtar var.`;\r\n            case \"invalid_union\":\r\n                return \"Giren tan\u0131namad\u0131.\";\r\n            case \"invalid_element\":\r\n                return `${issue.origin} i\u00E7in tan\u0131nmayan k\u0131ymet var.`;\r\n            default:\r\n                return `K\u0131ymet tan\u0131namad\u0131.`;\r\n        }\r\n    };\r\n};\r\nexport default function () {\r\n    return {\r\n        localeError: error(),\r\n    };\r\n}\r\n", "import * as util from \"../core/util.js\";\r\nconst error = () => {\r\n    const Sizable = {\r\n        string: { unit: \"\u062A\u0648\u06A9\u064A\", verb: \"\u0648\u0644\u0631\u064A\" },\r\n        file: { unit: \"\u0628\u0627\u06CC\u067C\u0633\", verb: \"\u0648\u0644\u0631\u064A\" },\r\n        array: { unit: \"\u062A\u0648\u06A9\u064A\", verb: \"\u0648\u0644\u0631\u064A\" },\r\n        set: { unit: \"\u062A\u0648\u06A9\u064A\", verb: \"\u0648\u0644\u0631\u064A\" },\r\n    };\r\n    function getSizing(origin) {\r\n        return Sizable[origin] ?? null;\r\n    }\r\n    const parsedType = (data) => {\r\n        const t = typeof data;\r\n        switch (t) {\r\n            case \"number\": {\r\n                return Number.isNaN(data) ? \"NaN\" : \"\u0639\u062F\u062F\";\r\n            }\r\n            case \"object\": {\r\n                if (Array.isArray(data)) {\r\n                    return \"\u0627\u0631\u06D0\";\r\n                }\r\n                if (data === null) {\r\n                    return \"null\";\r\n                }\r\n                if (Object.getPrototypeOf(data) !== Object.prototype && data.constructor) {\r\n                    return data.constructor.name;\r\n                }\r\n            }\r\n        }\r\n        return t;\r\n    };\r\n    const Nouns = {\r\n        regex: \"\u0648\u0631\u0648\u062F\u064A\",\r\n        email: \"\u0628\u0631\u06CC\u069A\u0646\u0627\u0644\u06CC\u06A9\",\r\n        url: \"\u06CC\u0648 \u0622\u0631 \u0627\u0644\",\r\n        emoji: \"\u0627\u06CC\u0645\u0648\u062C\u064A\",\r\n        uuid: \"UUID\",\r\n        uuidv4: \"UUIDv4\",\r\n        uuidv6: \"UUIDv6\",\r\n        nanoid: \"nanoid\",\r\n        guid: \"GUID\",\r\n        cuid: \"cuid\",\r\n        cuid2: \"cuid2\",\r\n        ulid: \"ULID\",\r\n        xid: \"XID\",\r\n        ksuid: \"KSUID\",\r\n        datetime: \"\u0646\u06CC\u067C\u0647 \u0627\u0648 \u0648\u062E\u062A\",\r\n        date: \"\u0646\u06D0\u067C\u0647\",\r\n        time: \"\u0648\u062E\u062A\",\r\n        duration: \"\u0645\u0648\u062F\u0647\",\r\n        ipv4: \"\u062F IPv4 \u067E\u062A\u0647\",\r\n        ipv6: \"\u062F IPv6 \u067E\u062A\u0647\",\r\n        cidrv4: \"\u062F IPv4 \u0633\u0627\u062D\u0647\",\r\n        cidrv6: \"\u062F IPv6 \u0633\u0627\u062D\u0647\",\r\n        base64: \"base64-encoded \u0645\u062A\u0646\",\r\n        base64url: \"base64url-encoded \u0645\u062A\u0646\",\r\n        json_string: \"JSON \u0645\u062A\u0646\",\r\n        e164: \"\u062F E.164 \u0634\u0645\u06D0\u0631\u0647\",\r\n        jwt: \"JWT\",\r\n        template_literal: \"\u0648\u0631\u0648\u062F\u064A\",\r\n    };\r\n    return (issue) => {\r\n        switch (issue.code) {\r\n            case \"invalid_type\":\r\n                return `\u0646\u0627\u0633\u0645 \u0648\u0631\u0648\u062F\u064A: \u0628\u0627\u06CC\u062F ${issue.expected} \u0648\u0627\u06CC, \u0645\u06AB\u0631 ${parsedType(issue.input)} \u062A\u0631\u0644\u0627\u0633\u0647 \u0634\u0648`;\r\n            case \"invalid_value\":\r\n                if (issue.values.length === 1) {\r\n                    return `\u0646\u0627\u0633\u0645 \u0648\u0631\u0648\u062F\u064A: \u0628\u0627\u06CC\u062F ${util.stringifyPrimitive(issue.values[0])} \u0648\u0627\u06CC`;\r\n                }\r\n                return `\u0646\u0627\u0633\u0645 \u0627\u0646\u062A\u062E\u0627\u0628: \u0628\u0627\u06CC\u062F \u06CC\u0648 \u0644\u0647 ${util.joinValues(issue.values, \"|\")} \u0685\u062E\u0647 \u0648\u0627\u06CC`;\r\n            case \"too_big\": {\r\n                const adj = issue.inclusive ? \"<=\" : \"<\";\r\n                const sizing = getSizing(issue.origin);\r\n                if (sizing) {\r\n                    return `\u0689\u06CC\u0631 \u0644\u0648\u06CC: ${issue.origin ?? \"\u0627\u0631\u0632\u069A\u062A\"} \u0628\u0627\u06CC\u062F ${adj}${issue.maximum.toString()} ${sizing.unit ?? \"\u0639\u0646\u0635\u0631\u0648\u0646\u0647\"} \u0648\u0644\u0631\u064A`;\r\n                }\r\n                return `\u0689\u06CC\u0631 \u0644\u0648\u06CC: ${issue.origin ?? \"\u0627\u0631\u0632\u069A\u062A\"} \u0628\u0627\u06CC\u062F ${adj}${issue.maximum.toString()} \u0648\u064A`;\r\n            }\r\n            case \"too_small\": {\r\n                const adj = issue.inclusive ? \">=\" : \">\";\r\n                const sizing = getSizing(issue.origin);\r\n                if (sizing) {\r\n                    return `\u0689\u06CC\u0631 \u06A9\u0648\u0686\u0646\u06CC: ${issue.origin} \u0628\u0627\u06CC\u062F ${adj}${issue.minimum.toString()} ${sizing.unit} \u0648\u0644\u0631\u064A`;\r\n                }\r\n                return `\u0689\u06CC\u0631 \u06A9\u0648\u0686\u0646\u06CC: ${issue.origin} \u0628\u0627\u06CC\u062F ${adj}${issue.minimum.toString()} \u0648\u064A`;\r\n            }\r\n            case \"invalid_format\": {\r\n                const _issue = issue;\r\n                if (_issue.format === \"starts_with\") {\r\n                    return `\u0646\u0627\u0633\u0645 \u0645\u062A\u0646: \u0628\u0627\u06CC\u062F \u062F \"${_issue.prefix}\" \u0633\u0631\u0647 \u067E\u06CC\u0644 \u0634\u064A`;\r\n                }\r\n                if (_issue.format === \"ends_with\") {\r\n                    return `\u0646\u0627\u0633\u0645 \u0645\u062A\u0646: \u0628\u0627\u06CC\u062F \u062F \"${_issue.suffix}\" \u0633\u0631\u0647 \u067E\u0627\u06CC \u062A\u0647 \u0648\u0631\u0633\u064A\u0696\u064A`;\r\n                }\r\n                if (_issue.format === \"includes\") {\r\n                    return `\u0646\u0627\u0633\u0645 \u0645\u062A\u0646: \u0628\u0627\u06CC\u062F \"${_issue.includes}\" \u0648\u0644\u0631\u064A`;\r\n                }\r\n                if (_issue.format === \"regex\") {\r\n                    return `\u0646\u0627\u0633\u0645 \u0645\u062A\u0646: \u0628\u0627\u06CC\u062F \u062F ${_issue.pattern} \u0633\u0631\u0647 \u0645\u0637\u0627\u0628\u0642\u062A \u0648\u0644\u0631\u064A`;\r\n                }\r\n                return `${Nouns[_issue.format] ?? issue.format} \u0646\u0627\u0633\u0645 \u062F\u06CC`;\r\n            }\r\n            case \"not_multiple_of\":\r\n                return `\u0646\u0627\u0633\u0645 \u0639\u062F\u062F: \u0628\u0627\u06CC\u062F \u062F ${issue.divisor} \u0645\u0636\u0631\u0628 \u0648\u064A`;\r\n            case \"unrecognized_keys\":\r\n                return `\u0646\u0627\u0633\u0645 ${issue.keys.length > 1 ? \"\u06A9\u0644\u06CC\u0689\u0648\u0646\u0647\" : \"\u06A9\u0644\u06CC\u0689\"}: ${util.joinValues(issue.keys, \", \")}`;\r\n            case \"invalid_key\":\r\n                return `\u0646\u0627\u0633\u0645 \u06A9\u0644\u06CC\u0689 \u067E\u0647 ${issue.origin} \u06A9\u06D0`;\r\n            case \"invalid_union\":\r\n                return `\u0646\u0627\u0633\u0645\u0647 \u0648\u0631\u0648\u062F\u064A`;\r\n            case \"invalid_element\":\r\n                return `\u0646\u0627\u0633\u0645 \u0639\u0646\u0635\u0631 \u067E\u0647 ${issue.origin} \u06A9\u06D0`;\r\n            default:\r\n                return `\u0646\u0627\u0633\u0645\u0647 \u0648\u0631\u0648\u062F\u064A`;\r\n        }\r\n    };\r\n};\r\nexport default function () {\r\n    return {\r\n        localeError: error(),\r\n    };\r\n}\r\n", "import * as util from \"../core/util.js\";\r\nconst error = () => {\r\n    const Sizable = {\r\n        string: { unit: \"znak\u00F3w\", verb: \"mie\u0107\" },\r\n        file: { unit: \"bajt\u00F3w\", verb: \"mie\u0107\" },\r\n        array: { unit: \"element\u00F3w\", verb: \"mie\u0107\" },\r\n        set: { unit: \"element\u00F3w\", verb: \"mie\u0107\" },\r\n    };\r\n    function getSizing(origin) {\r\n        return Sizable[origin] ?? null;\r\n    }\r\n    const parsedType = (data) => {\r\n        const t = typeof data;\r\n        switch (t) {\r\n            case \"number\": {\r\n                return Number.isNaN(data) ? \"NaN\" : \"liczba\";\r\n            }\r\n            case \"object\": {\r\n                if (Array.isArray(data)) {\r\n                    return \"tablica\";\r\n                }\r\n                if (data === null) {\r\n                    return \"null\";\r\n                }\r\n                if (Object.getPrototypeOf(data) !== Object.prototype && data.constructor) {\r\n                    return data.constructor.name;\r\n                }\r\n            }\r\n        }\r\n        return t;\r\n    };\r\n    const Nouns = {\r\n        regex: \"wyra\u017Cenie\",\r\n        email: \"adres email\",\r\n        url: \"URL\",\r\n        emoji: \"emoji\",\r\n        uuid: \"UUID\",\r\n        uuidv4: \"UUIDv4\",\r\n        uuidv6: \"UUIDv6\",\r\n        nanoid: \"nanoid\",\r\n        guid: \"GUID\",\r\n        cuid: \"cuid\",\r\n        cuid2: \"cuid2\",\r\n        ulid: \"ULID\",\r\n        xid: \"XID\",\r\n        ksuid: \"KSUID\",\r\n        datetime: \"data i godzina w formacie ISO\",\r\n        date: \"data w formacie ISO\",\r\n        time: \"godzina w formacie ISO\",\r\n        duration: \"czas trwania ISO\",\r\n        ipv4: \"adres IPv4\",\r\n        ipv6: \"adres IPv6\",\r\n        cidrv4: \"zakres IPv4\",\r\n        cidrv6: \"zakres IPv6\",\r\n        base64: \"ci\u0105g znak\u00F3w zakodowany w formacie base64\",\r\n        base64url: \"ci\u0105g znak\u00F3w zakodowany w formacie base64url\",\r\n        json_string: \"ci\u0105g znak\u00F3w w formacie JSON\",\r\n        e164: \"liczba E.164\",\r\n        jwt: \"JWT\",\r\n        template_literal: \"wej\u015Bcie\",\r\n    };\r\n    return (issue) => {\r\n        switch (issue.code) {\r\n            case \"invalid_type\":\r\n                return `Nieprawid\u0142owe dane wej\u015Bciowe: oczekiwano ${issue.expected}, otrzymano ${parsedType(issue.input)}`;\r\n            case \"invalid_value\":\r\n                if (issue.values.length === 1)\r\n                    return `Nieprawid\u0142owe dane wej\u015Bciowe: oczekiwano ${util.stringifyPrimitive(issue.values[0])}`;\r\n                return `Nieprawid\u0142owa opcja: oczekiwano jednej z warto\u015Bci ${util.joinValues(issue.values, \"|\")}`;\r\n            case \"too_big\": {\r\n                const adj = issue.inclusive ? \"<=\" : \"<\";\r\n                const sizing = getSizing(issue.origin);\r\n                if (sizing) {\r\n                    return `Za du\u017Ca warto\u015B\u0107: oczekiwano, \u017Ce ${issue.origin ?? \"warto\u015B\u0107\"} b\u0119dzie mie\u0107 ${adj}${issue.maximum.toString()} ${sizing.unit ?? \"element\u00F3w\"}`;\r\n                }\r\n                return `Zbyt du\u017C(y/a/e): oczekiwano, \u017Ce ${issue.origin ?? \"warto\u015B\u0107\"} b\u0119dzie wynosi\u0107 ${adj}${issue.maximum.toString()}`;\r\n            }\r\n            case \"too_small\": {\r\n                const adj = issue.inclusive ? \">=\" : \">\";\r\n                const sizing = getSizing(issue.origin);\r\n                if (sizing) {\r\n                    return `Za ma\u0142a warto\u015B\u0107: oczekiwano, \u017Ce ${issue.origin ?? \"warto\u015B\u0107\"} b\u0119dzie mie\u0107 ${adj}${issue.minimum.toString()} ${sizing.unit ?? \"element\u00F3w\"}`;\r\n                }\r\n                return `Zbyt ma\u0142(y/a/e): oczekiwano, \u017Ce ${issue.origin ?? \"warto\u015B\u0107\"} b\u0119dzie wynosi\u0107 ${adj}${issue.minimum.toString()}`;\r\n            }\r\n            case \"invalid_format\": {\r\n                const _issue = issue;\r\n                if (_issue.format === \"starts_with\")\r\n                    return `Nieprawid\u0142owy ci\u0105g znak\u00F3w: musi zaczyna\u0107 si\u0119 od \"${_issue.prefix}\"`;\r\n                if (_issue.format === \"ends_with\")\r\n                    return `Nieprawid\u0142owy ci\u0105g znak\u00F3w: musi ko\u0144czy\u0107 si\u0119 na \"${_issue.suffix}\"`;\r\n                if (_issue.format === \"includes\")\r\n                    return `Nieprawid\u0142owy ci\u0105g znak\u00F3w: musi zawiera\u0107 \"${_issue.includes}\"`;\r\n                if (_issue.format === \"regex\")\r\n                    return `Nieprawid\u0142owy ci\u0105g znak\u00F3w: musi odpowiada\u0107 wzorcowi ${_issue.pattern}`;\r\n                return `Nieprawid\u0142ow(y/a/e) ${Nouns[_issue.format] ?? issue.format}`;\r\n            }\r\n            case \"not_multiple_of\":\r\n                return `Nieprawid\u0142owa liczba: musi by\u0107 wielokrotno\u015Bci\u0105 ${issue.divisor}`;\r\n            case \"unrecognized_keys\":\r\n                return `Nierozpoznane klucze${issue.keys.length > 1 ? \"s\" : \"\"}: ${util.joinValues(issue.keys, \", \")}`;\r\n            case \"invalid_key\":\r\n                return `Nieprawid\u0142owy klucz w ${issue.origin}`;\r\n            case \"invalid_union\":\r\n                return \"Nieprawid\u0142owe dane wej\u015Bciowe\";\r\n            case \"invalid_element\":\r\n                return `Nieprawid\u0142owa warto\u015B\u0107 w ${issue.origin}`;\r\n            default:\r\n                return `Nieprawid\u0142owe dane wej\u015Bciowe`;\r\n        }\r\n    };\r\n};\r\nexport default function () {\r\n    return {\r\n        localeError: error(),\r\n    };\r\n}\r\n", "import * as util from \"../core/util.js\";\r\nconst error = () => {\r\n    const Sizable = {\r\n        string: { unit: \"caracteres\", verb: \"ter\" },\r\n        file: { unit: \"bytes\", verb: \"ter\" },\r\n        array: { unit: \"itens\", verb: \"ter\" },\r\n        set: { unit: \"itens\", verb: \"ter\" },\r\n    };\r\n    function getSizing(origin) {\r\n        return Sizable[origin] ?? null;\r\n    }\r\n    const parsedType = (data) => {\r\n        const t = typeof data;\r\n        switch (t) {\r\n            case \"number\": {\r\n                return Number.isNaN(data) ? \"NaN\" : \"n\u00FAmero\";\r\n            }\r\n            case \"object\": {\r\n                if (Array.isArray(data)) {\r\n                    return \"array\";\r\n                }\r\n                if (data === null) {\r\n                    return \"nulo\";\r\n                }\r\n                if (Object.getPrototypeOf(data) !== Object.prototype && data.constructor) {\r\n                    return data.constructor.name;\r\n                }\r\n            }\r\n        }\r\n        return t;\r\n    };\r\n    const Nouns = {\r\n        regex: \"padr\u00E3o\",\r\n        email: \"endere\u00E7o de e-mail\",\r\n        url: \"URL\",\r\n        emoji: \"emoji\",\r\n        uuid: \"UUID\",\r\n        uuidv4: \"UUIDv4\",\r\n        uuidv6: \"UUIDv6\",\r\n        nanoid: \"nanoid\",\r\n        guid: \"GUID\",\r\n        cuid: \"cuid\",\r\n        cuid2: \"cuid2\",\r\n        ulid: \"ULID\",\r\n        xid: \"XID\",\r\n        ksuid: \"KSUID\",\r\n        datetime: \"data e hora ISO\",\r\n        date: \"data ISO\",\r\n        time: \"hora ISO\",\r\n        duration: \"dura\u00E7\u00E3o ISO\",\r\n        ipv4: \"endere\u00E7o IPv4\",\r\n        ipv6: \"endere\u00E7o IPv6\",\r\n        cidrv4: \"faixa de IPv4\",\r\n        cidrv6: \"faixa de IPv6\",\r\n        base64: \"texto codificado em base64\",\r\n        base64url: \"URL codificada em base64\",\r\n        json_string: \"texto JSON\",\r\n        e164: \"n\u00FAmero E.164\",\r\n        jwt: \"JWT\",\r\n        template_literal: \"entrada\",\r\n    };\r\n    return (issue) => {\r\n        switch (issue.code) {\r\n            case \"invalid_type\":\r\n                return `Tipo inv\u00E1lido: esperado ${issue.expected}, recebido ${parsedType(issue.input)}`;\r\n            case \"invalid_value\":\r\n                if (issue.values.length === 1)\r\n                    return `Entrada inv\u00E1lida: esperado ${util.stringifyPrimitive(issue.values[0])}`;\r\n                return `Op\u00E7\u00E3o inv\u00E1lida: esperada uma das ${util.joinValues(issue.values, \"|\")}`;\r\n            case \"too_big\": {\r\n                const adj = issue.inclusive ? \"<=\" : \"<\";\r\n                const sizing = getSizing(issue.origin);\r\n                if (sizing)\r\n                    return `Muito grande: esperado que ${issue.origin ?? \"valor\"} tivesse ${adj}${issue.maximum.toString()} ${sizing.unit ?? \"elementos\"}`;\r\n                return `Muito grande: esperado que ${issue.origin ?? \"valor\"} fosse ${adj}${issue.maximum.toString()}`;\r\n            }\r\n            case \"too_small\": {\r\n                const adj = issue.inclusive ? \">=\" : \">\";\r\n                const sizing = getSizing(issue.origin);\r\n                if (sizing) {\r\n                    return `Muito pequeno: esperado que ${issue.origin} tivesse ${adj}${issue.minimum.toString()} ${sizing.unit}`;\r\n                }\r\n                return `Muito pequeno: esperado que ${issue.origin} fosse ${adj}${issue.minimum.toString()}`;\r\n            }\r\n            case \"invalid_format\": {\r\n                const _issue = issue;\r\n                if (_issue.format === \"starts_with\")\r\n                    return `Texto inv\u00E1lido: deve come\u00E7ar com \"${_issue.prefix}\"`;\r\n                if (_issue.format === \"ends_with\")\r\n                    return `Texto inv\u00E1lido: deve terminar com \"${_issue.suffix}\"`;\r\n                if (_issue.format === \"includes\")\r\n                    return `Texto inv\u00E1lido: deve incluir \"${_issue.includes}\"`;\r\n                if (_issue.format === \"regex\")\r\n                    return `Texto inv\u00E1lido: deve corresponder ao padr\u00E3o ${_issue.pattern}`;\r\n                return `${Nouns[_issue.format] ?? issue.format} inv\u00E1lido`;\r\n            }\r\n            case \"not_multiple_of\":\r\n                return `N\u00FAmero inv\u00E1lido: deve ser m\u00FAltiplo de ${issue.divisor}`;\r\n            case \"unrecognized_keys\":\r\n                return `Chave${issue.keys.length > 1 ? \"s\" : \"\"} desconhecida${issue.keys.length > 1 ? \"s\" : \"\"}: ${util.joinValues(issue.keys, \", \")}`;\r\n            case \"invalid_key\":\r\n                return `Chave inv\u00E1lida em ${issue.origin}`;\r\n            case \"invalid_union\":\r\n                return \"Entrada inv\u00E1lida\";\r\n            case \"invalid_element\":\r\n                return `Valor inv\u00E1lido em ${issue.origin}`;\r\n            default:\r\n                return `Campo inv\u00E1lido`;\r\n        }\r\n    };\r\n};\r\nexport default function () {\r\n    return {\r\n        localeError: error(),\r\n    };\r\n}\r\n", "import * as util from \"../core/util.js\";\r\nfunction getRussianPlural(count, one, few, many) {\r\n    const absCount = Math.abs(count);\r\n    const lastDigit = absCount % 10;\r\n    const lastTwoDigits = absCount % 100;\r\n    if (lastTwoDigits >= 11 && lastTwoDigits <= 19) {\r\n        return many;\r\n    }\r\n    if (lastDigit === 1) {\r\n        return one;\r\n    }\r\n    if (lastDigit >= 2 && lastDigit <= 4) {\r\n        return few;\r\n    }\r\n    return many;\r\n}\r\nconst error = () => {\r\n    const Sizable = {\r\n        string: {\r\n            unit: {\r\n                one: \"\u0441\u0438\u043C\u0432\u043E\u043B\",\r\n                few: \"\u0441\u0438\u043C\u0432\u043E\u043B\u0430\",\r\n                many: \"\u0441\u0438\u043C\u0432\u043E\u043B\u043E\u0432\",\r\n            },\r\n            verb: \"\u0438\u043C\u0435\u0442\u044C\",\r\n        },\r\n        file: {\r\n            unit: {\r\n                one: \"\u0431\u0430\u0439\u0442\",\r\n                few: \"\u0431\u0430\u0439\u0442\u0430\",\r\n                many: \"\u0431\u0430\u0439\u0442\",\r\n            },\r\n            verb: \"\u0438\u043C\u0435\u0442\u044C\",\r\n        },\r\n        array: {\r\n            unit: {\r\n                one: \"\u044D\u043B\u0435\u043C\u0435\u043D\u0442\",\r\n                few: \"\u044D\u043B\u0435\u043C\u0435\u043D\u0442\u0430\",\r\n                many: \"\u044D\u043B\u0435\u043C\u0435\u043D\u0442\u043E\u0432\",\r\n            },\r\n            verb: \"\u0438\u043C\u0435\u0442\u044C\",\r\n        },\r\n        set: {\r\n            unit: {\r\n                one: \"\u044D\u043B\u0435\u043C\u0435\u043D\u0442\",\r\n                few: \"\u044D\u043B\u0435\u043C\u0435\u043D\u0442\u0430\",\r\n                many: \"\u044D\u043B\u0435\u043C\u0435\u043D\u0442\u043E\u0432\",\r\n            },\r\n            verb: \"\u0438\u043C\u0435\u0442\u044C\",\r\n        },\r\n    };\r\n    function getSizing(origin) {\r\n        return Sizable[origin] ?? null;\r\n    }\r\n    const parsedType = (data) => {\r\n        const t = typeof data;\r\n        switch (t) {\r\n            case \"number\": {\r\n                return Number.isNaN(data) ? \"NaN\" : \"\u0447\u0438\u0441\u043B\u043E\";\r\n            }\r\n            case \"object\": {\r\n                if (Array.isArray(data)) {\r\n                    return \"\u043C\u0430\u0441\u0441\u0438\u0432\";\r\n                }\r\n                if (data === null) {\r\n                    return \"null\";\r\n                }\r\n                if (Object.getPrototypeOf(data) !== Object.prototype && data.constructor) {\r\n                    return data.constructor.name;\r\n                }\r\n            }\r\n        }\r\n        return t;\r\n    };\r\n    const Nouns = {\r\n        regex: \"\u0432\u0432\u043E\u0434\",\r\n        email: \"email \u0430\u0434\u0440\u0435\u0441\",\r\n        url: \"URL\",\r\n        emoji: \"\u044D\u043C\u043E\u0434\u0437\u0438\",\r\n        uuid: \"UUID\",\r\n        uuidv4: \"UUIDv4\",\r\n        uuidv6: \"UUIDv6\",\r\n        nanoid: \"nanoid\",\r\n        guid: \"GUID\",\r\n        cuid: \"cuid\",\r\n        cuid2: \"cuid2\",\r\n        ulid: \"ULID\",\r\n        xid: \"XID\",\r\n        ksuid: \"KSUID\",\r\n        datetime: \"ISO \u0434\u0430\u0442\u0430 \u0438 \u0432\u0440\u0435\u043C\u044F\",\r\n        date: \"ISO \u0434\u0430\u0442\u0430\",\r\n        time: \"ISO \u0432\u0440\u0435\u043C\u044F\",\r\n        duration: \"ISO \u0434\u043B\u0438\u0442\u0435\u043B\u044C\u043D\u043E\u0441\u0442\u044C\",\r\n        ipv4: \"IPv4 \u0430\u0434\u0440\u0435\u0441\",\r\n        ipv6: \"IPv6 \u0430\u0434\u0440\u0435\u0441\",\r\n        cidrv4: \"IPv4 \u0434\u0438\u0430\u043F\u0430\u0437\u043E\u043D\",\r\n        cidrv6: \"IPv6 \u0434\u0438\u0430\u043F\u0430\u0437\u043E\u043D\",\r\n        base64: \"\u0441\u0442\u0440\u043E\u043A\u0430 \u0432 \u0444\u043E\u0440\u043C\u0430\u0442\u0435 base64\",\r\n        base64url: \"\u0441\u0442\u0440\u043E\u043A\u0430 \u0432 \u0444\u043E\u0440\u043C\u0430\u0442\u0435 base64url\",\r\n        json_string: \"JSON \u0441\u0442\u0440\u043E\u043A\u0430\",\r\n        e164: \"\u043D\u043E\u043C\u0435\u0440 E.164\",\r\n        jwt: \"JWT\",\r\n        template_literal: \"\u0432\u0432\u043E\u0434\",\r\n    };\r\n    return (issue) => {\r\n        switch (issue.code) {\r\n            case \"invalid_type\":\r\n                return `\u041D\u0435\u0432\u0435\u0440\u043D\u044B\u0439 \u0432\u0432\u043E\u0434: \u043E\u0436\u0438\u0434\u0430\u043B\u043E\u0441\u044C ${issue.expected}, \u043F\u043E\u043B\u0443\u0447\u0435\u043D\u043E ${parsedType(issue.input)}`;\r\n            case \"invalid_value\":\r\n                if (issue.values.length === 1)\r\n                    return `\u041D\u0435\u0432\u0435\u0440\u043D\u044B\u0439 \u0432\u0432\u043E\u0434: \u043E\u0436\u0438\u0434\u0430\u043B\u043E\u0441\u044C ${util.stringifyPrimitive(issue.values[0])}`;\r\n                return `\u041D\u0435\u0432\u0435\u0440\u043D\u044B\u0439 \u0432\u0430\u0440\u0438\u0430\u043D\u0442: \u043E\u0436\u0438\u0434\u0430\u043B\u043E\u0441\u044C \u043E\u0434\u043D\u043E \u0438\u0437 ${util.joinValues(issue.values, \"|\")}`;\r\n            case \"too_big\": {\r\n                const adj = issue.inclusive ? \"<=\" : \"<\";\r\n                const sizing = getSizing(issue.origin);\r\n                if (sizing) {\r\n                    const maxValue = Number(issue.maximum);\r\n                    const unit = getRussianPlural(maxValue, sizing.unit.one, sizing.unit.few, sizing.unit.many);\r\n                    return `\u0421\u043B\u0438\u0448\u043A\u043E\u043C \u0431\u043E\u043B\u044C\u0448\u043E\u0435 \u0437\u043D\u0430\u0447\u0435\u043D\u0438\u0435: \u043E\u0436\u0438\u0434\u0430\u043B\u043E\u0441\u044C, \u0447\u0442\u043E ${issue.origin ?? \"\u0437\u043D\u0430\u0447\u0435\u043D\u0438\u0435\"} \u0431\u0443\u0434\u0435\u0442 \u0438\u043C\u0435\u0442\u044C ${adj}${issue.maximum.toString()} ${unit}`;\r\n                }\r\n                return `\u0421\u043B\u0438\u0448\u043A\u043E\u043C \u0431\u043E\u043B\u044C\u0448\u043E\u0435 \u0437\u043D\u0430\u0447\u0435\u043D\u0438\u0435: \u043E\u0436\u0438\u0434\u0430\u043B\u043E\u0441\u044C, \u0447\u0442\u043E ${issue.origin ?? \"\u0437\u043D\u0430\u0447\u0435\u043D\u0438\u0435\"} \u0431\u0443\u0434\u0435\u0442 ${adj}${issue.maximum.toString()}`;\r\n            }\r\n            case \"too_small\": {\r\n                const adj = issue.inclusive ? \">=\" : \">\";\r\n                const sizing = getSizing(issue.origin);\r\n                if (sizing) {\r\n                    const minValue = Number(issue.minimum);\r\n                    const unit = getRussianPlural(minValue, sizing.unit.one, sizing.unit.few, sizing.unit.many);\r\n                    return `\u0421\u043B\u0438\u0448\u043A\u043E\u043C \u043C\u0430\u043B\u0435\u043D\u044C\u043A\u043E\u0435 \u0437\u043D\u0430\u0447\u0435\u043D\u0438\u0435: \u043E\u0436\u0438\u0434\u0430\u043B\u043E\u0441\u044C, \u0447\u0442\u043E ${issue.origin} \u0431\u0443\u0434\u0435\u0442 \u0438\u043C\u0435\u0442\u044C ${adj}${issue.minimum.toString()} ${unit}`;\r\n                }\r\n                return `\u0421\u043B\u0438\u0448\u043A\u043E\u043C \u043C\u0430\u043B\u0435\u043D\u044C\u043A\u043E\u0435 \u0437\u043D\u0430\u0447\u0435\u043D\u0438\u0435: \u043E\u0436\u0438\u0434\u0430\u043B\u043E\u0441\u044C, \u0447\u0442\u043E ${issue.origin} \u0431\u0443\u0434\u0435\u0442 ${adj}${issue.minimum.toString()}`;\r\n            }\r\n            case \"invalid_format\": {\r\n                const _issue = issue;\r\n                if (_issue.format === \"starts_with\")\r\n                    return `\u041D\u0435\u0432\u0435\u0440\u043D\u0430\u044F \u0441\u0442\u0440\u043E\u043A\u0430: \u0434\u043E\u043B\u0436\u043D\u0430 \u043D\u0430\u0447\u0438\u043D\u0430\u0442\u044C\u0441\u044F \u0441 \"${_issue.prefix}\"`;\r\n                if (_issue.format === \"ends_with\")\r\n                    return `\u041D\u0435\u0432\u0435\u0440\u043D\u0430\u044F \u0441\u0442\u0440\u043E\u043A\u0430: \u0434\u043E\u043B\u0436\u043D\u0430 \u0437\u0430\u043A\u0430\u043D\u0447\u0438\u0432\u0430\u0442\u044C\u0441\u044F \u043D\u0430 \"${_issue.suffix}\"`;\r\n                if (_issue.format === \"includes\")\r\n                    return `\u041D\u0435\u0432\u0435\u0440\u043D\u0430\u044F \u0441\u0442\u0440\u043E\u043A\u0430: \u0434\u043E\u043B\u0436\u043D\u0430 \u0441\u043E\u0434\u0435\u0440\u0436\u0430\u0442\u044C \"${_issue.includes}\"`;\r\n                if (_issue.format === \"regex\")\r\n                    return `\u041D\u0435\u0432\u0435\u0440\u043D\u0430\u044F \u0441\u0442\u0440\u043E\u043A\u0430: \u0434\u043E\u043B\u0436\u043D\u0430 \u0441\u043E\u043E\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u043E\u0432\u0430\u0442\u044C \u0448\u0430\u0431\u043B\u043E\u043D\u0443 ${_issue.pattern}`;\r\n                return `\u041D\u0435\u0432\u0435\u0440\u043D\u044B\u0439 ${Nouns[_issue.format] ?? issue.format}`;\r\n            }\r\n            case \"not_multiple_of\":\r\n                return `\u041D\u0435\u0432\u0435\u0440\u043D\u043E\u0435 \u0447\u0438\u0441\u043B\u043E: \u0434\u043E\u043B\u0436\u043D\u043E \u0431\u044B\u0442\u044C \u043A\u0440\u0430\u0442\u043D\u044B\u043C ${issue.divisor}`;\r\n            case \"unrecognized_keys\":\r\n                return `\u041D\u0435\u0440\u0430\u0441\u043F\u043E\u0437\u043D\u0430\u043D\u043D${issue.keys.length > 1 ? \"\u044B\u0435\" : \"\u044B\u0439\"} \u043A\u043B\u044E\u0447${issue.keys.length > 1 ? \"\u0438\" : \"\"}: ${util.joinValues(issue.keys, \", \")}`;\r\n            case \"invalid_key\":\r\n                return `\u041D\u0435\u0432\u0435\u0440\u043D\u044B\u0439 \u043A\u043B\u044E\u0447 \u0432 ${issue.origin}`;\r\n            case \"invalid_union\":\r\n                return \"\u041D\u0435\u0432\u0435\u0440\u043D\u044B\u0435 \u0432\u0445\u043E\u0434\u043D\u044B\u0435 \u0434\u0430\u043D\u043D\u044B\u0435\";\r\n            case \"invalid_element\":\r\n                return `\u041D\u0435\u0432\u0435\u0440\u043D\u043E\u0435 \u0437\u043D\u0430\u0447\u0435\u043D\u0438\u0435 \u0432 ${issue.origin}`;\r\n            default:\r\n                return `\u041D\u0435\u0432\u0435\u0440\u043D\u044B\u0435 \u0432\u0445\u043E\u0434\u043D\u044B\u0435 \u0434\u0430\u043D\u043D\u044B\u0435`;\r\n        }\r\n    };\r\n};\r\nexport default function () {\r\n    return {\r\n        localeError: error(),\r\n    };\r\n}\r\n", "import * as util from \"../core/util.js\";\r\nconst error = () => {\r\n    const Sizable = {\r\n        string: { unit: \"znakov\", verb: \"imeti\" },\r\n        file: { unit: \"bajtov\", verb: \"imeti\" },\r\n        array: { unit: \"elementov\", verb: \"imeti\" },\r\n        set: { unit: \"elementov\", verb: \"imeti\" },\r\n    };\r\n    function getSizing(origin) {\r\n        return Sizable[origin] ?? null;\r\n    }\r\n    const parsedType = (data) => {\r\n        const t = typeof data;\r\n        switch (t) {\r\n            case \"number\": {\r\n                return Number.isNaN(data) ? \"NaN\" : \"\u0161tevilo\";\r\n            }\r\n            case \"object\": {\r\n                if (Array.isArray(data)) {\r\n                    return \"tabela\";\r\n                }\r\n                if (data === null) {\r\n                    return \"null\";\r\n                }\r\n                if (Object.getPrototypeOf(data) !== Object.prototype && data.constructor) {\r\n                    return data.constructor.name;\r\n                }\r\n            }\r\n        }\r\n        return t;\r\n    };\r\n    const Nouns = {\r\n        regex: \"vnos\",\r\n        email: \"e-po\u0161tni naslov\",\r\n        url: \"URL\",\r\n        emoji: \"emoji\",\r\n        uuid: \"UUID\",\r\n        uuidv4: \"UUIDv4\",\r\n        uuidv6: \"UUIDv6\",\r\n        nanoid: \"nanoid\",\r\n        guid: \"GUID\",\r\n        cuid: \"cuid\",\r\n        cuid2: \"cuid2\",\r\n        ulid: \"ULID\",\r\n        xid: \"XID\",\r\n        ksuid: \"KSUID\",\r\n        datetime: \"ISO datum in \u010Das\",\r\n        date: \"ISO datum\",\r\n        time: \"ISO \u010Das\",\r\n        duration: \"ISO trajanje\",\r\n        ipv4: \"IPv4 naslov\",\r\n        ipv6: \"IPv6 naslov\",\r\n        cidrv4: \"obseg IPv4\",\r\n        cidrv6: \"obseg IPv6\",\r\n        base64: \"base64 kodiran niz\",\r\n        base64url: \"base64url kodiran niz\",\r\n        json_string: \"JSON niz\",\r\n        e164: \"E.164 \u0161tevilka\",\r\n        jwt: \"JWT\",\r\n        template_literal: \"vnos\",\r\n    };\r\n    return (issue) => {\r\n        switch (issue.code) {\r\n            case \"invalid_type\":\r\n                return `Neveljaven vnos: pri\u010Dakovano ${issue.expected}, prejeto ${parsedType(issue.input)}`;\r\n            case \"invalid_value\":\r\n                if (issue.values.length === 1)\r\n                    return `Neveljaven vnos: pri\u010Dakovano ${util.stringifyPrimitive(issue.values[0])}`;\r\n                return `Neveljavna mo\u017Enost: pri\u010Dakovano eno izmed ${util.joinValues(issue.values, \"|\")}`;\r\n            case \"too_big\": {\r\n                const adj = issue.inclusive ? \"<=\" : \"<\";\r\n                const sizing = getSizing(issue.origin);\r\n                if (sizing)\r\n                    return `Preveliko: pri\u010Dakovano, da bo ${issue.origin ?? \"vrednost\"} imelo ${adj}${issue.maximum.toString()} ${sizing.unit ?? \"elementov\"}`;\r\n                return `Preveliko: pri\u010Dakovano, da bo ${issue.origin ?? \"vrednost\"} ${adj}${issue.maximum.toString()}`;\r\n            }\r\n            case \"too_small\": {\r\n                const adj = issue.inclusive ? \">=\" : \">\";\r\n                const sizing = getSizing(issue.origin);\r\n                if (sizing) {\r\n                    return `Premajhno: pri\u010Dakovano, da bo ${issue.origin} imelo ${adj}${issue.minimum.toString()} ${sizing.unit}`;\r\n                }\r\n                return `Premajhno: pri\u010Dakovano, da bo ${issue.origin} ${adj}${issue.minimum.toString()}`;\r\n            }\r\n            case \"invalid_format\": {\r\n                const _issue = issue;\r\n                if (_issue.format === \"starts_with\") {\r\n                    return `Neveljaven niz: mora se za\u010Deti z \"${_issue.prefix}\"`;\r\n                }\r\n                if (_issue.format === \"ends_with\")\r\n                    return `Neveljaven niz: mora se kon\u010Dati z \"${_issue.suffix}\"`;\r\n                if (_issue.format === \"includes\")\r\n                    return `Neveljaven niz: mora vsebovati \"${_issue.includes}\"`;\r\n                if (_issue.format === \"regex\")\r\n                    return `Neveljaven niz: mora ustrezati vzorcu ${_issue.pattern}`;\r\n                return `Neveljaven ${Nouns[_issue.format] ?? issue.format}`;\r\n            }\r\n            case \"not_multiple_of\":\r\n                return `Neveljavno \u0161tevilo: mora biti ve\u010Dkratnik ${issue.divisor}`;\r\n            case \"unrecognized_keys\":\r\n                return `Neprepoznan${issue.keys.length > 1 ? \"i klju\u010Di\" : \" klju\u010D\"}: ${util.joinValues(issue.keys, \", \")}`;\r\n            case \"invalid_key\":\r\n                return `Neveljaven klju\u010D v ${issue.origin}`;\r\n            case \"invalid_union\":\r\n                return \"Neveljaven vnos\";\r\n            case \"invalid_element\":\r\n                return `Neveljavna vrednost v ${issue.origin}`;\r\n            default:\r\n                return \"Neveljaven vnos\";\r\n        }\r\n    };\r\n};\r\nexport default function () {\r\n    return {\r\n        localeError: error(),\r\n    };\r\n}\r\n", "import * as util from \"../core/util.js\";\r\nconst error = () => {\r\n    const Sizable = {\r\n        string: { unit: \"tecken\", verb: \"att ha\" },\r\n        file: { unit: \"bytes\", verb: \"att ha\" },\r\n        array: { unit: \"objekt\", verb: \"att inneh\u00E5lla\" },\r\n        set: { unit: \"objekt\", verb: \"att inneh\u00E5lla\" },\r\n    };\r\n    function getSizing(origin) {\r\n        return Sizable[origin] ?? null;\r\n    }\r\n    const parsedType = (data) => {\r\n        const t = typeof data;\r\n        switch (t) {\r\n            case \"number\": {\r\n                return Number.isNaN(data) ? \"NaN\" : \"antal\";\r\n            }\r\n            case \"object\": {\r\n                if (Array.isArray(data)) {\r\n                    return \"lista\";\r\n                }\r\n                if (data === null) {\r\n                    return \"null\";\r\n                }\r\n                if (Object.getPrototypeOf(data) !== Object.prototype && data.constructor) {\r\n                    return data.constructor.name;\r\n                }\r\n            }\r\n        }\r\n        return t;\r\n    };\r\n    const Nouns = {\r\n        regex: \"regulj\u00E4rt uttryck\",\r\n        email: \"e-postadress\",\r\n        url: \"URL\",\r\n        emoji: \"emoji\",\r\n        uuid: \"UUID\",\r\n        uuidv4: \"UUIDv4\",\r\n        uuidv6: \"UUIDv6\",\r\n        nanoid: \"nanoid\",\r\n        guid: \"GUID\",\r\n        cuid: \"cuid\",\r\n        cuid2: \"cuid2\",\r\n        ulid: \"ULID\",\r\n        xid: \"XID\",\r\n        ksuid: \"KSUID\",\r\n        datetime: \"ISO-datum och tid\",\r\n        date: \"ISO-datum\",\r\n        time: \"ISO-tid\",\r\n        duration: \"ISO-varaktighet\",\r\n        ipv4: \"IPv4-intervall\",\r\n        ipv6: \"IPv6-intervall\",\r\n        cidrv4: \"IPv4-spektrum\",\r\n        cidrv6: \"IPv6-spektrum\",\r\n        base64: \"base64-kodad str\u00E4ng\",\r\n        base64url: \"base64url-kodad str\u00E4ng\",\r\n        json_string: \"JSON-str\u00E4ng\",\r\n        e164: \"E.164-nummer\",\r\n        jwt: \"JWT\",\r\n        template_literal: \"mall-literal\",\r\n    };\r\n    return (issue) => {\r\n        switch (issue.code) {\r\n            case \"invalid_type\":\r\n                return `Ogiltig inmatning: f\u00F6rv\u00E4ntat ${issue.expected}, fick ${parsedType(issue.input)}`;\r\n            case \"invalid_value\":\r\n                if (issue.values.length === 1)\r\n                    return `Ogiltig inmatning: f\u00F6rv\u00E4ntat ${util.stringifyPrimitive(issue.values[0])}`;\r\n                return `Ogiltigt val: f\u00F6rv\u00E4ntade en av ${util.joinValues(issue.values, \"|\")}`;\r\n            case \"too_big\": {\r\n                const adj = issue.inclusive ? \"<=\" : \"<\";\r\n                const sizing = getSizing(issue.origin);\r\n                if (sizing) {\r\n                    return `F\u00F6r stor(t): f\u00F6rv\u00E4ntade ${issue.origin ?? \"v\u00E4rdet\"} att ha ${adj}${issue.maximum.toString()} ${sizing.unit ?? \"element\"}`;\r\n                }\r\n                return `F\u00F6r stor(t): f\u00F6rv\u00E4ntat ${issue.origin ?? \"v\u00E4rdet\"} att ha ${adj}${issue.maximum.toString()}`;\r\n            }\r\n            case \"too_small\": {\r\n                const adj = issue.inclusive ? \">=\" : \">\";\r\n                const sizing = getSizing(issue.origin);\r\n                if (sizing) {\r\n                    return `F\u00F6r lite(t): f\u00F6rv\u00E4ntade ${issue.origin ?? \"v\u00E4rdet\"} att ha ${adj}${issue.minimum.toString()} ${sizing.unit}`;\r\n                }\r\n                return `F\u00F6r lite(t): f\u00F6rv\u00E4ntade ${issue.origin ?? \"v\u00E4rdet\"} att ha ${adj}${issue.minimum.toString()}`;\r\n            }\r\n            case \"invalid_format\": {\r\n                const _issue = issue;\r\n                if (_issue.format === \"starts_with\") {\r\n                    return `Ogiltig str\u00E4ng: m\u00E5ste b\u00F6rja med \"${_issue.prefix}\"`;\r\n                }\r\n                if (_issue.format === \"ends_with\")\r\n                    return `Ogiltig str\u00E4ng: m\u00E5ste sluta med \"${_issue.suffix}\"`;\r\n                if (_issue.format === \"includes\")\r\n                    return `Ogiltig str\u00E4ng: m\u00E5ste inneh\u00E5lla \"${_issue.includes}\"`;\r\n                if (_issue.format === \"regex\")\r\n                    return `Ogiltig str\u00E4ng: m\u00E5ste matcha m\u00F6nstret \"${_issue.pattern}\"`;\r\n                return `Ogiltig(t) ${Nouns[_issue.format] ?? issue.format}`;\r\n            }\r\n            case \"not_multiple_of\":\r\n                return `Ogiltigt tal: m\u00E5ste vara en multipel av ${issue.divisor}`;\r\n            case \"unrecognized_keys\":\r\n                return `${issue.keys.length > 1 ? \"Ok\u00E4nda nycklar\" : \"Ok\u00E4nd nyckel\"}: ${util.joinValues(issue.keys, \", \")}`;\r\n            case \"invalid_key\":\r\n                return `Ogiltig nyckel i ${issue.origin ?? \"v\u00E4rdet\"}`;\r\n            case \"invalid_union\":\r\n                return \"Ogiltig input\";\r\n            case \"invalid_element\":\r\n                return `Ogiltigt v\u00E4rde i ${issue.origin ?? \"v\u00E4rdet\"}`;\r\n            default:\r\n                return `Ogiltig input`;\r\n        }\r\n    };\r\n};\r\nexport default function () {\r\n    return {\r\n        localeError: error(),\r\n    };\r\n}\r\n", "import * as util from \"../core/util.js\";\r\nconst error = () => {\r\n    const Sizable = {\r\n        string: { unit: \"\u0B8E\u0BB4\u0BC1\u0BA4\u0BCD\u0BA4\u0BC1\u0B95\u0BCD\u0B95\u0BB3\u0BCD\", verb: \"\u0B95\u0BCA\u0BA3\u0BCD\u0B9F\u0BBF\u0BB0\u0BC1\u0B95\u0BCD\u0B95 \u0BB5\u0BC7\u0BA3\u0BCD\u0B9F\u0BC1\u0BAE\u0BCD\" },\r\n        file: { unit: \"\u0BAA\u0BC8\u0B9F\u0BCD\u0B9F\u0BC1\u0B95\u0BB3\u0BCD\", verb: \"\u0B95\u0BCA\u0BA3\u0BCD\u0B9F\u0BBF\u0BB0\u0BC1\u0B95\u0BCD\u0B95 \u0BB5\u0BC7\u0BA3\u0BCD\u0B9F\u0BC1\u0BAE\u0BCD\" },\r\n        array: { unit: \"\u0B89\u0BB1\u0BC1\u0BAA\u0BCD\u0BAA\u0BC1\u0B95\u0BB3\u0BCD\", verb: \"\u0B95\u0BCA\u0BA3\u0BCD\u0B9F\u0BBF\u0BB0\u0BC1\u0B95\u0BCD\u0B95 \u0BB5\u0BC7\u0BA3\u0BCD\u0B9F\u0BC1\u0BAE\u0BCD\" },\r\n        set: { unit: \"\u0B89\u0BB1\u0BC1\u0BAA\u0BCD\u0BAA\u0BC1\u0B95\u0BB3\u0BCD\", verb: \"\u0B95\u0BCA\u0BA3\u0BCD\u0B9F\u0BBF\u0BB0\u0BC1\u0B95\u0BCD\u0B95 \u0BB5\u0BC7\u0BA3\u0BCD\u0B9F\u0BC1\u0BAE\u0BCD\" },\r\n    };\r\n    function getSizing(origin) {\r\n        return Sizable[origin] ?? null;\r\n    }\r\n    const parsedType = (data) => {\r\n        const t = typeof data;\r\n        switch (t) {\r\n            case \"number\": {\r\n                return Number.isNaN(data) ? \"\u0B8E\u0BA3\u0BCD \u0B85\u0BB2\u0BCD\u0BB2\u0BBE\u0BA4\u0BA4\u0BC1\" : \"\u0B8E\u0BA3\u0BCD\";\r\n            }\r\n            case \"object\": {\r\n                if (Array.isArray(data)) {\r\n                    return \"\u0B85\u0BA3\u0BBF\";\r\n                }\r\n                if (data === null) {\r\n                    return \"\u0BB5\u0BC6\u0BB1\u0BC1\u0BAE\u0BC8\";\r\n                }\r\n                if (Object.getPrototypeOf(data) !== Object.prototype && data.constructor) {\r\n                    return data.constructor.name;\r\n                }\r\n            }\r\n        }\r\n        return t;\r\n    };\r\n    const Nouns = {\r\n        regex: \"\u0B89\u0BB3\u0BCD\u0BB3\u0BC0\u0B9F\u0BC1\",\r\n        email: \"\u0BAE\u0BBF\u0BA9\u0BCD\u0BA9\u0B9E\u0BCD\u0B9A\u0BB2\u0BCD \u0BAE\u0BC1\u0B95\u0BB5\u0BB0\u0BBF\",\r\n        url: \"URL\",\r\n        emoji: \"emoji\",\r\n        uuid: \"UUID\",\r\n        uuidv4: \"UUIDv4\",\r\n        uuidv6: \"UUIDv6\",\r\n        nanoid: \"nanoid\",\r\n        guid: \"GUID\",\r\n        cuid: \"cuid\",\r\n        cuid2: \"cuid2\",\r\n        ulid: \"ULID\",\r\n        xid: \"XID\",\r\n        ksuid: \"KSUID\",\r\n        datetime: \"ISO \u0BA4\u0BC7\u0BA4\u0BBF \u0BA8\u0BC7\u0BB0\u0BAE\u0BCD\",\r\n        date: \"ISO \u0BA4\u0BC7\u0BA4\u0BBF\",\r\n        time: \"ISO \u0BA8\u0BC7\u0BB0\u0BAE\u0BCD\",\r\n        duration: \"ISO \u0B95\u0BBE\u0BB2 \u0B85\u0BB3\u0BB5\u0BC1\",\r\n        ipv4: \"IPv4 \u0BAE\u0BC1\u0B95\u0BB5\u0BB0\u0BBF\",\r\n        ipv6: \"IPv6 \u0BAE\u0BC1\u0B95\u0BB5\u0BB0\u0BBF\",\r\n        cidrv4: \"IPv4 \u0BB5\u0BB0\u0BAE\u0BCD\u0BAA\u0BC1\",\r\n        cidrv6: \"IPv6 \u0BB5\u0BB0\u0BAE\u0BCD\u0BAA\u0BC1\",\r\n        base64: \"base64-encoded \u0B9A\u0BB0\u0BAE\u0BCD\",\r\n        base64url: \"base64url-encoded \u0B9A\u0BB0\u0BAE\u0BCD\",\r\n        json_string: \"JSON \u0B9A\u0BB0\u0BAE\u0BCD\",\r\n        e164: \"E.164 \u0B8E\u0BA3\u0BCD\",\r\n        jwt: \"JWT\",\r\n        template_literal: \"input\",\r\n    };\r\n    return (issue) => {\r\n        switch (issue.code) {\r\n            case \"invalid_type\":\r\n                return `\u0BA4\u0BB5\u0BB1\u0BBE\u0BA9 \u0B89\u0BB3\u0BCD\u0BB3\u0BC0\u0B9F\u0BC1: \u0B8E\u0BA4\u0BBF\u0BB0\u0BCD\u0BAA\u0BBE\u0BB0\u0BCD\u0B95\u0BCD\u0B95\u0BAA\u0BCD\u0BAA\u0B9F\u0BCD\u0B9F\u0BA4\u0BC1 ${issue.expected}, \u0BAA\u0BC6\u0BB1\u0BAA\u0BCD\u0BAA\u0B9F\u0BCD\u0B9F\u0BA4\u0BC1 ${parsedType(issue.input)}`;\r\n            case \"invalid_value\":\r\n                if (issue.values.length === 1)\r\n                    return `\u0BA4\u0BB5\u0BB1\u0BBE\u0BA9 \u0B89\u0BB3\u0BCD\u0BB3\u0BC0\u0B9F\u0BC1: \u0B8E\u0BA4\u0BBF\u0BB0\u0BCD\u0BAA\u0BBE\u0BB0\u0BCD\u0B95\u0BCD\u0B95\u0BAA\u0BCD\u0BAA\u0B9F\u0BCD\u0B9F\u0BA4\u0BC1 ${util.stringifyPrimitive(issue.values[0])}`;\r\n                return `\u0BA4\u0BB5\u0BB1\u0BBE\u0BA9 \u0BB5\u0BBF\u0BB0\u0BC1\u0BAA\u0BCD\u0BAA\u0BAE\u0BCD: \u0B8E\u0BA4\u0BBF\u0BB0\u0BCD\u0BAA\u0BBE\u0BB0\u0BCD\u0B95\u0BCD\u0B95\u0BAA\u0BCD\u0BAA\u0B9F\u0BCD\u0B9F\u0BA4\u0BC1 ${util.joinValues(issue.values, \"|\")} \u0B87\u0BB2\u0BCD \u0B92\u0BA9\u0BCD\u0BB1\u0BC1`;\r\n            case \"too_big\": {\r\n                const adj = issue.inclusive ? \"<=\" : \"<\";\r\n                const sizing = getSizing(issue.origin);\r\n                if (sizing) {\r\n                    return `\u0BAE\u0BBF\u0B95 \u0BAA\u0BC6\u0BB0\u0BBF\u0BAF\u0BA4\u0BC1: \u0B8E\u0BA4\u0BBF\u0BB0\u0BCD\u0BAA\u0BBE\u0BB0\u0BCD\u0B95\u0BCD\u0B95\u0BAA\u0BCD\u0BAA\u0B9F\u0BCD\u0B9F\u0BA4\u0BC1 ${issue.origin ?? \"\u0BAE\u0BA4\u0BBF\u0BAA\u0BCD\u0BAA\u0BC1\"} ${adj}${issue.maximum.toString()} ${sizing.unit ?? \"\u0B89\u0BB1\u0BC1\u0BAA\u0BCD\u0BAA\u0BC1\u0B95\u0BB3\u0BCD\"} \u0B86\u0B95 \u0B87\u0BB0\u0BC1\u0B95\u0BCD\u0B95 \u0BB5\u0BC7\u0BA3\u0BCD\u0B9F\u0BC1\u0BAE\u0BCD`;\r\n                }\r\n                return `\u0BAE\u0BBF\u0B95 \u0BAA\u0BC6\u0BB0\u0BBF\u0BAF\u0BA4\u0BC1: \u0B8E\u0BA4\u0BBF\u0BB0\u0BCD\u0BAA\u0BBE\u0BB0\u0BCD\u0B95\u0BCD\u0B95\u0BAA\u0BCD\u0BAA\u0B9F\u0BCD\u0B9F\u0BA4\u0BC1 ${issue.origin ?? \"\u0BAE\u0BA4\u0BBF\u0BAA\u0BCD\u0BAA\u0BC1\"} ${adj}${issue.maximum.toString()} \u0B86\u0B95 \u0B87\u0BB0\u0BC1\u0B95\u0BCD\u0B95 \u0BB5\u0BC7\u0BA3\u0BCD\u0B9F\u0BC1\u0BAE\u0BCD`;\r\n            }\r\n            case \"too_small\": {\r\n                const adj = issue.inclusive ? \">=\" : \">\";\r\n                const sizing = getSizing(issue.origin);\r\n                if (sizing) {\r\n                    return `\u0BAE\u0BBF\u0B95\u0B9A\u0BCD \u0B9A\u0BBF\u0BB1\u0BBF\u0BAF\u0BA4\u0BC1: \u0B8E\u0BA4\u0BBF\u0BB0\u0BCD\u0BAA\u0BBE\u0BB0\u0BCD\u0B95\u0BCD\u0B95\u0BAA\u0BCD\u0BAA\u0B9F\u0BCD\u0B9F\u0BA4\u0BC1 ${issue.origin} ${adj}${issue.minimum.toString()} ${sizing.unit} \u0B86\u0B95 \u0B87\u0BB0\u0BC1\u0B95\u0BCD\u0B95 \u0BB5\u0BC7\u0BA3\u0BCD\u0B9F\u0BC1\u0BAE\u0BCD`; //\r\n                }\r\n                return `\u0BAE\u0BBF\u0B95\u0B9A\u0BCD \u0B9A\u0BBF\u0BB1\u0BBF\u0BAF\u0BA4\u0BC1: \u0B8E\u0BA4\u0BBF\u0BB0\u0BCD\u0BAA\u0BBE\u0BB0\u0BCD\u0B95\u0BCD\u0B95\u0BAA\u0BCD\u0BAA\u0B9F\u0BCD\u0B9F\u0BA4\u0BC1 ${issue.origin} ${adj}${issue.minimum.toString()} \u0B86\u0B95 \u0B87\u0BB0\u0BC1\u0B95\u0BCD\u0B95 \u0BB5\u0BC7\u0BA3\u0BCD\u0B9F\u0BC1\u0BAE\u0BCD`;\r\n            }\r\n            case \"invalid_format\": {\r\n                const _issue = issue;\r\n                if (_issue.format === \"starts_with\")\r\n                    return `\u0BA4\u0BB5\u0BB1\u0BBE\u0BA9 \u0B9A\u0BB0\u0BAE\u0BCD: \"${_issue.prefix}\" \u0B87\u0BB2\u0BCD \u0BA4\u0BCA\u0B9F\u0B99\u0BCD\u0B95 \u0BB5\u0BC7\u0BA3\u0BCD\u0B9F\u0BC1\u0BAE\u0BCD`;\r\n                if (_issue.format === \"ends_with\")\r\n                    return `\u0BA4\u0BB5\u0BB1\u0BBE\u0BA9 \u0B9A\u0BB0\u0BAE\u0BCD: \"${_issue.suffix}\" \u0B87\u0BB2\u0BCD \u0BAE\u0BC1\u0B9F\u0BBF\u0BB5\u0B9F\u0BC8\u0BAF \u0BB5\u0BC7\u0BA3\u0BCD\u0B9F\u0BC1\u0BAE\u0BCD`;\r\n                if (_issue.format === \"includes\")\r\n                    return `\u0BA4\u0BB5\u0BB1\u0BBE\u0BA9 \u0B9A\u0BB0\u0BAE\u0BCD: \"${_issue.includes}\" \u0B90 \u0B89\u0BB3\u0BCD\u0BB3\u0B9F\u0B95\u0BCD\u0B95 \u0BB5\u0BC7\u0BA3\u0BCD\u0B9F\u0BC1\u0BAE\u0BCD`;\r\n                if (_issue.format === \"regex\")\r\n                    return `\u0BA4\u0BB5\u0BB1\u0BBE\u0BA9 \u0B9A\u0BB0\u0BAE\u0BCD: ${_issue.pattern} \u0BAE\u0BC1\u0BB1\u0BC8\u0BAA\u0BBE\u0B9F\u0BCD\u0B9F\u0BC1\u0B9F\u0BA9\u0BCD \u0BAA\u0BCA\u0BB0\u0BC1\u0BA8\u0BCD\u0BA4 \u0BB5\u0BC7\u0BA3\u0BCD\u0B9F\u0BC1\u0BAE\u0BCD`;\r\n                return `\u0BA4\u0BB5\u0BB1\u0BBE\u0BA9 ${Nouns[_issue.format] ?? issue.format}`;\r\n            }\r\n            case \"not_multiple_of\":\r\n                return `\u0BA4\u0BB5\u0BB1\u0BBE\u0BA9 \u0B8E\u0BA3\u0BCD: ${issue.divisor} \u0B87\u0BA9\u0BCD \u0BAA\u0BB2\u0BAE\u0BBE\u0B95 \u0B87\u0BB0\u0BC1\u0B95\u0BCD\u0B95 \u0BB5\u0BC7\u0BA3\u0BCD\u0B9F\u0BC1\u0BAE\u0BCD`;\r\n            case \"unrecognized_keys\":\r\n                return `\u0B85\u0B9F\u0BC8\u0BAF\u0BBE\u0BB3\u0BAE\u0BCD \u0BA4\u0BC6\u0BB0\u0BBF\u0BAF\u0BBE\u0BA4 \u0BB5\u0BBF\u0B9A\u0BC8${issue.keys.length > 1 ? \"\u0B95\u0BB3\u0BCD\" : \"\"}: ${util.joinValues(issue.keys, \", \")}`;\r\n            case \"invalid_key\":\r\n                return `${issue.origin} \u0B87\u0BB2\u0BCD \u0BA4\u0BB5\u0BB1\u0BBE\u0BA9 \u0BB5\u0BBF\u0B9A\u0BC8`;\r\n            case \"invalid_union\":\r\n                return \"\u0BA4\u0BB5\u0BB1\u0BBE\u0BA9 \u0B89\u0BB3\u0BCD\u0BB3\u0BC0\u0B9F\u0BC1\";\r\n            case \"invalid_element\":\r\n                return `${issue.origin} \u0B87\u0BB2\u0BCD \u0BA4\u0BB5\u0BB1\u0BBE\u0BA9 \u0BAE\u0BA4\u0BBF\u0BAA\u0BCD\u0BAA\u0BC1`;\r\n            default:\r\n                return `\u0BA4\u0BB5\u0BB1\u0BBE\u0BA9 \u0B89\u0BB3\u0BCD\u0BB3\u0BC0\u0B9F\u0BC1`;\r\n        }\r\n    };\r\n};\r\nexport default function () {\r\n    return {\r\n        localeError: error(),\r\n    };\r\n}\r\n", "import * as util from \"../core/util.js\";\r\nconst error = () => {\r\n    const Sizable = {\r\n        string: { unit: \"\u0E15\u0E31\u0E27\u0E2D\u0E31\u0E01\u0E29\u0E23\", verb: \"\u0E04\u0E27\u0E23\u0E21\u0E35\" },\r\n        file: { unit: \"\u0E44\u0E1A\u0E15\u0E4C\", verb: \"\u0E04\u0E27\u0E23\u0E21\u0E35\" },\r\n        array: { unit: \"\u0E23\u0E32\u0E22\u0E01\u0E32\u0E23\", verb: \"\u0E04\u0E27\u0E23\u0E21\u0E35\" },\r\n        set: { unit: \"\u0E23\u0E32\u0E22\u0E01\u0E32\u0E23\", verb: \"\u0E04\u0E27\u0E23\u0E21\u0E35\" },\r\n    };\r\n    function getSizing(origin) {\r\n        return Sizable[origin] ?? null;\r\n    }\r\n    const parsedType = (data) => {\r\n        const t = typeof data;\r\n        switch (t) {\r\n            case \"number\": {\r\n                return Number.isNaN(data) ? \"\u0E44\u0E21\u0E48\u0E43\u0E0A\u0E48\u0E15\u0E31\u0E27\u0E40\u0E25\u0E02 (NaN)\" : \"\u0E15\u0E31\u0E27\u0E40\u0E25\u0E02\";\r\n            }\r\n            case \"object\": {\r\n                if (Array.isArray(data)) {\r\n                    return \"\u0E2D\u0E32\u0E23\u0E4C\u0E40\u0E23\u0E22\u0E4C (Array)\";\r\n                }\r\n                if (data === null) {\r\n                    return \"\u0E44\u0E21\u0E48\u0E21\u0E35\u0E04\u0E48\u0E32 (null)\";\r\n                }\r\n                if (Object.getPrototypeOf(data) !== Object.prototype && data.constructor) {\r\n                    return data.constructor.name;\r\n                }\r\n            }\r\n        }\r\n        return t;\r\n    };\r\n    const Nouns = {\r\n        regex: \"\u0E02\u0E49\u0E2D\u0E21\u0E39\u0E25\u0E17\u0E35\u0E48\u0E1B\u0E49\u0E2D\u0E19\",\r\n        email: \"\u0E17\u0E35\u0E48\u0E2D\u0E22\u0E39\u0E48\u0E2D\u0E35\u0E40\u0E21\u0E25\",\r\n        url: \"URL\",\r\n        emoji: \"\u0E2D\u0E34\u0E42\u0E21\u0E08\u0E34\",\r\n        uuid: \"UUID\",\r\n        uuidv4: \"UUIDv4\",\r\n        uuidv6: \"UUIDv6\",\r\n        nanoid: \"nanoid\",\r\n        guid: \"GUID\",\r\n        cuid: \"cuid\",\r\n        cuid2: \"cuid2\",\r\n        ulid: \"ULID\",\r\n        xid: \"XID\",\r\n        ksuid: \"KSUID\",\r\n        datetime: \"\u0E27\u0E31\u0E19\u0E17\u0E35\u0E48\u0E40\u0E27\u0E25\u0E32\u0E41\u0E1A\u0E1A ISO\",\r\n        date: \"\u0E27\u0E31\u0E19\u0E17\u0E35\u0E48\u0E41\u0E1A\u0E1A ISO\",\r\n        time: \"\u0E40\u0E27\u0E25\u0E32\u0E41\u0E1A\u0E1A ISO\",\r\n        duration: \"\u0E0A\u0E48\u0E27\u0E07\u0E40\u0E27\u0E25\u0E32\u0E41\u0E1A\u0E1A ISO\",\r\n        ipv4: \"\u0E17\u0E35\u0E48\u0E2D\u0E22\u0E39\u0E48 IPv4\",\r\n        ipv6: \"\u0E17\u0E35\u0E48\u0E2D\u0E22\u0E39\u0E48 IPv6\",\r\n        cidrv4: \"\u0E0A\u0E48\u0E27\u0E07 IP \u0E41\u0E1A\u0E1A IPv4\",\r\n        cidrv6: \"\u0E0A\u0E48\u0E27\u0E07 IP \u0E41\u0E1A\u0E1A IPv6\",\r\n        base64: \"\u0E02\u0E49\u0E2D\u0E04\u0E27\u0E32\u0E21\u0E41\u0E1A\u0E1A Base64\",\r\n        base64url: \"\u0E02\u0E49\u0E2D\u0E04\u0E27\u0E32\u0E21\u0E41\u0E1A\u0E1A Base64 \u0E2A\u0E33\u0E2B\u0E23\u0E31\u0E1A URL\",\r\n        json_string: \"\u0E02\u0E49\u0E2D\u0E04\u0E27\u0E32\u0E21\u0E41\u0E1A\u0E1A JSON\",\r\n        e164: \"\u0E40\u0E1A\u0E2D\u0E23\u0E4C\u0E42\u0E17\u0E23\u0E28\u0E31\u0E1E\u0E17\u0E4C\u0E23\u0E30\u0E2B\u0E27\u0E48\u0E32\u0E07\u0E1B\u0E23\u0E30\u0E40\u0E17\u0E28 (E.164)\",\r\n        jwt: \"\u0E42\u0E17\u0E40\u0E04\u0E19 JWT\",\r\n        template_literal: \"\u0E02\u0E49\u0E2D\u0E21\u0E39\u0E25\u0E17\u0E35\u0E48\u0E1B\u0E49\u0E2D\u0E19\",\r\n    };\r\n    return (issue) => {\r\n        switch (issue.code) {\r\n            case \"invalid_type\":\r\n                return `\u0E1B\u0E23\u0E30\u0E40\u0E20\u0E17\u0E02\u0E49\u0E2D\u0E21\u0E39\u0E25\u0E44\u0E21\u0E48\u0E16\u0E39\u0E01\u0E15\u0E49\u0E2D\u0E07: \u0E04\u0E27\u0E23\u0E40\u0E1B\u0E47\u0E19 ${issue.expected} \u0E41\u0E15\u0E48\u0E44\u0E14\u0E49\u0E23\u0E31\u0E1A ${parsedType(issue.input)}`;\r\n            case \"invalid_value\":\r\n                if (issue.values.length === 1)\r\n                    return `\u0E04\u0E48\u0E32\u0E44\u0E21\u0E48\u0E16\u0E39\u0E01\u0E15\u0E49\u0E2D\u0E07: \u0E04\u0E27\u0E23\u0E40\u0E1B\u0E47\u0E19 ${util.stringifyPrimitive(issue.values[0])}`;\r\n                return `\u0E15\u0E31\u0E27\u0E40\u0E25\u0E37\u0E2D\u0E01\u0E44\u0E21\u0E48\u0E16\u0E39\u0E01\u0E15\u0E49\u0E2D\u0E07: \u0E04\u0E27\u0E23\u0E40\u0E1B\u0E47\u0E19\u0E2B\u0E19\u0E36\u0E48\u0E07\u0E43\u0E19 ${util.joinValues(issue.values, \"|\")}`;\r\n            case \"too_big\": {\r\n                const adj = issue.inclusive ? \"\u0E44\u0E21\u0E48\u0E40\u0E01\u0E34\u0E19\" : \"\u0E19\u0E49\u0E2D\u0E22\u0E01\u0E27\u0E48\u0E32\";\r\n                const sizing = getSizing(issue.origin);\r\n                if (sizing)\r\n                    return `\u0E40\u0E01\u0E34\u0E19\u0E01\u0E33\u0E2B\u0E19\u0E14: ${issue.origin ?? \"\u0E04\u0E48\u0E32\"} \u0E04\u0E27\u0E23\u0E21\u0E35${adj} ${issue.maximum.toString()} ${sizing.unit ?? \"\u0E23\u0E32\u0E22\u0E01\u0E32\u0E23\"}`;\r\n                return `\u0E40\u0E01\u0E34\u0E19\u0E01\u0E33\u0E2B\u0E19\u0E14: ${issue.origin ?? \"\u0E04\u0E48\u0E32\"} \u0E04\u0E27\u0E23\u0E21\u0E35${adj} ${issue.maximum.toString()}`;\r\n            }\r\n            case \"too_small\": {\r\n                const adj = issue.inclusive ? \"\u0E2D\u0E22\u0E48\u0E32\u0E07\u0E19\u0E49\u0E2D\u0E22\" : \"\u0E21\u0E32\u0E01\u0E01\u0E27\u0E48\u0E32\";\r\n                const sizing = getSizing(issue.origin);\r\n                if (sizing) {\r\n                    return `\u0E19\u0E49\u0E2D\u0E22\u0E01\u0E27\u0E48\u0E32\u0E01\u0E33\u0E2B\u0E19\u0E14: ${issue.origin} \u0E04\u0E27\u0E23\u0E21\u0E35${adj} ${issue.minimum.toString()} ${sizing.unit}`;\r\n                }\r\n                return `\u0E19\u0E49\u0E2D\u0E22\u0E01\u0E27\u0E48\u0E32\u0E01\u0E33\u0E2B\u0E19\u0E14: ${issue.origin} \u0E04\u0E27\u0E23\u0E21\u0E35${adj} ${issue.minimum.toString()}`;\r\n            }\r\n            case \"invalid_format\": {\r\n                const _issue = issue;\r\n                if (_issue.format === \"starts_with\") {\r\n                    return `\u0E23\u0E39\u0E1B\u0E41\u0E1A\u0E1A\u0E44\u0E21\u0E48\u0E16\u0E39\u0E01\u0E15\u0E49\u0E2D\u0E07: \u0E02\u0E49\u0E2D\u0E04\u0E27\u0E32\u0E21\u0E15\u0E49\u0E2D\u0E07\u0E02\u0E36\u0E49\u0E19\u0E15\u0E49\u0E19\u0E14\u0E49\u0E27\u0E22 \"${_issue.prefix}\"`;\r\n                }\r\n                if (_issue.format === \"ends_with\")\r\n                    return `\u0E23\u0E39\u0E1B\u0E41\u0E1A\u0E1A\u0E44\u0E21\u0E48\u0E16\u0E39\u0E01\u0E15\u0E49\u0E2D\u0E07: \u0E02\u0E49\u0E2D\u0E04\u0E27\u0E32\u0E21\u0E15\u0E49\u0E2D\u0E07\u0E25\u0E07\u0E17\u0E49\u0E32\u0E22\u0E14\u0E49\u0E27\u0E22 \"${_issue.suffix}\"`;\r\n                if (_issue.format === \"includes\")\r\n                    return `\u0E23\u0E39\u0E1B\u0E41\u0E1A\u0E1A\u0E44\u0E21\u0E48\u0E16\u0E39\u0E01\u0E15\u0E49\u0E2D\u0E07: \u0E02\u0E49\u0E2D\u0E04\u0E27\u0E32\u0E21\u0E15\u0E49\u0E2D\u0E07\u0E21\u0E35 \"${_issue.includes}\" \u0E2D\u0E22\u0E39\u0E48\u0E43\u0E19\u0E02\u0E49\u0E2D\u0E04\u0E27\u0E32\u0E21`;\r\n                if (_issue.format === \"regex\")\r\n                    return `\u0E23\u0E39\u0E1B\u0E41\u0E1A\u0E1A\u0E44\u0E21\u0E48\u0E16\u0E39\u0E01\u0E15\u0E49\u0E2D\u0E07: \u0E15\u0E49\u0E2D\u0E07\u0E15\u0E23\u0E07\u0E01\u0E31\u0E1A\u0E23\u0E39\u0E1B\u0E41\u0E1A\u0E1A\u0E17\u0E35\u0E48\u0E01\u0E33\u0E2B\u0E19\u0E14 ${_issue.pattern}`;\r\n                return `\u0E23\u0E39\u0E1B\u0E41\u0E1A\u0E1A\u0E44\u0E21\u0E48\u0E16\u0E39\u0E01\u0E15\u0E49\u0E2D\u0E07: ${Nouns[_issue.format] ?? issue.format}`;\r\n            }\r\n            case \"not_multiple_of\":\r\n                return `\u0E15\u0E31\u0E27\u0E40\u0E25\u0E02\u0E44\u0E21\u0E48\u0E16\u0E39\u0E01\u0E15\u0E49\u0E2D\u0E07: \u0E15\u0E49\u0E2D\u0E07\u0E40\u0E1B\u0E47\u0E19\u0E08\u0E33\u0E19\u0E27\u0E19\u0E17\u0E35\u0E48\u0E2B\u0E32\u0E23\u0E14\u0E49\u0E27\u0E22 ${issue.divisor} \u0E44\u0E14\u0E49\u0E25\u0E07\u0E15\u0E31\u0E27`;\r\n            case \"unrecognized_keys\":\r\n                return `\u0E1E\u0E1A\u0E04\u0E35\u0E22\u0E4C\u0E17\u0E35\u0E48\u0E44\u0E21\u0E48\u0E23\u0E39\u0E49\u0E08\u0E31\u0E01: ${util.joinValues(issue.keys, \", \")}`;\r\n            case \"invalid_key\":\r\n                return `\u0E04\u0E35\u0E22\u0E4C\u0E44\u0E21\u0E48\u0E16\u0E39\u0E01\u0E15\u0E49\u0E2D\u0E07\u0E43\u0E19 ${issue.origin}`;\r\n            case \"invalid_union\":\r\n                return \"\u0E02\u0E49\u0E2D\u0E21\u0E39\u0E25\u0E44\u0E21\u0E48\u0E16\u0E39\u0E01\u0E15\u0E49\u0E2D\u0E07: \u0E44\u0E21\u0E48\u0E15\u0E23\u0E07\u0E01\u0E31\u0E1A\u0E23\u0E39\u0E1B\u0E41\u0E1A\u0E1A\u0E22\u0E39\u0E40\u0E19\u0E35\u0E22\u0E19\u0E17\u0E35\u0E48\u0E01\u0E33\u0E2B\u0E19\u0E14\u0E44\u0E27\u0E49\";\r\n            case \"invalid_element\":\r\n                return `\u0E02\u0E49\u0E2D\u0E21\u0E39\u0E25\u0E44\u0E21\u0E48\u0E16\u0E39\u0E01\u0E15\u0E49\u0E2D\u0E07\u0E43\u0E19 ${issue.origin}`;\r\n            default:\r\n                return `\u0E02\u0E49\u0E2D\u0E21\u0E39\u0E25\u0E44\u0E21\u0E48\u0E16\u0E39\u0E01\u0E15\u0E49\u0E2D\u0E07`;\r\n        }\r\n    };\r\n};\r\nexport default function () {\r\n    return {\r\n        localeError: error(),\r\n    };\r\n}\r\n", "import * as util from \"../core/util.js\";\r\nexport const parsedType = (data) => {\r\n    const t = typeof data;\r\n    switch (t) {\r\n        case \"number\": {\r\n            return Number.isNaN(data) ? \"NaN\" : \"number\";\r\n        }\r\n        case \"object\": {\r\n            if (Array.isArray(data)) {\r\n                return \"array\";\r\n            }\r\n            if (data === null) {\r\n                return \"null\";\r\n            }\r\n            if (Object.getPrototypeOf(data) !== Object.prototype && data.constructor) {\r\n                return data.constructor.name;\r\n            }\r\n        }\r\n    }\r\n    return t;\r\n};\r\nconst error = () => {\r\n    const Sizable = {\r\n        string: { unit: \"karakter\", verb: \"olmal\u0131\" },\r\n        file: { unit: \"bayt\", verb: \"olmal\u0131\" },\r\n        array: { unit: \"\u00F6\u011Fe\", verb: \"olmal\u0131\" },\r\n        set: { unit: \"\u00F6\u011Fe\", verb: \"olmal\u0131\" },\r\n    };\r\n    function getSizing(origin) {\r\n        return Sizable[origin] ?? null;\r\n    }\r\n    const Nouns = {\r\n        regex: \"girdi\",\r\n        email: \"e-posta adresi\",\r\n        url: \"URL\",\r\n        emoji: \"emoji\",\r\n        uuid: \"UUID\",\r\n        uuidv4: \"UUIDv4\",\r\n        uuidv6: \"UUIDv6\",\r\n        nanoid: \"nanoid\",\r\n        guid: \"GUID\",\r\n        cuid: \"cuid\",\r\n        cuid2: \"cuid2\",\r\n        ulid: \"ULID\",\r\n        xid: \"XID\",\r\n        ksuid: \"KSUID\",\r\n        datetime: \"ISO tarih ve saat\",\r\n        date: \"ISO tarih\",\r\n        time: \"ISO saat\",\r\n        duration: \"ISO s\u00FCre\",\r\n        ipv4: \"IPv4 adresi\",\r\n        ipv6: \"IPv6 adresi\",\r\n        cidrv4: \"IPv4 aral\u0131\u011F\u0131\",\r\n        cidrv6: \"IPv6 aral\u0131\u011F\u0131\",\r\n        base64: \"base64 ile \u015Fifrelenmi\u015F metin\",\r\n        base64url: \"base64url ile \u015Fifrelenmi\u015F metin\",\r\n        json_string: \"JSON dizesi\",\r\n        e164: \"E.164 say\u0131s\u0131\",\r\n        jwt: \"JWT\",\r\n        template_literal: \"\u015Eablon dizesi\",\r\n    };\r\n    return (issue) => {\r\n        switch (issue.code) {\r\n            case \"invalid_type\":\r\n                return `Ge\u00E7ersiz de\u011Fer: beklenen ${issue.expected}, al\u0131nan ${parsedType(issue.input)}`;\r\n            case \"invalid_value\":\r\n                if (issue.values.length === 1)\r\n                    return `Ge\u00E7ersiz de\u011Fer: beklenen ${util.stringifyPrimitive(issue.values[0])}`;\r\n                return `Ge\u00E7ersiz se\u00E7enek: a\u015Fa\u011F\u0131dakilerden biri olmal\u0131: ${util.joinValues(issue.values, \"|\")}`;\r\n            case \"too_big\": {\r\n                const adj = issue.inclusive ? \"<=\" : \"<\";\r\n                const sizing = getSizing(issue.origin);\r\n                if (sizing)\r\n                    return `\u00C7ok b\u00FCy\u00FCk: beklenen ${issue.origin ?? \"de\u011Fer\"} ${adj}${issue.maximum.toString()} ${sizing.unit ?? \"\u00F6\u011Fe\"}`;\r\n                return `\u00C7ok b\u00FCy\u00FCk: beklenen ${issue.origin ?? \"de\u011Fer\"} ${adj}${issue.maximum.toString()}`;\r\n            }\r\n            case \"too_small\": {\r\n                const adj = issue.inclusive ? \">=\" : \">\";\r\n                const sizing = getSizing(issue.origin);\r\n                if (sizing)\r\n                    return `\u00C7ok k\u00FC\u00E7\u00FCk: beklenen ${issue.origin} ${adj}${issue.minimum.toString()} ${sizing.unit}`;\r\n                return `\u00C7ok k\u00FC\u00E7\u00FCk: beklenen ${issue.origin} ${adj}${issue.minimum.toString()}`;\r\n            }\r\n            case \"invalid_format\": {\r\n                const _issue = issue;\r\n                if (_issue.format === \"starts_with\")\r\n                    return `Ge\u00E7ersiz metin: \"${_issue.prefix}\" ile ba\u015Flamal\u0131`;\r\n                if (_issue.format === \"ends_with\")\r\n                    return `Ge\u00E7ersiz metin: \"${_issue.suffix}\" ile bitmeli`;\r\n                if (_issue.format === \"includes\")\r\n                    return `Ge\u00E7ersiz metin: \"${_issue.includes}\" i\u00E7ermeli`;\r\n                if (_issue.format === \"regex\")\r\n                    return `Ge\u00E7ersiz metin: ${_issue.pattern} desenine uymal\u0131`;\r\n                return `Ge\u00E7ersiz ${Nouns[_issue.format] ?? issue.format}`;\r\n            }\r\n            case \"not_multiple_of\":\r\n                return `Ge\u00E7ersiz say\u0131: ${issue.divisor} ile tam b\u00F6l\u00FCnebilmeli`;\r\n            case \"unrecognized_keys\":\r\n                return `Tan\u0131nmayan anahtar${issue.keys.length > 1 ? \"lar\" : \"\"}: ${util.joinValues(issue.keys, \", \")}`;\r\n            case \"invalid_key\":\r\n                return `${issue.origin} i\u00E7inde ge\u00E7ersiz anahtar`;\r\n            case \"invalid_union\":\r\n                return \"Ge\u00E7ersiz de\u011Fer\";\r\n            case \"invalid_element\":\r\n                return `${issue.origin} i\u00E7inde ge\u00E7ersiz de\u011Fer`;\r\n            default:\r\n                return `Ge\u00E7ersiz de\u011Fer`;\r\n        }\r\n    };\r\n};\r\nexport default function () {\r\n    return {\r\n        localeError: error(),\r\n    };\r\n}\r\n", "import uk from \"./uk.js\";\r\n/** @deprecated Use `uk` instead. */\r\nexport default function () {\r\n    return uk();\r\n}\r\n", "import * as util from \"../core/util.js\";\r\nconst error = () => {\r\n    const Sizable = {\r\n        string: { unit: \"\u0441\u0438\u043C\u0432\u043E\u043B\u0456\u0432\", verb: \"\u043C\u0430\u0442\u0438\u043C\u0435\" },\r\n        file: { unit: \"\u0431\u0430\u0439\u0442\u0456\u0432\", verb: \"\u043C\u0430\u0442\u0438\u043C\u0435\" },\r\n        array: { unit: \"\u0435\u043B\u0435\u043C\u0435\u043D\u0442\u0456\u0432\", verb: \"\u043C\u0430\u0442\u0438\u043C\u0435\" },\r\n        set: { unit: \"\u0435\u043B\u0435\u043C\u0435\u043D\u0442\u0456\u0432\", verb: \"\u043C\u0430\u0442\u0438\u043C\u0435\" },\r\n    };\r\n    function getSizing(origin) {\r\n        return Sizable[origin] ?? null;\r\n    }\r\n    const parsedType = (data) => {\r\n        const t = typeof data;\r\n        switch (t) {\r\n            case \"number\": {\r\n                return Number.isNaN(data) ? \"NaN\" : \"\u0447\u0438\u0441\u043B\u043E\";\r\n            }\r\n            case \"object\": {\r\n                if (Array.isArray(data)) {\r\n                    return \"\u043C\u0430\u0441\u0438\u0432\";\r\n                }\r\n                if (data === null) {\r\n                    return \"null\";\r\n                }\r\n                if (Object.getPrototypeOf(data) !== Object.prototype && data.constructor) {\r\n                    return data.constructor.name;\r\n                }\r\n            }\r\n        }\r\n        return t;\r\n    };\r\n    const Nouns = {\r\n        regex: \"\u0432\u0445\u0456\u0434\u043D\u0456 \u0434\u0430\u043D\u0456\",\r\n        email: \"\u0430\u0434\u0440\u0435\u0441\u0430 \u0435\u043B\u0435\u043A\u0442\u0440\u043E\u043D\u043D\u043E\u0457 \u043F\u043E\u0448\u0442\u0438\",\r\n        url: \"URL\",\r\n        emoji: \"\u0435\u043C\u043E\u0434\u0437\u0456\",\r\n        uuid: \"UUID\",\r\n        uuidv4: \"UUIDv4\",\r\n        uuidv6: \"UUIDv6\",\r\n        nanoid: \"nanoid\",\r\n        guid: \"GUID\",\r\n        cuid: \"cuid\",\r\n        cuid2: \"cuid2\",\r\n        ulid: \"ULID\",\r\n        xid: \"XID\",\r\n        ksuid: \"KSUID\",\r\n        datetime: \"\u0434\u0430\u0442\u0430 \u0442\u0430 \u0447\u0430\u0441 ISO\",\r\n        date: \"\u0434\u0430\u0442\u0430 ISO\",\r\n        time: \"\u0447\u0430\u0441 ISO\",\r\n        duration: \"\u0442\u0440\u0438\u0432\u0430\u043B\u0456\u0441\u0442\u044C ISO\",\r\n        ipv4: \"\u0430\u0434\u0440\u0435\u0441\u0430 IPv4\",\r\n        ipv6: \"\u0430\u0434\u0440\u0435\u0441\u0430 IPv6\",\r\n        cidrv4: \"\u0434\u0456\u0430\u043F\u0430\u0437\u043E\u043D IPv4\",\r\n        cidrv6: \"\u0434\u0456\u0430\u043F\u0430\u0437\u043E\u043D IPv6\",\r\n        base64: \"\u0440\u044F\u0434\u043E\u043A \u0443 \u043A\u043E\u0434\u0443\u0432\u0430\u043D\u043D\u0456 base64\",\r\n        base64url: \"\u0440\u044F\u0434\u043E\u043A \u0443 \u043A\u043E\u0434\u0443\u0432\u0430\u043D\u043D\u0456 base64url\",\r\n        json_string: \"\u0440\u044F\u0434\u043E\u043A JSON\",\r\n        e164: \"\u043D\u043E\u043C\u0435\u0440 E.164\",\r\n        jwt: \"JWT\",\r\n        template_literal: \"\u0432\u0445\u0456\u0434\u043D\u0456 \u0434\u0430\u043D\u0456\",\r\n    };\r\n    return (issue) => {\r\n        switch (issue.code) {\r\n            case \"invalid_type\":\r\n                return `\u041D\u0435\u043F\u0440\u0430\u0432\u0438\u043B\u044C\u043D\u0456 \u0432\u0445\u0456\u0434\u043D\u0456 \u0434\u0430\u043D\u0456: \u043E\u0447\u0456\u043A\u0443\u0454\u0442\u044C\u0441\u044F ${issue.expected}, \u043E\u0442\u0440\u0438\u043C\u0430\u043D\u043E ${parsedType(issue.input)}`;\r\n            // return `\u041D\u0435\u043F\u0440\u0430\u0432\u0438\u043B\u044C\u043D\u0456 \u0432\u0445\u0456\u0434\u043D\u0456 \u0434\u0430\u043D\u0456: \u043E\u0447\u0456\u043A\u0443\u0454\u0442\u044C\u0441\u044F ${issue.expected}, \u043E\u0442\u0440\u0438\u043C\u0430\u043D\u043E ${util.getParsedType(issue.input)}`;\r\n            case \"invalid_value\":\r\n                if (issue.values.length === 1)\r\n                    return `\u041D\u0435\u043F\u0440\u0430\u0432\u0438\u043B\u044C\u043D\u0456 \u0432\u0445\u0456\u0434\u043D\u0456 \u0434\u0430\u043D\u0456: \u043E\u0447\u0456\u043A\u0443\u0454\u0442\u044C\u0441\u044F ${util.stringifyPrimitive(issue.values[0])}`;\r\n                return `\u041D\u0435\u043F\u0440\u0430\u0432\u0438\u043B\u044C\u043D\u0430 \u043E\u043F\u0446\u0456\u044F: \u043E\u0447\u0456\u043A\u0443\u0454\u0442\u044C\u0441\u044F \u043E\u0434\u043D\u0435 \u0437 ${util.joinValues(issue.values, \"|\")}`;\r\n            case \"too_big\": {\r\n                const adj = issue.inclusive ? \"<=\" : \"<\";\r\n                const sizing = getSizing(issue.origin);\r\n                if (sizing)\r\n                    return `\u0417\u0430\u043D\u0430\u0434\u0442\u043E \u0432\u0435\u043B\u0438\u043A\u0435: \u043E\u0447\u0456\u043A\u0443\u0454\u0442\u044C\u0441\u044F, \u0449\u043E ${issue.origin ?? \"\u0437\u043D\u0430\u0447\u0435\u043D\u043D\u044F\"} ${sizing.verb} ${adj}${issue.maximum.toString()} ${sizing.unit ?? \"\u0435\u043B\u0435\u043C\u0435\u043D\u0442\u0456\u0432\"}`;\r\n                return `\u0417\u0430\u043D\u0430\u0434\u0442\u043E \u0432\u0435\u043B\u0438\u043A\u0435: \u043E\u0447\u0456\u043A\u0443\u0454\u0442\u044C\u0441\u044F, \u0449\u043E ${issue.origin ?? \"\u0437\u043D\u0430\u0447\u0435\u043D\u043D\u044F\"} \u0431\u0443\u0434\u0435 ${adj}${issue.maximum.toString()}`;\r\n            }\r\n            case \"too_small\": {\r\n                const adj = issue.inclusive ? \">=\" : \">\";\r\n                const sizing = getSizing(issue.origin);\r\n                if (sizing) {\r\n                    return `\u0417\u0430\u043D\u0430\u0434\u0442\u043E \u043C\u0430\u043B\u0435: \u043E\u0447\u0456\u043A\u0443\u0454\u0442\u044C\u0441\u044F, \u0449\u043E ${issue.origin} ${sizing.verb} ${adj}${issue.minimum.toString()} ${sizing.unit}`;\r\n                }\r\n                return `\u0417\u0430\u043D\u0430\u0434\u0442\u043E \u043C\u0430\u043B\u0435: \u043E\u0447\u0456\u043A\u0443\u0454\u0442\u044C\u0441\u044F, \u0449\u043E ${issue.origin} \u0431\u0443\u0434\u0435 ${adj}${issue.minimum.toString()}`;\r\n            }\r\n            case \"invalid_format\": {\r\n                const _issue = issue;\r\n                if (_issue.format === \"starts_with\")\r\n                    return `\u041D\u0435\u043F\u0440\u0430\u0432\u0438\u043B\u044C\u043D\u0438\u0439 \u0440\u044F\u0434\u043E\u043A: \u043F\u043E\u0432\u0438\u043D\u0435\u043D \u043F\u043E\u0447\u0438\u043D\u0430\u0442\u0438\u0441\u044F \u0437 \"${_issue.prefix}\"`;\r\n                if (_issue.format === \"ends_with\")\r\n                    return `\u041D\u0435\u043F\u0440\u0430\u0432\u0438\u043B\u044C\u043D\u0438\u0439 \u0440\u044F\u0434\u043E\u043A: \u043F\u043E\u0432\u0438\u043D\u0435\u043D \u0437\u0430\u043A\u0456\u043D\u0447\u0443\u0432\u0430\u0442\u0438\u0441\u044F \u043D\u0430 \"${_issue.suffix}\"`;\r\n                if (_issue.format === \"includes\")\r\n                    return `\u041D\u0435\u043F\u0440\u0430\u0432\u0438\u043B\u044C\u043D\u0438\u0439 \u0440\u044F\u0434\u043E\u043A: \u043F\u043E\u0432\u0438\u043D\u0435\u043D \u043C\u0456\u0441\u0442\u0438\u0442\u0438 \"${_issue.includes}\"`;\r\n                if (_issue.format === \"regex\")\r\n                    return `\u041D\u0435\u043F\u0440\u0430\u0432\u0438\u043B\u044C\u043D\u0438\u0439 \u0440\u044F\u0434\u043E\u043A: \u043F\u043E\u0432\u0438\u043D\u0435\u043D \u0432\u0456\u0434\u043F\u043E\u0432\u0456\u0434\u0430\u0442\u0438 \u0448\u0430\u0431\u043B\u043E\u043D\u0443 ${_issue.pattern}`;\r\n                return `\u041D\u0435\u043F\u0440\u0430\u0432\u0438\u043B\u044C\u043D\u0438\u0439 ${Nouns[_issue.format] ?? issue.format}`;\r\n            }\r\n            case \"not_multiple_of\":\r\n                return `\u041D\u0435\u043F\u0440\u0430\u0432\u0438\u043B\u044C\u043D\u0435 \u0447\u0438\u0441\u043B\u043E: \u043F\u043E\u0432\u0438\u043D\u043D\u043E \u0431\u0443\u0442\u0438 \u043A\u0440\u0430\u0442\u043D\u0438\u043C ${issue.divisor}`;\r\n            case \"unrecognized_keys\":\r\n                return `\u041D\u0435\u0440\u043E\u0437\u043F\u0456\u0437\u043D\u0430\u043D\u0438\u0439 \u043A\u043B\u044E\u0447${issue.keys.length > 1 ? \"\u0456\" : \"\"}: ${util.joinValues(issue.keys, \", \")}`;\r\n            case \"invalid_key\":\r\n                return `\u041D\u0435\u043F\u0440\u0430\u0432\u0438\u043B\u044C\u043D\u0438\u0439 \u043A\u043B\u044E\u0447 \u0443 ${issue.origin}`;\r\n            case \"invalid_union\":\r\n                return \"\u041D\u0435\u043F\u0440\u0430\u0432\u0438\u043B\u044C\u043D\u0456 \u0432\u0445\u0456\u0434\u043D\u0456 \u0434\u0430\u043D\u0456\";\r\n            case \"invalid_element\":\r\n                return `\u041D\u0435\u043F\u0440\u0430\u0432\u0438\u043B\u044C\u043D\u0435 \u0437\u043D\u0430\u0447\u0435\u043D\u043D\u044F \u0443 ${issue.origin}`;\r\n            default:\r\n                return `\u041D\u0435\u043F\u0440\u0430\u0432\u0438\u043B\u044C\u043D\u0456 \u0432\u0445\u0456\u0434\u043D\u0456 \u0434\u0430\u043D\u0456`;\r\n        }\r\n    };\r\n};\r\nexport default function () {\r\n    return {\r\n        localeError: error(),\r\n    };\r\n}\r\n", "import * as util from \"../core/util.js\";\r\nconst error = () => {\r\n    const Sizable = {\r\n        string: { unit: \"\u062D\u0631\u0648\u0641\", verb: \"\u06C1\u0648\u0646\u0627\" },\r\n        file: { unit: \"\u0628\u0627\u0626\u0679\u0633\", verb: \"\u06C1\u0648\u0646\u0627\" },\r\n        array: { unit: \"\u0622\u0626\u0679\u0645\u0632\", verb: \"\u06C1\u0648\u0646\u0627\" },\r\n        set: { unit: \"\u0622\u0626\u0679\u0645\u0632\", verb: \"\u06C1\u0648\u0646\u0627\" },\r\n    };\r\n    function getSizing(origin) {\r\n        return Sizable[origin] ?? null;\r\n    }\r\n    const parsedType = (data) => {\r\n        const t = typeof data;\r\n        switch (t) {\r\n            case \"number\": {\r\n                return Number.isNaN(data) ? \"NaN\" : \"\u0646\u0645\u0628\u0631\";\r\n            }\r\n            case \"object\": {\r\n                if (Array.isArray(data)) {\r\n                    return \"\u0622\u0631\u06D2\";\r\n                }\r\n                if (data === null) {\r\n                    return \"\u0646\u0644\";\r\n                }\r\n                if (Object.getPrototypeOf(data) !== Object.prototype && data.constructor) {\r\n                    return data.constructor.name;\r\n                }\r\n            }\r\n        }\r\n        return t;\r\n    };\r\n    const Nouns = {\r\n        regex: \"\u0627\u0646 \u067E\u0679\",\r\n        email: \"\u0627\u06CC \u0645\u06CC\u0644 \u0627\u06CC\u0688\u0631\u06CC\u0633\",\r\n        url: \"\u06CC\u0648 \u0622\u0631 \u0627\u06CC\u0644\",\r\n        emoji: \"\u0627\u06CC\u0645\u0648\u062C\u06CC\",\r\n        uuid: \"\u06CC\u0648 \u06CC\u0648 \u0622\u0626\u06CC \u0688\u06CC\",\r\n        uuidv4: \"\u06CC\u0648 \u06CC\u0648 \u0622\u0626\u06CC \u0688\u06CC \u0648\u06CC 4\",\r\n        uuidv6: \"\u06CC\u0648 \u06CC\u0648 \u0622\u0626\u06CC \u0688\u06CC \u0648\u06CC 6\",\r\n        nanoid: \"\u0646\u06CC\u0646\u0648 \u0622\u0626\u06CC \u0688\u06CC\",\r\n        guid: \"\u062C\u06CC \u06CC\u0648 \u0622\u0626\u06CC \u0688\u06CC\",\r\n        cuid: \"\u0633\u06CC \u06CC\u0648 \u0622\u0626\u06CC \u0688\u06CC\",\r\n        cuid2: \"\u0633\u06CC \u06CC\u0648 \u0622\u0626\u06CC \u0688\u06CC 2\",\r\n        ulid: \"\u06CC\u0648 \u0627\u06CC\u0644 \u0622\u0626\u06CC \u0688\u06CC\",\r\n        xid: \"\u0627\u06CC\u06A9\u0633 \u0622\u0626\u06CC \u0688\u06CC\",\r\n        ksuid: \"\u06A9\u06D2 \u0627\u06CC\u0633 \u06CC\u0648 \u0622\u0626\u06CC \u0688\u06CC\",\r\n        datetime: \"\u0622\u0626\u06CC \u0627\u06CC\u0633 \u0627\u0648 \u0688\u06CC\u0679 \u0679\u0627\u0626\u0645\",\r\n        date: \"\u0622\u0626\u06CC \u0627\u06CC\u0633 \u0627\u0648 \u062A\u0627\u0631\u06CC\u062E\",\r\n        time: \"\u0622\u0626\u06CC \u0627\u06CC\u0633 \u0627\u0648 \u0648\u0642\u062A\",\r\n        duration: \"\u0622\u0626\u06CC \u0627\u06CC\u0633 \u0627\u0648 \u0645\u062F\u062A\",\r\n        ipv4: \"\u0622\u0626\u06CC \u067E\u06CC \u0648\u06CC 4 \u0627\u06CC\u0688\u0631\u06CC\u0633\",\r\n        ipv6: \"\u0622\u0626\u06CC \u067E\u06CC \u0648\u06CC 6 \u0627\u06CC\u0688\u0631\u06CC\u0633\",\r\n        cidrv4: \"\u0622\u0626\u06CC \u067E\u06CC \u0648\u06CC 4 \u0631\u06CC\u0646\u062C\",\r\n        cidrv6: \"\u0622\u0626\u06CC \u067E\u06CC \u0648\u06CC 6 \u0631\u06CC\u0646\u062C\",\r\n        base64: \"\u0628\u06CC\u0633 64 \u0627\u0646 \u06A9\u0648\u0688\u0688 \u0633\u0679\u0631\u0646\u06AF\",\r\n        base64url: \"\u0628\u06CC\u0633 64 \u06CC\u0648 \u0622\u0631 \u0627\u06CC\u0644 \u0627\u0646 \u06A9\u0648\u0688\u0688 \u0633\u0679\u0631\u0646\u06AF\",\r\n        json_string: \"\u062C\u06D2 \u0627\u06CC\u0633 \u0627\u0648 \u0627\u06CC\u0646 \u0633\u0679\u0631\u0646\u06AF\",\r\n        e164: \"\u0627\u06CC 164 \u0646\u0645\u0628\u0631\",\r\n        jwt: \"\u062C\u06D2 \u0688\u0628\u0644\u06CC\u0648 \u0679\u06CC\",\r\n        template_literal: \"\u0627\u0646 \u067E\u0679\",\r\n    };\r\n    return (issue) => {\r\n        switch (issue.code) {\r\n            case \"invalid_type\":\r\n                return `\u063A\u0644\u0637 \u0627\u0646 \u067E\u0679: ${issue.expected} \u0645\u062A\u0648\u0642\u0639 \u062A\u06BE\u0627\u060C ${parsedType(issue.input)} \u0645\u0648\u0635\u0648\u0644 \u06C1\u0648\u0627`;\r\n            case \"invalid_value\":\r\n                if (issue.values.length === 1)\r\n                    return `\u063A\u0644\u0637 \u0627\u0646 \u067E\u0679: ${util.stringifyPrimitive(issue.values[0])} \u0645\u062A\u0648\u0642\u0639 \u062A\u06BE\u0627`;\r\n                return `\u063A\u0644\u0637 \u0622\u067E\u0634\u0646: ${util.joinValues(issue.values, \"|\")} \u0645\u06CC\u06BA \u0633\u06D2 \u0627\u06CC\u06A9 \u0645\u062A\u0648\u0642\u0639 \u062A\u06BE\u0627`;\r\n            case \"too_big\": {\r\n                const adj = issue.inclusive ? \"<=\" : \"<\";\r\n                const sizing = getSizing(issue.origin);\r\n                if (sizing)\r\n                    return `\u0628\u06C1\u062A \u0628\u0691\u0627: ${issue.origin ?? \"\u0648\u06CC\u0644\u06CC\u0648\"} \u06A9\u06D2 ${adj}${issue.maximum.toString()} ${sizing.unit ?? \"\u0639\u0646\u0627\u0635\u0631\"} \u06C1\u0648\u0646\u06D2 \u0645\u062A\u0648\u0642\u0639 \u062A\u06BE\u06D2`;\r\n                return `\u0628\u06C1\u062A \u0628\u0691\u0627: ${issue.origin ?? \"\u0648\u06CC\u0644\u06CC\u0648\"} \u06A9\u0627 ${adj}${issue.maximum.toString()} \u06C1\u0648\u0646\u0627 \u0645\u062A\u0648\u0642\u0639 \u062A\u06BE\u0627`;\r\n            }\r\n            case \"too_small\": {\r\n                const adj = issue.inclusive ? \">=\" : \">\";\r\n                const sizing = getSizing(issue.origin);\r\n                if (sizing) {\r\n                    return `\u0628\u06C1\u062A \u0686\u06BE\u0648\u0679\u0627: ${issue.origin} \u06A9\u06D2 ${adj}${issue.minimum.toString()} ${sizing.unit} \u06C1\u0648\u0646\u06D2 \u0645\u062A\u0648\u0642\u0639 \u062A\u06BE\u06D2`;\r\n                }\r\n                return `\u0628\u06C1\u062A \u0686\u06BE\u0648\u0679\u0627: ${issue.origin} \u06A9\u0627 ${adj}${issue.minimum.toString()} \u06C1\u0648\u0646\u0627 \u0645\u062A\u0648\u0642\u0639 \u062A\u06BE\u0627`;\r\n            }\r\n            case \"invalid_format\": {\r\n                const _issue = issue;\r\n                if (_issue.format === \"starts_with\") {\r\n                    return `\u063A\u0644\u0637 \u0633\u0679\u0631\u0646\u06AF: \"${_issue.prefix}\" \u0633\u06D2 \u0634\u0631\u0648\u0639 \u06C1\u0648\u0646\u0627 \u0686\u0627\u06C1\u06CC\u06D2`;\r\n                }\r\n                if (_issue.format === \"ends_with\")\r\n                    return `\u063A\u0644\u0637 \u0633\u0679\u0631\u0646\u06AF: \"${_issue.suffix}\" \u067E\u0631 \u062E\u062A\u0645 \u06C1\u0648\u0646\u0627 \u0686\u0627\u06C1\u06CC\u06D2`;\r\n                if (_issue.format === \"includes\")\r\n                    return `\u063A\u0644\u0637 \u0633\u0679\u0631\u0646\u06AF: \"${_issue.includes}\" \u0634\u0627\u0645\u0644 \u06C1\u0648\u0646\u0627 \u0686\u0627\u06C1\u06CC\u06D2`;\r\n                if (_issue.format === \"regex\")\r\n                    return `\u063A\u0644\u0637 \u0633\u0679\u0631\u0646\u06AF: \u067E\u06CC\u0679\u0631\u0646 ${_issue.pattern} \u0633\u06D2 \u0645\u06CC\u0686 \u06C1\u0648\u0646\u0627 \u0686\u0627\u06C1\u06CC\u06D2`;\r\n                return `\u063A\u0644\u0637 ${Nouns[_issue.format] ?? issue.format}`;\r\n            }\r\n            case \"not_multiple_of\":\r\n                return `\u063A\u0644\u0637 \u0646\u0645\u0628\u0631: ${issue.divisor} \u06A9\u0627 \u0645\u0636\u0627\u0639\u0641 \u06C1\u0648\u0646\u0627 \u0686\u0627\u06C1\u06CC\u06D2`;\r\n            case \"unrecognized_keys\":\r\n                return `\u063A\u06CC\u0631 \u062A\u0633\u0644\u06CC\u0645 \u0634\u062F\u06C1 \u06A9\u06CC${issue.keys.length > 1 ? \"\u0632\" : \"\"}: ${util.joinValues(issue.keys, \"\u060C \")}`;\r\n            case \"invalid_key\":\r\n                return `${issue.origin} \u0645\u06CC\u06BA \u063A\u0644\u0637 \u06A9\u06CC`;\r\n            case \"invalid_union\":\r\n                return \"\u063A\u0644\u0637 \u0627\u0646 \u067E\u0679\";\r\n            case \"invalid_element\":\r\n                return `${issue.origin} \u0645\u06CC\u06BA \u063A\u0644\u0637 \u0648\u06CC\u0644\u06CC\u0648`;\r\n            default:\r\n                return `\u063A\u0644\u0637 \u0627\u0646 \u067E\u0679`;\r\n        }\r\n    };\r\n};\r\nexport default function () {\r\n    return {\r\n        localeError: error(),\r\n    };\r\n}\r\n", "import * as util from \"../core/util.js\";\r\nconst error = () => {\r\n    const Sizable = {\r\n        string: { unit: \"k\u00FD t\u1EF1\", verb: \"c\u00F3\" },\r\n        file: { unit: \"byte\", verb: \"c\u00F3\" },\r\n        array: { unit: \"ph\u1EA7n t\u1EED\", verb: \"c\u00F3\" },\r\n        set: { unit: \"ph\u1EA7n t\u1EED\", verb: \"c\u00F3\" },\r\n    };\r\n    function getSizing(origin) {\r\n        return Sizable[origin] ?? null;\r\n    }\r\n    const parsedType = (data) => {\r\n        const t = typeof data;\r\n        switch (t) {\r\n            case \"number\": {\r\n                return Number.isNaN(data) ? \"NaN\" : \"s\u1ED1\";\r\n            }\r\n            case \"object\": {\r\n                if (Array.isArray(data)) {\r\n                    return \"m\u1EA3ng\";\r\n                }\r\n                if (data === null) {\r\n                    return \"null\";\r\n                }\r\n                if (Object.getPrototypeOf(data) !== Object.prototype && data.constructor) {\r\n                    return data.constructor.name;\r\n                }\r\n            }\r\n        }\r\n        return t;\r\n    };\r\n    const Nouns = {\r\n        regex: \"\u0111\u1EA7u v\u00E0o\",\r\n        email: \"\u0111\u1ECBa ch\u1EC9 email\",\r\n        url: \"URL\",\r\n        emoji: \"emoji\",\r\n        uuid: \"UUID\",\r\n        uuidv4: \"UUIDv4\",\r\n        uuidv6: \"UUIDv6\",\r\n        nanoid: \"nanoid\",\r\n        guid: \"GUID\",\r\n        cuid: \"cuid\",\r\n        cuid2: \"cuid2\",\r\n        ulid: \"ULID\",\r\n        xid: \"XID\",\r\n        ksuid: \"KSUID\",\r\n        datetime: \"ng\u00E0y gi\u1EDD ISO\",\r\n        date: \"ng\u00E0y ISO\",\r\n        time: \"gi\u1EDD ISO\",\r\n        duration: \"kho\u1EA3ng th\u1EDDi gian ISO\",\r\n        ipv4: \"\u0111\u1ECBa ch\u1EC9 IPv4\",\r\n        ipv6: \"\u0111\u1ECBa ch\u1EC9 IPv6\",\r\n        cidrv4: \"d\u1EA3i IPv4\",\r\n        cidrv6: \"d\u1EA3i IPv6\",\r\n        base64: \"chu\u1ED7i m\u00E3 h\u00F3a base64\",\r\n        base64url: \"chu\u1ED7i m\u00E3 h\u00F3a base64url\",\r\n        json_string: \"chu\u1ED7i JSON\",\r\n        e164: \"s\u1ED1 E.164\",\r\n        jwt: \"JWT\",\r\n        template_literal: \"\u0111\u1EA7u v\u00E0o\",\r\n    };\r\n    return (issue) => {\r\n        switch (issue.code) {\r\n            case \"invalid_type\":\r\n                return `\u0110\u1EA7u v\u00E0o kh\u00F4ng h\u1EE3p l\u1EC7: mong \u0111\u1EE3i ${issue.expected}, nh\u1EADn \u0111\u01B0\u1EE3c ${parsedType(issue.input)}`;\r\n            case \"invalid_value\":\r\n                if (issue.values.length === 1)\r\n                    return `\u0110\u1EA7u v\u00E0o kh\u00F4ng h\u1EE3p l\u1EC7: mong \u0111\u1EE3i ${util.stringifyPrimitive(issue.values[0])}`;\r\n                return `T\u00F9y ch\u1ECDn kh\u00F4ng h\u1EE3p l\u1EC7: mong \u0111\u1EE3i m\u1ED9t trong c\u00E1c gi\u00E1 tr\u1ECB ${util.joinValues(issue.values, \"|\")}`;\r\n            case \"too_big\": {\r\n                const adj = issue.inclusive ? \"<=\" : \"<\";\r\n                const sizing = getSizing(issue.origin);\r\n                if (sizing)\r\n                    return `Qu\u00E1 l\u1EDBn: mong \u0111\u1EE3i ${issue.origin ?? \"gi\u00E1 tr\u1ECB\"} ${sizing.verb} ${adj}${issue.maximum.toString()} ${sizing.unit ?? \"ph\u1EA7n t\u1EED\"}`;\r\n                return `Qu\u00E1 l\u1EDBn: mong \u0111\u1EE3i ${issue.origin ?? \"gi\u00E1 tr\u1ECB\"} ${adj}${issue.maximum.toString()}`;\r\n            }\r\n            case \"too_small\": {\r\n                const adj = issue.inclusive ? \">=\" : \">\";\r\n                const sizing = getSizing(issue.origin);\r\n                if (sizing) {\r\n                    return `Qu\u00E1 nh\u1ECF: mong \u0111\u1EE3i ${issue.origin} ${sizing.verb} ${adj}${issue.minimum.toString()} ${sizing.unit}`;\r\n                }\r\n                return `Qu\u00E1 nh\u1ECF: mong \u0111\u1EE3i ${issue.origin} ${adj}${issue.minimum.toString()}`;\r\n            }\r\n            case \"invalid_format\": {\r\n                const _issue = issue;\r\n                if (_issue.format === \"starts_with\")\r\n                    return `Chu\u1ED7i kh\u00F4ng h\u1EE3p l\u1EC7: ph\u1EA3i b\u1EAFt \u0111\u1EA7u b\u1EB1ng \"${_issue.prefix}\"`;\r\n                if (_issue.format === \"ends_with\")\r\n                    return `Chu\u1ED7i kh\u00F4ng h\u1EE3p l\u1EC7: ph\u1EA3i k\u1EBFt th\u00FAc b\u1EB1ng \"${_issue.suffix}\"`;\r\n                if (_issue.format === \"includes\")\r\n                    return `Chu\u1ED7i kh\u00F4ng h\u1EE3p l\u1EC7: ph\u1EA3i bao g\u1ED3m \"${_issue.includes}\"`;\r\n                if (_issue.format === \"regex\")\r\n                    return `Chu\u1ED7i kh\u00F4ng h\u1EE3p l\u1EC7: ph\u1EA3i kh\u1EDBp v\u1EDBi m\u1EABu ${_issue.pattern}`;\r\n                return `${Nouns[_issue.format] ?? issue.format} kh\u00F4ng h\u1EE3p l\u1EC7`;\r\n            }\r\n            case \"not_multiple_of\":\r\n                return `S\u1ED1 kh\u00F4ng h\u1EE3p l\u1EC7: ph\u1EA3i l\u00E0 b\u1ED9i s\u1ED1 c\u1EE7a ${issue.divisor}`;\r\n            case \"unrecognized_keys\":\r\n                return `Kh\u00F3a kh\u00F4ng \u0111\u01B0\u1EE3c nh\u1EADn d\u1EA1ng: ${util.joinValues(issue.keys, \", \")}`;\r\n            case \"invalid_key\":\r\n                return `Kh\u00F3a kh\u00F4ng h\u1EE3p l\u1EC7 trong ${issue.origin}`;\r\n            case \"invalid_union\":\r\n                return \"\u0110\u1EA7u v\u00E0o kh\u00F4ng h\u1EE3p l\u1EC7\";\r\n            case \"invalid_element\":\r\n                return `Gi\u00E1 tr\u1ECB kh\u00F4ng h\u1EE3p l\u1EC7 trong ${issue.origin}`;\r\n            default:\r\n                return `\u0110\u1EA7u v\u00E0o kh\u00F4ng h\u1EE3p l\u1EC7`;\r\n        }\r\n    };\r\n};\r\nexport default function () {\r\n    return {\r\n        localeError: error(),\r\n    };\r\n}\r\n", "import * as util from \"../core/util.js\";\r\nconst error = () => {\r\n    const Sizable = {\r\n        string: { unit: \"\u5B57\u7B26\", verb: \"\u5305\u542B\" },\r\n        file: { unit: \"\u5B57\u8282\", verb: \"\u5305\u542B\" },\r\n        array: { unit: \"\u9879\", verb: \"\u5305\u542B\" },\r\n        set: { unit: \"\u9879\", verb: \"\u5305\u542B\" },\r\n    };\r\n    function getSizing(origin) {\r\n        return Sizable[origin] ?? null;\r\n    }\r\n    const parsedType = (data) => {\r\n        const t = typeof data;\r\n        switch (t) {\r\n            case \"number\": {\r\n                return Number.isNaN(data) ? \"\u975E\u6570\u5B57(NaN)\" : \"\u6570\u5B57\";\r\n            }\r\n            case \"object\": {\r\n                if (Array.isArray(data)) {\r\n                    return \"\u6570\u7EC4\";\r\n                }\r\n                if (data === null) {\r\n                    return \"\u7A7A\u503C(null)\";\r\n                }\r\n                if (Object.getPrototypeOf(data) !== Object.prototype && data.constructor) {\r\n                    return data.constructor.name;\r\n                }\r\n            }\r\n        }\r\n        return t;\r\n    };\r\n    const Nouns = {\r\n        regex: \"\u8F93\u5165\",\r\n        email: \"\u7535\u5B50\u90AE\u4EF6\",\r\n        url: \"URL\",\r\n        emoji: \"\u8868\u60C5\u7B26\u53F7\",\r\n        uuid: \"UUID\",\r\n        uuidv4: \"UUIDv4\",\r\n        uuidv6: \"UUIDv6\",\r\n        nanoid: \"nanoid\",\r\n        guid: \"GUID\",\r\n        cuid: \"cuid\",\r\n        cuid2: \"cuid2\",\r\n        ulid: \"ULID\",\r\n        xid: \"XID\",\r\n        ksuid: \"KSUID\",\r\n        datetime: \"ISO\u65E5\u671F\u65F6\u95F4\",\r\n        date: \"ISO\u65E5\u671F\",\r\n        time: \"ISO\u65F6\u95F4\",\r\n        duration: \"ISO\u65F6\u957F\",\r\n        ipv4: \"IPv4\u5730\u5740\",\r\n        ipv6: \"IPv6\u5730\u5740\",\r\n        cidrv4: \"IPv4\u7F51\u6BB5\",\r\n        cidrv6: \"IPv6\u7F51\u6BB5\",\r\n        base64: \"base64\u7F16\u7801\u5B57\u7B26\u4E32\",\r\n        base64url: \"base64url\u7F16\u7801\u5B57\u7B26\u4E32\",\r\n        json_string: \"JSON\u5B57\u7B26\u4E32\",\r\n        e164: \"E.164\u53F7\u7801\",\r\n        jwt: \"JWT\",\r\n        template_literal: \"\u8F93\u5165\",\r\n    };\r\n    return (issue) => {\r\n        switch (issue.code) {\r\n            case \"invalid_type\":\r\n                return `\u65E0\u6548\u8F93\u5165\uFF1A\u671F\u671B ${issue.expected}\uFF0C\u5B9E\u9645\u63A5\u6536 ${parsedType(issue.input)}`;\r\n            case \"invalid_value\":\r\n                if (issue.values.length === 1)\r\n                    return `\u65E0\u6548\u8F93\u5165\uFF1A\u671F\u671B ${util.stringifyPrimitive(issue.values[0])}`;\r\n                return `\u65E0\u6548\u9009\u9879\uFF1A\u671F\u671B\u4EE5\u4E0B\u4E4B\u4E00 ${util.joinValues(issue.values, \"|\")}`;\r\n            case \"too_big\": {\r\n                const adj = issue.inclusive ? \"<=\" : \"<\";\r\n                const sizing = getSizing(issue.origin);\r\n                if (sizing)\r\n                    return `\u6570\u503C\u8FC7\u5927\uFF1A\u671F\u671B ${issue.origin ?? \"\u503C\"} ${adj}${issue.maximum.toString()} ${sizing.unit ?? \"\u4E2A\u5143\u7D20\"}`;\r\n                return `\u6570\u503C\u8FC7\u5927\uFF1A\u671F\u671B ${issue.origin ?? \"\u503C\"} ${adj}${issue.maximum.toString()}`;\r\n            }\r\n            case \"too_small\": {\r\n                const adj = issue.inclusive ? \">=\" : \">\";\r\n                const sizing = getSizing(issue.origin);\r\n                if (sizing) {\r\n                    return `\u6570\u503C\u8FC7\u5C0F\uFF1A\u671F\u671B ${issue.origin} ${adj}${issue.minimum.toString()} ${sizing.unit}`;\r\n                }\r\n                return `\u6570\u503C\u8FC7\u5C0F\uFF1A\u671F\u671B ${issue.origin} ${adj}${issue.minimum.toString()}`;\r\n            }\r\n            case \"invalid_format\": {\r\n                const _issue = issue;\r\n                if (_issue.format === \"starts_with\")\r\n                    return `\u65E0\u6548\u5B57\u7B26\u4E32\uFF1A\u5FC5\u987B\u4EE5 \"${_issue.prefix}\" \u5F00\u5934`;\r\n                if (_issue.format === \"ends_with\")\r\n                    return `\u65E0\u6548\u5B57\u7B26\u4E32\uFF1A\u5FC5\u987B\u4EE5 \"${_issue.suffix}\" \u7ED3\u5C3E`;\r\n                if (_issue.format === \"includes\")\r\n                    return `\u65E0\u6548\u5B57\u7B26\u4E32\uFF1A\u5FC5\u987B\u5305\u542B \"${_issue.includes}\"`;\r\n                if (_issue.format === \"regex\")\r\n                    return `\u65E0\u6548\u5B57\u7B26\u4E32\uFF1A\u5FC5\u987B\u6EE1\u8DB3\u6B63\u5219\u8868\u8FBE\u5F0F ${_issue.pattern}`;\r\n                return `\u65E0\u6548${Nouns[_issue.format] ?? issue.format}`;\r\n            }\r\n            case \"not_multiple_of\":\r\n                return `\u65E0\u6548\u6570\u5B57\uFF1A\u5FC5\u987B\u662F ${issue.divisor} \u7684\u500D\u6570`;\r\n            case \"unrecognized_keys\":\r\n                return `\u51FA\u73B0\u672A\u77E5\u7684\u952E(key): ${util.joinValues(issue.keys, \", \")}`;\r\n            case \"invalid_key\":\r\n                return `${issue.origin} \u4E2D\u7684\u952E(key)\u65E0\u6548`;\r\n            case \"invalid_union\":\r\n                return \"\u65E0\u6548\u8F93\u5165\";\r\n            case \"invalid_element\":\r\n                return `${issue.origin} \u4E2D\u5305\u542B\u65E0\u6548\u503C(value)`;\r\n            default:\r\n                return `\u65E0\u6548\u8F93\u5165`;\r\n        }\r\n    };\r\n};\r\nexport default function () {\r\n    return {\r\n        localeError: error(),\r\n    };\r\n}\r\n", "import * as util from \"../core/util.js\";\r\nconst error = () => {\r\n    const Sizable = {\r\n        string: { unit: \"\u5B57\u5143\", verb: \"\u64C1\u6709\" },\r\n        file: { unit: \"\u4F4D\u5143\u7D44\", verb: \"\u64C1\u6709\" },\r\n        array: { unit: \"\u9805\u76EE\", verb: \"\u64C1\u6709\" },\r\n        set: { unit: \"\u9805\u76EE\", verb: \"\u64C1\u6709\" },\r\n    };\r\n    function getSizing(origin) {\r\n        return Sizable[origin] ?? null;\r\n    }\r\n    const parsedType = (data) => {\r\n        const t = typeof data;\r\n        switch (t) {\r\n            case \"number\": {\r\n                return Number.isNaN(data) ? \"NaN\" : \"number\";\r\n            }\r\n            case \"object\": {\r\n                if (Array.isArray(data)) {\r\n                    return \"array\";\r\n                }\r\n                if (data === null) {\r\n                    return \"null\";\r\n                }\r\n                if (Object.getPrototypeOf(data) !== Object.prototype && data.constructor) {\r\n                    return data.constructor.name;\r\n                }\r\n            }\r\n        }\r\n        return t;\r\n    };\r\n    const Nouns = {\r\n        regex: \"\u8F38\u5165\",\r\n        email: \"\u90F5\u4EF6\u5730\u5740\",\r\n        url: \"URL\",\r\n        emoji: \"emoji\",\r\n        uuid: \"UUID\",\r\n        uuidv4: \"UUIDv4\",\r\n        uuidv6: \"UUIDv6\",\r\n        nanoid: \"nanoid\",\r\n        guid: \"GUID\",\r\n        cuid: \"cuid\",\r\n        cuid2: \"cuid2\",\r\n        ulid: \"ULID\",\r\n        xid: \"XID\",\r\n        ksuid: \"KSUID\",\r\n        datetime: \"ISO \u65E5\u671F\u6642\u9593\",\r\n        date: \"ISO \u65E5\u671F\",\r\n        time: \"ISO \u6642\u9593\",\r\n        duration: \"ISO \u671F\u9593\",\r\n        ipv4: \"IPv4 \u4F4D\u5740\",\r\n        ipv6: \"IPv6 \u4F4D\u5740\",\r\n        cidrv4: \"IPv4 \u7BC4\u570D\",\r\n        cidrv6: \"IPv6 \u7BC4\u570D\",\r\n        base64: \"base64 \u7DE8\u78BC\u5B57\u4E32\",\r\n        base64url: \"base64url \u7DE8\u78BC\u5B57\u4E32\",\r\n        json_string: \"JSON \u5B57\u4E32\",\r\n        e164: \"E.164 \u6578\u503C\",\r\n        jwt: \"JWT\",\r\n        template_literal: \"\u8F38\u5165\",\r\n    };\r\n    return (issue) => {\r\n        switch (issue.code) {\r\n            case \"invalid_type\":\r\n                return `\u7121\u6548\u7684\u8F38\u5165\u503C\uFF1A\u9810\u671F\u70BA ${issue.expected}\uFF0C\u4F46\u6536\u5230 ${parsedType(issue.input)}`;\r\n            case \"invalid_value\":\r\n                if (issue.values.length === 1)\r\n                    return `\u7121\u6548\u7684\u8F38\u5165\u503C\uFF1A\u9810\u671F\u70BA ${util.stringifyPrimitive(issue.values[0])}`;\r\n                return `\u7121\u6548\u7684\u9078\u9805\uFF1A\u9810\u671F\u70BA\u4EE5\u4E0B\u5176\u4E2D\u4E4B\u4E00 ${util.joinValues(issue.values, \"|\")}`;\r\n            case \"too_big\": {\r\n                const adj = issue.inclusive ? \"<=\" : \"<\";\r\n                const sizing = getSizing(issue.origin);\r\n                if (sizing)\r\n                    return `\u6578\u503C\u904E\u5927\uFF1A\u9810\u671F ${issue.origin ?? \"\u503C\"} \u61C9\u70BA ${adj}${issue.maximum.toString()} ${sizing.unit ?? \"\u500B\u5143\u7D20\"}`;\r\n                return `\u6578\u503C\u904E\u5927\uFF1A\u9810\u671F ${issue.origin ?? \"\u503C\"} \u61C9\u70BA ${adj}${issue.maximum.toString()}`;\r\n            }\r\n            case \"too_small\": {\r\n                const adj = issue.inclusive ? \">=\" : \">\";\r\n                const sizing = getSizing(issue.origin);\r\n                if (sizing) {\r\n                    return `\u6578\u503C\u904E\u5C0F\uFF1A\u9810\u671F ${issue.origin} \u61C9\u70BA ${adj}${issue.minimum.toString()} ${sizing.unit}`;\r\n                }\r\n                return `\u6578\u503C\u904E\u5C0F\uFF1A\u9810\u671F ${issue.origin} \u61C9\u70BA ${adj}${issue.minimum.toString()}`;\r\n            }\r\n            case \"invalid_format\": {\r\n                const _issue = issue;\r\n                if (_issue.format === \"starts_with\") {\r\n                    return `\u7121\u6548\u7684\u5B57\u4E32\uFF1A\u5FC5\u9808\u4EE5 \"${_issue.prefix}\" \u958B\u982D`;\r\n                }\r\n                if (_issue.format === \"ends_with\")\r\n                    return `\u7121\u6548\u7684\u5B57\u4E32\uFF1A\u5FC5\u9808\u4EE5 \"${_issue.suffix}\" \u7D50\u5C3E`;\r\n                if (_issue.format === \"includes\")\r\n                    return `\u7121\u6548\u7684\u5B57\u4E32\uFF1A\u5FC5\u9808\u5305\u542B \"${_issue.includes}\"`;\r\n                if (_issue.format === \"regex\")\r\n                    return `\u7121\u6548\u7684\u5B57\u4E32\uFF1A\u5FC5\u9808\u7B26\u5408\u683C\u5F0F ${_issue.pattern}`;\r\n                return `\u7121\u6548\u7684 ${Nouns[_issue.format] ?? issue.format}`;\r\n            }\r\n            case \"not_multiple_of\":\r\n                return `\u7121\u6548\u7684\u6578\u5B57\uFF1A\u5FC5\u9808\u70BA ${issue.divisor} \u7684\u500D\u6578`;\r\n            case \"unrecognized_keys\":\r\n                return `\u7121\u6CD5\u8B58\u5225\u7684\u9375\u503C${issue.keys.length > 1 ? \"\u5011\" : \"\"}\uFF1A${util.joinValues(issue.keys, \"\u3001\")}`;\r\n            case \"invalid_key\":\r\n                return `${issue.origin} \u4E2D\u6709\u7121\u6548\u7684\u9375\u503C`;\r\n            case \"invalid_union\":\r\n                return \"\u7121\u6548\u7684\u8F38\u5165\u503C\";\r\n            case \"invalid_element\":\r\n                return `${issue.origin} \u4E2D\u6709\u7121\u6548\u7684\u503C`;\r\n            default:\r\n                return `\u7121\u6548\u7684\u8F38\u5165\u503C`;\r\n        }\r\n    };\r\n};\r\nexport default function () {\r\n    return {\r\n        localeError: error(),\r\n    };\r\n}\r\n", "import * as util from \"../core/util.js\";\r\nconst error = () => {\r\n    const Sizable = {\r\n        string: { unit: \"\u00E0mi\", verb: \"n\u00ED\" },\r\n        file: { unit: \"bytes\", verb: \"n\u00ED\" },\r\n        array: { unit: \"nkan\", verb: \"n\u00ED\" },\r\n        set: { unit: \"nkan\", verb: \"n\u00ED\" },\r\n    };\r\n    function getSizing(origin) {\r\n        return Sizable[origin] ?? null;\r\n    }\r\n    const parsedType = (data) => {\r\n        const t = typeof data;\r\n        switch (t) {\r\n            case \"number\": {\r\n                return Number.isNaN(data) ? \"NaN\" : \"n\u1ECD\u0301mb\u00E0\";\r\n            }\r\n            case \"object\": {\r\n                if (Array.isArray(data)) {\r\n                    return \"akop\u1ECD\";\r\n                }\r\n                if (data === null) {\r\n                    return \"null\";\r\n                }\r\n                if (Object.getPrototypeOf(data) !== Object.prototype && data.constructor) {\r\n                    return data.constructor.name;\r\n                }\r\n            }\r\n        }\r\n        return t;\r\n    };\r\n    const Nouns = {\r\n        regex: \"\u1EB9\u0300r\u1ECD \u00ECb\u00E1w\u1ECDl\u00E9\",\r\n        email: \"\u00E0d\u00EDr\u1EB9\u0301s\u00EC \u00ECm\u1EB9\u0301l\u00EC\",\r\n        url: \"URL\",\r\n        emoji: \"emoji\",\r\n        uuid: \"UUID\",\r\n        uuidv4: \"UUIDv4\",\r\n        uuidv6: \"UUIDv6\",\r\n        nanoid: \"nanoid\",\r\n        guid: \"GUID\",\r\n        cuid: \"cuid\",\r\n        cuid2: \"cuid2\",\r\n        ulid: \"ULID\",\r\n        xid: \"XID\",\r\n        ksuid: \"KSUID\",\r\n        datetime: \"\u00E0k\u00F3k\u00F2 ISO\",\r\n        date: \"\u1ECDj\u1ECD\u0301 ISO\",\r\n        time: \"\u00E0k\u00F3k\u00F2 ISO\",\r\n        duration: \"\u00E0k\u00F3k\u00F2 t\u00F3 p\u00E9 ISO\",\r\n        ipv4: \"\u00E0d\u00EDr\u1EB9\u0301s\u00EC IPv4\",\r\n        ipv6: \"\u00E0d\u00EDr\u1EB9\u0301s\u00EC IPv6\",\r\n        cidrv4: \"\u00E0gb\u00E8gb\u00E8 IPv4\",\r\n        cidrv6: \"\u00E0gb\u00E8gb\u00E8 IPv6\",\r\n        base64: \"\u1ECD\u0300r\u1ECD\u0300 t\u00ED a k\u1ECD\u0301 n\u00ED base64\",\r\n        base64url: \"\u1ECD\u0300r\u1ECD\u0300 base64url\",\r\n        json_string: \"\u1ECD\u0300r\u1ECD\u0300 JSON\",\r\n        e164: \"n\u1ECD\u0301mb\u00E0 E.164\",\r\n        jwt: \"JWT\",\r\n        template_literal: \"\u1EB9\u0300r\u1ECD \u00ECb\u00E1w\u1ECDl\u00E9\",\r\n    };\r\n    return (issue) => {\r\n        switch (issue.code) {\r\n            case \"invalid_type\":\r\n                return `\u00CCb\u00E1w\u1ECDl\u00E9 a\u1E63\u00EC\u1E63e: a n\u00ED l\u00E1ti fi ${issue.expected}, \u00E0m\u1ECD\u0300 a r\u00ED ${parsedType(issue.input)}`;\r\n            case \"invalid_value\":\r\n                if (issue.values.length === 1)\r\n                    return `\u00CCb\u00E1w\u1ECDl\u00E9 a\u1E63\u00EC\u1E63e: a n\u00ED l\u00E1ti fi ${util.stringifyPrimitive(issue.values[0])}`;\r\n                return `\u00C0\u1E63\u00E0y\u00E0n a\u1E63\u00EC\u1E63e: yan \u1ECD\u0300kan l\u00E1ra ${util.joinValues(issue.values, \"|\")}`;\r\n            case \"too_big\": {\r\n                const adj = issue.inclusive ? \"<=\" : \"<\";\r\n                const sizing = getSizing(issue.origin);\r\n                if (sizing)\r\n                    return `T\u00F3 p\u1ECD\u0300 j\u00F9: a n\u00ED l\u00E1ti j\u1EB9\u0301 p\u00E9 ${issue.origin ?? \"iye\"} ${sizing.verb} ${adj}${issue.maximum} ${sizing.unit}`;\r\n                return `T\u00F3 p\u1ECD\u0300 j\u00F9: a n\u00ED l\u00E1ti j\u1EB9\u0301 ${adj}${issue.maximum}`;\r\n            }\r\n            case \"too_small\": {\r\n                const adj = issue.inclusive ? \">=\" : \">\";\r\n                const sizing = getSizing(issue.origin);\r\n                if (sizing)\r\n                    return `K\u00E9r\u00E9 ju: a n\u00ED l\u00E1ti j\u1EB9\u0301 p\u00E9 ${issue.origin} ${sizing.verb} ${adj}${issue.minimum} ${sizing.unit}`;\r\n                return `K\u00E9r\u00E9 ju: a n\u00ED l\u00E1ti j\u1EB9\u0301 ${adj}${issue.minimum}`;\r\n            }\r\n            case \"invalid_format\": {\r\n                const _issue = issue;\r\n                if (_issue.format === \"starts_with\")\r\n                    return `\u1ECC\u0300r\u1ECD\u0300 a\u1E63\u00EC\u1E63e: gb\u1ECD\u0301d\u1ECD\u0300 b\u1EB9\u0300r\u1EB9\u0300 p\u1EB9\u0300l\u00FA \"${_issue.prefix}\"`;\r\n                if (_issue.format === \"ends_with\")\r\n                    return `\u1ECC\u0300r\u1ECD\u0300 a\u1E63\u00EC\u1E63e: gb\u1ECD\u0301d\u1ECD\u0300 par\u00ED p\u1EB9\u0300l\u00FA \"${_issue.suffix}\"`;\r\n                if (_issue.format === \"includes\")\r\n                    return `\u1ECC\u0300r\u1ECD\u0300 a\u1E63\u00EC\u1E63e: gb\u1ECD\u0301d\u1ECD\u0300 n\u00ED \"${_issue.includes}\"`;\r\n                if (_issue.format === \"regex\")\r\n                    return `\u1ECC\u0300r\u1ECD\u0300 a\u1E63\u00EC\u1E63e: gb\u1ECD\u0301d\u1ECD\u0300 b\u00E1 \u00E0p\u1EB9\u1EB9r\u1EB9 mu ${_issue.pattern}`;\r\n                return `A\u1E63\u00EC\u1E63e: ${Nouns[_issue.format] ?? issue.format}`;\r\n            }\r\n            case \"not_multiple_of\":\r\n                return `N\u1ECD\u0301mb\u00E0 a\u1E63\u00EC\u1E63e: gb\u1ECD\u0301d\u1ECD\u0300 j\u1EB9\u0301 \u00E8y\u00E0 p\u00EDp\u00EDn ti ${issue.divisor}`;\r\n            case \"unrecognized_keys\":\r\n                return `B\u1ECDt\u00ECn\u00EC \u00E0\u00ECm\u1ECD\u0300: ${util.joinValues(issue.keys, \", \")}`;\r\n            case \"invalid_key\":\r\n                return `B\u1ECDt\u00ECn\u00EC a\u1E63\u00EC\u1E63e n\u00EDn\u00FA ${issue.origin}`;\r\n            case \"invalid_union\":\r\n                return \"\u00CCb\u00E1w\u1ECDl\u00E9 a\u1E63\u00EC\u1E63e\";\r\n            case \"invalid_element\":\r\n                return `Iye a\u1E63\u00EC\u1E63e n\u00EDn\u00FA ${issue.origin}`;\r\n            default:\r\n                return \"\u00CCb\u00E1w\u1ECDl\u00E9 a\u1E63\u00EC\u1E63e\";\r\n        }\r\n    };\r\n};\r\nexport default function () {\r\n    return {\r\n        localeError: error(),\r\n    };\r\n}\r\n", "export const $output = Symbol(\"ZodOutput\");\r\nexport const $input = Symbol(\"ZodInput\");\r\nexport class $ZodRegistry {\r\n    constructor() {\r\n        this._map = new WeakMap();\r\n        this._idmap = new Map();\r\n    }\r\n    add(schema, ..._meta) {\r\n        const meta = _meta[0];\r\n        this._map.set(schema, meta);\r\n        if (meta && typeof meta === \"object\" && \"id\" in meta) {\r\n            if (this._idmap.has(meta.id)) {\r\n                throw new Error(`ID ${meta.id} already exists in the registry`);\r\n            }\r\n            this._idmap.set(meta.id, schema);\r\n        }\r\n        return this;\r\n    }\r\n    clear() {\r\n        this._map = new WeakMap();\r\n        this._idmap = new Map();\r\n        return this;\r\n    }\r\n    remove(schema) {\r\n        const meta = this._map.get(schema);\r\n        if (meta && typeof meta === \"object\" && \"id\" in meta) {\r\n            this._idmap.delete(meta.id);\r\n        }\r\n        this._map.delete(schema);\r\n        return this;\r\n    }\r\n    get(schema) {\r\n        // return this._map.get(schema) as any;\r\n        // inherit metadata\r\n        const p = schema._zod.parent;\r\n        if (p) {\r\n            const pm = { ...(this.get(p) ?? {}) };\r\n            delete pm.id; // do not inherit id\r\n            const f = { ...pm, ...this._map.get(schema) };\r\n            return Object.keys(f).length ? f : undefined;\r\n        }\r\n        return this._map.get(schema);\r\n    }\r\n    has(schema) {\r\n        return this._map.has(schema);\r\n    }\r\n}\r\n// registries\r\nexport function registry() {\r\n    return new $ZodRegistry();\r\n}\r\nexport const globalRegistry = /*@__PURE__*/ registry();\r\n", "import * as checks from \"./checks.js\";\r\nimport * as schemas from \"./schemas.js\";\r\nimport * as util from \"./util.js\";\r\nexport function _string(Class, params) {\r\n    return new Class({\r\n        type: \"string\",\r\n        ...util.normalizeParams(params),\r\n    });\r\n}\r\nexport function _coercedString(Class, params) {\r\n    return new Class({\r\n        type: \"string\",\r\n        coerce: true,\r\n        ...util.normalizeParams(params),\r\n    });\r\n}\r\nexport function _email(Class, params) {\r\n    return new Class({\r\n        type: \"string\",\r\n        format: \"email\",\r\n        check: \"string_format\",\r\n        abort: false,\r\n        ...util.normalizeParams(params),\r\n    });\r\n}\r\nexport function _guid(Class, params) {\r\n    return new Class({\r\n        type: \"string\",\r\n        format: \"guid\",\r\n        check: \"string_format\",\r\n        abort: false,\r\n        ...util.normalizeParams(params),\r\n    });\r\n}\r\nexport function _uuid(Class, params) {\r\n    return new Class({\r\n        type: \"string\",\r\n        format: \"uuid\",\r\n        check: \"string_format\",\r\n        abort: false,\r\n        ...util.normalizeParams(params),\r\n    });\r\n}\r\nexport function _uuidv4(Class, params) {\r\n    return new Class({\r\n        type: \"string\",\r\n        format: \"uuid\",\r\n        check: \"string_format\",\r\n        abort: false,\r\n        version: \"v4\",\r\n        ...util.normalizeParams(params),\r\n    });\r\n}\r\nexport function _uuidv6(Class, params) {\r\n    return new Class({\r\n        type: \"string\",\r\n        format: \"uuid\",\r\n        check: \"string_format\",\r\n        abort: false,\r\n        version: \"v6\",\r\n        ...util.normalizeParams(params),\r\n    });\r\n}\r\nexport function _uuidv7(Class, params) {\r\n    return new Class({\r\n        type: \"string\",\r\n        format: \"uuid\",\r\n        check: \"string_format\",\r\n        abort: false,\r\n        version: \"v7\",\r\n        ...util.normalizeParams(params),\r\n    });\r\n}\r\nexport function _url(Class, params) {\r\n    return new Class({\r\n        type: \"string\",\r\n        format: \"url\",\r\n        check: \"string_format\",\r\n        abort: false,\r\n        ...util.normalizeParams(params),\r\n    });\r\n}\r\nexport function _emoji(Class, params) {\r\n    return new Class({\r\n        type: \"string\",\r\n        format: \"emoji\",\r\n        check: \"string_format\",\r\n        abort: false,\r\n        ...util.normalizeParams(params),\r\n    });\r\n}\r\nexport function _nanoid(Class, params) {\r\n    return new Class({\r\n        type: \"string\",\r\n        format: \"nanoid\",\r\n        check: \"string_format\",\r\n        abort: false,\r\n        ...util.normalizeParams(params),\r\n    });\r\n}\r\nexport function _cuid(Class, params) {\r\n    return new Class({\r\n        type: \"string\",\r\n        format: \"cuid\",\r\n        check: \"string_format\",\r\n        abort: false,\r\n        ...util.normalizeParams(params),\r\n    });\r\n}\r\nexport function _cuid2(Class, params) {\r\n    return new Class({\r\n        type: \"string\",\r\n        format: \"cuid2\",\r\n        check: \"string_format\",\r\n        abort: false,\r\n        ...util.normalizeParams(params),\r\n    });\r\n}\r\nexport function _ulid(Class, params) {\r\n    return new Class({\r\n        type: \"string\",\r\n        format: \"ulid\",\r\n        check: \"string_format\",\r\n        abort: false,\r\n        ...util.normalizeParams(params),\r\n    });\r\n}\r\nexport function _xid(Class, params) {\r\n    return new Class({\r\n        type: \"string\",\r\n        format: \"xid\",\r\n        check: \"string_format\",\r\n        abort: false,\r\n        ...util.normalizeParams(params),\r\n    });\r\n}\r\nexport function _ksuid(Class, params) {\r\n    return new Class({\r\n        type: \"string\",\r\n        format: \"ksuid\",\r\n        check: \"string_format\",\r\n        abort: false,\r\n        ...util.normalizeParams(params),\r\n    });\r\n}\r\nexport function _ipv4(Class, params) {\r\n    return new Class({\r\n        type: \"string\",\r\n        format: \"ipv4\",\r\n        check: \"string_format\",\r\n        abort: false,\r\n        ...util.normalizeParams(params),\r\n    });\r\n}\r\nexport function _ipv6(Class, params) {\r\n    return new Class({\r\n        type: \"string\",\r\n        format: \"ipv6\",\r\n        check: \"string_format\",\r\n        abort: false,\r\n        ...util.normalizeParams(params),\r\n    });\r\n}\r\nexport function _cidrv4(Class, params) {\r\n    return new Class({\r\n        type: \"string\",\r\n        format: \"cidrv4\",\r\n        check: \"string_format\",\r\n        abort: false,\r\n        ...util.normalizeParams(params),\r\n    });\r\n}\r\nexport function _cidrv6(Class, params) {\r\n    return new Class({\r\n        type: \"string\",\r\n        format: \"cidrv6\",\r\n        check: \"string_format\",\r\n        abort: false,\r\n        ...util.normalizeParams(params),\r\n    });\r\n}\r\nexport function _base64(Class, params) {\r\n    return new Class({\r\n        type: \"string\",\r\n        format: \"base64\",\r\n        check: \"string_format\",\r\n        abort: false,\r\n        ...util.normalizeParams(params),\r\n    });\r\n}\r\nexport function _base64url(Class, params) {\r\n    return new Class({\r\n        type: \"string\",\r\n        format: \"base64url\",\r\n        check: \"string_format\",\r\n        abort: false,\r\n        ...util.normalizeParams(params),\r\n    });\r\n}\r\nexport function _e164(Class, params) {\r\n    return new Class({\r\n        type: \"string\",\r\n        format: \"e164\",\r\n        check: \"string_format\",\r\n        abort: false,\r\n        ...util.normalizeParams(params),\r\n    });\r\n}\r\nexport function _jwt(Class, params) {\r\n    return new Class({\r\n        type: \"string\",\r\n        format: \"jwt\",\r\n        check: \"string_format\",\r\n        abort: false,\r\n        ...util.normalizeParams(params),\r\n    });\r\n}\r\nexport const TimePrecision = {\r\n    Any: null,\r\n    Minute: -1,\r\n    Second: 0,\r\n    Millisecond: 3,\r\n    Microsecond: 6,\r\n};\r\nexport function _isoDateTime(Class, params) {\r\n    return new Class({\r\n        type: \"string\",\r\n        format: \"datetime\",\r\n        check: \"string_format\",\r\n        offset: false,\r\n        local: false,\r\n        precision: null,\r\n        ...util.normalizeParams(params),\r\n    });\r\n}\r\nexport function _isoDate(Class, params) {\r\n    return new Class({\r\n        type: \"string\",\r\n        format: \"date\",\r\n        check: \"string_format\",\r\n        ...util.normalizeParams(params),\r\n    });\r\n}\r\nexport function _isoTime(Class, params) {\r\n    return new Class({\r\n        type: \"string\",\r\n        format: \"time\",\r\n        check: \"string_format\",\r\n        precision: null,\r\n        ...util.normalizeParams(params),\r\n    });\r\n}\r\nexport function _isoDuration(Class, params) {\r\n    return new Class({\r\n        type: \"string\",\r\n        format: \"duration\",\r\n        check: \"string_format\",\r\n        ...util.normalizeParams(params),\r\n    });\r\n}\r\nexport function _number(Class, params) {\r\n    return new Class({\r\n        type: \"number\",\r\n        checks: [],\r\n        ...util.normalizeParams(params),\r\n    });\r\n}\r\nexport function _coercedNumber(Class, params) {\r\n    return new Class({\r\n        type: \"number\",\r\n        coerce: true,\r\n        checks: [],\r\n        ...util.normalizeParams(params),\r\n    });\r\n}\r\nexport function _int(Class, params) {\r\n    return new Class({\r\n        type: \"number\",\r\n        check: \"number_format\",\r\n        abort: false,\r\n        format: \"safeint\",\r\n        ...util.normalizeParams(params),\r\n    });\r\n}\r\nexport function _float32(Class, params) {\r\n    return new Class({\r\n        type: \"number\",\r\n        check: \"number_format\",\r\n        abort: false,\r\n        format: \"float32\",\r\n        ...util.normalizeParams(params),\r\n    });\r\n}\r\nexport function _float64(Class, params) {\r\n    return new Class({\r\n        type: \"number\",\r\n        check: \"number_format\",\r\n        abort: false,\r\n        format: \"float64\",\r\n        ...util.normalizeParams(params),\r\n    });\r\n}\r\nexport function _int32(Class, params) {\r\n    return new Class({\r\n        type: \"number\",\r\n        check: \"number_format\",\r\n        abort: false,\r\n        format: \"int32\",\r\n        ...util.normalizeParams(params),\r\n    });\r\n}\r\nexport function _uint32(Class, params) {\r\n    return new Class({\r\n        type: \"number\",\r\n        check: \"number_format\",\r\n        abort: false,\r\n        format: \"uint32\",\r\n        ...util.normalizeParams(params),\r\n    });\r\n}\r\nexport function _boolean(Class, params) {\r\n    return new Class({\r\n        type: \"boolean\",\r\n        ...util.normalizeParams(params),\r\n    });\r\n}\r\nexport function _coercedBoolean(Class, params) {\r\n    return new Class({\r\n        type: \"boolean\",\r\n        coerce: true,\r\n        ...util.normalizeParams(params),\r\n    });\r\n}\r\nexport function _bigint(Class, params) {\r\n    return new Class({\r\n        type: \"bigint\",\r\n        ...util.normalizeParams(params),\r\n    });\r\n}\r\nexport function _coercedBigint(Class, params) {\r\n    return new Class({\r\n        type: \"bigint\",\r\n        coerce: true,\r\n        ...util.normalizeParams(params),\r\n    });\r\n}\r\nexport function _int64(Class, params) {\r\n    return new Class({\r\n        type: \"bigint\",\r\n        check: \"bigint_format\",\r\n        abort: false,\r\n        format: \"int64\",\r\n        ...util.normalizeParams(params),\r\n    });\r\n}\r\nexport function _uint64(Class, params) {\r\n    return new Class({\r\n        type: \"bigint\",\r\n        check: \"bigint_format\",\r\n        abort: false,\r\n        format: \"uint64\",\r\n        ...util.normalizeParams(params),\r\n    });\r\n}\r\nexport function _symbol(Class, params) {\r\n    return new Class({\r\n        type: \"symbol\",\r\n        ...util.normalizeParams(params),\r\n    });\r\n}\r\nexport function _undefined(Class, params) {\r\n    return new Class({\r\n        type: \"undefined\",\r\n        ...util.normalizeParams(params),\r\n    });\r\n}\r\nexport function _null(Class, params) {\r\n    return new Class({\r\n        type: \"null\",\r\n        ...util.normalizeParams(params),\r\n    });\r\n}\r\nexport function _any(Class) {\r\n    return new Class({\r\n        type: \"any\",\r\n    });\r\n}\r\nexport function _unknown(Class) {\r\n    return new Class({\r\n        type: \"unknown\",\r\n    });\r\n}\r\nexport function _never(Class, params) {\r\n    return new Class({\r\n        type: \"never\",\r\n        ...util.normalizeParams(params),\r\n    });\r\n}\r\nexport function _void(Class, params) {\r\n    return new Class({\r\n        type: \"void\",\r\n        ...util.normalizeParams(params),\r\n    });\r\n}\r\nexport function _date(Class, params) {\r\n    return new Class({\r\n        type: \"date\",\r\n        ...util.normalizeParams(params),\r\n    });\r\n}\r\nexport function _coercedDate(Class, params) {\r\n    return new Class({\r\n        type: \"date\",\r\n        coerce: true,\r\n        ...util.normalizeParams(params),\r\n    });\r\n}\r\nexport function _nan(Class, params) {\r\n    return new Class({\r\n        type: \"nan\",\r\n        ...util.normalizeParams(params),\r\n    });\r\n}\r\nexport function _lt(value, params) {\r\n    return new checks.$ZodCheckLessThan({\r\n        check: \"less_than\",\r\n        ...util.normalizeParams(params),\r\n        value,\r\n        inclusive: false,\r\n    });\r\n}\r\nexport function _lte(value, params) {\r\n    return new checks.$ZodCheckLessThan({\r\n        check: \"less_than\",\r\n        ...util.normalizeParams(params),\r\n        value,\r\n        inclusive: true,\r\n    });\r\n}\r\nexport { \r\n/** @deprecated Use `z.lte()` instead. */\r\n_lte as _max, };\r\nexport function _gt(value, params) {\r\n    return new checks.$ZodCheckGreaterThan({\r\n        check: \"greater_than\",\r\n        ...util.normalizeParams(params),\r\n        value,\r\n        inclusive: false,\r\n    });\r\n}\r\nexport function _gte(value, params) {\r\n    return new checks.$ZodCheckGreaterThan({\r\n        check: \"greater_than\",\r\n        ...util.normalizeParams(params),\r\n        value,\r\n        inclusive: true,\r\n    });\r\n}\r\nexport { \r\n/** @deprecated Use `z.gte()` instead. */\r\n_gte as _min, };\r\nexport function _positive(params) {\r\n    return _gt(0, params);\r\n}\r\n// negative\r\nexport function _negative(params) {\r\n    return _lt(0, params);\r\n}\r\n// nonpositive\r\nexport function _nonpositive(params) {\r\n    return _lte(0, params);\r\n}\r\n// nonnegative\r\nexport function _nonnegative(params) {\r\n    return _gte(0, params);\r\n}\r\nexport function _multipleOf(value, params) {\r\n    return new checks.$ZodCheckMultipleOf({\r\n        check: \"multiple_of\",\r\n        ...util.normalizeParams(params),\r\n        value,\r\n    });\r\n}\r\nexport function _maxSize(maximum, params) {\r\n    return new checks.$ZodCheckMaxSize({\r\n        check: \"max_size\",\r\n        ...util.normalizeParams(params),\r\n        maximum,\r\n    });\r\n}\r\nexport function _minSize(minimum, params) {\r\n    return new checks.$ZodCheckMinSize({\r\n        check: \"min_size\",\r\n        ...util.normalizeParams(params),\r\n        minimum,\r\n    });\r\n}\r\nexport function _size(size, params) {\r\n    return new checks.$ZodCheckSizeEquals({\r\n        check: \"size_equals\",\r\n        ...util.normalizeParams(params),\r\n        size,\r\n    });\r\n}\r\nexport function _maxLength(maximum, params) {\r\n    const ch = new checks.$ZodCheckMaxLength({\r\n        check: \"max_length\",\r\n        ...util.normalizeParams(params),\r\n        maximum,\r\n    });\r\n    return ch;\r\n}\r\nexport function _minLength(minimum, params) {\r\n    return new checks.$ZodCheckMinLength({\r\n        check: \"min_length\",\r\n        ...util.normalizeParams(params),\r\n        minimum,\r\n    });\r\n}\r\nexport function _length(length, params) {\r\n    return new checks.$ZodCheckLengthEquals({\r\n        check: \"length_equals\",\r\n        ...util.normalizeParams(params),\r\n        length,\r\n    });\r\n}\r\nexport function _regex(pattern, params) {\r\n    return new checks.$ZodCheckRegex({\r\n        check: \"string_format\",\r\n        format: \"regex\",\r\n        ...util.normalizeParams(params),\r\n        pattern,\r\n    });\r\n}\r\nexport function _lowercase(params) {\r\n    return new checks.$ZodCheckLowerCase({\r\n        check: \"string_format\",\r\n        format: \"lowercase\",\r\n        ...util.normalizeParams(params),\r\n    });\r\n}\r\nexport function _uppercase(params) {\r\n    return new checks.$ZodCheckUpperCase({\r\n        check: \"string_format\",\r\n        format: \"uppercase\",\r\n        ...util.normalizeParams(params),\r\n    });\r\n}\r\nexport function _includes(includes, params) {\r\n    return new checks.$ZodCheckIncludes({\r\n        check: \"string_format\",\r\n        format: \"includes\",\r\n        ...util.normalizeParams(params),\r\n        includes,\r\n    });\r\n}\r\nexport function _startsWith(prefix, params) {\r\n    return new checks.$ZodCheckStartsWith({\r\n        check: \"string_format\",\r\n        format: \"starts_with\",\r\n        ...util.normalizeParams(params),\r\n        prefix,\r\n    });\r\n}\r\nexport function _endsWith(suffix, params) {\r\n    return new checks.$ZodCheckEndsWith({\r\n        check: \"string_format\",\r\n        format: \"ends_with\",\r\n        ...util.normalizeParams(params),\r\n        suffix,\r\n    });\r\n}\r\nexport function _property(property, schema, params) {\r\n    return new checks.$ZodCheckProperty({\r\n        check: \"property\",\r\n        property,\r\n        schema,\r\n        ...util.normalizeParams(params),\r\n    });\r\n}\r\nexport function _mime(types, params) {\r\n    return new checks.$ZodCheckMimeType({\r\n        check: \"mime_type\",\r\n        mime: types,\r\n        ...util.normalizeParams(params),\r\n    });\r\n}\r\nexport function _overwrite(tx) {\r\n    return new checks.$ZodCheckOverwrite({\r\n        check: \"overwrite\",\r\n        tx,\r\n    });\r\n}\r\n// normalize\r\nexport function _normalize(form) {\r\n    return _overwrite((input) => input.normalize(form));\r\n}\r\n// trim\r\nexport function _trim() {\r\n    return _overwrite((input) => input.trim());\r\n}\r\n// toLowerCase\r\nexport function _toLowerCase() {\r\n    return _overwrite((input) => input.toLowerCase());\r\n}\r\n// toUpperCase\r\nexport function _toUpperCase() {\r\n    return _overwrite((input) => input.toUpperCase());\r\n}\r\nexport function _array(Class, element, params) {\r\n    return new Class({\r\n        type: \"array\",\r\n        element,\r\n        // get element() {\r\n        //   return element;\r\n        // },\r\n        ...util.normalizeParams(params),\r\n    });\r\n}\r\nexport function _union(Class, options, params) {\r\n    return new Class({\r\n        type: \"union\",\r\n        options,\r\n        ...util.normalizeParams(params),\r\n    });\r\n}\r\nexport function _discriminatedUnion(Class, discriminator, options, params) {\r\n    return new Class({\r\n        type: \"union\",\r\n        options,\r\n        discriminator,\r\n        ...util.normalizeParams(params),\r\n    });\r\n}\r\nexport function _intersection(Class, left, right) {\r\n    return new Class({\r\n        type: \"intersection\",\r\n        left,\r\n        right,\r\n    });\r\n}\r\n// export function _tuple(\r\n//   Class: util.SchemaClass<schemas.$ZodTuple>,\r\n//   items: [],\r\n//   params?: string | $ZodTupleParams\r\n// ): schemas.$ZodTuple<[], null>;\r\nexport function _tuple(Class, items, _paramsOrRest, _params) {\r\n    const hasRest = _paramsOrRest instanceof schemas.$ZodType;\r\n    const params = hasRest ? _params : _paramsOrRest;\r\n    const rest = hasRest ? _paramsOrRest : null;\r\n    return new Class({\r\n        type: \"tuple\",\r\n        items,\r\n        rest,\r\n        ...util.normalizeParams(params),\r\n    });\r\n}\r\nexport function _record(Class, keyType, valueType, params) {\r\n    return new Class({\r\n        type: \"record\",\r\n        keyType,\r\n        valueType,\r\n        ...util.normalizeParams(params),\r\n    });\r\n}\r\nexport function _map(Class, keyType, valueType, params) {\r\n    return new Class({\r\n        type: \"map\",\r\n        keyType,\r\n        valueType,\r\n        ...util.normalizeParams(params),\r\n    });\r\n}\r\nexport function _set(Class, valueType, params) {\r\n    return new Class({\r\n        type: \"set\",\r\n        valueType,\r\n        ...util.normalizeParams(params),\r\n    });\r\n}\r\nexport function _enum(Class, values, params) {\r\n    const entries = Array.isArray(values) ? Object.fromEntries(values.map((v) => [v, v])) : values;\r\n    // if (Array.isArray(values)) {\r\n    //   for (const value of values) {\r\n    //     entries[value] = value;\r\n    //   }\r\n    // } else {\r\n    //   Object.assign(entries, values);\r\n    // }\r\n    // const entries: util.EnumLike = {};\r\n    // for (const val of values) {\r\n    //   entries[val] = val;\r\n    // }\r\n    return new Class({\r\n        type: \"enum\",\r\n        entries,\r\n        ...util.normalizeParams(params),\r\n    });\r\n}\r\n/** @deprecated This API has been merged into `z.enum()`. Use `z.enum()` instead.\r\n *\r\n * ```ts\r\n * enum Colors { red, green, blue }\r\n * z.enum(Colors);\r\n * ```\r\n */\r\nexport function _nativeEnum(Class, entries, params) {\r\n    return new Class({\r\n        type: \"enum\",\r\n        entries,\r\n        ...util.normalizeParams(params),\r\n    });\r\n}\r\nexport function _literal(Class, value, params) {\r\n    return new Class({\r\n        type: \"literal\",\r\n        values: Array.isArray(value) ? value : [value],\r\n        ...util.normalizeParams(params),\r\n    });\r\n}\r\nexport function _file(Class, params) {\r\n    return new Class({\r\n        type: \"file\",\r\n        ...util.normalizeParams(params),\r\n    });\r\n}\r\nexport function _transform(Class, fn) {\r\n    return new Class({\r\n        type: \"transform\",\r\n        transform: fn,\r\n    });\r\n}\r\nexport function _optional(Class, innerType) {\r\n    return new Class({\r\n        type: \"optional\",\r\n        innerType,\r\n    });\r\n}\r\nexport function _nullable(Class, innerType) {\r\n    return new Class({\r\n        type: \"nullable\",\r\n        innerType,\r\n    });\r\n}\r\nexport function _default(Class, innerType, defaultValue) {\r\n    return new Class({\r\n        type: \"default\",\r\n        innerType,\r\n        get defaultValue() {\r\n            return typeof defaultValue === \"function\" ? defaultValue() : util.shallowClone(defaultValue);\r\n        },\r\n    });\r\n}\r\nexport function _nonoptional(Class, innerType, params) {\r\n    return new Class({\r\n        type: \"nonoptional\",\r\n        innerType,\r\n        ...util.normalizeParams(params),\r\n    });\r\n}\r\nexport function _success(Class, innerType) {\r\n    return new Class({\r\n        type: \"success\",\r\n        innerType,\r\n    });\r\n}\r\nexport function _catch(Class, innerType, catchValue) {\r\n    return new Class({\r\n        type: \"catch\",\r\n        innerType,\r\n        catchValue: (typeof catchValue === \"function\" ? catchValue : () => catchValue),\r\n    });\r\n}\r\nexport function _pipe(Class, in_, out) {\r\n    return new Class({\r\n        type: \"pipe\",\r\n        in: in_,\r\n        out,\r\n    });\r\n}\r\nexport function _readonly(Class, innerType) {\r\n    return new Class({\r\n        type: \"readonly\",\r\n        innerType,\r\n    });\r\n}\r\nexport function _templateLiteral(Class, parts, params) {\r\n    return new Class({\r\n        type: \"template_literal\",\r\n        parts,\r\n        ...util.normalizeParams(params),\r\n    });\r\n}\r\nexport function _lazy(Class, getter) {\r\n    return new Class({\r\n        type: \"lazy\",\r\n        getter,\r\n    });\r\n}\r\nexport function _promise(Class, innerType) {\r\n    return new Class({\r\n        type: \"promise\",\r\n        innerType,\r\n    });\r\n}\r\nexport function _custom(Class, fn, _params) {\r\n    const norm = util.normalizeParams(_params);\r\n    norm.abort ?? (norm.abort = true); // default to abort:false\r\n    const schema = new Class({\r\n        type: \"custom\",\r\n        check: \"custom\",\r\n        fn: fn,\r\n        ...norm,\r\n    });\r\n    return schema;\r\n}\r\n// same as _custom but defaults to abort:false\r\nexport function _refine(Class, fn, _params) {\r\n    const schema = new Class({\r\n        type: \"custom\",\r\n        check: \"custom\",\r\n        fn: fn,\r\n        ...util.normalizeParams(_params),\r\n    });\r\n    return schema;\r\n}\r\nexport function _superRefine(fn) {\r\n    const ch = _check((payload) => {\r\n        payload.addIssue = (issue) => {\r\n            if (typeof issue === \"string\") {\r\n                payload.issues.push(util.issue(issue, payload.value, ch._zod.def));\r\n            }\r\n            else {\r\n                // for Zod 3 backwards compatibility\r\n                const _issue = issue;\r\n                if (_issue.fatal)\r\n                    _issue.continue = false;\r\n                _issue.code ?? (_issue.code = \"custom\");\r\n                _issue.input ?? (_issue.input = payload.value);\r\n                _issue.inst ?? (_issue.inst = ch);\r\n                _issue.continue ?? (_issue.continue = !ch._zod.def.abort); // abort is always undefined, so this is always true...\r\n                payload.issues.push(util.issue(_issue));\r\n            }\r\n        };\r\n        return fn(payload.value, payload);\r\n    });\r\n    return ch;\r\n}\r\nexport function _check(fn, params) {\r\n    const ch = new checks.$ZodCheck({\r\n        check: \"custom\",\r\n        ...util.normalizeParams(params),\r\n    });\r\n    ch._zod.check = fn;\r\n    return ch;\r\n}\r\nexport function _stringbool(Classes, _params) {\r\n    const params = util.normalizeParams(_params);\r\n    let truthyArray = params.truthy ?? [\"true\", \"1\", \"yes\", \"on\", \"y\", \"enabled\"];\r\n    let falsyArray = params.falsy ?? [\"false\", \"0\", \"no\", \"off\", \"n\", \"disabled\"];\r\n    if (params.case !== \"sensitive\") {\r\n        truthyArray = truthyArray.map((v) => (typeof v === \"string\" ? v.toLowerCase() : v));\r\n        falsyArray = falsyArray.map((v) => (typeof v === \"string\" ? v.toLowerCase() : v));\r\n    }\r\n    const truthySet = new Set(truthyArray);\r\n    const falsySet = new Set(falsyArray);\r\n    const _Codec = Classes.Codec ?? schemas.$ZodCodec;\r\n    const _Boolean = Classes.Boolean ?? schemas.$ZodBoolean;\r\n    const _String = Classes.String ?? schemas.$ZodString;\r\n    const stringSchema = new _String({ type: \"string\", error: params.error });\r\n    const booleanSchema = new _Boolean({ type: \"boolean\", error: params.error });\r\n    const codec = new _Codec({\r\n        type: \"pipe\",\r\n        in: stringSchema,\r\n        out: booleanSchema,\r\n        transform: ((input, payload) => {\r\n            let data = input;\r\n            if (params.case !== \"sensitive\")\r\n                data = data.toLowerCase();\r\n            if (truthySet.has(data)) {\r\n                return true;\r\n            }\r\n            else if (falsySet.has(data)) {\r\n                return false;\r\n            }\r\n            else {\r\n                payload.issues.push({\r\n                    code: \"invalid_value\",\r\n                    expected: \"stringbool\",\r\n                    values: [...truthySet, ...falsySet],\r\n                    input: payload.value,\r\n                    inst: codec,\r\n                    continue: false,\r\n                });\r\n                return {};\r\n            }\r\n        }),\r\n        reverseTransform: ((input, _payload) => {\r\n            if (input === true) {\r\n                return truthyArray[0] || \"true\";\r\n            }\r\n            else {\r\n                return falsyArray[0] || \"false\";\r\n            }\r\n        }),\r\n        error: params.error,\r\n    });\r\n    return codec;\r\n}\r\nexport function _stringFormat(Class, format, fnOrRegex, _params = {}) {\r\n    const params = util.normalizeParams(_params);\r\n    const def = {\r\n        ...util.normalizeParams(_params),\r\n        check: \"string_format\",\r\n        type: \"string\",\r\n        format,\r\n        fn: typeof fnOrRegex === \"function\" ? fnOrRegex : (val) => fnOrRegex.test(val),\r\n        ...params,\r\n    };\r\n    if (fnOrRegex instanceof RegExp) {\r\n        def.pattern = fnOrRegex;\r\n    }\r\n    const inst = new Class(def);\r\n    return inst;\r\n}\r\n", "import { $ZodRegistry, globalRegistry } from \"./registries.js\";\r\nimport { getEnumValues } from \"./util.js\";\r\nexport class JSONSchemaGenerator {\r\n    constructor(params) {\r\n        this.counter = 0;\r\n        this.metadataRegistry = params?.metadata ?? globalRegistry;\r\n        this.target = params?.target ?? \"draft-2020-12\";\r\n        this.unrepresentable = params?.unrepresentable ?? \"throw\";\r\n        this.override = params?.override ?? (() => { });\r\n        this.io = params?.io ?? \"output\";\r\n        this.seen = new Map();\r\n    }\r\n    process(schema, _params = { path: [], schemaPath: [] }) {\r\n        var _a;\r\n        const def = schema._zod.def;\r\n        const formatMap = {\r\n            guid: \"uuid\",\r\n            url: \"uri\",\r\n            datetime: \"date-time\",\r\n            json_string: \"json-string\",\r\n            regex: \"\", // do not set\r\n        };\r\n        // check for schema in seens\r\n        const seen = this.seen.get(schema);\r\n        if (seen) {\r\n            seen.count++;\r\n            // check if cycle\r\n            const isCycle = _params.schemaPath.includes(schema);\r\n            if (isCycle) {\r\n                seen.cycle = _params.path;\r\n            }\r\n            return seen.schema;\r\n        }\r\n        // initialize\r\n        const result = { schema: {}, count: 1, cycle: undefined, path: _params.path };\r\n        this.seen.set(schema, result);\r\n        // custom method overrides default behavior\r\n        const overrideSchema = schema._zod.toJSONSchema?.();\r\n        if (overrideSchema) {\r\n            result.schema = overrideSchema;\r\n        }\r\n        else {\r\n            const params = {\r\n                ..._params,\r\n                schemaPath: [..._params.schemaPath, schema],\r\n                path: _params.path,\r\n            };\r\n            const parent = schema._zod.parent;\r\n            if (parent) {\r\n                // schema was cloned from another schema\r\n                result.ref = parent;\r\n                this.process(parent, params);\r\n                this.seen.get(parent).isParent = true;\r\n            }\r\n            else {\r\n                const _json = result.schema;\r\n                switch (def.type) {\r\n                    case \"string\": {\r\n                        const json = _json;\r\n                        json.type = \"string\";\r\n                        const { minimum, maximum, format, patterns, contentEncoding } = schema._zod\r\n                            .bag;\r\n                        if (typeof minimum === \"number\")\r\n                            json.minLength = minimum;\r\n                        if (typeof maximum === \"number\")\r\n                            json.maxLength = maximum;\r\n                        // custom pattern overrides format\r\n                        if (format) {\r\n                            json.format = formatMap[format] ?? format;\r\n                            if (json.format === \"\")\r\n                                delete json.format; // empty format is not valid\r\n                        }\r\n                        if (contentEncoding)\r\n                            json.contentEncoding = contentEncoding;\r\n                        if (patterns && patterns.size > 0) {\r\n                            const regexes = [...patterns];\r\n                            if (regexes.length === 1)\r\n                                json.pattern = regexes[0].source;\r\n                            else if (regexes.length > 1) {\r\n                                result.schema.allOf = [\r\n                                    ...regexes.map((regex) => ({\r\n                                        ...(this.target === \"draft-7\" || this.target === \"draft-4\" || this.target === \"openapi-3.0\"\r\n                                            ? { type: \"string\" }\r\n                                            : {}),\r\n                                        pattern: regex.source,\r\n                                    })),\r\n                                ];\r\n                            }\r\n                        }\r\n                        break;\r\n                    }\r\n                    case \"number\": {\r\n                        const json = _json;\r\n                        const { minimum, maximum, format, multipleOf, exclusiveMaximum, exclusiveMinimum } = schema._zod.bag;\r\n                        if (typeof format === \"string\" && format.includes(\"int\"))\r\n                            json.type = \"integer\";\r\n                        else\r\n                            json.type = \"number\";\r\n                        if (typeof exclusiveMinimum === \"number\") {\r\n                            if (this.target === \"draft-4\" || this.target === \"openapi-3.0\") {\r\n                                json.minimum = exclusiveMinimum;\r\n                                json.exclusiveMinimum = true;\r\n                            }\r\n                            else {\r\n                                json.exclusiveMinimum = exclusiveMinimum;\r\n                            }\r\n                        }\r\n                        if (typeof minimum === \"number\") {\r\n                            json.minimum = minimum;\r\n                            if (typeof exclusiveMinimum === \"number\" && this.target !== \"draft-4\") {\r\n                                if (exclusiveMinimum >= minimum)\r\n                                    delete json.minimum;\r\n                                else\r\n                                    delete json.exclusiveMinimum;\r\n                            }\r\n                        }\r\n                        if (typeof exclusiveMaximum === \"number\") {\r\n                            if (this.target === \"draft-4\" || this.target === \"openapi-3.0\") {\r\n                                json.maximum = exclusiveMaximum;\r\n                                json.exclusiveMaximum = true;\r\n                            }\r\n                            else {\r\n                                json.exclusiveMaximum = exclusiveMaximum;\r\n                            }\r\n                        }\r\n                        if (typeof maximum === \"number\") {\r\n                            json.maximum = maximum;\r\n                            if (typeof exclusiveMaximum === \"number\" && this.target !== \"draft-4\") {\r\n                                if (exclusiveMaximum <= maximum)\r\n                                    delete json.maximum;\r\n                                else\r\n                                    delete json.exclusiveMaximum;\r\n                            }\r\n                        }\r\n                        if (typeof multipleOf === \"number\")\r\n                            json.multipleOf = multipleOf;\r\n                        break;\r\n                    }\r\n                    case \"boolean\": {\r\n                        const json = _json;\r\n                        json.type = \"boolean\";\r\n                        break;\r\n                    }\r\n                    case \"bigint\": {\r\n                        if (this.unrepresentable === \"throw\") {\r\n                            throw new Error(\"BigInt cannot be represented in JSON Schema\");\r\n                        }\r\n                        break;\r\n                    }\r\n                    case \"symbol\": {\r\n                        if (this.unrepresentable === \"throw\") {\r\n                            throw new Error(\"Symbols cannot be represented in JSON Schema\");\r\n                        }\r\n                        break;\r\n                    }\r\n                    case \"null\": {\r\n                        if (this.target === \"openapi-3.0\") {\r\n                            _json.type = \"string\";\r\n                            _json.nullable = true;\r\n                            _json.enum = [null];\r\n                        }\r\n                        else\r\n                            _json.type = \"null\";\r\n                        break;\r\n                    }\r\n                    case \"any\": {\r\n                        break;\r\n                    }\r\n                    case \"unknown\": {\r\n                        break;\r\n                    }\r\n                    case \"undefined\": {\r\n                        if (this.unrepresentable === \"throw\") {\r\n                            throw new Error(\"Undefined cannot be represented in JSON Schema\");\r\n                        }\r\n                        break;\r\n                    }\r\n                    case \"void\": {\r\n                        if (this.unrepresentable === \"throw\") {\r\n                            throw new Error(\"Void cannot be represented in JSON Schema\");\r\n                        }\r\n                        break;\r\n                    }\r\n                    case \"never\": {\r\n                        _json.not = {};\r\n                        break;\r\n                    }\r\n                    case \"date\": {\r\n                        if (this.unrepresentable === \"throw\") {\r\n                            throw new Error(\"Date cannot be represented in JSON Schema\");\r\n                        }\r\n                        break;\r\n                    }\r\n                    case \"array\": {\r\n                        const json = _json;\r\n                        const { minimum, maximum } = schema._zod.bag;\r\n                        if (typeof minimum === \"number\")\r\n                            json.minItems = minimum;\r\n                        if (typeof maximum === \"number\")\r\n                            json.maxItems = maximum;\r\n                        json.type = \"array\";\r\n                        json.items = this.process(def.element, { ...params, path: [...params.path, \"items\"] });\r\n                        break;\r\n                    }\r\n                    case \"object\": {\r\n                        const json = _json;\r\n                        json.type = \"object\";\r\n                        json.properties = {};\r\n                        const shape = def.shape; // params.shapeCache.get(schema)!;\r\n                        for (const key in shape) {\r\n                            json.properties[key] = this.process(shape[key], {\r\n                                ...params,\r\n                                path: [...params.path, \"properties\", key],\r\n                            });\r\n                        }\r\n                        // required keys\r\n                        const allKeys = new Set(Object.keys(shape));\r\n                        // const optionalKeys = new Set(def.optional);\r\n                        const requiredKeys = new Set([...allKeys].filter((key) => {\r\n                            const v = def.shape[key]._zod;\r\n                            if (this.io === \"input\") {\r\n                                return v.optin === undefined;\r\n                            }\r\n                            else {\r\n                                return v.optout === undefined;\r\n                            }\r\n                        }));\r\n                        if (requiredKeys.size > 0) {\r\n                            json.required = Array.from(requiredKeys);\r\n                        }\r\n                        // catchall\r\n                        if (def.catchall?._zod.def.type === \"never\") {\r\n                            // strict\r\n                            json.additionalProperties = false;\r\n                        }\r\n                        else if (!def.catchall) {\r\n                            // regular\r\n                            if (this.io === \"output\")\r\n                                json.additionalProperties = false;\r\n                        }\r\n                        else if (def.catchall) {\r\n                            json.additionalProperties = this.process(def.catchall, {\r\n                                ...params,\r\n                                path: [...params.path, \"additionalProperties\"],\r\n                            });\r\n                        }\r\n                        break;\r\n                    }\r\n                    case \"union\": {\r\n                        const json = _json;\r\n                        const options = def.options.map((x, i) => this.process(x, {\r\n                            ...params,\r\n                            path: [...params.path, \"anyOf\", i],\r\n                        }));\r\n                        json.anyOf = options;\r\n                        break;\r\n                    }\r\n                    case \"intersection\": {\r\n                        const json = _json;\r\n                        const a = this.process(def.left, {\r\n                            ...params,\r\n                            path: [...params.path, \"allOf\", 0],\r\n                        });\r\n                        const b = this.process(def.right, {\r\n                            ...params,\r\n                            path: [...params.path, \"allOf\", 1],\r\n                        });\r\n                        const isSimpleIntersection = (val) => \"allOf\" in val && Object.keys(val).length === 1;\r\n                        const allOf = [\r\n                            ...(isSimpleIntersection(a) ? a.allOf : [a]),\r\n                            ...(isSimpleIntersection(b) ? b.allOf : [b]),\r\n                        ];\r\n                        json.allOf = allOf;\r\n                        break;\r\n                    }\r\n                    case \"tuple\": {\r\n                        const json = _json;\r\n                        json.type = \"array\";\r\n                        const prefixPath = this.target === \"draft-2020-12\" ? \"prefixItems\" : \"items\";\r\n                        const restPath = this.target === \"draft-2020-12\" ? \"items\" : this.target === \"openapi-3.0\" ? \"items\" : \"additionalItems\";\r\n                        const prefixItems = def.items.map((x, i) => this.process(x, {\r\n                            ...params,\r\n                            path: [...params.path, prefixPath, i],\r\n                        }));\r\n                        const rest = def.rest\r\n                            ? this.process(def.rest, {\r\n                                ...params,\r\n                                path: [...params.path, restPath, ...(this.target === \"openapi-3.0\" ? [def.items.length] : [])],\r\n                            })\r\n                            : null;\r\n                        if (this.target === \"draft-2020-12\") {\r\n                            json.prefixItems = prefixItems;\r\n                            if (rest) {\r\n                                json.items = rest;\r\n                            }\r\n                        }\r\n                        else if (this.target === \"openapi-3.0\") {\r\n                            json.items = {\r\n                                anyOf: prefixItems,\r\n                            };\r\n                            if (rest) {\r\n                                json.items.anyOf.push(rest);\r\n                            }\r\n                            json.minItems = prefixItems.length;\r\n                            if (!rest) {\r\n                                json.maxItems = prefixItems.length;\r\n                            }\r\n                        }\r\n                        else {\r\n                            json.items = prefixItems;\r\n                            if (rest) {\r\n                                json.additionalItems = rest;\r\n                            }\r\n                        }\r\n                        // length\r\n                        const { minimum, maximum } = schema._zod.bag;\r\n                        if (typeof minimum === \"number\")\r\n                            json.minItems = minimum;\r\n                        if (typeof maximum === \"number\")\r\n                            json.maxItems = maximum;\r\n                        break;\r\n                    }\r\n                    case \"record\": {\r\n                        const json = _json;\r\n                        json.type = \"object\";\r\n                        if (this.target === \"draft-7\" || this.target === \"draft-2020-12\") {\r\n                            json.propertyNames = this.process(def.keyType, {\r\n                                ...params,\r\n                                path: [...params.path, \"propertyNames\"],\r\n                            });\r\n                        }\r\n                        json.additionalProperties = this.process(def.valueType, {\r\n                            ...params,\r\n                            path: [...params.path, \"additionalProperties\"],\r\n                        });\r\n                        break;\r\n                    }\r\n                    case \"map\": {\r\n                        if (this.unrepresentable === \"throw\") {\r\n                            throw new Error(\"Map cannot be represented in JSON Schema\");\r\n                        }\r\n                        break;\r\n                    }\r\n                    case \"set\": {\r\n                        if (this.unrepresentable === \"throw\") {\r\n                            throw new Error(\"Set cannot be represented in JSON Schema\");\r\n                        }\r\n                        break;\r\n                    }\r\n                    case \"enum\": {\r\n                        const json = _json;\r\n                        const values = getEnumValues(def.entries);\r\n                        // Number enums can have both string and number values\r\n                        if (values.every((v) => typeof v === \"number\"))\r\n                            json.type = \"number\";\r\n                        if (values.every((v) => typeof v === \"string\"))\r\n                            json.type = \"string\";\r\n                        json.enum = values;\r\n                        break;\r\n                    }\r\n                    case \"literal\": {\r\n                        const json = _json;\r\n                        const vals = [];\r\n                        for (const val of def.values) {\r\n                            if (val === undefined) {\r\n                                if (this.unrepresentable === \"throw\") {\r\n                                    throw new Error(\"Literal `undefined` cannot be represented in JSON Schema\");\r\n                                }\r\n                                else {\r\n                                    // do not add to vals\r\n                                }\r\n                            }\r\n                            else if (typeof val === \"bigint\") {\r\n                                if (this.unrepresentable === \"throw\") {\r\n                                    throw new Error(\"BigInt literals cannot be represented in JSON Schema\");\r\n                                }\r\n                                else {\r\n                                    vals.push(Number(val));\r\n                                }\r\n                            }\r\n                            else {\r\n                                vals.push(val);\r\n                            }\r\n                        }\r\n                        if (vals.length === 0) {\r\n                            // do nothing (an undefined literal was stripped)\r\n                        }\r\n                        else if (vals.length === 1) {\r\n                            const val = vals[0];\r\n                            json.type = val === null ? \"null\" : typeof val;\r\n                            if (this.target === \"draft-4\" || this.target === \"openapi-3.0\") {\r\n                                json.enum = [val];\r\n                            }\r\n                            else {\r\n                                json.const = val;\r\n                            }\r\n                        }\r\n                        else {\r\n                            if (vals.every((v) => typeof v === \"number\"))\r\n                                json.type = \"number\";\r\n                            if (vals.every((v) => typeof v === \"string\"))\r\n                                json.type = \"string\";\r\n                            if (vals.every((v) => typeof v === \"boolean\"))\r\n                                json.type = \"string\";\r\n                            if (vals.every((v) => v === null))\r\n                                json.type = \"null\";\r\n                            json.enum = vals;\r\n                        }\r\n                        break;\r\n                    }\r\n                    case \"file\": {\r\n                        const json = _json;\r\n                        const file = {\r\n                            type: \"string\",\r\n                            format: \"binary\",\r\n                            contentEncoding: \"binary\",\r\n                        };\r\n                        const { minimum, maximum, mime } = schema._zod.bag;\r\n                        if (minimum !== undefined)\r\n                            file.minLength = minimum;\r\n                        if (maximum !== undefined)\r\n                            file.maxLength = maximum;\r\n                        if (mime) {\r\n                            if (mime.length === 1) {\r\n                                file.contentMediaType = mime[0];\r\n                                Object.assign(json, file);\r\n                            }\r\n                            else {\r\n                                json.anyOf = mime.map((m) => {\r\n                                    const mFile = { ...file, contentMediaType: m };\r\n                                    return mFile;\r\n                                });\r\n                            }\r\n                        }\r\n                        else {\r\n                            Object.assign(json, file);\r\n                        }\r\n                        // if (this.unrepresentable === \"throw\") {\r\n                        //   throw new Error(\"File cannot be represented in JSON Schema\");\r\n                        // }\r\n                        break;\r\n                    }\r\n                    case \"transform\": {\r\n                        if (this.unrepresentable === \"throw\") {\r\n                            throw new Error(\"Transforms cannot be represented in JSON Schema\");\r\n                        }\r\n                        break;\r\n                    }\r\n                    case \"nullable\": {\r\n                        const inner = this.process(def.innerType, params);\r\n                        if (this.target === \"openapi-3.0\") {\r\n                            result.ref = def.innerType;\r\n                            _json.nullable = true;\r\n                        }\r\n                        else {\r\n                            _json.anyOf = [inner, { type: \"null\" }];\r\n                        }\r\n                        break;\r\n                    }\r\n                    case \"nonoptional\": {\r\n                        this.process(def.innerType, params);\r\n                        result.ref = def.innerType;\r\n                        break;\r\n                    }\r\n                    case \"success\": {\r\n                        const json = _json;\r\n                        json.type = \"boolean\";\r\n                        break;\r\n                    }\r\n                    case \"default\": {\r\n                        this.process(def.innerType, params);\r\n                        result.ref = def.innerType;\r\n                        _json.default = JSON.parse(JSON.stringify(def.defaultValue));\r\n                        break;\r\n                    }\r\n                    case \"prefault\": {\r\n                        this.process(def.innerType, params);\r\n                        result.ref = def.innerType;\r\n                        if (this.io === \"input\")\r\n                            _json._prefault = JSON.parse(JSON.stringify(def.defaultValue));\r\n                        break;\r\n                    }\r\n                    case \"catch\": {\r\n                        // use conditionals\r\n                        this.process(def.innerType, params);\r\n                        result.ref = def.innerType;\r\n                        let catchValue;\r\n                        try {\r\n                            catchValue = def.catchValue(undefined);\r\n                        }\r\n                        catch {\r\n                            throw new Error(\"Dynamic catch values are not supported in JSON Schema\");\r\n                        }\r\n                        _json.default = catchValue;\r\n                        break;\r\n                    }\r\n                    case \"nan\": {\r\n                        if (this.unrepresentable === \"throw\") {\r\n                            throw new Error(\"NaN cannot be represented in JSON Schema\");\r\n                        }\r\n                        break;\r\n                    }\r\n                    case \"template_literal\": {\r\n                        const json = _json;\r\n                        const pattern = schema._zod.pattern;\r\n                        if (!pattern)\r\n                            throw new Error(\"Pattern not found in template literal\");\r\n                        json.type = \"string\";\r\n                        json.pattern = pattern.source;\r\n                        break;\r\n                    }\r\n                    case \"pipe\": {\r\n                        const innerType = this.io === \"input\" ? (def.in._zod.def.type === \"transform\" ? def.out : def.in) : def.out;\r\n                        this.process(innerType, params);\r\n                        result.ref = innerType;\r\n                        break;\r\n                    }\r\n                    case \"readonly\": {\r\n                        this.process(def.innerType, params);\r\n                        result.ref = def.innerType;\r\n                        _json.readOnly = true;\r\n                        break;\r\n                    }\r\n                    // passthrough types\r\n                    case \"promise\": {\r\n                        this.process(def.innerType, params);\r\n                        result.ref = def.innerType;\r\n                        break;\r\n                    }\r\n                    case \"optional\": {\r\n                        this.process(def.innerType, params);\r\n                        result.ref = def.innerType;\r\n                        break;\r\n                    }\r\n                    case \"lazy\": {\r\n                        const innerType = schema._zod.innerType;\r\n                        this.process(innerType, params);\r\n                        result.ref = innerType;\r\n                        break;\r\n                    }\r\n                    case \"custom\": {\r\n                        if (this.unrepresentable === \"throw\") {\r\n                            throw new Error(\"Custom types cannot be represented in JSON Schema\");\r\n                        }\r\n                        break;\r\n                    }\r\n                    case \"function\": {\r\n                        if (this.unrepresentable === \"throw\") {\r\n                            throw new Error(\"Function types cannot be represented in JSON Schema\");\r\n                        }\r\n                        break;\r\n                    }\r\n                    default: {\r\n                        def;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        // metadata\r\n        const meta = this.metadataRegistry.get(schema);\r\n        if (meta)\r\n            Object.assign(result.schema, meta);\r\n        if (this.io === \"input\" && isTransforming(schema)) {\r\n            // examples/defaults only apply to output type of pipe\r\n            delete result.schema.examples;\r\n            delete result.schema.default;\r\n        }\r\n        // set prefault as default\r\n        if (this.io === \"input\" && result.schema._prefault)\r\n            (_a = result.schema).default ?? (_a.default = result.schema._prefault);\r\n        delete result.schema._prefault;\r\n        // pulling fresh from this.seen in case it was overwritten\r\n        const _result = this.seen.get(schema);\r\n        return _result.schema;\r\n    }\r\n    emit(schema, _params) {\r\n        const params = {\r\n            cycles: _params?.cycles ?? \"ref\",\r\n            reused: _params?.reused ?? \"inline\",\r\n            // unrepresentable: _params?.unrepresentable ?? \"throw\",\r\n            // uri: _params?.uri ?? ((id) => `${id}`),\r\n            external: _params?.external ?? undefined,\r\n        };\r\n        // iterate over seen map;\r\n        const root = this.seen.get(schema);\r\n        if (!root)\r\n            throw new Error(\"Unprocessed schema. This is a bug in Zod.\");\r\n        // initialize result with root schema fields\r\n        // Object.assign(result, seen.cached);\r\n        // returns a ref to the schema\r\n        // defId will be empty if the ref points to an external schema (or #)\r\n        const makeURI = (entry) => {\r\n            // comparing the seen objects because sometimes\r\n            // multiple schemas map to the same seen object.\r\n            // e.g. lazy\r\n            // external is configured\r\n            const defsSegment = this.target === \"draft-2020-12\" ? \"$defs\" : \"definitions\";\r\n            if (params.external) {\r\n                const externalId = params.external.registry.get(entry[0])?.id; // ?? \"__shared\";// `__schema${this.counter++}`;\r\n                // check if schema is in the external registry\r\n                const uriGenerator = params.external.uri ?? ((id) => id);\r\n                if (externalId) {\r\n                    return { ref: uriGenerator(externalId) };\r\n                }\r\n                // otherwise, add to __shared\r\n                const id = entry[1].defId ?? entry[1].schema.id ?? `schema${this.counter++}`;\r\n                entry[1].defId = id; // set defId so it will be reused if needed\r\n                return { defId: id, ref: `${uriGenerator(\"__shared\")}#/${defsSegment}/${id}` };\r\n            }\r\n            if (entry[1] === root) {\r\n                return { ref: \"#\" };\r\n            }\r\n            // self-contained schema\r\n            const uriPrefix = `#`;\r\n            const defUriPrefix = `${uriPrefix}/${defsSegment}/`;\r\n            const defId = entry[1].schema.id ?? `__schema${this.counter++}`;\r\n            return { defId, ref: defUriPrefix + defId };\r\n        };\r\n        // stored cached version in `def` property\r\n        // remove all properties, set $ref\r\n        const extractToDef = (entry) => {\r\n            // if the schema is already a reference, do not extract it\r\n            if (entry[1].schema.$ref) {\r\n                return;\r\n            }\r\n            const seen = entry[1];\r\n            const { ref, defId } = makeURI(entry);\r\n            seen.def = { ...seen.schema };\r\n            // defId won't be set if the schema is a reference to an external schema\r\n            if (defId)\r\n                seen.defId = defId;\r\n            // wipe away all properties except $ref\r\n            const schema = seen.schema;\r\n            for (const key in schema) {\r\n                delete schema[key];\r\n            }\r\n            schema.$ref = ref;\r\n        };\r\n        // throw on cycles\r\n        // break cycles\r\n        if (params.cycles === \"throw\") {\r\n            for (const entry of this.seen.entries()) {\r\n                const seen = entry[1];\r\n                if (seen.cycle) {\r\n                    throw new Error(\"Cycle detected: \" +\r\n                        `#/${seen.cycle?.join(\"/\")}/<root>` +\r\n                        '\\n\\nSet the `cycles` parameter to `\"ref\"` to resolve cyclical schemas with defs.');\r\n                }\r\n            }\r\n        }\r\n        // extract schemas into $defs\r\n        for (const entry of this.seen.entries()) {\r\n            const seen = entry[1];\r\n            // convert root schema to # $ref\r\n            if (schema === entry[0]) {\r\n                extractToDef(entry); // this has special handling for the root schema\r\n                continue;\r\n            }\r\n            // extract schemas that are in the external registry\r\n            if (params.external) {\r\n                const ext = params.external.registry.get(entry[0])?.id;\r\n                if (schema !== entry[0] && ext) {\r\n                    extractToDef(entry);\r\n                    continue;\r\n                }\r\n            }\r\n            // extract schemas with `id` meta\r\n            const id = this.metadataRegistry.get(entry[0])?.id;\r\n            if (id) {\r\n                extractToDef(entry);\r\n                continue;\r\n            }\r\n            // break cycles\r\n            if (seen.cycle) {\r\n                // any\r\n                extractToDef(entry);\r\n                continue;\r\n            }\r\n            // extract reused schemas\r\n            if (seen.count > 1) {\r\n                if (params.reused === \"ref\") {\r\n                    extractToDef(entry);\r\n                    // biome-ignore lint:\r\n                    continue;\r\n                }\r\n            }\r\n        }\r\n        // flatten _refs\r\n        const flattenRef = (zodSchema, params) => {\r\n            const seen = this.seen.get(zodSchema);\r\n            const schema = seen.def ?? seen.schema;\r\n            const _cached = { ...schema };\r\n            // already seen\r\n            if (seen.ref === null) {\r\n                return;\r\n            }\r\n            // flatten ref if defined\r\n            const ref = seen.ref;\r\n            seen.ref = null; // prevent recursion\r\n            if (ref) {\r\n                flattenRef(ref, params);\r\n                // merge referenced schema into current\r\n                const refSchema = this.seen.get(ref).schema;\r\n                if (refSchema.$ref &&\r\n                    (params.target === \"draft-7\" || params.target === \"draft-4\" || params.target === \"openapi-3.0\")) {\r\n                    schema.allOf = schema.allOf ?? [];\r\n                    schema.allOf.push(refSchema);\r\n                }\r\n                else {\r\n                    Object.assign(schema, refSchema);\r\n                    Object.assign(schema, _cached); // prevent overwriting any fields in the original schema\r\n                }\r\n            }\r\n            // execute overrides\r\n            if (!seen.isParent)\r\n                this.override({\r\n                    zodSchema: zodSchema,\r\n                    jsonSchema: schema,\r\n                    path: seen.path ?? [],\r\n                });\r\n        };\r\n        for (const entry of [...this.seen.entries()].reverse()) {\r\n            flattenRef(entry[0], { target: this.target });\r\n        }\r\n        const result = {};\r\n        if (this.target === \"draft-2020-12\") {\r\n            result.$schema = \"https://json-schema.org/draft/2020-12/schema\";\r\n        }\r\n        else if (this.target === \"draft-7\") {\r\n            result.$schema = \"http://json-schema.org/draft-07/schema#\";\r\n        }\r\n        else if (this.target === \"draft-4\") {\r\n            result.$schema = \"http://json-schema.org/draft-04/schema#\";\r\n        }\r\n        else if (this.target === \"openapi-3.0\") {\r\n            // OpenAPI 3.0 schema objects should not include a $schema property\r\n        }\r\n        else {\r\n            // @ts-ignore\r\n            console.warn(`Invalid target: ${this.target}`);\r\n        }\r\n        if (params.external?.uri) {\r\n            const id = params.external.registry.get(schema)?.id;\r\n            if (!id)\r\n                throw new Error(\"Schema is missing an `id` property\");\r\n            result.$id = params.external.uri(id);\r\n        }\r\n        Object.assign(result, root.def);\r\n        // build defs object\r\n        const defs = params.external?.defs ?? {};\r\n        for (const entry of this.seen.entries()) {\r\n            const seen = entry[1];\r\n            if (seen.def && seen.defId) {\r\n                defs[seen.defId] = seen.def;\r\n            }\r\n        }\r\n        // set definitions in result\r\n        if (params.external) {\r\n        }\r\n        else {\r\n            if (Object.keys(defs).length > 0) {\r\n                if (this.target === \"draft-2020-12\") {\r\n                    result.$defs = defs;\r\n                }\r\n                else {\r\n                    result.definitions = defs;\r\n                }\r\n            }\r\n        }\r\n        try {\r\n            // this \"finalizes\" this schema and ensures all cycles are removed\r\n            // each call to .emit() is functionally independent\r\n            // though the seen map is shared\r\n            return JSON.parse(JSON.stringify(result));\r\n        }\r\n        catch (_err) {\r\n            throw new Error(\"Error converting schema to JSON.\");\r\n        }\r\n    }\r\n}\r\nexport function toJSONSchema(input, _params) {\r\n    if (input instanceof $ZodRegistry) {\r\n        const gen = new JSONSchemaGenerator(_params);\r\n        const defs = {};\r\n        for (const entry of input._idmap.entries()) {\r\n            const [_, schema] = entry;\r\n            gen.process(schema);\r\n        }\r\n        const schemas = {};\r\n        const external = {\r\n            registry: input,\r\n            uri: _params?.uri,\r\n            defs,\r\n        };\r\n        for (const entry of input._idmap.entries()) {\r\n            const [key, schema] = entry;\r\n            schemas[key] = gen.emit(schema, {\r\n                ..._params,\r\n                external,\r\n            });\r\n        }\r\n        if (Object.keys(defs).length > 0) {\r\n            const defsSegment = gen.target === \"draft-2020-12\" ? \"$defs\" : \"definitions\";\r\n            schemas.__shared = {\r\n                [defsSegment]: defs,\r\n            };\r\n        }\r\n        return { schemas };\r\n    }\r\n    const gen = new JSONSchemaGenerator(_params);\r\n    gen.process(input);\r\n    return gen.emit(input, _params);\r\n}\r\nfunction isTransforming(_schema, _ctx) {\r\n    const ctx = _ctx ?? { seen: new Set() };\r\n    if (ctx.seen.has(_schema))\r\n        return false;\r\n    ctx.seen.add(_schema);\r\n    const schema = _schema;\r\n    const def = schema._zod.def;\r\n    switch (def.type) {\r\n        case \"string\":\r\n        case \"number\":\r\n        case \"bigint\":\r\n        case \"boolean\":\r\n        case \"date\":\r\n        case \"symbol\":\r\n        case \"undefined\":\r\n        case \"null\":\r\n        case \"any\":\r\n        case \"unknown\":\r\n        case \"never\":\r\n        case \"void\":\r\n        case \"literal\":\r\n        case \"enum\":\r\n        case \"nan\":\r\n        case \"file\":\r\n        case \"template_literal\":\r\n            return false;\r\n        case \"array\": {\r\n            return isTransforming(def.element, ctx);\r\n        }\r\n        case \"object\": {\r\n            for (const key in def.shape) {\r\n                if (isTransforming(def.shape[key], ctx))\r\n                    return true;\r\n            }\r\n            return false;\r\n        }\r\n        case \"union\": {\r\n            for (const option of def.options) {\r\n                if (isTransforming(option, ctx))\r\n                    return true;\r\n            }\r\n            return false;\r\n        }\r\n        case \"intersection\": {\r\n            return isTransforming(def.left, ctx) || isTransforming(def.right, ctx);\r\n        }\r\n        case \"tuple\": {\r\n            for (const item of def.items) {\r\n                if (isTransforming(item, ctx))\r\n                    return true;\r\n            }\r\n            if (def.rest && isTransforming(def.rest, ctx))\r\n                return true;\r\n            return false;\r\n        }\r\n        case \"record\": {\r\n            return isTransforming(def.keyType, ctx) || isTransforming(def.valueType, ctx);\r\n        }\r\n        case \"map\": {\r\n            return isTransforming(def.keyType, ctx) || isTransforming(def.valueType, ctx);\r\n        }\r\n        case \"set\": {\r\n            return isTransforming(def.valueType, ctx);\r\n        }\r\n        // inner types\r\n        case \"promise\":\r\n        case \"optional\":\r\n        case \"nonoptional\":\r\n        case \"nullable\":\r\n        case \"readonly\":\r\n            return isTransforming(def.innerType, ctx);\r\n        case \"lazy\":\r\n            return isTransforming(def.getter(), ctx);\r\n        case \"default\": {\r\n            return isTransforming(def.innerType, ctx);\r\n        }\r\n        case \"prefault\": {\r\n            return isTransforming(def.innerType, ctx);\r\n        }\r\n        case \"custom\": {\r\n            return false;\r\n        }\r\n        case \"transform\": {\r\n            return true;\r\n        }\r\n        case \"pipe\": {\r\n            return isTransforming(def.in, ctx) || isTransforming(def.out, ctx);\r\n        }\r\n        case \"success\": {\r\n            return false;\r\n        }\r\n        case \"catch\": {\r\n            return false;\r\n        }\r\n        case \"function\": {\r\n            return false;\r\n        }\r\n        default:\r\n            def;\r\n    }\r\n    throw new Error(`Unknown schema type: ${def.type}`);\r\n}\r\n", "export {};\r\n", "import * as core from \"../core/index.js\";\r\nimport { util } from \"../core/index.js\";\r\nimport * as checks from \"./checks.js\";\r\nimport * as iso from \"./iso.js\";\r\nimport * as parse from \"./parse.js\";\r\nexport const ZodType = /*@__PURE__*/ core.$constructor(\"ZodType\", (inst, def) => {\r\n    core.$ZodType.init(inst, def);\r\n    inst.def = def;\r\n    inst.type = def.type;\r\n    Object.defineProperty(inst, \"_def\", { value: def });\r\n    // base methods\r\n    inst.check = (...checks) => {\r\n        return inst.clone(util.mergeDefs(def, {\r\n            checks: [\r\n                ...(def.checks ?? []),\r\n                ...checks.map((ch) => typeof ch === \"function\" ? { _zod: { check: ch, def: { check: \"custom\" }, onattach: [] } } : ch),\r\n            ],\r\n        }));\r\n    };\r\n    inst.clone = (def, params) => core.clone(inst, def, params);\r\n    inst.brand = () => inst;\r\n    inst.register = ((reg, meta) => {\r\n        reg.add(inst, meta);\r\n        return inst;\r\n    });\r\n    // parsing\r\n    inst.parse = (data, params) => parse.parse(inst, data, params, { callee: inst.parse });\r\n    inst.safeParse = (data, params) => parse.safeParse(inst, data, params);\r\n    inst.parseAsync = async (data, params) => parse.parseAsync(inst, data, params, { callee: inst.parseAsync });\r\n    inst.safeParseAsync = async (data, params) => parse.safeParseAsync(inst, data, params);\r\n    inst.spa = inst.safeParseAsync;\r\n    // encoding/decoding\r\n    inst.encode = (data, params) => parse.encode(inst, data, params);\r\n    inst.decode = (data, params) => parse.decode(inst, data, params);\r\n    inst.encodeAsync = async (data, params) => parse.encodeAsync(inst, data, params);\r\n    inst.decodeAsync = async (data, params) => parse.decodeAsync(inst, data, params);\r\n    inst.safeEncode = (data, params) => parse.safeEncode(inst, data, params);\r\n    inst.safeDecode = (data, params) => parse.safeDecode(inst, data, params);\r\n    inst.safeEncodeAsync = async (data, params) => parse.safeEncodeAsync(inst, data, params);\r\n    inst.safeDecodeAsync = async (data, params) => parse.safeDecodeAsync(inst, data, params);\r\n    // refinements\r\n    inst.refine = (check, params) => inst.check(refine(check, params));\r\n    inst.superRefine = (refinement) => inst.check(superRefine(refinement));\r\n    inst.overwrite = (fn) => inst.check(checks.overwrite(fn));\r\n    // wrappers\r\n    inst.optional = () => optional(inst);\r\n    inst.nullable = () => nullable(inst);\r\n    inst.nullish = () => optional(nullable(inst));\r\n    inst.nonoptional = (params) => nonoptional(inst, params);\r\n    inst.array = () => array(inst);\r\n    inst.or = (arg) => union([inst, arg]);\r\n    inst.and = (arg) => intersection(inst, arg);\r\n    inst.transform = (tx) => pipe(inst, transform(tx));\r\n    inst.default = (def) => _default(inst, def);\r\n    inst.prefault = (def) => prefault(inst, def);\r\n    // inst.coalesce = (def, params) => coalesce(inst, def, params);\r\n    inst.catch = (params) => _catch(inst, params);\r\n    inst.pipe = (target) => pipe(inst, target);\r\n    inst.readonly = () => readonly(inst);\r\n    // meta\r\n    inst.describe = (description) => {\r\n        const cl = inst.clone();\r\n        core.globalRegistry.add(cl, { description });\r\n        return cl;\r\n    };\r\n    Object.defineProperty(inst, \"description\", {\r\n        get() {\r\n            return core.globalRegistry.get(inst)?.description;\r\n        },\r\n        configurable: true,\r\n    });\r\n    inst.meta = (...args) => {\r\n        if (args.length === 0) {\r\n            return core.globalRegistry.get(inst);\r\n        }\r\n        const cl = inst.clone();\r\n        core.globalRegistry.add(cl, args[0]);\r\n        return cl;\r\n    };\r\n    // helpers\r\n    inst.isOptional = () => inst.safeParse(undefined).success;\r\n    inst.isNullable = () => inst.safeParse(null).success;\r\n    return inst;\r\n});\r\n/** @internal */\r\nexport const _ZodString = /*@__PURE__*/ core.$constructor(\"_ZodString\", (inst, def) => {\r\n    core.$ZodString.init(inst, def);\r\n    ZodType.init(inst, def);\r\n    const bag = inst._zod.bag;\r\n    inst.format = bag.format ?? null;\r\n    inst.minLength = bag.minimum ?? null;\r\n    inst.maxLength = bag.maximum ?? null;\r\n    // validations\r\n    inst.regex = (...args) => inst.check(checks.regex(...args));\r\n    inst.includes = (...args) => inst.check(checks.includes(...args));\r\n    inst.startsWith = (...args) => inst.check(checks.startsWith(...args));\r\n    inst.endsWith = (...args) => inst.check(checks.endsWith(...args));\r\n    inst.min = (...args) => inst.check(checks.minLength(...args));\r\n    inst.max = (...args) => inst.check(checks.maxLength(...args));\r\n    inst.length = (...args) => inst.check(checks.length(...args));\r\n    inst.nonempty = (...args) => inst.check(checks.minLength(1, ...args));\r\n    inst.lowercase = (params) => inst.check(checks.lowercase(params));\r\n    inst.uppercase = (params) => inst.check(checks.uppercase(params));\r\n    // transforms\r\n    inst.trim = () => inst.check(checks.trim());\r\n    inst.normalize = (...args) => inst.check(checks.normalize(...args));\r\n    inst.toLowerCase = () => inst.check(checks.toLowerCase());\r\n    inst.toUpperCase = () => inst.check(checks.toUpperCase());\r\n});\r\nexport const ZodString = /*@__PURE__*/ core.$constructor(\"ZodString\", (inst, def) => {\r\n    core.$ZodString.init(inst, def);\r\n    _ZodString.init(inst, def);\r\n    inst.email = (params) => inst.check(core._email(ZodEmail, params));\r\n    inst.url = (params) => inst.check(core._url(ZodURL, params));\r\n    inst.jwt = (params) => inst.check(core._jwt(ZodJWT, params));\r\n    inst.emoji = (params) => inst.check(core._emoji(ZodEmoji, params));\r\n    inst.guid = (params) => inst.check(core._guid(ZodGUID, params));\r\n    inst.uuid = (params) => inst.check(core._uuid(ZodUUID, params));\r\n    inst.uuidv4 = (params) => inst.check(core._uuidv4(ZodUUID, params));\r\n    inst.uuidv6 = (params) => inst.check(core._uuidv6(ZodUUID, params));\r\n    inst.uuidv7 = (params) => inst.check(core._uuidv7(ZodUUID, params));\r\n    inst.nanoid = (params) => inst.check(core._nanoid(ZodNanoID, params));\r\n    inst.guid = (params) => inst.check(core._guid(ZodGUID, params));\r\n    inst.cuid = (params) => inst.check(core._cuid(ZodCUID, params));\r\n    inst.cuid2 = (params) => inst.check(core._cuid2(ZodCUID2, params));\r\n    inst.ulid = (params) => inst.check(core._ulid(ZodULID, params));\r\n    inst.base64 = (params) => inst.check(core._base64(ZodBase64, params));\r\n    inst.base64url = (params) => inst.check(core._base64url(ZodBase64URL, params));\r\n    inst.xid = (params) => inst.check(core._xid(ZodXID, params));\r\n    inst.ksuid = (params) => inst.check(core._ksuid(ZodKSUID, params));\r\n    inst.ipv4 = (params) => inst.check(core._ipv4(ZodIPv4, params));\r\n    inst.ipv6 = (params) => inst.check(core._ipv6(ZodIPv6, params));\r\n    inst.cidrv4 = (params) => inst.check(core._cidrv4(ZodCIDRv4, params));\r\n    inst.cidrv6 = (params) => inst.check(core._cidrv6(ZodCIDRv6, params));\r\n    inst.e164 = (params) => inst.check(core._e164(ZodE164, params));\r\n    // iso\r\n    inst.datetime = (params) => inst.check(iso.datetime(params));\r\n    inst.date = (params) => inst.check(iso.date(params));\r\n    inst.time = (params) => inst.check(iso.time(params));\r\n    inst.duration = (params) => inst.check(iso.duration(params));\r\n});\r\nexport function string(params) {\r\n    return core._string(ZodString, params);\r\n}\r\nexport const ZodStringFormat = /*@__PURE__*/ core.$constructor(\"ZodStringFormat\", (inst, def) => {\r\n    core.$ZodStringFormat.init(inst, def);\r\n    _ZodString.init(inst, def);\r\n});\r\nexport const ZodEmail = /*@__PURE__*/ core.$constructor(\"ZodEmail\", (inst, def) => {\r\n    // ZodStringFormat.init(inst, def);\r\n    core.$ZodEmail.init(inst, def);\r\n    ZodStringFormat.init(inst, def);\r\n});\r\nexport function email(params) {\r\n    return core._email(ZodEmail, params);\r\n}\r\nexport const ZodGUID = /*@__PURE__*/ core.$constructor(\"ZodGUID\", (inst, def) => {\r\n    // ZodStringFormat.init(inst, def);\r\n    core.$ZodGUID.init(inst, def);\r\n    ZodStringFormat.init(inst, def);\r\n});\r\nexport function guid(params) {\r\n    return core._guid(ZodGUID, params);\r\n}\r\nexport const ZodUUID = /*@__PURE__*/ core.$constructor(\"ZodUUID\", (inst, def) => {\r\n    // ZodStringFormat.init(inst, def);\r\n    core.$ZodUUID.init(inst, def);\r\n    ZodStringFormat.init(inst, def);\r\n});\r\nexport function uuid(params) {\r\n    return core._uuid(ZodUUID, params);\r\n}\r\nexport function uuidv4(params) {\r\n    return core._uuidv4(ZodUUID, params);\r\n}\r\n// ZodUUIDv6\r\nexport function uuidv6(params) {\r\n    return core._uuidv6(ZodUUID, params);\r\n}\r\n// ZodUUIDv7\r\nexport function uuidv7(params) {\r\n    return core._uuidv7(ZodUUID, params);\r\n}\r\nexport const ZodURL = /*@__PURE__*/ core.$constructor(\"ZodURL\", (inst, def) => {\r\n    // ZodStringFormat.init(inst, def);\r\n    core.$ZodURL.init(inst, def);\r\n    ZodStringFormat.init(inst, def);\r\n});\r\nexport function url(params) {\r\n    return core._url(ZodURL, params);\r\n}\r\nexport function httpUrl(params) {\r\n    return core._url(ZodURL, {\r\n        protocol: /^https?$/,\r\n        hostname: core.regexes.domain,\r\n        ...util.normalizeParams(params),\r\n    });\r\n}\r\nexport const ZodEmoji = /*@__PURE__*/ core.$constructor(\"ZodEmoji\", (inst, def) => {\r\n    // ZodStringFormat.init(inst, def);\r\n    core.$ZodEmoji.init(inst, def);\r\n    ZodStringFormat.init(inst, def);\r\n});\r\nexport function emoji(params) {\r\n    return core._emoji(ZodEmoji, params);\r\n}\r\nexport const ZodNanoID = /*@__PURE__*/ core.$constructor(\"ZodNanoID\", (inst, def) => {\r\n    // ZodStringFormat.init(inst, def);\r\n    core.$ZodNanoID.init(inst, def);\r\n    ZodStringFormat.init(inst, def);\r\n});\r\nexport function nanoid(params) {\r\n    return core._nanoid(ZodNanoID, params);\r\n}\r\nexport const ZodCUID = /*@__PURE__*/ core.$constructor(\"ZodCUID\", (inst, def) => {\r\n    // ZodStringFormat.init(inst, def);\r\n    core.$ZodCUID.init(inst, def);\r\n    ZodStringFormat.init(inst, def);\r\n});\r\nexport function cuid(params) {\r\n    return core._cuid(ZodCUID, params);\r\n}\r\nexport const ZodCUID2 = /*@__PURE__*/ core.$constructor(\"ZodCUID2\", (inst, def) => {\r\n    // ZodStringFormat.init(inst, def);\r\n    core.$ZodCUID2.init(inst, def);\r\n    ZodStringFormat.init(inst, def);\r\n});\r\nexport function cuid2(params) {\r\n    return core._cuid2(ZodCUID2, params);\r\n}\r\nexport const ZodULID = /*@__PURE__*/ core.$constructor(\"ZodULID\", (inst, def) => {\r\n    // ZodStringFormat.init(inst, def);\r\n    core.$ZodULID.init(inst, def);\r\n    ZodStringFormat.init(inst, def);\r\n});\r\nexport function ulid(params) {\r\n    return core._ulid(ZodULID, params);\r\n}\r\nexport const ZodXID = /*@__PURE__*/ core.$constructor(\"ZodXID\", (inst, def) => {\r\n    // ZodStringFormat.init(inst, def);\r\n    core.$ZodXID.init(inst, def);\r\n    ZodStringFormat.init(inst, def);\r\n});\r\nexport function xid(params) {\r\n    return core._xid(ZodXID, params);\r\n}\r\nexport const ZodKSUID = /*@__PURE__*/ core.$constructor(\"ZodKSUID\", (inst, def) => {\r\n    // ZodStringFormat.init(inst, def);\r\n    core.$ZodKSUID.init(inst, def);\r\n    ZodStringFormat.init(inst, def);\r\n});\r\nexport function ksuid(params) {\r\n    return core._ksuid(ZodKSUID, params);\r\n}\r\nexport const ZodIPv4 = /*@__PURE__*/ core.$constructor(\"ZodIPv4\", (inst, def) => {\r\n    // ZodStringFormat.init(inst, def);\r\n    core.$ZodIPv4.init(inst, def);\r\n    ZodStringFormat.init(inst, def);\r\n});\r\nexport function ipv4(params) {\r\n    return core._ipv4(ZodIPv4, params);\r\n}\r\nexport const ZodIPv6 = /*@__PURE__*/ core.$constructor(\"ZodIPv6\", (inst, def) => {\r\n    // ZodStringFormat.init(inst, def);\r\n    core.$ZodIPv6.init(inst, def);\r\n    ZodStringFormat.init(inst, def);\r\n});\r\nexport function ipv6(params) {\r\n    return core._ipv6(ZodIPv6, params);\r\n}\r\nexport const ZodCIDRv4 = /*@__PURE__*/ core.$constructor(\"ZodCIDRv4\", (inst, def) => {\r\n    core.$ZodCIDRv4.init(inst, def);\r\n    ZodStringFormat.init(inst, def);\r\n});\r\nexport function cidrv4(params) {\r\n    return core._cidrv4(ZodCIDRv4, params);\r\n}\r\nexport const ZodCIDRv6 = /*@__PURE__*/ core.$constructor(\"ZodCIDRv6\", (inst, def) => {\r\n    core.$ZodCIDRv6.init(inst, def);\r\n    ZodStringFormat.init(inst, def);\r\n});\r\nexport function cidrv6(params) {\r\n    return core._cidrv6(ZodCIDRv6, params);\r\n}\r\nexport const ZodBase64 = /*@__PURE__*/ core.$constructor(\"ZodBase64\", (inst, def) => {\r\n    // ZodStringFormat.init(inst, def);\r\n    core.$ZodBase64.init(inst, def);\r\n    ZodStringFormat.init(inst, def);\r\n});\r\nexport function base64(params) {\r\n    return core._base64(ZodBase64, params);\r\n}\r\nexport const ZodBase64URL = /*@__PURE__*/ core.$constructor(\"ZodBase64URL\", (inst, def) => {\r\n    // ZodStringFormat.init(inst, def);\r\n    core.$ZodBase64URL.init(inst, def);\r\n    ZodStringFormat.init(inst, def);\r\n});\r\nexport function base64url(params) {\r\n    return core._base64url(ZodBase64URL, params);\r\n}\r\nexport const ZodE164 = /*@__PURE__*/ core.$constructor(\"ZodE164\", (inst, def) => {\r\n    // ZodStringFormat.init(inst, def);\r\n    core.$ZodE164.init(inst, def);\r\n    ZodStringFormat.init(inst, def);\r\n});\r\nexport function e164(params) {\r\n    return core._e164(ZodE164, params);\r\n}\r\nexport const ZodJWT = /*@__PURE__*/ core.$constructor(\"ZodJWT\", (inst, def) => {\r\n    // ZodStringFormat.init(inst, def);\r\n    core.$ZodJWT.init(inst, def);\r\n    ZodStringFormat.init(inst, def);\r\n});\r\nexport function jwt(params) {\r\n    return core._jwt(ZodJWT, params);\r\n}\r\nexport const ZodCustomStringFormat = /*@__PURE__*/ core.$constructor(\"ZodCustomStringFormat\", (inst, def) => {\r\n    // ZodStringFormat.init(inst, def);\r\n    core.$ZodCustomStringFormat.init(inst, def);\r\n    ZodStringFormat.init(inst, def);\r\n});\r\nexport function stringFormat(format, fnOrRegex, _params = {}) {\r\n    return core._stringFormat(ZodCustomStringFormat, format, fnOrRegex, _params);\r\n}\r\nexport function hostname(_params) {\r\n    return core._stringFormat(ZodCustomStringFormat, \"hostname\", core.regexes.hostname, _params);\r\n}\r\nexport function hex(_params) {\r\n    return core._stringFormat(ZodCustomStringFormat, \"hex\", core.regexes.hex, _params);\r\n}\r\nexport function hash(alg, params) {\r\n    const enc = params?.enc ?? \"hex\";\r\n    const format = `${alg}_${enc}`;\r\n    const regex = core.regexes[format];\r\n    if (!regex)\r\n        throw new Error(`Unrecognized hash format: ${format}`);\r\n    return core._stringFormat(ZodCustomStringFormat, format, regex, params);\r\n}\r\nexport const ZodNumber = /*@__PURE__*/ core.$constructor(\"ZodNumber\", (inst, def) => {\r\n    core.$ZodNumber.init(inst, def);\r\n    ZodType.init(inst, def);\r\n    inst.gt = (value, params) => inst.check(checks.gt(value, params));\r\n    inst.gte = (value, params) => inst.check(checks.gte(value, params));\r\n    inst.min = (value, params) => inst.check(checks.gte(value, params));\r\n    inst.lt = (value, params) => inst.check(checks.lt(value, params));\r\n    inst.lte = (value, params) => inst.check(checks.lte(value, params));\r\n    inst.max = (value, params) => inst.check(checks.lte(value, params));\r\n    inst.int = (params) => inst.check(int(params));\r\n    inst.safe = (params) => inst.check(int(params));\r\n    inst.positive = (params) => inst.check(checks.gt(0, params));\r\n    inst.nonnegative = (params) => inst.check(checks.gte(0, params));\r\n    inst.negative = (params) => inst.check(checks.lt(0, params));\r\n    inst.nonpositive = (params) => inst.check(checks.lte(0, params));\r\n    inst.multipleOf = (value, params) => inst.check(checks.multipleOf(value, params));\r\n    inst.step = (value, params) => inst.check(checks.multipleOf(value, params));\r\n    // inst.finite = (params) => inst.check(core.finite(params));\r\n    inst.finite = () => inst;\r\n    const bag = inst._zod.bag;\r\n    inst.minValue =\r\n        Math.max(bag.minimum ?? Number.NEGATIVE_INFINITY, bag.exclusiveMinimum ?? Number.NEGATIVE_INFINITY) ?? null;\r\n    inst.maxValue =\r\n        Math.min(bag.maximum ?? Number.POSITIVE_INFINITY, bag.exclusiveMaximum ?? Number.POSITIVE_INFINITY) ?? null;\r\n    inst.isInt = (bag.format ?? \"\").includes(\"int\") || Number.isSafeInteger(bag.multipleOf ?? 0.5);\r\n    inst.isFinite = true;\r\n    inst.format = bag.format ?? null;\r\n});\r\nexport function number(params) {\r\n    return core._number(ZodNumber, params);\r\n}\r\nexport const ZodNumberFormat = /*@__PURE__*/ core.$constructor(\"ZodNumberFormat\", (inst, def) => {\r\n    core.$ZodNumberFormat.init(inst, def);\r\n    ZodNumber.init(inst, def);\r\n});\r\nexport function int(params) {\r\n    return core._int(ZodNumberFormat, params);\r\n}\r\nexport function float32(params) {\r\n    return core._float32(ZodNumberFormat, params);\r\n}\r\nexport function float64(params) {\r\n    return core._float64(ZodNumberFormat, params);\r\n}\r\nexport function int32(params) {\r\n    return core._int32(ZodNumberFormat, params);\r\n}\r\nexport function uint32(params) {\r\n    return core._uint32(ZodNumberFormat, params);\r\n}\r\nexport const ZodBoolean = /*@__PURE__*/ core.$constructor(\"ZodBoolean\", (inst, def) => {\r\n    core.$ZodBoolean.init(inst, def);\r\n    ZodType.init(inst, def);\r\n});\r\nexport function boolean(params) {\r\n    return core._boolean(ZodBoolean, params);\r\n}\r\nexport const ZodBigInt = /*@__PURE__*/ core.$constructor(\"ZodBigInt\", (inst, def) => {\r\n    core.$ZodBigInt.init(inst, def);\r\n    ZodType.init(inst, def);\r\n    inst.gte = (value, params) => inst.check(checks.gte(value, params));\r\n    inst.min = (value, params) => inst.check(checks.gte(value, params));\r\n    inst.gt = (value, params) => inst.check(checks.gt(value, params));\r\n    inst.gte = (value, params) => inst.check(checks.gte(value, params));\r\n    inst.min = (value, params) => inst.check(checks.gte(value, params));\r\n    inst.lt = (value, params) => inst.check(checks.lt(value, params));\r\n    inst.lte = (value, params) => inst.check(checks.lte(value, params));\r\n    inst.max = (value, params) => inst.check(checks.lte(value, params));\r\n    inst.positive = (params) => inst.check(checks.gt(BigInt(0), params));\r\n    inst.negative = (params) => inst.check(checks.lt(BigInt(0), params));\r\n    inst.nonpositive = (params) => inst.check(checks.lte(BigInt(0), params));\r\n    inst.nonnegative = (params) => inst.check(checks.gte(BigInt(0), params));\r\n    inst.multipleOf = (value, params) => inst.check(checks.multipleOf(value, params));\r\n    const bag = inst._zod.bag;\r\n    inst.minValue = bag.minimum ?? null;\r\n    inst.maxValue = bag.maximum ?? null;\r\n    inst.format = bag.format ?? null;\r\n});\r\nexport function bigint(params) {\r\n    return core._bigint(ZodBigInt, params);\r\n}\r\nexport const ZodBigIntFormat = /*@__PURE__*/ core.$constructor(\"ZodBigIntFormat\", (inst, def) => {\r\n    core.$ZodBigIntFormat.init(inst, def);\r\n    ZodBigInt.init(inst, def);\r\n});\r\n// int64\r\nexport function int64(params) {\r\n    return core._int64(ZodBigIntFormat, params);\r\n}\r\n// uint64\r\nexport function uint64(params) {\r\n    return core._uint64(ZodBigIntFormat, params);\r\n}\r\nexport const ZodSymbol = /*@__PURE__*/ core.$constructor(\"ZodSymbol\", (inst, def) => {\r\n    core.$ZodSymbol.init(inst, def);\r\n    ZodType.init(inst, def);\r\n});\r\nexport function symbol(params) {\r\n    return core._symbol(ZodSymbol, params);\r\n}\r\nexport const ZodUndefined = /*@__PURE__*/ core.$constructor(\"ZodUndefined\", (inst, def) => {\r\n    core.$ZodUndefined.init(inst, def);\r\n    ZodType.init(inst, def);\r\n});\r\nfunction _undefined(params) {\r\n    return core._undefined(ZodUndefined, params);\r\n}\r\nexport { _undefined as undefined };\r\nexport const ZodNull = /*@__PURE__*/ core.$constructor(\"ZodNull\", (inst, def) => {\r\n    core.$ZodNull.init(inst, def);\r\n    ZodType.init(inst, def);\r\n});\r\nfunction _null(params) {\r\n    return core._null(ZodNull, params);\r\n}\r\nexport { _null as null };\r\nexport const ZodAny = /*@__PURE__*/ core.$constructor(\"ZodAny\", (inst, def) => {\r\n    core.$ZodAny.init(inst, def);\r\n    ZodType.init(inst, def);\r\n});\r\nexport function any() {\r\n    return core._any(ZodAny);\r\n}\r\nexport const ZodUnknown = /*@__PURE__*/ core.$constructor(\"ZodUnknown\", (inst, def) => {\r\n    core.$ZodUnknown.init(inst, def);\r\n    ZodType.init(inst, def);\r\n});\r\nexport function unknown() {\r\n    return core._unknown(ZodUnknown);\r\n}\r\nexport const ZodNever = /*@__PURE__*/ core.$constructor(\"ZodNever\", (inst, def) => {\r\n    core.$ZodNever.init(inst, def);\r\n    ZodType.init(inst, def);\r\n});\r\nexport function never(params) {\r\n    return core._never(ZodNever, params);\r\n}\r\nexport const ZodVoid = /*@__PURE__*/ core.$constructor(\"ZodVoid\", (inst, def) => {\r\n    core.$ZodVoid.init(inst, def);\r\n    ZodType.init(inst, def);\r\n});\r\nfunction _void(params) {\r\n    return core._void(ZodVoid, params);\r\n}\r\nexport { _void as void };\r\nexport const ZodDate = /*@__PURE__*/ core.$constructor(\"ZodDate\", (inst, def) => {\r\n    core.$ZodDate.init(inst, def);\r\n    ZodType.init(inst, def);\r\n    inst.min = (value, params) => inst.check(checks.gte(value, params));\r\n    inst.max = (value, params) => inst.check(checks.lte(value, params));\r\n    const c = inst._zod.bag;\r\n    inst.minDate = c.minimum ? new Date(c.minimum) : null;\r\n    inst.maxDate = c.maximum ? new Date(c.maximum) : null;\r\n});\r\nexport function date(params) {\r\n    return core._date(ZodDate, params);\r\n}\r\nexport const ZodArray = /*@__PURE__*/ core.$constructor(\"ZodArray\", (inst, def) => {\r\n    core.$ZodArray.init(inst, def);\r\n    ZodType.init(inst, def);\r\n    inst.element = def.element;\r\n    inst.min = (minLength, params) => inst.check(checks.minLength(minLength, params));\r\n    inst.nonempty = (params) => inst.check(checks.minLength(1, params));\r\n    inst.max = (maxLength, params) => inst.check(checks.maxLength(maxLength, params));\r\n    inst.length = (len, params) => inst.check(checks.length(len, params));\r\n    inst.unwrap = () => inst.element;\r\n});\r\nexport function array(element, params) {\r\n    return core._array(ZodArray, element, params);\r\n}\r\n// .keyof\r\nexport function keyof(schema) {\r\n    const shape = schema._zod.def.shape;\r\n    return _enum(Object.keys(shape));\r\n}\r\nexport const ZodObject = /*@__PURE__*/ core.$constructor(\"ZodObject\", (inst, def) => {\r\n    core.$ZodObjectJIT.init(inst, def);\r\n    ZodType.init(inst, def);\r\n    util.defineLazy(inst, \"shape\", () => {\r\n        return def.shape;\r\n    });\r\n    inst.keyof = () => _enum(Object.keys(inst._zod.def.shape));\r\n    inst.catchall = (catchall) => inst.clone({ ...inst._zod.def, catchall: catchall });\r\n    inst.passthrough = () => inst.clone({ ...inst._zod.def, catchall: unknown() });\r\n    inst.loose = () => inst.clone({ ...inst._zod.def, catchall: unknown() });\r\n    inst.strict = () => inst.clone({ ...inst._zod.def, catchall: never() });\r\n    inst.strip = () => inst.clone({ ...inst._zod.def, catchall: undefined });\r\n    inst.extend = (incoming) => {\r\n        return util.extend(inst, incoming);\r\n    };\r\n    inst.safeExtend = (incoming) => {\r\n        return util.safeExtend(inst, incoming);\r\n    };\r\n    inst.merge = (other) => util.merge(inst, other);\r\n    inst.pick = (mask) => util.pick(inst, mask);\r\n    inst.omit = (mask) => util.omit(inst, mask);\r\n    inst.partial = (...args) => util.partial(ZodOptional, inst, args[0]);\r\n    inst.required = (...args) => util.required(ZodNonOptional, inst, args[0]);\r\n});\r\nexport function object(shape, params) {\r\n    const def = {\r\n        type: \"object\",\r\n        shape: shape ?? {},\r\n        ...util.normalizeParams(params),\r\n    };\r\n    return new ZodObject(def);\r\n}\r\n// strictObject\r\nexport function strictObject(shape, params) {\r\n    return new ZodObject({\r\n        type: \"object\",\r\n        shape,\r\n        catchall: never(),\r\n        ...util.normalizeParams(params),\r\n    });\r\n}\r\n// looseObject\r\nexport function looseObject(shape, params) {\r\n    return new ZodObject({\r\n        type: \"object\",\r\n        shape,\r\n        catchall: unknown(),\r\n        ...util.normalizeParams(params),\r\n    });\r\n}\r\nexport const ZodUnion = /*@__PURE__*/ core.$constructor(\"ZodUnion\", (inst, def) => {\r\n    core.$ZodUnion.init(inst, def);\r\n    ZodType.init(inst, def);\r\n    inst.options = def.options;\r\n});\r\nexport function union(options, params) {\r\n    return new ZodUnion({\r\n        type: \"union\",\r\n        options: options,\r\n        ...util.normalizeParams(params),\r\n    });\r\n}\r\nexport const ZodDiscriminatedUnion = /*@__PURE__*/ core.$constructor(\"ZodDiscriminatedUnion\", (inst, def) => {\r\n    ZodUnion.init(inst, def);\r\n    core.$ZodDiscriminatedUnion.init(inst, def);\r\n});\r\nexport function discriminatedUnion(discriminator, options, params) {\r\n    // const [options, params] = args;\r\n    return new ZodDiscriminatedUnion({\r\n        type: \"union\",\r\n        options,\r\n        discriminator,\r\n        ...util.normalizeParams(params),\r\n    });\r\n}\r\nexport const ZodIntersection = /*@__PURE__*/ core.$constructor(\"ZodIntersection\", (inst, def) => {\r\n    core.$ZodIntersection.init(inst, def);\r\n    ZodType.init(inst, def);\r\n});\r\nexport function intersection(left, right) {\r\n    return new ZodIntersection({\r\n        type: \"intersection\",\r\n        left: left,\r\n        right: right,\r\n    });\r\n}\r\nexport const ZodTuple = /*@__PURE__*/ core.$constructor(\"ZodTuple\", (inst, def) => {\r\n    core.$ZodTuple.init(inst, def);\r\n    ZodType.init(inst, def);\r\n    inst.rest = (rest) => inst.clone({\r\n        ...inst._zod.def,\r\n        rest: rest,\r\n    });\r\n});\r\nexport function tuple(items, _paramsOrRest, _params) {\r\n    const hasRest = _paramsOrRest instanceof core.$ZodType;\r\n    const params = hasRest ? _params : _paramsOrRest;\r\n    const rest = hasRest ? _paramsOrRest : null;\r\n    return new ZodTuple({\r\n        type: \"tuple\",\r\n        items: items,\r\n        rest,\r\n        ...util.normalizeParams(params),\r\n    });\r\n}\r\nexport const ZodRecord = /*@__PURE__*/ core.$constructor(\"ZodRecord\", (inst, def) => {\r\n    core.$ZodRecord.init(inst, def);\r\n    ZodType.init(inst, def);\r\n    inst.keyType = def.keyType;\r\n    inst.valueType = def.valueType;\r\n});\r\nexport function record(keyType, valueType, params) {\r\n    return new ZodRecord({\r\n        type: \"record\",\r\n        keyType,\r\n        valueType: valueType,\r\n        ...util.normalizeParams(params),\r\n    });\r\n}\r\n// type alksjf = core.output<core.$ZodRecordKey>;\r\nexport function partialRecord(keyType, valueType, params) {\r\n    const k = core.clone(keyType);\r\n    k._zod.values = undefined;\r\n    return new ZodRecord({\r\n        type: \"record\",\r\n        keyType: k,\r\n        valueType: valueType,\r\n        ...util.normalizeParams(params),\r\n    });\r\n}\r\nexport const ZodMap = /*@__PURE__*/ core.$constructor(\"ZodMap\", (inst, def) => {\r\n    core.$ZodMap.init(inst, def);\r\n    ZodType.init(inst, def);\r\n    inst.keyType = def.keyType;\r\n    inst.valueType = def.valueType;\r\n});\r\nexport function map(keyType, valueType, params) {\r\n    return new ZodMap({\r\n        type: \"map\",\r\n        keyType: keyType,\r\n        valueType: valueType,\r\n        ...util.normalizeParams(params),\r\n    });\r\n}\r\nexport const ZodSet = /*@__PURE__*/ core.$constructor(\"ZodSet\", (inst, def) => {\r\n    core.$ZodSet.init(inst, def);\r\n    ZodType.init(inst, def);\r\n    inst.min = (...args) => inst.check(core._minSize(...args));\r\n    inst.nonempty = (params) => inst.check(core._minSize(1, params));\r\n    inst.max = (...args) => inst.check(core._maxSize(...args));\r\n    inst.size = (...args) => inst.check(core._size(...args));\r\n});\r\nexport function set(valueType, params) {\r\n    return new ZodSet({\r\n        type: \"set\",\r\n        valueType: valueType,\r\n        ...util.normalizeParams(params),\r\n    });\r\n}\r\nexport const ZodEnum = /*@__PURE__*/ core.$constructor(\"ZodEnum\", (inst, def) => {\r\n    core.$ZodEnum.init(inst, def);\r\n    ZodType.init(inst, def);\r\n    inst.enum = def.entries;\r\n    inst.options = Object.values(def.entries);\r\n    const keys = new Set(Object.keys(def.entries));\r\n    inst.extract = (values, params) => {\r\n        const newEntries = {};\r\n        for (const value of values) {\r\n            if (keys.has(value)) {\r\n                newEntries[value] = def.entries[value];\r\n            }\r\n            else\r\n                throw new Error(`Key ${value} not found in enum`);\r\n        }\r\n        return new ZodEnum({\r\n            ...def,\r\n            checks: [],\r\n            ...util.normalizeParams(params),\r\n            entries: newEntries,\r\n        });\r\n    };\r\n    inst.exclude = (values, params) => {\r\n        const newEntries = { ...def.entries };\r\n        for (const value of values) {\r\n            if (keys.has(value)) {\r\n                delete newEntries[value];\r\n            }\r\n            else\r\n                throw new Error(`Key ${value} not found in enum`);\r\n        }\r\n        return new ZodEnum({\r\n            ...def,\r\n            checks: [],\r\n            ...util.normalizeParams(params),\r\n            entries: newEntries,\r\n        });\r\n    };\r\n});\r\nfunction _enum(values, params) {\r\n    const entries = Array.isArray(values) ? Object.fromEntries(values.map((v) => [v, v])) : values;\r\n    return new ZodEnum({\r\n        type: \"enum\",\r\n        entries,\r\n        ...util.normalizeParams(params),\r\n    });\r\n}\r\nexport { _enum as enum };\r\n/** @deprecated This API has been merged into `z.enum()`. Use `z.enum()` instead.\r\n *\r\n * ```ts\r\n * enum Colors { red, green, blue }\r\n * z.enum(Colors);\r\n * ```\r\n */\r\nexport function nativeEnum(entries, params) {\r\n    return new ZodEnum({\r\n        type: \"enum\",\r\n        entries,\r\n        ...util.normalizeParams(params),\r\n    });\r\n}\r\nexport const ZodLiteral = /*@__PURE__*/ core.$constructor(\"ZodLiteral\", (inst, def) => {\r\n    core.$ZodLiteral.init(inst, def);\r\n    ZodType.init(inst, def);\r\n    inst.values = new Set(def.values);\r\n    Object.defineProperty(inst, \"value\", {\r\n        get() {\r\n            if (def.values.length > 1) {\r\n                throw new Error(\"This schema contains multiple valid literal values. Use `.values` instead.\");\r\n            }\r\n            return def.values[0];\r\n        },\r\n    });\r\n});\r\nexport function literal(value, params) {\r\n    return new ZodLiteral({\r\n        type: \"literal\",\r\n        values: Array.isArray(value) ? value : [value],\r\n        ...util.normalizeParams(params),\r\n    });\r\n}\r\nexport const ZodFile = /*@__PURE__*/ core.$constructor(\"ZodFile\", (inst, def) => {\r\n    core.$ZodFile.init(inst, def);\r\n    ZodType.init(inst, def);\r\n    inst.min = (size, params) => inst.check(core._minSize(size, params));\r\n    inst.max = (size, params) => inst.check(core._maxSize(size, params));\r\n    inst.mime = (types, params) => inst.check(core._mime(Array.isArray(types) ? types : [types], params));\r\n});\r\nexport function file(params) {\r\n    return core._file(ZodFile, params);\r\n}\r\nexport const ZodTransform = /*@__PURE__*/ core.$constructor(\"ZodTransform\", (inst, def) => {\r\n    core.$ZodTransform.init(inst, def);\r\n    ZodType.init(inst, def);\r\n    inst._zod.parse = (payload, _ctx) => {\r\n        if (_ctx.direction === \"backward\") {\r\n            throw new core.$ZodEncodeError(inst.constructor.name);\r\n        }\r\n        payload.addIssue = (issue) => {\r\n            if (typeof issue === \"string\") {\r\n                payload.issues.push(util.issue(issue, payload.value, def));\r\n            }\r\n            else {\r\n                // for Zod 3 backwards compatibility\r\n                const _issue = issue;\r\n                if (_issue.fatal)\r\n                    _issue.continue = false;\r\n                _issue.code ?? (_issue.code = \"custom\");\r\n                _issue.input ?? (_issue.input = payload.value);\r\n                _issue.inst ?? (_issue.inst = inst);\r\n                // _issue.continue ??= true;\r\n                payload.issues.push(util.issue(_issue));\r\n            }\r\n        };\r\n        const output = def.transform(payload.value, payload);\r\n        if (output instanceof Promise) {\r\n            return output.then((output) => {\r\n                payload.value = output;\r\n                return payload;\r\n            });\r\n        }\r\n        payload.value = output;\r\n        return payload;\r\n    };\r\n});\r\nexport function transform(fn) {\r\n    return new ZodTransform({\r\n        type: \"transform\",\r\n        transform: fn,\r\n    });\r\n}\r\nexport const ZodOptional = /*@__PURE__*/ core.$constructor(\"ZodOptional\", (inst, def) => {\r\n    core.$ZodOptional.init(inst, def);\r\n    ZodType.init(inst, def);\r\n    inst.unwrap = () => inst._zod.def.innerType;\r\n});\r\nexport function optional(innerType) {\r\n    return new ZodOptional({\r\n        type: \"optional\",\r\n        innerType: innerType,\r\n    });\r\n}\r\nexport const ZodNullable = /*@__PURE__*/ core.$constructor(\"ZodNullable\", (inst, def) => {\r\n    core.$ZodNullable.init(inst, def);\r\n    ZodType.init(inst, def);\r\n    inst.unwrap = () => inst._zod.def.innerType;\r\n});\r\nexport function nullable(innerType) {\r\n    return new ZodNullable({\r\n        type: \"nullable\",\r\n        innerType: innerType,\r\n    });\r\n}\r\n// nullish\r\nexport function nullish(innerType) {\r\n    return optional(nullable(innerType));\r\n}\r\nexport const ZodDefault = /*@__PURE__*/ core.$constructor(\"ZodDefault\", (inst, def) => {\r\n    core.$ZodDefault.init(inst, def);\r\n    ZodType.init(inst, def);\r\n    inst.unwrap = () => inst._zod.def.innerType;\r\n    inst.removeDefault = inst.unwrap;\r\n});\r\nexport function _default(innerType, defaultValue) {\r\n    return new ZodDefault({\r\n        type: \"default\",\r\n        innerType: innerType,\r\n        get defaultValue() {\r\n            return typeof defaultValue === \"function\" ? defaultValue() : util.shallowClone(defaultValue);\r\n        },\r\n    });\r\n}\r\nexport const ZodPrefault = /*@__PURE__*/ core.$constructor(\"ZodPrefault\", (inst, def) => {\r\n    core.$ZodPrefault.init(inst, def);\r\n    ZodType.init(inst, def);\r\n    inst.unwrap = () => inst._zod.def.innerType;\r\n});\r\nexport function prefault(innerType, defaultValue) {\r\n    return new ZodPrefault({\r\n        type: \"prefault\",\r\n        innerType: innerType,\r\n        get defaultValue() {\r\n            return typeof defaultValue === \"function\" ? defaultValue() : util.shallowClone(defaultValue);\r\n        },\r\n    });\r\n}\r\nexport const ZodNonOptional = /*@__PURE__*/ core.$constructor(\"ZodNonOptional\", (inst, def) => {\r\n    core.$ZodNonOptional.init(inst, def);\r\n    ZodType.init(inst, def);\r\n    inst.unwrap = () => inst._zod.def.innerType;\r\n});\r\nexport function nonoptional(innerType, params) {\r\n    return new ZodNonOptional({\r\n        type: \"nonoptional\",\r\n        innerType: innerType,\r\n        ...util.normalizeParams(params),\r\n    });\r\n}\r\nexport const ZodSuccess = /*@__PURE__*/ core.$constructor(\"ZodSuccess\", (inst, def) => {\r\n    core.$ZodSuccess.init(inst, def);\r\n    ZodType.init(inst, def);\r\n    inst.unwrap = () => inst._zod.def.innerType;\r\n});\r\nexport function success(innerType) {\r\n    return new ZodSuccess({\r\n        type: \"success\",\r\n        innerType: innerType,\r\n    });\r\n}\r\nexport const ZodCatch = /*@__PURE__*/ core.$constructor(\"ZodCatch\", (inst, def) => {\r\n    core.$ZodCatch.init(inst, def);\r\n    ZodType.init(inst, def);\r\n    inst.unwrap = () => inst._zod.def.innerType;\r\n    inst.removeCatch = inst.unwrap;\r\n});\r\nfunction _catch(innerType, catchValue) {\r\n    return new ZodCatch({\r\n        type: \"catch\",\r\n        innerType: innerType,\r\n        catchValue: (typeof catchValue === \"function\" ? catchValue : () => catchValue),\r\n    });\r\n}\r\nexport { _catch as catch };\r\nexport const ZodNaN = /*@__PURE__*/ core.$constructor(\"ZodNaN\", (inst, def) => {\r\n    core.$ZodNaN.init(inst, def);\r\n    ZodType.init(inst, def);\r\n});\r\nexport function nan(params) {\r\n    return core._nan(ZodNaN, params);\r\n}\r\nexport const ZodPipe = /*@__PURE__*/ core.$constructor(\"ZodPipe\", (inst, def) => {\r\n    core.$ZodPipe.init(inst, def);\r\n    ZodType.init(inst, def);\r\n    inst.in = def.in;\r\n    inst.out = def.out;\r\n});\r\nexport function pipe(in_, out) {\r\n    return new ZodPipe({\r\n        type: \"pipe\",\r\n        in: in_,\r\n        out: out,\r\n        // ...util.normalizeParams(params),\r\n    });\r\n}\r\nexport const ZodCodec = /*@__PURE__*/ core.$constructor(\"ZodCodec\", (inst, def) => {\r\n    ZodPipe.init(inst, def);\r\n    core.$ZodCodec.init(inst, def);\r\n});\r\nexport function codec(in_, out, params) {\r\n    return new ZodCodec({\r\n        type: \"pipe\",\r\n        in: in_,\r\n        out: out,\r\n        transform: params.decode,\r\n        reverseTransform: params.encode,\r\n    });\r\n}\r\nexport const ZodReadonly = /*@__PURE__*/ core.$constructor(\"ZodReadonly\", (inst, def) => {\r\n    core.$ZodReadonly.init(inst, def);\r\n    ZodType.init(inst, def);\r\n    inst.unwrap = () => inst._zod.def.innerType;\r\n});\r\nexport function readonly(innerType) {\r\n    return new ZodReadonly({\r\n        type: \"readonly\",\r\n        innerType: innerType,\r\n    });\r\n}\r\nexport const ZodTemplateLiteral = /*@__PURE__*/ core.$constructor(\"ZodTemplateLiteral\", (inst, def) => {\r\n    core.$ZodTemplateLiteral.init(inst, def);\r\n    ZodType.init(inst, def);\r\n});\r\nexport function templateLiteral(parts, params) {\r\n    return new ZodTemplateLiteral({\r\n        type: \"template_literal\",\r\n        parts,\r\n        ...util.normalizeParams(params),\r\n    });\r\n}\r\nexport const ZodLazy = /*@__PURE__*/ core.$constructor(\"ZodLazy\", (inst, def) => {\r\n    core.$ZodLazy.init(inst, def);\r\n    ZodType.init(inst, def);\r\n    inst.unwrap = () => inst._zod.def.getter();\r\n});\r\nexport function lazy(getter) {\r\n    return new ZodLazy({\r\n        type: \"lazy\",\r\n        getter: getter,\r\n    });\r\n}\r\nexport const ZodPromise = /*@__PURE__*/ core.$constructor(\"ZodPromise\", (inst, def) => {\r\n    core.$ZodPromise.init(inst, def);\r\n    ZodType.init(inst, def);\r\n    inst.unwrap = () => inst._zod.def.innerType;\r\n});\r\nexport function promise(innerType) {\r\n    return new ZodPromise({\r\n        type: \"promise\",\r\n        innerType: innerType,\r\n    });\r\n}\r\nexport const ZodFunction = /*@__PURE__*/ core.$constructor(\"ZodFunction\", (inst, def) => {\r\n    core.$ZodFunction.init(inst, def);\r\n    ZodType.init(inst, def);\r\n});\r\nexport function _function(params) {\r\n    return new ZodFunction({\r\n        type: \"function\",\r\n        input: Array.isArray(params?.input) ? tuple(params?.input) : (params?.input ?? array(unknown())),\r\n        output: params?.output ?? unknown(),\r\n    });\r\n}\r\nexport { _function as function };\r\nexport const ZodCustom = /*@__PURE__*/ core.$constructor(\"ZodCustom\", (inst, def) => {\r\n    core.$ZodCustom.init(inst, def);\r\n    ZodType.init(inst, def);\r\n});\r\n// custom checks\r\nexport function check(fn) {\r\n    const ch = new core.$ZodCheck({\r\n        check: \"custom\",\r\n        // ...util.normalizeParams(params),\r\n    });\r\n    ch._zod.check = fn;\r\n    return ch;\r\n}\r\nexport function custom(fn, _params) {\r\n    return core._custom(ZodCustom, fn ?? (() => true), _params);\r\n}\r\nexport function refine(fn, _params = {}) {\r\n    return core._refine(ZodCustom, fn, _params);\r\n}\r\n// superRefine\r\nexport function superRefine(fn) {\r\n    return core._superRefine(fn);\r\n}\r\nfunction _instanceof(cls, params = {\r\n    error: `Input not instance of ${cls.name}`,\r\n}) {\r\n    const inst = new ZodCustom({\r\n        type: \"custom\",\r\n        check: \"custom\",\r\n        fn: (data) => data instanceof cls,\r\n        abort: true,\r\n        ...util.normalizeParams(params),\r\n    });\r\n    inst._zod.bag.Class = cls;\r\n    return inst;\r\n}\r\nexport { _instanceof as instanceof };\r\n// stringbool\r\nexport const stringbool = (...args) => core._stringbool({\r\n    Codec: ZodCodec,\r\n    Boolean: ZodBoolean,\r\n    String: ZodString,\r\n}, ...args);\r\nexport function json(params) {\r\n    const jsonSchema = lazy(() => {\r\n        return union([string(params), number(), boolean(), _null(), array(jsonSchema), record(string(), jsonSchema)]);\r\n    });\r\n    return jsonSchema;\r\n}\r\n// preprocess\r\n// /** @deprecated Use `z.pipe()` and `z.transform()` instead. */\r\nexport function preprocess(fn, schema) {\r\n    return pipe(transform(fn), schema);\r\n}\r\n", "export { _lt as lt, _lte as lte, _gt as gt, _gte as gte, _positive as positive, _negative as negative, _nonpositive as nonpositive, _nonnegative as nonnegative, _multipleOf as multipleOf, _maxSize as maxSize, _minSize as minSize, _size as size, _maxLength as maxLength, _minLength as minLength, _length as length, _regex as regex, _lowercase as lowercase, _uppercase as uppercase, _includes as includes, _startsWith as startsWith, _endsWith as endsWith, _property as property, _mime as mime, _overwrite as overwrite, _normalize as normalize, _trim as trim, _toLowerCase as toLowerCase, _toUpperCase as toUpperCase, } from \"../core/index.js\";\r\n", "import * as core from \"../core/index.js\";\r\nimport * as schemas from \"./schemas.js\";\r\nexport const ZodISODateTime = /*@__PURE__*/ core.$constructor(\"ZodISODateTime\", (inst, def) => {\r\n    core.$ZodISODateTime.init(inst, def);\r\n    schemas.ZodStringFormat.init(inst, def);\r\n});\r\nexport function datetime(params) {\r\n    return core._isoDateTime(ZodISODateTime, params);\r\n}\r\nexport const ZodISODate = /*@__PURE__*/ core.$constructor(\"ZodISODate\", (inst, def) => {\r\n    core.$ZodISODate.init(inst, def);\r\n    schemas.ZodStringFormat.init(inst, def);\r\n});\r\nexport function date(params) {\r\n    return core._isoDate(ZodISODate, params);\r\n}\r\nexport const ZodISOTime = /*@__PURE__*/ core.$constructor(\"ZodISOTime\", (inst, def) => {\r\n    core.$ZodISOTime.init(inst, def);\r\n    schemas.ZodStringFormat.init(inst, def);\r\n});\r\nexport function time(params) {\r\n    return core._isoTime(ZodISOTime, params);\r\n}\r\nexport const ZodISODuration = /*@__PURE__*/ core.$constructor(\"ZodISODuration\", (inst, def) => {\r\n    core.$ZodISODuration.init(inst, def);\r\n    schemas.ZodStringFormat.init(inst, def);\r\n});\r\nexport function duration(params) {\r\n    return core._isoDuration(ZodISODuration, params);\r\n}\r\n", "import * as core from \"../core/index.js\";\r\nimport { ZodRealError } from \"./errors.js\";\r\nexport const parse = /* @__PURE__ */ core._parse(ZodRealError);\r\nexport const parseAsync = /* @__PURE__ */ core._parseAsync(ZodRealError);\r\nexport const safeParse = /* @__PURE__ */ core._safeParse(ZodRealError);\r\nexport const safeParseAsync = /* @__PURE__ */ core._safeParseAsync(ZodRealError);\r\n// Codec functions\r\nexport const encode = /* @__PURE__ */ core._encode(ZodRealError);\r\nexport const decode = /* @__PURE__ */ core._decode(ZodRealError);\r\nexport const encodeAsync = /* @__PURE__ */ core._encodeAsync(ZodRealError);\r\nexport const decodeAsync = /* @__PURE__ */ core._decodeAsync(ZodRealError);\r\nexport const safeEncode = /* @__PURE__ */ core._safeEncode(ZodRealError);\r\nexport const safeDecode = /* @__PURE__ */ core._safeDecode(ZodRealError);\r\nexport const safeEncodeAsync = /* @__PURE__ */ core._safeEncodeAsync(ZodRealError);\r\nexport const safeDecodeAsync = /* @__PURE__ */ core._safeDecodeAsync(ZodRealError);\r\n", "import * as core from \"../core/index.js\";\r\nimport { $ZodError } from \"../core/index.js\";\r\nimport * as util from \"../core/util.js\";\r\nconst initializer = (inst, issues) => {\r\n    $ZodError.init(inst, issues);\r\n    inst.name = \"ZodError\";\r\n    Object.defineProperties(inst, {\r\n        format: {\r\n            value: (mapper) => core.formatError(inst, mapper),\r\n            // enumerable: false,\r\n        },\r\n        flatten: {\r\n            value: (mapper) => core.flattenError(inst, mapper),\r\n            // enumerable: false,\r\n        },\r\n        addIssue: {\r\n            value: (issue) => {\r\n                inst.issues.push(issue);\r\n                inst.message = JSON.stringify(inst.issues, util.jsonStringifyReplacer, 2);\r\n            },\r\n            // enumerable: false,\r\n        },\r\n        addIssues: {\r\n            value: (issues) => {\r\n                inst.issues.push(...issues);\r\n                inst.message = JSON.stringify(inst.issues, util.jsonStringifyReplacer, 2);\r\n            },\r\n            // enumerable: false,\r\n        },\r\n        isEmpty: {\r\n            get() {\r\n                return inst.issues.length === 0;\r\n            },\r\n            // enumerable: false,\r\n        },\r\n    });\r\n    // Object.defineProperty(inst, \"isEmpty\", {\r\n    //   get() {\r\n    //     return inst.issues.length === 0;\r\n    //   },\r\n    // });\r\n};\r\nexport const ZodError = core.$constructor(\"ZodError\", initializer);\r\nexport const ZodRealError = core.$constructor(\"ZodError\", initializer, {\r\n    Parent: Error,\r\n});\r\n// /** @deprecated Use `z.core.$ZodErrorMapCtx` instead. */\r\n// export type ErrorMapCtx = core.$ZodErrorMapCtx;\r\n", "// Zod 3 compat layer\r\nimport * as core from \"../core/index.js\";\r\n/** @deprecated Use the raw string literal codes instead, e.g. \"invalid_type\". */\r\nexport const ZodIssueCode = {\r\n    invalid_type: \"invalid_type\",\r\n    too_big: \"too_big\",\r\n    too_small: \"too_small\",\r\n    invalid_format: \"invalid_format\",\r\n    not_multiple_of: \"not_multiple_of\",\r\n    unrecognized_keys: \"unrecognized_keys\",\r\n    invalid_union: \"invalid_union\",\r\n    invalid_key: \"invalid_key\",\r\n    invalid_element: \"invalid_element\",\r\n    invalid_value: \"invalid_value\",\r\n    custom: \"custom\",\r\n};\r\nexport { $brand, config } from \"../core/index.js\";\r\n/** @deprecated Use `z.config(params)` instead. */\r\nexport function setErrorMap(map) {\r\n    core.config({\r\n        customError: map,\r\n    });\r\n}\r\n/** @deprecated Use `z.config()` instead. */\r\nexport function getErrorMap() {\r\n    return core.config().customError;\r\n}\r\n/** @deprecated Do not use. Stub definition, only included for zod-to-json-schema compatibility. */\r\nexport var ZodFirstPartyTypeKind;\r\n(function (ZodFirstPartyTypeKind) {\r\n})(ZodFirstPartyTypeKind || (ZodFirstPartyTypeKind = {}));\r\n", "import * as core from \"../core/index.js\";\r\nimport * as schemas from \"./schemas.js\";\r\nexport function string(params) {\r\n    return core._coercedString(schemas.ZodString, params);\r\n}\r\nexport function number(params) {\r\n    return core._coercedNumber(schemas.ZodNumber, params);\r\n}\r\nexport function boolean(params) {\r\n    return core._coercedBoolean(schemas.ZodBoolean, params);\r\n}\r\nexport function bigint(params) {\r\n    return core._coercedBigint(schemas.ZodBigInt, params);\r\n}\r\nexport function date(params) {\r\n    return core._coercedDate(schemas.ZodDate, params);\r\n}\r\n", "import { pgTable, uuid, text, timestamp, boolean } from 'drizzle-orm/pg-core';\r\n\r\nexport const users = pgTable('users', {\r\n  id: uuid('id').primaryKey().defaultRandom(),\r\n  name: text('name').notNull(),\r\n  email: text('email').notNull().unique(),\r\n  passwordHash: text('password_hash').notNull(),\r\n  isActive: boolean('is_active').notNull().default(true),\r\n  createdAt: timestamp('created_at', { withTimezone: true }).notNull().defaultNow(),\r\n  passwordChangedAt: timestamp('password_changed_at', { withTimezone: true }), \r\n});", "// roles.ts\r\nimport { pgTable, uuid, text } from \"drizzle-orm/pg-core\";\r\nimport {id} from \"../tables/users\"\r\n\r\nexport const roles = pgTable(\"roles\", {\r\n  id: uuid(\"id\").primaryKey().defaultRandom(),\r\n  name: text(\"name\").notNull().unique(), // ex.: 'admin', 'gestor', 'usuario'\r\n});\r\n", "import { pgTable, uuid, primaryKey } from \"drizzle-orm/pg-core\";\r\nimport { users } from \"./users\";\r\nimport { roles } from \"./roles\";\r\n\r\nexport const userRoles = pgTable(\r\n  \"user_roles\",\r\n  {\r\n    userId: uuid(\"user_id\")\r\n      .notNull()\r\n      .references(() => users.id, { onDelete: \"cascade\" }),\r\n    roleId: uuid(\"role_id\")\r\n      .notNull()\r\n      .references(() => roles.id, { onDelete: \"cascade\" }),\r\n  },\r\n  (table) => ({\r\n    pk: primaryKey({ columns: [table.userId, table.roleId] }),\r\n  })\r\n);\r\n", "import { pgTable, uuid, text, timestamp } from 'drizzle-orm/pg-core';\r\nimport { users } from './users';\r\n\r\nexport const passwordResetTokens = pgTable('password_reset_tokens', {\r\n  id: uuid('id').primaryKey().defaultRandom(),\r\n  userId: uuid('user_id').notNull().references(() => users.id, { onDelete: 'cascade' }),\r\n  tokenHash: text('token_hash').notNull(),\r\n  createdAt: timestamp('created_at', { withTimezone: true }).notNull().defaultNow(),\r\n  expiresAt: timestamp('expires_at', { withTimezone: true }).notNull(),\r\n  usedAt: timestamp('used_at', { withTimezone: true }),\r\n});\r\n", "import type { Env } from './types';\r\n\r\nexport async function sendResetEmail(\r\n  to: string,\r\n  resetUrl: string,\r\n  env: Env\r\n) {\r\n  const apiKey = env.RESEND_API_KEY;\r\n  const from   = env.EMAIL_FROM || 'no-reply@example.com';\r\n  const app    = env.APP_NAME || 'Aplicativo';\r\n\r\n  if (!apiKey) {\r\n    throw new Error('RESEND_API_KEY n\u00E3o configurada');\r\n  }\r\n\r\n  console.log(\">> RESEND_API_KEY carregada:\", apiKey?.slice(0, 8));\r\n  console.log(\">> EMAIL_FROM usado:\", from);\r\n\r\n  const res = await fetch('https://api.resend.com/emails', {\r\n    method: 'POST',\r\n    headers: {\r\n      Authorization: `Bearer ${apiKey}`,\r\n      'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify({\r\n      from,\r\n      to,\r\n      subject: `Redefini\u00E7\u00E3o de senha - ${app}`,\r\n      html: `\r\n        <p>Voc\u00EA solicitou a redefini\u00E7\u00E3o de senha.</p>\r\n        <p>Clique no link abaixo para continuar:</p>\r\n        <a href=\"${resetUrl}\">${resetUrl}</a>\r\n      `,\r\n    }),\r\n  });\r\n\r\n  const json = await res.json().catch(() => null);\r\n\r\n  if (!res.ok) {\r\n    console.error('Erro Resend (status):', res.status);\r\n    console.error('Erro Resend (json):', json);\r\n    throw new Error('Falha no envio do e-mail');\r\n  }\r\n\r\n  console.log(\"\u2705 Email enviado com sucesso:\", json);\r\n}\r\n", "import { SignJWT, jwtVerify } from 'jose';\r\nconst enc = new TextEncoder();\r\nconst key = (secret: string) =>\r\n  crypto.subtle.importKey('raw', enc.encode(secret), { name: 'HMAC', hash: 'SHA-256' }, false, ['sign','verify']);\r\n\r\nexport async function signJwt(payload: object, secret: string, exp = '8h') {\r\n  return new SignJWT(payload as any)\r\n    .setProtectedHeader({ alg: 'HS256' })\r\n    .setIssuedAt()\r\n    .setExpirationTime(exp)\r\n    .sign(await key(secret));\r\n}\r\n\r\nexport async function verifyJwt(token: string, secret: string) {\r\n  const { payload } = await jwtVerify(token, await key(secret), { algorithms: ['HS256'] });\r\n  return payload;\r\n}\r\n", "export { compactDecrypt } from './jwe/compact/decrypt.js';\r\nexport { flattenedDecrypt } from './jwe/flattened/decrypt.js';\r\nexport { generalDecrypt } from './jwe/general/decrypt.js';\r\nexport { GeneralEncrypt } from './jwe/general/encrypt.js';\r\nexport { compactVerify } from './jws/compact/verify.js';\r\nexport { flattenedVerify } from './jws/flattened/verify.js';\r\nexport { generalVerify } from './jws/general/verify.js';\r\nexport { jwtVerify } from './jwt/verify.js';\r\nexport { jwtDecrypt } from './jwt/decrypt.js';\r\nexport { CompactEncrypt } from './jwe/compact/encrypt.js';\r\nexport { FlattenedEncrypt } from './jwe/flattened/encrypt.js';\r\nexport { CompactSign } from './jws/compact/sign.js';\r\nexport { FlattenedSign } from './jws/flattened/sign.js';\r\nexport { GeneralSign } from './jws/general/sign.js';\r\nexport { SignJWT } from './jwt/sign.js';\r\nexport { EncryptJWT } from './jwt/encrypt.js';\r\nexport { calculateJwkThumbprint, calculateJwkThumbprintUri } from './jwk/thumbprint.js';\r\nexport { EmbeddedJWK } from './jwk/embedded.js';\r\nexport { createLocalJWKSet } from './jwks/local.js';\r\nexport { createRemoteJWKSet, jwksCache, customFetch } from './jwks/remote.js';\r\nexport { UnsecuredJWT } from './jwt/unsecured.js';\r\nexport { exportPKCS8, exportSPKI, exportJWK } from './key/export.js';\r\nexport { importSPKI, importPKCS8, importX509, importJWK } from './key/import.js';\r\nexport { decodeProtectedHeader } from './util/decode_protected_header.js';\r\nexport { decodeJwt } from './util/decode_jwt.js';\r\nexport * as errors from './util/errors.js';\r\nexport { generateKeyPair } from './key/generate_key_pair.js';\r\nexport { generateSecret } from './key/generate_secret.js';\r\nexport * as base64url from './util/base64url.js';\r\nexport const cryptoRuntime = 'WebCryptoAPI';\r\n", "import { encoder, decoder } from '../lib/buffer_utils.js';\r\nimport { encodeBase64, decodeBase64 } from '../lib/base64.js';\r\nexport function decode(input) {\r\n    if (Uint8Array.fromBase64) {\r\n        return Uint8Array.fromBase64(typeof input === 'string' ? input : decoder.decode(input), {\r\n            alphabet: 'base64url',\r\n        });\r\n    }\r\n    let encoded = input;\r\n    if (encoded instanceof Uint8Array) {\r\n        encoded = decoder.decode(encoded);\r\n    }\r\n    encoded = encoded.replace(/-/g, '+').replace(/_/g, '/').replace(/\\s/g, '');\r\n    try {\r\n        return decodeBase64(encoded);\r\n    }\r\n    catch {\r\n        throw new TypeError('The input to be decoded is not correctly encoded.');\r\n    }\r\n}\r\nexport function encode(input) {\r\n    let unencoded = input;\r\n    if (typeof unencoded === 'string') {\r\n        unencoded = encoder.encode(unencoded);\r\n    }\r\n    if (Uint8Array.prototype.toBase64) {\r\n        return unencoded.toBase64({ alphabet: 'base64url', omitPadding: true });\r\n    }\r\n    return encodeBase64(unencoded).replace(/=/g, '').replace(/\\+/g, '-').replace(/\\//g, '_');\r\n}\r\n", "export const encoder = new TextEncoder();\r\nexport const decoder = new TextDecoder();\r\nconst MAX_INT32 = 2 ** 32;\r\nexport function concat(...buffers) {\r\n    const size = buffers.reduce((acc, { length }) => acc + length, 0);\r\n    const buf = new Uint8Array(size);\r\n    let i = 0;\r\n    for (const buffer of buffers) {\r\n        buf.set(buffer, i);\r\n        i += buffer.length;\r\n    }\r\n    return buf;\r\n}\r\nfunction writeUInt32BE(buf, value, offset) {\r\n    if (value < 0 || value >= MAX_INT32) {\r\n        throw new RangeError(`value must be >= 0 and <= ${MAX_INT32 - 1}. Received ${value}`);\r\n    }\r\n    buf.set([value >>> 24, value >>> 16, value >>> 8, value & 0xff], offset);\r\n}\r\nexport function uint64be(value) {\r\n    const high = Math.floor(value / MAX_INT32);\r\n    const low = value % MAX_INT32;\r\n    const buf = new Uint8Array(8);\r\n    writeUInt32BE(buf, high, 0);\r\n    writeUInt32BE(buf, low, 4);\r\n    return buf;\r\n}\r\nexport function uint32be(value) {\r\n    const buf = new Uint8Array(4);\r\n    writeUInt32BE(buf, value);\r\n    return buf;\r\n}\r\n", "export function encodeBase64(input) {\r\n    if (Uint8Array.prototype.toBase64) {\r\n        return input.toBase64();\r\n    }\r\n    const CHUNK_SIZE = 0x8000;\r\n    const arr = [];\r\n    for (let i = 0; i < input.length; i += CHUNK_SIZE) {\r\n        arr.push(String.fromCharCode.apply(null, input.subarray(i, i + CHUNK_SIZE)));\r\n    }\r\n    return btoa(arr.join(''));\r\n}\r\nexport function decodeBase64(encoded) {\r\n    if (Uint8Array.fromBase64) {\r\n        return Uint8Array.fromBase64(encoded);\r\n    }\r\n    const binary = atob(encoded);\r\n    const bytes = new Uint8Array(binary.length);\r\n    for (let i = 0; i < binary.length; i++) {\r\n        bytes[i] = binary.charCodeAt(i);\r\n    }\r\n    return bytes;\r\n}\r\n", "export class JOSEError extends Error {\r\n    static code = 'ERR_JOSE_GENERIC';\r\n    code = 'ERR_JOSE_GENERIC';\r\n    constructor(message, options) {\r\n        super(message, options);\r\n        this.name = this.constructor.name;\r\n        Error.captureStackTrace?.(this, this.constructor);\r\n    }\r\n}\r\nexport class JWTClaimValidationFailed extends JOSEError {\r\n    static code = 'ERR_JWT_CLAIM_VALIDATION_FAILED';\r\n    code = 'ERR_JWT_CLAIM_VALIDATION_FAILED';\r\n    claim;\r\n    reason;\r\n    payload;\r\n    constructor(message, payload, claim = 'unspecified', reason = 'unspecified') {\r\n        super(message, { cause: { claim, reason, payload } });\r\n        this.claim = claim;\r\n        this.reason = reason;\r\n        this.payload = payload;\r\n    }\r\n}\r\nexport class JWTExpired extends JOSEError {\r\n    static code = 'ERR_JWT_EXPIRED';\r\n    code = 'ERR_JWT_EXPIRED';\r\n    claim;\r\n    reason;\r\n    payload;\r\n    constructor(message, payload, claim = 'unspecified', reason = 'unspecified') {\r\n        super(message, { cause: { claim, reason, payload } });\r\n        this.claim = claim;\r\n        this.reason = reason;\r\n        this.payload = payload;\r\n    }\r\n}\r\nexport class JOSEAlgNotAllowed extends JOSEError {\r\n    static code = 'ERR_JOSE_ALG_NOT_ALLOWED';\r\n    code = 'ERR_JOSE_ALG_NOT_ALLOWED';\r\n}\r\nexport class JOSENotSupported extends JOSEError {\r\n    static code = 'ERR_JOSE_NOT_SUPPORTED';\r\n    code = 'ERR_JOSE_NOT_SUPPORTED';\r\n}\r\nexport class JWEDecryptionFailed extends JOSEError {\r\n    static code = 'ERR_JWE_DECRYPTION_FAILED';\r\n    code = 'ERR_JWE_DECRYPTION_FAILED';\r\n    constructor(message = 'decryption operation failed', options) {\r\n        super(message, options);\r\n    }\r\n}\r\nexport class JWEInvalid extends JOSEError {\r\n    static code = 'ERR_JWE_INVALID';\r\n    code = 'ERR_JWE_INVALID';\r\n}\r\nexport class JWSInvalid extends JOSEError {\r\n    static code = 'ERR_JWS_INVALID';\r\n    code = 'ERR_JWS_INVALID';\r\n}\r\nexport class JWTInvalid extends JOSEError {\r\n    static code = 'ERR_JWT_INVALID';\r\n    code = 'ERR_JWT_INVALID';\r\n}\r\nexport class JWKInvalid extends JOSEError {\r\n    static code = 'ERR_JWK_INVALID';\r\n    code = 'ERR_JWK_INVALID';\r\n}\r\nexport class JWKSInvalid extends JOSEError {\r\n    static code = 'ERR_JWKS_INVALID';\r\n    code = 'ERR_JWKS_INVALID';\r\n}\r\nexport class JWKSNoMatchingKey extends JOSEError {\r\n    static code = 'ERR_JWKS_NO_MATCHING_KEY';\r\n    code = 'ERR_JWKS_NO_MATCHING_KEY';\r\n    constructor(message = 'no applicable key found in the JSON Web Key Set', options) {\r\n        super(message, options);\r\n    }\r\n}\r\nexport class JWKSMultipleMatchingKeys extends JOSEError {\r\n    [Symbol.asyncIterator];\r\n    static code = 'ERR_JWKS_MULTIPLE_MATCHING_KEYS';\r\n    code = 'ERR_JWKS_MULTIPLE_MATCHING_KEYS';\r\n    constructor(message = 'multiple matching keys found in the JSON Web Key Set', options) {\r\n        super(message, options);\r\n    }\r\n}\r\nexport class JWKSTimeout extends JOSEError {\r\n    static code = 'ERR_JWKS_TIMEOUT';\r\n    code = 'ERR_JWKS_TIMEOUT';\r\n    constructor(message = 'request timed out', options) {\r\n        super(message, options);\r\n    }\r\n}\r\nexport class JWSSignatureVerificationFailed extends JOSEError {\r\n    static code = 'ERR_JWS_SIGNATURE_VERIFICATION_FAILED';\r\n    code = 'ERR_JWS_SIGNATURE_VERIFICATION_FAILED';\r\n    constructor(message = 'signature verification failed', options) {\r\n        super(message, options);\r\n    }\r\n}\r\n", "function unusable(name, prop = 'algorithm.name') {\r\n    return new TypeError(`CryptoKey does not support this operation, its ${prop} must be ${name}`);\r\n}\r\nfunction isAlgorithm(algorithm, name) {\r\n    return algorithm.name === name;\r\n}\r\nfunction getHashLength(hash) {\r\n    return parseInt(hash.name.slice(4), 10);\r\n}\r\nfunction getNamedCurve(alg) {\r\n    switch (alg) {\r\n        case 'ES256':\r\n            return 'P-256';\r\n        case 'ES384':\r\n            return 'P-384';\r\n        case 'ES512':\r\n            return 'P-521';\r\n        default:\r\n            throw new Error('unreachable');\r\n    }\r\n}\r\nfunction checkUsage(key, usage) {\r\n    if (usage && !key.usages.includes(usage)) {\r\n        throw new TypeError(`CryptoKey does not support this operation, its usages must include ${usage}.`);\r\n    }\r\n}\r\nexport function checkSigCryptoKey(key, alg, usage) {\r\n    switch (alg) {\r\n        case 'HS256':\r\n        case 'HS384':\r\n        case 'HS512': {\r\n            if (!isAlgorithm(key.algorithm, 'HMAC'))\r\n                throw unusable('HMAC');\r\n            const expected = parseInt(alg.slice(2), 10);\r\n            const actual = getHashLength(key.algorithm.hash);\r\n            if (actual !== expected)\r\n                throw unusable(`SHA-${expected}`, 'algorithm.hash');\r\n            break;\r\n        }\r\n        case 'RS256':\r\n        case 'RS384':\r\n        case 'RS512': {\r\n            if (!isAlgorithm(key.algorithm, 'RSASSA-PKCS1-v1_5'))\r\n                throw unusable('RSASSA-PKCS1-v1_5');\r\n            const expected = parseInt(alg.slice(2), 10);\r\n            const actual = getHashLength(key.algorithm.hash);\r\n            if (actual !== expected)\r\n                throw unusable(`SHA-${expected}`, 'algorithm.hash');\r\n            break;\r\n        }\r\n        case 'PS256':\r\n        case 'PS384':\r\n        case 'PS512': {\r\n            if (!isAlgorithm(key.algorithm, 'RSA-PSS'))\r\n                throw unusable('RSA-PSS');\r\n            const expected = parseInt(alg.slice(2), 10);\r\n            const actual = getHashLength(key.algorithm.hash);\r\n            if (actual !== expected)\r\n                throw unusable(`SHA-${expected}`, 'algorithm.hash');\r\n            break;\r\n        }\r\n        case 'Ed25519':\r\n        case 'EdDSA': {\r\n            if (!isAlgorithm(key.algorithm, 'Ed25519'))\r\n                throw unusable('Ed25519');\r\n            break;\r\n        }\r\n        case 'ML-DSA-44':\r\n        case 'ML-DSA-65':\r\n        case 'ML-DSA-87': {\r\n            if (!isAlgorithm(key.algorithm, alg))\r\n                throw unusable(alg);\r\n            break;\r\n        }\r\n        case 'ES256':\r\n        case 'ES384':\r\n        case 'ES512': {\r\n            if (!isAlgorithm(key.algorithm, 'ECDSA'))\r\n                throw unusable('ECDSA');\r\n            const expected = getNamedCurve(alg);\r\n            const actual = key.algorithm.namedCurve;\r\n            if (actual !== expected)\r\n                throw unusable(expected, 'algorithm.namedCurve');\r\n            break;\r\n        }\r\n        default:\r\n            throw new TypeError('CryptoKey does not support this operation');\r\n    }\r\n    checkUsage(key, usage);\r\n}\r\nexport function checkEncCryptoKey(key, alg, usage) {\r\n    switch (alg) {\r\n        case 'A128GCM':\r\n        case 'A192GCM':\r\n        case 'A256GCM': {\r\n            if (!isAlgorithm(key.algorithm, 'AES-GCM'))\r\n                throw unusable('AES-GCM');\r\n            const expected = parseInt(alg.slice(1, 4), 10);\r\n            const actual = key.algorithm.length;\r\n            if (actual !== expected)\r\n                throw unusable(expected, 'algorithm.length');\r\n            break;\r\n        }\r\n        case 'A128KW':\r\n        case 'A192KW':\r\n        case 'A256KW': {\r\n            if (!isAlgorithm(key.algorithm, 'AES-KW'))\r\n                throw unusable('AES-KW');\r\n            const expected = parseInt(alg.slice(1, 4), 10);\r\n            const actual = key.algorithm.length;\r\n            if (actual !== expected)\r\n                throw unusable(expected, 'algorithm.length');\r\n            break;\r\n        }\r\n        case 'ECDH': {\r\n            switch (key.algorithm.name) {\r\n                case 'ECDH':\r\n                case 'X25519':\r\n                    break;\r\n                default:\r\n                    throw unusable('ECDH or X25519');\r\n            }\r\n            break;\r\n        }\r\n        case 'PBES2-HS256+A128KW':\r\n        case 'PBES2-HS384+A192KW':\r\n        case 'PBES2-HS512+A256KW':\r\n            if (!isAlgorithm(key.algorithm, 'PBKDF2'))\r\n                throw unusable('PBKDF2');\r\n            break;\r\n        case 'RSA-OAEP':\r\n        case 'RSA-OAEP-256':\r\n        case 'RSA-OAEP-384':\r\n        case 'RSA-OAEP-512': {\r\n            if (!isAlgorithm(key.algorithm, 'RSA-OAEP'))\r\n                throw unusable('RSA-OAEP');\r\n            const expected = parseInt(alg.slice(9), 10) || 1;\r\n            const actual = getHashLength(key.algorithm.hash);\r\n            if (actual !== expected)\r\n                throw unusable(`SHA-${expected}`, 'algorithm.hash');\r\n            break;\r\n        }\r\n        default:\r\n            throw new TypeError('CryptoKey does not support this operation');\r\n    }\r\n    checkUsage(key, usage);\r\n}\r\n", "function message(msg, actual, ...types) {\r\n    types = types.filter(Boolean);\r\n    if (types.length > 2) {\r\n        const last = types.pop();\r\n        msg += `one of type ${types.join(', ')}, or ${last}.`;\r\n    }\r\n    else if (types.length === 2) {\r\n        msg += `one of type ${types[0]} or ${types[1]}.`;\r\n    }\r\n    else {\r\n        msg += `of type ${types[0]}.`;\r\n    }\r\n    if (actual == null) {\r\n        msg += ` Received ${actual}`;\r\n    }\r\n    else if (typeof actual === 'function' && actual.name) {\r\n        msg += ` Received function ${actual.name}`;\r\n    }\r\n    else if (typeof actual === 'object' && actual != null) {\r\n        if (actual.constructor?.name) {\r\n            msg += ` Received an instance of ${actual.constructor.name}`;\r\n        }\r\n    }\r\n    return msg;\r\n}\r\nexport default (actual, ...types) => {\r\n    return message('Key must be ', actual, ...types);\r\n};\r\nexport function withAlg(alg, actual, ...types) {\r\n    return message(`Key for the ${alg} algorithm must be `, actual, ...types);\r\n}\r\n", "export function assertCryptoKey(key) {\r\n    if (!isCryptoKey(key)) {\r\n        throw new Error('CryptoKey instance expected');\r\n    }\r\n}\r\nexport function isCryptoKey(key) {\r\n    return key?.[Symbol.toStringTag] === 'CryptoKey';\r\n}\r\nexport function isKeyObject(key) {\r\n    return key?.[Symbol.toStringTag] === 'KeyObject';\r\n}\r\nexport default (key) => {\r\n    return isCryptoKey(key) || isKeyObject(key);\r\n};\r\n", "export default (...headers) => {\r\n    const sources = headers.filter(Boolean);\r\n    if (sources.length === 0 || sources.length === 1) {\r\n        return true;\r\n    }\r\n    let acc;\r\n    for (const header of sources) {\r\n        const parameters = Object.keys(header);\r\n        if (!acc || acc.size === 0) {\r\n            acc = new Set(parameters);\r\n            continue;\r\n        }\r\n        for (const parameter of parameters) {\r\n            if (acc.has(parameter)) {\r\n                return false;\r\n            }\r\n            acc.add(parameter);\r\n        }\r\n    }\r\n    return true;\r\n};\r\n", "function isObjectLike(value) {\r\n    return typeof value === 'object' && value !== null;\r\n}\r\nexport default (input) => {\r\n    if (!isObjectLike(input) || Object.prototype.toString.call(input) !== '[object Object]') {\r\n        return false;\r\n    }\r\n    if (Object.getPrototypeOf(input) === null) {\r\n        return true;\r\n    }\r\n    let proto = input;\r\n    while (Object.getPrototypeOf(proto) !== null) {\r\n        proto = Object.getPrototypeOf(proto);\r\n    }\r\n    return Object.getPrototypeOf(input) === proto;\r\n};\r\n", "export default (alg, key) => {\r\n    if (alg.startsWith('RS') || alg.startsWith('PS')) {\r\n        const { modulusLength } = key.algorithm;\r\n        if (typeof modulusLength !== 'number' || modulusLength < 2048) {\r\n            throw new TypeError(`${alg} requires key modulusLength to be 2048 bits or larger`);\r\n        }\r\n    }\r\n};\r\n", "import { JOSENotSupported } from '../util/errors.js';\r\nfunction subtleMapping(jwk) {\r\n    let algorithm;\r\n    let keyUsages;\r\n    switch (jwk.kty) {\r\n        case 'AKP': {\r\n            switch (jwk.alg) {\r\n                case 'ML-DSA-44':\r\n                case 'ML-DSA-65':\r\n                case 'ML-DSA-87':\r\n                    algorithm = { name: jwk.alg };\r\n                    keyUsages = jwk.priv ? ['sign'] : ['verify'];\r\n                    break;\r\n                default:\r\n                    throw new JOSENotSupported('Invalid or unsupported JWK \"alg\" (Algorithm) Parameter value');\r\n            }\r\n            break;\r\n        }\r\n        case 'RSA': {\r\n            switch (jwk.alg) {\r\n                case 'PS256':\r\n                case 'PS384':\r\n                case 'PS512':\r\n                    algorithm = { name: 'RSA-PSS', hash: `SHA-${jwk.alg.slice(-3)}` };\r\n                    keyUsages = jwk.d ? ['sign'] : ['verify'];\r\n                    break;\r\n                case 'RS256':\r\n                case 'RS384':\r\n                case 'RS512':\r\n                    algorithm = { name: 'RSASSA-PKCS1-v1_5', hash: `SHA-${jwk.alg.slice(-3)}` };\r\n                    keyUsages = jwk.d ? ['sign'] : ['verify'];\r\n                    break;\r\n                case 'RSA-OAEP':\r\n                case 'RSA-OAEP-256':\r\n                case 'RSA-OAEP-384':\r\n                case 'RSA-OAEP-512':\r\n                    algorithm = {\r\n                        name: 'RSA-OAEP',\r\n                        hash: `SHA-${parseInt(jwk.alg.slice(-3), 10) || 1}`,\r\n                    };\r\n                    keyUsages = jwk.d ? ['decrypt', 'unwrapKey'] : ['encrypt', 'wrapKey'];\r\n                    break;\r\n                default:\r\n                    throw new JOSENotSupported('Invalid or unsupported JWK \"alg\" (Algorithm) Parameter value');\r\n            }\r\n            break;\r\n        }\r\n        case 'EC': {\r\n            switch (jwk.alg) {\r\n                case 'ES256':\r\n                    algorithm = { name: 'ECDSA', namedCurve: 'P-256' };\r\n                    keyUsages = jwk.d ? ['sign'] : ['verify'];\r\n                    break;\r\n                case 'ES384':\r\n                    algorithm = { name: 'ECDSA', namedCurve: 'P-384' };\r\n                    keyUsages = jwk.d ? ['sign'] : ['verify'];\r\n                    break;\r\n                case 'ES512':\r\n                    algorithm = { name: 'ECDSA', namedCurve: 'P-521' };\r\n                    keyUsages = jwk.d ? ['sign'] : ['verify'];\r\n                    break;\r\n                case 'ECDH-ES':\r\n                case 'ECDH-ES+A128KW':\r\n                case 'ECDH-ES+A192KW':\r\n                case 'ECDH-ES+A256KW':\r\n                    algorithm = { name: 'ECDH', namedCurve: jwk.crv };\r\n                    keyUsages = jwk.d ? ['deriveBits'] : [];\r\n                    break;\r\n                default:\r\n                    throw new JOSENotSupported('Invalid or unsupported JWK \"alg\" (Algorithm) Parameter value');\r\n            }\r\n            break;\r\n        }\r\n        case 'OKP': {\r\n            switch (jwk.alg) {\r\n                case 'Ed25519':\r\n                case 'EdDSA':\r\n                    algorithm = { name: 'Ed25519' };\r\n                    keyUsages = jwk.d ? ['sign'] : ['verify'];\r\n                    break;\r\n                case 'ECDH-ES':\r\n                case 'ECDH-ES+A128KW':\r\n                case 'ECDH-ES+A192KW':\r\n                case 'ECDH-ES+A256KW':\r\n                    algorithm = { name: jwk.crv };\r\n                    keyUsages = jwk.d ? ['deriveBits'] : [];\r\n                    break;\r\n                default:\r\n                    throw new JOSENotSupported('Invalid or unsupported JWK \"alg\" (Algorithm) Parameter value');\r\n            }\r\n            break;\r\n        }\r\n        default:\r\n            throw new JOSENotSupported('Invalid or unsupported JWK \"kty\" (Key Type) Parameter value');\r\n    }\r\n    return { algorithm, keyUsages };\r\n}\r\nexport default async (jwk) => {\r\n    if (!jwk.alg) {\r\n        throw new TypeError('\"alg\" argument is required when \"jwk.alg\" is not present');\r\n    }\r\n    const { algorithm, keyUsages } = subtleMapping(jwk);\r\n    const keyData = { ...jwk };\r\n    if (keyData.kty !== 'AKP') {\r\n        delete keyData.alg;\r\n    }\r\n    delete keyData.use;\r\n    return crypto.subtle.importKey('jwk', keyData, algorithm, jwk.ext ?? (jwk.d || jwk.priv ? false : true), jwk.key_ops ?? keyUsages);\r\n};\r\n", "import { JOSENotSupported, JWEInvalid, JWSInvalid } from '../util/errors.js';\r\nexport default (Err, recognizedDefault, recognizedOption, protectedHeader, joseHeader) => {\r\n    if (joseHeader.crit !== undefined && protectedHeader?.crit === undefined) {\r\n        throw new Err('\"crit\" (Critical) Header Parameter MUST be integrity protected');\r\n    }\r\n    if (!protectedHeader || protectedHeader.crit === undefined) {\r\n        return new Set();\r\n    }\r\n    if (!Array.isArray(protectedHeader.crit) ||\r\n        protectedHeader.crit.length === 0 ||\r\n        protectedHeader.crit.some((input) => typeof input !== 'string' || input.length === 0)) {\r\n        throw new Err('\"crit\" (Critical) Header Parameter MUST be an array of non-empty strings when present');\r\n    }\r\n    let recognized;\r\n    if (recognizedOption !== undefined) {\r\n        recognized = new Map([...Object.entries(recognizedOption), ...recognizedDefault.entries()]);\r\n    }\r\n    else {\r\n        recognized = recognizedDefault;\r\n    }\r\n    for (const parameter of protectedHeader.crit) {\r\n        if (!recognized.has(parameter)) {\r\n            throw new JOSENotSupported(`Extension Header Parameter \"${parameter}\" is not recognized`);\r\n        }\r\n        if (joseHeader[parameter] === undefined) {\r\n            throw new Err(`Extension Header Parameter \"${parameter}\" is missing`);\r\n        }\r\n        if (recognized.get(parameter) && protectedHeader[parameter] === undefined) {\r\n            throw new Err(`Extension Header Parameter \"${parameter}\" MUST be integrity protected`);\r\n        }\r\n    }\r\n    return new Set(protectedHeader.crit);\r\n};\r\n", "export default (option, algorithms) => {\r\n    if (algorithms !== undefined &&\r\n        (!Array.isArray(algorithms) || algorithms.some((s) => typeof s !== 'string'))) {\r\n        throw new TypeError(`\"${option}\" option must be an array of strings`);\r\n    }\r\n    if (!algorithms) {\r\n        return undefined;\r\n    }\r\n    return new Set(algorithms);\r\n};\r\n", "import { isJWK } from './is_jwk.js';\r\nimport { decode } from '../util/base64url.js';\r\nimport importJWK from './jwk_to_key.js';\r\nimport { isCryptoKey, isKeyObject } from './is_key_like.js';\r\nlet cache;\r\nconst handleJWK = async (key, jwk, alg, freeze = false) => {\r\n    cache ||= new WeakMap();\r\n    let cached = cache.get(key);\r\n    if (cached?.[alg]) {\r\n        return cached[alg];\r\n    }\r\n    const cryptoKey = await importJWK({ ...jwk, alg });\r\n    if (freeze)\r\n        Object.freeze(key);\r\n    if (!cached) {\r\n        cache.set(key, { [alg]: cryptoKey });\r\n    }\r\n    else {\r\n        cached[alg] = cryptoKey;\r\n    }\r\n    return cryptoKey;\r\n};\r\nconst handleKeyObject = (keyObject, alg) => {\r\n    cache ||= new WeakMap();\r\n    let cached = cache.get(keyObject);\r\n    if (cached?.[alg]) {\r\n        return cached[alg];\r\n    }\r\n    const isPublic = keyObject.type === 'public';\r\n    const extractable = isPublic ? true : false;\r\n    let cryptoKey;\r\n    if (keyObject.asymmetricKeyType === 'x25519') {\r\n        switch (alg) {\r\n            case 'ECDH-ES':\r\n            case 'ECDH-ES+A128KW':\r\n            case 'ECDH-ES+A192KW':\r\n            case 'ECDH-ES+A256KW':\r\n                break;\r\n            default:\r\n                throw new TypeError('given KeyObject instance cannot be used for this algorithm');\r\n        }\r\n        cryptoKey = keyObject.toCryptoKey(keyObject.asymmetricKeyType, extractable, isPublic ? [] : ['deriveBits']);\r\n    }\r\n    if (keyObject.asymmetricKeyType === 'ed25519') {\r\n        if (alg !== 'EdDSA' && alg !== 'Ed25519') {\r\n            throw new TypeError('given KeyObject instance cannot be used for this algorithm');\r\n        }\r\n        cryptoKey = keyObject.toCryptoKey(keyObject.asymmetricKeyType, extractable, [\r\n            isPublic ? 'verify' : 'sign',\r\n        ]);\r\n    }\r\n    switch (keyObject.asymmetricKeyType) {\r\n        case 'ml-dsa-44':\r\n        case 'ml-dsa-65':\r\n        case 'ml-dsa-87': {\r\n            if (alg !== keyObject.asymmetricKeyType.toUpperCase()) {\r\n                throw new TypeError('given KeyObject instance cannot be used for this algorithm');\r\n            }\r\n            cryptoKey = keyObject.toCryptoKey(keyObject.asymmetricKeyType, extractable, [\r\n                isPublic ? 'verify' : 'sign',\r\n            ]);\r\n        }\r\n    }\r\n    if (keyObject.asymmetricKeyType === 'rsa') {\r\n        let hash;\r\n        switch (alg) {\r\n            case 'RSA-OAEP':\r\n                hash = 'SHA-1';\r\n                break;\r\n            case 'RS256':\r\n            case 'PS256':\r\n            case 'RSA-OAEP-256':\r\n                hash = 'SHA-256';\r\n                break;\r\n            case 'RS384':\r\n            case 'PS384':\r\n            case 'RSA-OAEP-384':\r\n                hash = 'SHA-384';\r\n                break;\r\n            case 'RS512':\r\n            case 'PS512':\r\n            case 'RSA-OAEP-512':\r\n                hash = 'SHA-512';\r\n                break;\r\n            default:\r\n                throw new TypeError('given KeyObject instance cannot be used for this algorithm');\r\n        }\r\n        if (alg.startsWith('RSA-OAEP')) {\r\n            return keyObject.toCryptoKey({\r\n                name: 'RSA-OAEP',\r\n                hash,\r\n            }, extractable, isPublic ? ['encrypt'] : ['decrypt']);\r\n        }\r\n        cryptoKey = keyObject.toCryptoKey({\r\n            name: alg.startsWith('PS') ? 'RSA-PSS' : 'RSASSA-PKCS1-v1_5',\r\n            hash,\r\n        }, extractable, [isPublic ? 'verify' : 'sign']);\r\n    }\r\n    if (keyObject.asymmetricKeyType === 'ec') {\r\n        const nist = new Map([\r\n            ['prime256v1', 'P-256'],\r\n            ['secp384r1', 'P-384'],\r\n            ['secp521r1', 'P-521'],\r\n        ]);\r\n        const namedCurve = nist.get(keyObject.asymmetricKeyDetails?.namedCurve);\r\n        if (!namedCurve) {\r\n            throw new TypeError('given KeyObject instance cannot be used for this algorithm');\r\n        }\r\n        if (alg === 'ES256' && namedCurve === 'P-256') {\r\n            cryptoKey = keyObject.toCryptoKey({\r\n                name: 'ECDSA',\r\n                namedCurve,\r\n            }, extractable, [isPublic ? 'verify' : 'sign']);\r\n        }\r\n        if (alg === 'ES384' && namedCurve === 'P-384') {\r\n            cryptoKey = keyObject.toCryptoKey({\r\n                name: 'ECDSA',\r\n                namedCurve,\r\n            }, extractable, [isPublic ? 'verify' : 'sign']);\r\n        }\r\n        if (alg === 'ES512' && namedCurve === 'P-521') {\r\n            cryptoKey = keyObject.toCryptoKey({\r\n                name: 'ECDSA',\r\n                namedCurve,\r\n            }, extractable, [isPublic ? 'verify' : 'sign']);\r\n        }\r\n        if (alg.startsWith('ECDH-ES')) {\r\n            cryptoKey = keyObject.toCryptoKey({\r\n                name: 'ECDH',\r\n                namedCurve,\r\n            }, extractable, isPublic ? [] : ['deriveBits']);\r\n        }\r\n    }\r\n    if (!cryptoKey) {\r\n        throw new TypeError('given KeyObject instance cannot be used for this algorithm');\r\n    }\r\n    if (!cached) {\r\n        cache.set(keyObject, { [alg]: cryptoKey });\r\n    }\r\n    else {\r\n        cached[alg] = cryptoKey;\r\n    }\r\n    return cryptoKey;\r\n};\r\nexport default async (key, alg) => {\r\n    if (key instanceof Uint8Array) {\r\n        return key;\r\n    }\r\n    if (isCryptoKey(key)) {\r\n        return key;\r\n    }\r\n    if (isKeyObject(key)) {\r\n        if (key.type === 'secret') {\r\n            return key.export();\r\n        }\r\n        if ('toCryptoKey' in key && typeof key.toCryptoKey === 'function') {\r\n            try {\r\n                return handleKeyObject(key, alg);\r\n            }\r\n            catch (err) {\r\n                if (err instanceof TypeError) {\r\n                    throw err;\r\n                }\r\n            }\r\n        }\r\n        let jwk = key.export({ format: 'jwk' });\r\n        return handleJWK(key, jwk, alg);\r\n    }\r\n    if (isJWK(key)) {\r\n        if (key.k) {\r\n            return decode(key.k);\r\n        }\r\n        return handleJWK(key, key, alg, true);\r\n    }\r\n    throw new Error('unreachable');\r\n};\r\n", "import isObject from './is_object.js';\r\nexport function isJWK(key) {\r\n    return isObject(key) && typeof key.kty === 'string';\r\n}\r\nexport function isPrivateJWK(key) {\r\n    return (key.kty !== 'oct' &&\r\n        ((key.kty === 'AKP' && typeof key.priv === 'string') || typeof key.d === 'string'));\r\n}\r\nexport function isPublicJWK(key) {\r\n    return key.kty !== 'oct' && typeof key.d === 'undefined' && typeof key.priv === 'undefined';\r\n}\r\nexport function isSecretJWK(key) {\r\n    return key.kty === 'oct' && typeof key.k === 'string';\r\n}\r\n", "import { withAlg as invalidKeyInput } from './invalid_key_input.js';\r\nimport isKeyLike from './is_key_like.js';\r\nimport * as jwk from './is_jwk.js';\r\nconst tag = (key) => key?.[Symbol.toStringTag];\r\nconst jwkMatchesOp = (alg, key, usage) => {\r\n    if (key.use !== undefined) {\r\n        let expected;\r\n        switch (usage) {\r\n            case 'sign':\r\n            case 'verify':\r\n                expected = 'sig';\r\n                break;\r\n            case 'encrypt':\r\n            case 'decrypt':\r\n                expected = 'enc';\r\n                break;\r\n        }\r\n        if (key.use !== expected) {\r\n            throw new TypeError(`Invalid key for this operation, its \"use\" must be \"${expected}\" when present`);\r\n        }\r\n    }\r\n    if (key.alg !== undefined && key.alg !== alg) {\r\n        throw new TypeError(`Invalid key for this operation, its \"alg\" must be \"${alg}\" when present`);\r\n    }\r\n    if (Array.isArray(key.key_ops)) {\r\n        let expectedKeyOp;\r\n        switch (true) {\r\n            case usage === 'sign' || usage === 'verify':\r\n            case alg === 'dir':\r\n            case alg.includes('CBC-HS'):\r\n                expectedKeyOp = usage;\r\n                break;\r\n            case alg.startsWith('PBES2'):\r\n                expectedKeyOp = 'deriveBits';\r\n                break;\r\n            case /^A\\d{3}(?:GCM)?(?:KW)?$/.test(alg):\r\n                if (!alg.includes('GCM') && alg.endsWith('KW')) {\r\n                    expectedKeyOp = usage === 'encrypt' ? 'wrapKey' : 'unwrapKey';\r\n                }\r\n                else {\r\n                    expectedKeyOp = usage;\r\n                }\r\n                break;\r\n            case usage === 'encrypt' && alg.startsWith('RSA'):\r\n                expectedKeyOp = 'wrapKey';\r\n                break;\r\n            case usage === 'decrypt':\r\n                expectedKeyOp = alg.startsWith('RSA') ? 'unwrapKey' : 'deriveBits';\r\n                break;\r\n        }\r\n        if (expectedKeyOp && key.key_ops?.includes?.(expectedKeyOp) === false) {\r\n            throw new TypeError(`Invalid key for this operation, its \"key_ops\" must include \"${expectedKeyOp}\" when present`);\r\n        }\r\n    }\r\n    return true;\r\n};\r\nconst symmetricTypeCheck = (alg, key, usage) => {\r\n    if (key instanceof Uint8Array)\r\n        return;\r\n    if (jwk.isJWK(key)) {\r\n        if (jwk.isSecretJWK(key) && jwkMatchesOp(alg, key, usage))\r\n            return;\r\n        throw new TypeError(`JSON Web Key for symmetric algorithms must have JWK \"kty\" (Key Type) equal to \"oct\" and the JWK \"k\" (Key Value) present`);\r\n    }\r\n    if (!isKeyLike(key)) {\r\n        throw new TypeError(invalidKeyInput(alg, key, 'CryptoKey', 'KeyObject', 'JSON Web Key', 'Uint8Array'));\r\n    }\r\n    if (key.type !== 'secret') {\r\n        throw new TypeError(`${tag(key)} instances for symmetric algorithms must be of type \"secret\"`);\r\n    }\r\n};\r\nconst asymmetricTypeCheck = (alg, key, usage) => {\r\n    if (jwk.isJWK(key)) {\r\n        switch (usage) {\r\n            case 'decrypt':\r\n            case 'sign':\r\n                if (jwk.isPrivateJWK(key) && jwkMatchesOp(alg, key, usage))\r\n                    return;\r\n                throw new TypeError(`JSON Web Key for this operation be a private JWK`);\r\n            case 'encrypt':\r\n            case 'verify':\r\n                if (jwk.isPublicJWK(key) && jwkMatchesOp(alg, key, usage))\r\n                    return;\r\n                throw new TypeError(`JSON Web Key for this operation be a public JWK`);\r\n        }\r\n    }\r\n    if (!isKeyLike(key)) {\r\n        throw new TypeError(invalidKeyInput(alg, key, 'CryptoKey', 'KeyObject', 'JSON Web Key'));\r\n    }\r\n    if (key.type === 'secret') {\r\n        throw new TypeError(`${tag(key)} instances for asymmetric algorithms must not be of type \"secret\"`);\r\n    }\r\n    if (key.type === 'public') {\r\n        switch (usage) {\r\n            case 'sign':\r\n                throw new TypeError(`${tag(key)} instances for asymmetric algorithm signing must be of type \"private\"`);\r\n            case 'decrypt':\r\n                throw new TypeError(`${tag(key)} instances for asymmetric algorithm decryption must be of type \"private\"`);\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n    if (key.type === 'private') {\r\n        switch (usage) {\r\n            case 'verify':\r\n                throw new TypeError(`${tag(key)} instances for asymmetric algorithm verifying must be of type \"public\"`);\r\n            case 'encrypt':\r\n                throw new TypeError(`${tag(key)} instances for asymmetric algorithm encryption must be of type \"public\"`);\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n};\r\nexport default (alg, key, usage) => {\r\n    const symmetric = alg.startsWith('HS') ||\r\n        alg === 'dir' ||\r\n        alg.startsWith('PBES2') ||\r\n        /^A(?:128|192|256)(?:GCM)?(?:KW)?$/.test(alg) ||\r\n        /^A(?:128|192|256)CBC-HS(?:256|384|512)$/.test(alg);\r\n    if (symmetric) {\r\n        symmetricTypeCheck(alg, key, usage);\r\n    }\r\n    else {\r\n        asymmetricTypeCheck(alg, key, usage);\r\n    }\r\n};\r\n", "import { flattenedVerify } from '../flattened/verify.js';\r\nimport { JWSInvalid } from '../../util/errors.js';\r\nimport { decoder } from '../../lib/buffer_utils.js';\r\nexport async function compactVerify(jws, key, options) {\r\n    if (jws instanceof Uint8Array) {\r\n        jws = decoder.decode(jws);\r\n    }\r\n    if (typeof jws !== 'string') {\r\n        throw new JWSInvalid('Compact JWS must be a string or Uint8Array');\r\n    }\r\n    const { 0: protectedHeader, 1: payload, 2: signature, length } = jws.split('.');\r\n    if (length !== 3) {\r\n        throw new JWSInvalid('Invalid Compact JWS');\r\n    }\r\n    const verified = await flattenedVerify({ payload, protected: protectedHeader, signature }, key, options);\r\n    const result = { payload: verified.payload, protectedHeader: verified.protectedHeader };\r\n    if (typeof key === 'function') {\r\n        return { ...result, key: verified.key };\r\n    }\r\n    return result;\r\n}\r\n", "import { decode as b64u } from '../../util/base64url.js';\r\nimport verify from '../../lib/verify.js';\r\nimport { JOSEAlgNotAllowed, JWSInvalid, JWSSignatureVerificationFailed } from '../../util/errors.js';\r\nimport { concat, encoder, decoder } from '../../lib/buffer_utils.js';\r\nimport isDisjoint from '../../lib/is_disjoint.js';\r\nimport isObject from '../../lib/is_object.js';\r\nimport checkKeyType from '../../lib/check_key_type.js';\r\nimport validateCrit from '../../lib/validate_crit.js';\r\nimport validateAlgorithms from '../../lib/validate_algorithms.js';\r\nimport normalizeKey from '../../lib/normalize_key.js';\r\nexport async function flattenedVerify(jws, key, options) {\r\n    if (!isObject(jws)) {\r\n        throw new JWSInvalid('Flattened JWS must be an object');\r\n    }\r\n    if (jws.protected === undefined && jws.header === undefined) {\r\n        throw new JWSInvalid('Flattened JWS must have either of the \"protected\" or \"header\" members');\r\n    }\r\n    if (jws.protected !== undefined && typeof jws.protected !== 'string') {\r\n        throw new JWSInvalid('JWS Protected Header incorrect type');\r\n    }\r\n    if (jws.payload === undefined) {\r\n        throw new JWSInvalid('JWS Payload missing');\r\n    }\r\n    if (typeof jws.signature !== 'string') {\r\n        throw new JWSInvalid('JWS Signature missing or incorrect type');\r\n    }\r\n    if (jws.header !== undefined && !isObject(jws.header)) {\r\n        throw new JWSInvalid('JWS Unprotected Header incorrect type');\r\n    }\r\n    let parsedProt = {};\r\n    if (jws.protected) {\r\n        try {\r\n            const protectedHeader = b64u(jws.protected);\r\n            parsedProt = JSON.parse(decoder.decode(protectedHeader));\r\n        }\r\n        catch {\r\n            throw new JWSInvalid('JWS Protected Header is invalid');\r\n        }\r\n    }\r\n    if (!isDisjoint(parsedProt, jws.header)) {\r\n        throw new JWSInvalid('JWS Protected and JWS Unprotected Header Parameter names must be disjoint');\r\n    }\r\n    const joseHeader = {\r\n        ...parsedProt,\r\n        ...jws.header,\r\n    };\r\n    const extensions = validateCrit(JWSInvalid, new Map([['b64', true]]), options?.crit, parsedProt, joseHeader);\r\n    let b64 = true;\r\n    if (extensions.has('b64')) {\r\n        b64 = parsedProt.b64;\r\n        if (typeof b64 !== 'boolean') {\r\n            throw new JWSInvalid('The \"b64\" (base64url-encode payload) Header Parameter must be a boolean');\r\n        }\r\n    }\r\n    const { alg } = joseHeader;\r\n    if (typeof alg !== 'string' || !alg) {\r\n        throw new JWSInvalid('JWS \"alg\" (Algorithm) Header Parameter missing or invalid');\r\n    }\r\n    const algorithms = options && validateAlgorithms('algorithms', options.algorithms);\r\n    if (algorithms && !algorithms.has(alg)) {\r\n        throw new JOSEAlgNotAllowed('\"alg\" (Algorithm) Header Parameter value not allowed');\r\n    }\r\n    if (b64) {\r\n        if (typeof jws.payload !== 'string') {\r\n            throw new JWSInvalid('JWS Payload must be a string');\r\n        }\r\n    }\r\n    else if (typeof jws.payload !== 'string' && !(jws.payload instanceof Uint8Array)) {\r\n        throw new JWSInvalid('JWS Payload must be a string or an Uint8Array instance');\r\n    }\r\n    let resolvedKey = false;\r\n    if (typeof key === 'function') {\r\n        key = await key(parsedProt, jws);\r\n        resolvedKey = true;\r\n    }\r\n    checkKeyType(alg, key, 'verify');\r\n    const data = concat(encoder.encode(jws.protected ?? ''), encoder.encode('.'), typeof jws.payload === 'string' ? encoder.encode(jws.payload) : jws.payload);\r\n    let signature;\r\n    try {\r\n        signature = b64u(jws.signature);\r\n    }\r\n    catch {\r\n        throw new JWSInvalid('Failed to base64url decode the signature');\r\n    }\r\n    const k = await normalizeKey(key, alg);\r\n    const verified = await verify(alg, k, signature, data);\r\n    if (!verified) {\r\n        throw new JWSSignatureVerificationFailed();\r\n    }\r\n    let payload;\r\n    if (b64) {\r\n        try {\r\n            payload = b64u(jws.payload);\r\n        }\r\n        catch {\r\n            throw new JWSInvalid('Failed to base64url decode the payload');\r\n        }\r\n    }\r\n    else if (typeof jws.payload === 'string') {\r\n        payload = encoder.encode(jws.payload);\r\n    }\r\n    else {\r\n        payload = jws.payload;\r\n    }\r\n    const result = { payload };\r\n    if (jws.protected !== undefined) {\r\n        result.protectedHeader = parsedProt;\r\n    }\r\n    if (jws.header !== undefined) {\r\n        result.unprotectedHeader = jws.header;\r\n    }\r\n    if (resolvedKey) {\r\n        return { ...result, key: k };\r\n    }\r\n    return result;\r\n}\r\n", "import subtleAlgorithm from './subtle_dsa.js';\r\nimport checkKeyLength from './check_key_length.js';\r\nimport getVerifyKey from './get_sign_verify_key.js';\r\nexport default async (alg, key, signature, data) => {\r\n    const cryptoKey = await getVerifyKey(alg, key, 'verify');\r\n    checkKeyLength(alg, cryptoKey);\r\n    const algorithm = subtleAlgorithm(alg, cryptoKey.algorithm);\r\n    try {\r\n        return await crypto.subtle.verify(algorithm, cryptoKey, signature, data);\r\n    }\r\n    catch {\r\n        return false;\r\n    }\r\n};\r\n", "import { JOSENotSupported } from '../util/errors.js';\r\nexport default (alg, algorithm) => {\r\n    const hash = `SHA-${alg.slice(-3)}`;\r\n    switch (alg) {\r\n        case 'HS256':\r\n        case 'HS384':\r\n        case 'HS512':\r\n            return { hash, name: 'HMAC' };\r\n        case 'PS256':\r\n        case 'PS384':\r\n        case 'PS512':\r\n            return { hash, name: 'RSA-PSS', saltLength: parseInt(alg.slice(-3), 10) >> 3 };\r\n        case 'RS256':\r\n        case 'RS384':\r\n        case 'RS512':\r\n            return { hash, name: 'RSASSA-PKCS1-v1_5' };\r\n        case 'ES256':\r\n        case 'ES384':\r\n        case 'ES512':\r\n            return { hash, name: 'ECDSA', namedCurve: algorithm.namedCurve };\r\n        case 'Ed25519':\r\n        case 'EdDSA':\r\n            return { name: 'Ed25519' };\r\n        case 'ML-DSA-44':\r\n        case 'ML-DSA-65':\r\n        case 'ML-DSA-87':\r\n            return { name: alg };\r\n        default:\r\n            throw new JOSENotSupported(`alg ${alg} is not supported either by JOSE or your javascript runtime`);\r\n    }\r\n};\r\n", "import { checkSigCryptoKey } from './crypto_key.js';\r\nimport invalidKeyInput from './invalid_key_input.js';\r\nexport default async (alg, key, usage) => {\r\n    if (key instanceof Uint8Array) {\r\n        if (!alg.startsWith('HS')) {\r\n            throw new TypeError(invalidKeyInput(key, 'CryptoKey', 'KeyObject', 'JSON Web Key'));\r\n        }\r\n        return crypto.subtle.importKey('raw', key, { hash: `SHA-${alg.slice(-3)}`, name: 'HMAC' }, false, [usage]);\r\n    }\r\n    checkSigCryptoKey(key, alg, usage);\r\n    return key;\r\n};\r\n", "import { compactVerify } from '../jws/compact/verify.js';\r\nimport { validateClaimsSet } from '../lib/jwt_claims_set.js';\r\nimport { JWTInvalid } from '../util/errors.js';\r\nexport async function jwtVerify(jwt, key, options) {\r\n    const verified = await compactVerify(jwt, key, options);\r\n    if (verified.protectedHeader.crit?.includes('b64') && verified.protectedHeader.b64 === false) {\r\n        throw new JWTInvalid('JWTs MUST NOT use unencoded payload');\r\n    }\r\n    const payload = validateClaimsSet(verified.protectedHeader, verified.payload, options);\r\n    const result = { payload, protectedHeader: verified.protectedHeader };\r\n    if (typeof key === 'function') {\r\n        return { ...result, key: verified.key };\r\n    }\r\n    return result;\r\n}\r\n", "import { JWTClaimValidationFailed, JWTExpired, JWTInvalid } from '../util/errors.js';\r\nimport { decoder } from './buffer_utils.js';\r\nimport epoch from './epoch.js';\r\nimport secs from './secs.js';\r\nimport isObject from './is_object.js';\r\nimport { encoder } from './buffer_utils.js';\r\nfunction validateInput(label, input) {\r\n    if (!Number.isFinite(input)) {\r\n        throw new TypeError(`Invalid ${label} input`);\r\n    }\r\n    return input;\r\n}\r\nconst normalizeTyp = (value) => {\r\n    if (value.includes('/')) {\r\n        return value.toLowerCase();\r\n    }\r\n    return `application/${value.toLowerCase()}`;\r\n};\r\nconst checkAudiencePresence = (audPayload, audOption) => {\r\n    if (typeof audPayload === 'string') {\r\n        return audOption.includes(audPayload);\r\n    }\r\n    if (Array.isArray(audPayload)) {\r\n        return audOption.some(Set.prototype.has.bind(new Set(audPayload)));\r\n    }\r\n    return false;\r\n};\r\nexport function validateClaimsSet(protectedHeader, encodedPayload, options = {}) {\r\n    let payload;\r\n    try {\r\n        payload = JSON.parse(decoder.decode(encodedPayload));\r\n    }\r\n    catch {\r\n    }\r\n    if (!isObject(payload)) {\r\n        throw new JWTInvalid('JWT Claims Set must be a top-level JSON object');\r\n    }\r\n    const { typ } = options;\r\n    if (typ &&\r\n        (typeof protectedHeader.typ !== 'string' ||\r\n            normalizeTyp(protectedHeader.typ) !== normalizeTyp(typ))) {\r\n        throw new JWTClaimValidationFailed('unexpected \"typ\" JWT header value', payload, 'typ', 'check_failed');\r\n    }\r\n    const { requiredClaims = [], issuer, subject, audience, maxTokenAge } = options;\r\n    const presenceCheck = [...requiredClaims];\r\n    if (maxTokenAge !== undefined)\r\n        presenceCheck.push('iat');\r\n    if (audience !== undefined)\r\n        presenceCheck.push('aud');\r\n    if (subject !== undefined)\r\n        presenceCheck.push('sub');\r\n    if (issuer !== undefined)\r\n        presenceCheck.push('iss');\r\n    for (const claim of new Set(presenceCheck.reverse())) {\r\n        if (!(claim in payload)) {\r\n            throw new JWTClaimValidationFailed(`missing required \"${claim}\" claim`, payload, claim, 'missing');\r\n        }\r\n    }\r\n    if (issuer &&\r\n        !(Array.isArray(issuer) ? issuer : [issuer]).includes(payload.iss)) {\r\n        throw new JWTClaimValidationFailed('unexpected \"iss\" claim value', payload, 'iss', 'check_failed');\r\n    }\r\n    if (subject && payload.sub !== subject) {\r\n        throw new JWTClaimValidationFailed('unexpected \"sub\" claim value', payload, 'sub', 'check_failed');\r\n    }\r\n    if (audience &&\r\n        !checkAudiencePresence(payload.aud, typeof audience === 'string' ? [audience] : audience)) {\r\n        throw new JWTClaimValidationFailed('unexpected \"aud\" claim value', payload, 'aud', 'check_failed');\r\n    }\r\n    let tolerance;\r\n    switch (typeof options.clockTolerance) {\r\n        case 'string':\r\n            tolerance = secs(options.clockTolerance);\r\n            break;\r\n        case 'number':\r\n            tolerance = options.clockTolerance;\r\n            break;\r\n        case 'undefined':\r\n            tolerance = 0;\r\n            break;\r\n        default:\r\n            throw new TypeError('Invalid clockTolerance option type');\r\n    }\r\n    const { currentDate } = options;\r\n    const now = epoch(currentDate || new Date());\r\n    if ((payload.iat !== undefined || maxTokenAge) && typeof payload.iat !== 'number') {\r\n        throw new JWTClaimValidationFailed('\"iat\" claim must be a number', payload, 'iat', 'invalid');\r\n    }\r\n    if (payload.nbf !== undefined) {\r\n        if (typeof payload.nbf !== 'number') {\r\n            throw new JWTClaimValidationFailed('\"nbf\" claim must be a number', payload, 'nbf', 'invalid');\r\n        }\r\n        if (payload.nbf > now + tolerance) {\r\n            throw new JWTClaimValidationFailed('\"nbf\" claim timestamp check failed', payload, 'nbf', 'check_failed');\r\n        }\r\n    }\r\n    if (payload.exp !== undefined) {\r\n        if (typeof payload.exp !== 'number') {\r\n            throw new JWTClaimValidationFailed('\"exp\" claim must be a number', payload, 'exp', 'invalid');\r\n        }\r\n        if (payload.exp <= now - tolerance) {\r\n            throw new JWTExpired('\"exp\" claim timestamp check failed', payload, 'exp', 'check_failed');\r\n        }\r\n    }\r\n    if (maxTokenAge) {\r\n        const age = now - payload.iat;\r\n        const max = typeof maxTokenAge === 'number' ? maxTokenAge : secs(maxTokenAge);\r\n        if (age - tolerance > max) {\r\n            throw new JWTExpired('\"iat\" claim timestamp check failed (too far in the past)', payload, 'iat', 'check_failed');\r\n        }\r\n        if (age < 0 - tolerance) {\r\n            throw new JWTClaimValidationFailed('\"iat\" claim timestamp check failed (it should be in the past)', payload, 'iat', 'check_failed');\r\n        }\r\n    }\r\n    return payload;\r\n}\r\nexport class JWTClaimsBuilder {\r\n    #payload;\r\n    constructor(payload) {\r\n        if (!isObject(payload)) {\r\n            throw new TypeError('JWT Claims Set MUST be an object');\r\n        }\r\n        this.#payload = structuredClone(payload);\r\n    }\r\n    data() {\r\n        return encoder.encode(JSON.stringify(this.#payload));\r\n    }\r\n    get iss() {\r\n        return this.#payload.iss;\r\n    }\r\n    set iss(value) {\r\n        this.#payload.iss = value;\r\n    }\r\n    get sub() {\r\n        return this.#payload.sub;\r\n    }\r\n    set sub(value) {\r\n        this.#payload.sub = value;\r\n    }\r\n    get aud() {\r\n        return this.#payload.aud;\r\n    }\r\n    set aud(value) {\r\n        this.#payload.aud = value;\r\n    }\r\n    set jti(value) {\r\n        this.#payload.jti = value;\r\n    }\r\n    set nbf(value) {\r\n        if (typeof value === 'number') {\r\n            this.#payload.nbf = validateInput('setNotBefore', value);\r\n        }\r\n        else if (value instanceof Date) {\r\n            this.#payload.nbf = validateInput('setNotBefore', epoch(value));\r\n        }\r\n        else {\r\n            this.#payload.nbf = epoch(new Date()) + secs(value);\r\n        }\r\n    }\r\n    set exp(value) {\r\n        if (typeof value === 'number') {\r\n            this.#payload.exp = validateInput('setExpirationTime', value);\r\n        }\r\n        else if (value instanceof Date) {\r\n            this.#payload.exp = validateInput('setExpirationTime', epoch(value));\r\n        }\r\n        else {\r\n            this.#payload.exp = epoch(new Date()) + secs(value);\r\n        }\r\n    }\r\n    set iat(value) {\r\n        if (typeof value === 'undefined') {\r\n            this.#payload.iat = epoch(new Date());\r\n        }\r\n        else if (value instanceof Date) {\r\n            this.#payload.iat = validateInput('setIssuedAt', epoch(value));\r\n        }\r\n        else if (typeof value === 'string') {\r\n            this.#payload.iat = validateInput('setIssuedAt', epoch(new Date()) + secs(value));\r\n        }\r\n        else {\r\n            this.#payload.iat = validateInput('setIssuedAt', value);\r\n        }\r\n    }\r\n}\r\n", "export default (date) => Math.floor(date.getTime() / 1000);\r\n", "const minute = 60;\r\nconst hour = minute * 60;\r\nconst day = hour * 24;\r\nconst week = day * 7;\r\nconst year = day * 365.25;\r\nconst REGEX = /^(\\+|\\-)? ?(\\d+|\\d+\\.\\d+) ?(seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)(?: (ago|from now))?$/i;\r\nexport default (str) => {\r\n    const matched = REGEX.exec(str);\r\n    if (!matched || (matched[4] && matched[1])) {\r\n        throw new TypeError('Invalid time period format');\r\n    }\r\n    const value = parseFloat(matched[2]);\r\n    const unit = matched[3].toLowerCase();\r\n    let numericDate;\r\n    switch (unit) {\r\n        case 'sec':\r\n        case 'secs':\r\n        case 'second':\r\n        case 'seconds':\r\n        case 's':\r\n            numericDate = Math.round(value);\r\n            break;\r\n        case 'minute':\r\n        case 'minutes':\r\n        case 'min':\r\n        case 'mins':\r\n        case 'm':\r\n            numericDate = Math.round(value * minute);\r\n            break;\r\n        case 'hour':\r\n        case 'hours':\r\n        case 'hr':\r\n        case 'hrs':\r\n        case 'h':\r\n            numericDate = Math.round(value * hour);\r\n            break;\r\n        case 'day':\r\n        case 'days':\r\n        case 'd':\r\n            numericDate = Math.round(value * day);\r\n            break;\r\n        case 'week':\r\n        case 'weeks':\r\n        case 'w':\r\n            numericDate = Math.round(value * week);\r\n            break;\r\n        default:\r\n            numericDate = Math.round(value * year);\r\n            break;\r\n    }\r\n    if (matched[1] === '-' || matched[4] === 'ago') {\r\n        return -numericDate;\r\n    }\r\n    return numericDate;\r\n};\r\n", "import { FlattenedSign } from '../flattened/sign.js';\r\nexport class CompactSign {\r\n    #flattened;\r\n    constructor(payload) {\r\n        this.#flattened = new FlattenedSign(payload);\r\n    }\r\n    setProtectedHeader(protectedHeader) {\r\n        this.#flattened.setProtectedHeader(protectedHeader);\r\n        return this;\r\n    }\r\n    async sign(key, options) {\r\n        const jws = await this.#flattened.sign(key, options);\r\n        if (jws.payload === undefined) {\r\n            throw new TypeError('use the flattened module for creating JWS with b64: false');\r\n        }\r\n        return `${jws.protected}.${jws.payload}.${jws.signature}`;\r\n    }\r\n}\r\n", "import { encode as b64u } from '../../util/base64url.js';\r\nimport sign from '../../lib/sign.js';\r\nimport isDisjoint from '../../lib/is_disjoint.js';\r\nimport { JWSInvalid } from '../../util/errors.js';\r\nimport { encoder, decoder, concat } from '../../lib/buffer_utils.js';\r\nimport checkKeyType from '../../lib/check_key_type.js';\r\nimport validateCrit from '../../lib/validate_crit.js';\r\nimport normalizeKey from '../../lib/normalize_key.js';\r\nexport class FlattenedSign {\r\n    #payload;\r\n    #protectedHeader;\r\n    #unprotectedHeader;\r\n    constructor(payload) {\r\n        if (!(payload instanceof Uint8Array)) {\r\n            throw new TypeError('payload must be an instance of Uint8Array');\r\n        }\r\n        this.#payload = payload;\r\n    }\r\n    setProtectedHeader(protectedHeader) {\r\n        if (this.#protectedHeader) {\r\n            throw new TypeError('setProtectedHeader can only be called once');\r\n        }\r\n        this.#protectedHeader = protectedHeader;\r\n        return this;\r\n    }\r\n    setUnprotectedHeader(unprotectedHeader) {\r\n        if (this.#unprotectedHeader) {\r\n            throw new TypeError('setUnprotectedHeader can only be called once');\r\n        }\r\n        this.#unprotectedHeader = unprotectedHeader;\r\n        return this;\r\n    }\r\n    async sign(key, options) {\r\n        if (!this.#protectedHeader && !this.#unprotectedHeader) {\r\n            throw new JWSInvalid('either setProtectedHeader or setUnprotectedHeader must be called before #sign()');\r\n        }\r\n        if (!isDisjoint(this.#protectedHeader, this.#unprotectedHeader)) {\r\n            throw new JWSInvalid('JWS Protected and JWS Unprotected Header Parameter names must be disjoint');\r\n        }\r\n        const joseHeader = {\r\n            ...this.#protectedHeader,\r\n            ...this.#unprotectedHeader,\r\n        };\r\n        const extensions = validateCrit(JWSInvalid, new Map([['b64', true]]), options?.crit, this.#protectedHeader, joseHeader);\r\n        let b64 = true;\r\n        if (extensions.has('b64')) {\r\n            b64 = this.#protectedHeader.b64;\r\n            if (typeof b64 !== 'boolean') {\r\n                throw new JWSInvalid('The \"b64\" (base64url-encode payload) Header Parameter must be a boolean');\r\n            }\r\n        }\r\n        const { alg } = joseHeader;\r\n        if (typeof alg !== 'string' || !alg) {\r\n            throw new JWSInvalid('JWS \"alg\" (Algorithm) Header Parameter missing or invalid');\r\n        }\r\n        checkKeyType(alg, key, 'sign');\r\n        let payload = this.#payload;\r\n        if (b64) {\r\n            payload = encoder.encode(b64u(payload));\r\n        }\r\n        let protectedHeader;\r\n        if (this.#protectedHeader) {\r\n            protectedHeader = encoder.encode(b64u(JSON.stringify(this.#protectedHeader)));\r\n        }\r\n        else {\r\n            protectedHeader = encoder.encode('');\r\n        }\r\n        const data = concat(protectedHeader, encoder.encode('.'), payload);\r\n        const k = await normalizeKey(key, alg);\r\n        const signature = await sign(alg, k, data);\r\n        const jws = {\r\n            signature: b64u(signature),\r\n            payload: '',\r\n        };\r\n        if (b64) {\r\n            jws.payload = decoder.decode(payload);\r\n        }\r\n        if (this.#unprotectedHeader) {\r\n            jws.header = this.#unprotectedHeader;\r\n        }\r\n        if (this.#protectedHeader) {\r\n            jws.protected = decoder.decode(protectedHeader);\r\n        }\r\n        return jws;\r\n    }\r\n}\r\n", "import subtleAlgorithm from './subtle_dsa.js';\r\nimport checkKeyLength from './check_key_length.js';\r\nimport getSignKey from './get_sign_verify_key.js';\r\nexport default async (alg, key, data) => {\r\n    const cryptoKey = await getSignKey(alg, key, 'sign');\r\n    checkKeyLength(alg, cryptoKey);\r\n    const signature = await crypto.subtle.sign(subtleAlgorithm(alg, cryptoKey.algorithm), cryptoKey, data);\r\n    return new Uint8Array(signature);\r\n};\r\n", "import { CompactSign } from '../jws/compact/sign.js';\r\nimport { JWTInvalid } from '../util/errors.js';\r\nimport { JWTClaimsBuilder } from '../lib/jwt_claims_set.js';\r\nexport class SignJWT {\r\n    #protectedHeader;\r\n    #jwt;\r\n    constructor(payload = {}) {\r\n        this.#jwt = new JWTClaimsBuilder(payload);\r\n    }\r\n    setIssuer(issuer) {\r\n        this.#jwt.iss = issuer;\r\n        return this;\r\n    }\r\n    setSubject(subject) {\r\n        this.#jwt.sub = subject;\r\n        return this;\r\n    }\r\n    setAudience(audience) {\r\n        this.#jwt.aud = audience;\r\n        return this;\r\n    }\r\n    setJti(jwtId) {\r\n        this.#jwt.jti = jwtId;\r\n        return this;\r\n    }\r\n    setNotBefore(input) {\r\n        this.#jwt.nbf = input;\r\n        return this;\r\n    }\r\n    setExpirationTime(input) {\r\n        this.#jwt.exp = input;\r\n        return this;\r\n    }\r\n    setIssuedAt(input) {\r\n        this.#jwt.iat = input;\r\n        return this;\r\n    }\r\n    setProtectedHeader(protectedHeader) {\r\n        this.#protectedHeader = protectedHeader;\r\n        return this;\r\n    }\r\n    async sign(key, options) {\r\n        const sig = new CompactSign(this.#jwt.data());\r\n        sig.setProtectedHeader(this.#protectedHeader);\r\n        if (Array.isArray(this.#protectedHeader?.crit) &&\r\n            this.#protectedHeader.crit.includes('b64') &&\r\n            this.#protectedHeader.b64 === false) {\r\n            throw new JWTInvalid('JWTs MUST NOT use unencoded payload');\r\n        }\r\n        return sig.sign(key, options);\r\n    }\r\n}\r\n", "import { jwtVerify } from 'jose';\r\nimport type { Context, Next } from 'hono';\r\nimport { users } from '../db';\r\nimport { eq } from 'drizzle-orm';\r\n\r\nexport function requireAuth() {\r\n  return async (c: Context, next: Next) => {\r\n    const auth = c.req.header('authorization') || '';\r\n    const token = auth.startsWith('Bearer ') ? auth.slice(7) : null;\r\n    if (!token) return c.json({ error: 'Unauthorized' }, 401);\r\n\r\n    try {\r\n      const { payload } = await jwtVerify(\r\n        token,\r\n        new TextEncoder().encode(process.env.JWT_SECRET)\r\n      );\r\n      const userId = String(payload.sub);\r\n\r\n      // \uD83D\uDC47 pega o db do contexto (withDb precisa estar registrado antes)\r\n      const db = c.get('db');\r\n\r\n      // invalida sess\u00F5es emitidas antes de passwordChangedAt\r\n      const row = await db.query.users.findFirst({\r\n        where: (t, { eq }) => eq(t.id, userId),\r\n        columns: { passwordChangedAt: true },\r\n      });\r\n\r\n      const iatMs = payload.iat ? Number(payload.iat) * 1000 : 0;\r\n      if (row?.passwordChangedAt && iatMs < row.passwordChangedAt.getTime()) {\r\n        return c.json({ error: 'Sess\u00E3o expirada. Fa\u00E7a login novamente.' }, 401);\r\n      }\r\n\r\n      c.set('auth', { userId, iat: payload.iat });\r\n      await next();\r\n    } catch {\r\n      return c.json({ error: 'Unauthorized' }, 401);\r\n    }\r\n  };\r\n}\r\n", "// src/routes/users.ts\r\nimport { Hono } from 'hono';\r\nimport { requireAuth, requireRole } from '../lib/auth';\r\nimport { users } from '../db/tables/users';\r\nimport { eq, like, sql } from 'drizzle-orm';\r\nimport bcrypt from 'bcryptjs';\r\nimport type { Env, CtxVars } from '../lib/types';\r\n\r\nexport const usersRouter = new Hono<{ Bindings: Env; Variables: CtxVars }>();\r\n\r\n// \uD83D\uDD12 todas exigem login\r\nusersRouter.use('*', requireAuth());\r\n\r\n/* ======================\r\n   LISTAR (admin) com pagina\u00E7\u00E3o e filtro seguros\r\n====================== */\r\nusersRouter.get('/', requireRole('admin'), async (c) => {\r\n  try {\r\n    const db = c.var.db;\r\n    const q = (c.req.query('q') ?? '').trim();\r\n\r\n    // \uD83D\uDD39 pagina\u00E7\u00E3o\r\n    const rawPage = parseInt(c.req.query('page') ?? '1', 10);\r\n    const limit = parseInt(c.req.query('limit') ?? '10', 10);\r\n\r\n    // \uD83D\uDD39 filtro de busca\r\n    const where = q\r\n      ? sql`${users.name} ILIKE ${'%' + q + '%'} OR ${users.email} ILIKE ${'%' + q + '%'}`\r\n      : undefined;\r\n\r\n    // \uD83D\uDD39 total de registros (considerando o filtro)\r\n    const totalResult = await db\r\n      .select({ count: sql<number>`count(*)`.mapWith(Number) })\r\n      .from(users)\r\n      .where(where);\r\n\r\n    const total = totalResult[0]?.count ?? 0;\r\n    const totalPages = Math.max(Math.ceil(total / limit), 1);\r\n\r\n    // \uD83D\uDD39 for\u00E7a p\u00E1gina dentro do limite\r\n    const page = Math.min(Math.max(rawPage, 1), totalPages);\r\n    const offset = (page - 1) * limit;\r\n\r\n    // \uD83D\uDD39 busca paginada\r\n    let query = db\r\n      .select({\r\n        id: users.id,\r\n        name: users.name,\r\n        email: users.email,\r\n      })\r\n      .from(users)\r\n      .limit(limit)\r\n      .offset(offset);\r\n\r\n    if (where) query = query.where(where);\r\n\r\n    const rows = await query;\r\n\r\n    // \uD83D\uDD39 headers pro frontend\r\n    c.header('X-Total-Count', String(total));\r\n    c.header('X-Total-Pages', String(totalPages));\r\n    c.header('X-Current-Page', String(page));\r\n\r\n    return c.json(rows);\r\n  } catch (err) {\r\n    console.error('Erro ao listar usu\u00E1rios:', err);\r\n    return c.json({ error: 'Falha ao buscar usu\u00E1rios' }, 500);\r\n  }\r\n});\r\n\r\n\r\n/* ======================\r\n   CRIAR (admin)\r\n====================== */\r\nusersRouter.post('/', requireRole('admin'), async (c) => {\r\n  try {\r\n    const db = c.var.db;\r\n    const { name, email, password } = await c.req.json<{\r\n      name: string;\r\n      email: string;\r\n      password: string;\r\n    }>();\r\n\r\n    if (!name || !email || !password) {\r\n      return c.json({ error: 'Nome, e-mail e senha s\u00E3o obrigat\u00F3rios' }, 400);\r\n    }\r\n\r\n    // \uD83D\uDD0E checar se j\u00E1 existe\r\n    const [exists] = await db\r\n      .select({ id: users.id })\r\n      .from(users)\r\n      .where(eq(users.email, email.toLowerCase()))\r\n      .limit(1);\r\n\r\n    if (exists) {\r\n      return c.json({ error: 'E-mail j\u00E1 cadastrado' }, 409);\r\n    }\r\n\r\n    const hash = await bcrypt.hash(password, 10);\r\n    const [created] = await db\r\n      .insert(users)\r\n      .values({ name, email: email.toLowerCase(), passwordHash: hash })\r\n      .returning({ id: users.id, name: users.name, email: users.email });\r\n\r\n    return c.json(created, 201);\r\n  } catch (err) {\r\n    console.error('Erro ao criar usu\u00E1rio:', err);\r\n    return c.json({ error: 'Falha ao criar usu\u00E1rio' }, 500);\r\n  }\r\n});\r\n\r\n/* ======================\r\n   EXCLUIR (admin)\r\n====================== */\r\nusersRouter.delete('/:id', requireRole('admin'), async (c) => {\r\n  try {\r\n    const db = c.var.db;\r\n    const id = c.req.param('id');\r\n    const currentUserId = c.var.userId; // <-- vem do token\r\n\r\n    // \uD83D\uDEAB n\u00E3o permitir que o usu\u00E1rio delete a si mesmo\r\n    if (id === currentUserId) {\r\n      return c.json({ error: 'Voc\u00EA n\u00E3o pode excluir a si mesmo.' }, 403);\r\n    }\r\n\r\n    const deleted = await db.delete(users).where(eq(users.id, id));\r\n    if (deleted.rowCount === 0) {\r\n      return c.json({ error: 'Usu\u00E1rio n\u00E3o encontrado' }, 404);\r\n    }\r\n\r\n    return c.body(null, 204);\r\n  } catch (err) {\r\n    console.error('Erro ao excluir usu\u00E1rio:', err);\r\n    return c.json({ error: 'Falha ao excluir usu\u00E1rio' }, 500);\r\n  }\r\n});\r\n\r\n\r\n/* ======================\r\n   ATUALIZAR (admin ou pr\u00F3prio usu\u00E1rio)\r\n====================== */\r\nusersRouter.put('/:id', requireAuth(), async (c) => {\r\n  try {\r\n    const db = c.var.db;\r\n    const id = c.req.param('id');\r\n    const currentUserId = c.var.userId;\r\n    const { name, email, password } = await c.req.json<{\r\n      name?: string;\r\n      email?: string;\r\n      password?: string;\r\n    }>();\r\n\r\n    // \uD83D\uDEAB s\u00F3 admin ou o pr\u00F3prio usu\u00E1rio pode editar\r\n    const role = c.var.role;\r\n    if (id !== currentUserId && role !== 'admin') {\r\n      return c.json({ error: 'Sem permiss\u00E3o para editar este usu\u00E1rio.' }, 403);\r\n    }\r\n\r\n    // prepara os campos a atualizar\r\n    const dataToUpdate: Record<string, any> = {};\r\n    if (name) dataToUpdate.name = name;\r\n    if (email) dataToUpdate.email = email.toLowerCase();\r\n    if (password) dataToUpdate.passwordHash = await bcrypt.hash(password, 10);\r\n\r\n    if (Object.keys(dataToUpdate).length === 0) {\r\n      return c.json({ error: 'Nenhum campo para atualizar.' }, 400);\r\n    }\r\n\r\n    const [updated] = await db\r\n      .update(users)\r\n      .set(dataToUpdate)\r\n      .where(eq(users.id, id))\r\n      .returning({ id: users.id, name: users.name, email: users.email });\r\n\r\n    if (!updated) return c.json({ error: 'Usu\u00E1rio n\u00E3o encontrado.' }, 404);\r\n\r\n    return c.json(updated);\r\n  } catch (err) {\r\n    console.error('Erro ao atualizar usu\u00E1rio:', err);\r\n    return c.json({ error: 'Falha ao atualizar usu\u00E1rio' }, 500);\r\n  }\r\n});\r\n\r\n\r\n/* ======================\r\n   OBTER UM USU\u00C1RIO POR ID\r\n====================== */\r\nusersRouter.get('/:id', requireAuth(), async (c) => {\r\n  try {\r\n    const db = c.var.db;\r\n    const id = c.req.param('id');\r\n\r\n    const [user] = await db\r\n      .select({\r\n        id: users.id,\r\n        name: users.name,\r\n        email: users.email,\r\n      })\r\n      .from(users)\r\n      .where(eq(users.id, id))\r\n      .limit(1);\r\n\r\n    if (!user) {\r\n      return c.json({ error: 'Usu\u00E1rio n\u00E3o encontrado' }, 404);\r\n    }\r\n\r\n    return c.json(user);\r\n  } catch (err) {\r\n    console.error('Erro ao buscar usu\u00E1rio por ID:', err);\r\n    return c.json({ error: 'Falha ao buscar usu\u00E1rio' }, 500);\r\n  }\r\n});\r\n\r\n\r\n\r\nexport default usersRouter;\r\n", "// src/lib/auth.ts\r\nimport type { Context, Next } from \"hono\";\r\nimport type { Env, CtxVars } from \"../lib/types\";\r\nimport { verifyJwt } from \"./jwt\";\r\n\r\n/* ============================================\r\n   \uD83D\uDD12 Middleware de autentica\u00E7\u00E3o\r\n============================================ */\r\nexport const requireAuth = () => {\r\n  return async (c: Context<{ Bindings: Env; Variables: CtxVars }>, next: Next) => {\r\n    const authHeader = c.req.header(\"Authorization\");\r\n\r\n    if (!authHeader?.startsWith(\"Bearer \")) {\r\n      return c.json({ error: \"Token ausente ou inv\u00E1lido\" }, 401);\r\n    }\r\n\r\n    const token = authHeader.split(\" \")[1];\r\n\r\n    try {\r\n      const decoded = await verifyJwt(token, c.env.JWT_SECRET);\r\n      if (!decoded?.sub) {\r\n        return c.json({ error: \"Token inv\u00E1lido\" }, 401);\r\n      }\r\n\r\n      // \u2705 Injeta informa\u00E7\u00F5es no contexto\r\n      c.set(\"userId\", decoded.sub);\r\n      c.set(\"role\", decoded.roles?.[0] || \"usuario\"); // assume a primeira role\r\n      c.set(\"roles\", decoded.roles || []);\r\n\r\n      await next();\r\n    } catch (err) {\r\n      console.error(\"Erro no requireAuth:\", err);\r\n      return c.json({ error: \"Token inv\u00E1lido ou expirado\" }, 401);\r\n    }\r\n  };\r\n};\r\n\r\n/* ============================================\r\n   \uD83D\uDEE1 Middleware de autoriza\u00E7\u00E3o (por role)\r\n============================================ */\r\nexport const requireRole = (rolesPermitidas: string | string[]) => {\r\n  return async (c: Context<{ Bindings: Env; Variables: CtxVars }>, next: Next) => {\r\n    const userRoles = c.get(\"roles\") || [];\r\n    const permitido =\r\n      Array.isArray(rolesPermitidas)\r\n        ? rolesPermitidas.some((r) => userRoles.includes(r))\r\n        : userRoles.includes(rolesPermitidas);\r\n\r\n    if (!permitido) {\r\n      return c.json({ error: \"Acesso negado\" }, 403);\r\n    }\r\n\r\n    await next();\r\n  };\r\n};\r\n", "import { Hono } from 'hono';\r\nimport { requestReset, resetPassword } from '../services/passwordReset';\r\nimport type { Env } from '../lib/types';\r\n\r\nexport const passwordResetRoutes = new Hono<{ Bindings: Env }>();\r\n\r\n// 1. Solicitar reset de senha\r\npasswordResetRoutes.post('/request', async (c) => {\r\n  try {\r\n    const { email } = await c.req.json<{ email: string }>();\r\n    if (!email) return c.json({ error: 'E-mail \u00E9 obrigat\u00F3rio' }, 400);\r\n\r\n    const db = c.get('db');\r\n    await requestReset(db, c.env, email);\r\n\r\n    return c.json({ message: 'Se o e-mail existir, enviaremos instru\u00E7\u00F5es.' });\r\n  } catch (err) {\r\n    console.error(err);\r\n    return c.json({ error: 'Erro ao solicitar reset de senha' }, 500);\r\n  }\r\n});\r\n", "import dayjs from 'dayjs';\r\nimport bcrypt from 'bcryptjs';\r\nimport crypto from 'crypto';\r\nimport { and, desc, eq, gt, isNull, ne, sql } from 'drizzle-orm';\r\nimport { users, passwordResetTokens } from '../db';\r\nimport { sendResetEmail } from '../lib/mail';\r\nimport type { Env } from '../lib/types';\r\n\r\nexport async function requestReset(db: any, env: Env, email: string) {\r\n  const u = await db.query.users.findFirst({\r\n    where: (t: any, { eq: eq2 }: any) => eq2(sql`lower(${t.email})`, email.toLowerCase()),\r\n    columns: { id: true, email: true },\r\n  });\r\n  if (!u) return;\r\n\r\n  const tokenPlain = crypto.randomBytes(32).toString('hex');\r\n  const tokenHash  = await bcrypt.hash(tokenPlain, 10);\r\n  const expiresAt  = dayjs().add(1, 'hour').toDate();\r\n\r\n  await db.insert(passwordResetTokens).values({ userId: u.id, tokenHash, expiresAt });\r\n\r\n  const base = env.FRONTEND_URL || 'http://localhost:5173';\r\n  const resetUrl = `${base}/reset-password?token=${tokenPlain}&uid=${u.id}`;\r\n\r\n  // \u2705 Passando env\r\n  await sendResetEmail(u.email, resetUrl, env);\r\n}\r\n", "export * from './tables/users';\r\nexport * from './tables/roles';\r\nexport * from './tables/userRoles';\r\nexport * from './tables/passwordResetTokens';\r\nexport * from './tables/empresas';", "// db/tables/empresas.ts\r\nimport {pgTable, bigserial, varchar, boolean, timestamp, uniqueIndex} from \"drizzle-orm/pg-core\";\r\n\r\nexport const empresas = pgTable(\"empresas\", {\r\n  id: bigserial(\"id\", { mode: \"number\" }).primaryKey(),\r\n  nome: varchar(\"nome\", { length: 255 }).notNull(),\r\n  cnpj: varchar(\"cnpj\", { length: 20 }),                 // opcional\r\n  emailContato: varchar(\"email_contato\", { length: 255 }),\r\n  ativo: boolean(\"ativo\").notNull().default(true),\r\n  createdAt: timestamp(\"created_at\").notNull().defaultNow(),\r\n}, (t) => ({\r\n  // garanta unicidade se usar CNPJ\r\n  uniqCnpj: uniqueIndex(\"ux_empresas_cnpj\").on(t.cnpj),\r\n}));\r\n", "// src/routes/dbping.ts\r\nimport { Hono } from 'hono';\r\nimport { sql } from 'drizzle-orm';\r\nimport { makeDb } from '../db/client';\r\nimport type { Env } from '../lib/types'; // <-- importe seu tipo de bindings\r\n\r\n// tipa o Hono para que c.env seja do tipo Env\r\nconst dbping = new Hono<{ Bindings: Env }>();\r\n\r\ndbping.get('', async (c) => {  // '' = /dbping sem barra final\r\n  const db = makeDb(c.env);    // agora c.env \u00E9 Env, n\u00E3o \"unknown\"\r\n  const result: any = await db.execute(sql`select now()`);\r\n  const row = Array.isArray(result) ? result[0] : result?.rows?.[0];\r\n  return c.json({ now: row?.now ?? null });\r\n});\r\n\r\nexport default dbping;\r\n", "import type { Middleware } from \"./common\";\r\n\r\nconst drainBody: Middleware = async (request, env, _ctx, middlewareCtx) => {\r\n\ttry {\r\n\t\treturn await middlewareCtx.next(request, env);\r\n\t} finally {\r\n\t\ttry {\r\n\t\t\tif (request.body !== null && !request.bodyUsed) {\r\n\t\t\t\tconst reader = request.body.getReader();\r\n\t\t\t\twhile (!(await reader.read()).done) {}\r\n\t\t\t}\r\n\t\t} catch (e) {\r\n\t\t\tconsole.error(\"Failed to drain the unused request body.\", e);\r\n\t\t}\r\n\t}\r\n};\r\n\r\nexport default drainBody;\r\n", "import type { Middleware } from \"./common\";\r\n\r\ninterface JsonError {\r\n\tmessage?: string;\r\n\tname?: string;\r\n\tstack?: string;\r\n\tcause?: JsonError;\r\n}\r\n\r\nfunction reduceError(e: any): JsonError {\r\n\treturn {\r\n\t\tname: e?.name,\r\n\t\tmessage: e?.message ?? String(e),\r\n\t\tstack: e?.stack,\r\n\t\tcause: e?.cause === undefined ? undefined : reduceError(e.cause),\r\n\t};\r\n}\r\n\r\n// See comment in `bundle.ts` for details on why this is needed\r\nconst jsonError: Middleware = async (request, env, _ctx, middlewareCtx) => {\r\n\ttry {\r\n\t\treturn await middlewareCtx.next(request, env);\r\n\t} catch (e: any) {\r\n\t\tconst error = reduceError(e);\r\n\t\treturn Response.json(error, {\r\n\t\t\tstatus: 500,\r\n\t\t\theaders: { \"MF-Experimental-Error-Stack\": \"true\" },\r\n\t\t});\r\n\t}\r\n};\r\n\r\nexport default jsonError;\r\n", "export type Awaitable<T> = T | Promise<T>;\r\n// TODO: allow dispatching more events?\r\nexport type Dispatcher = (\r\n\ttype: \"scheduled\",\r\n\tinit: { cron?: string }\r\n) => Awaitable<void>;\r\n\r\nexport type IncomingRequest = Request<\r\n\tunknown,\r\n\tIncomingRequestCfProperties<unknown>\r\n>;\r\n\r\nexport interface MiddlewareContext {\r\n\tdispatch: Dispatcher;\r\n\tnext(request: IncomingRequest, env: any): Awaitable<Response>;\r\n}\r\n\r\nexport type Middleware = (\r\n\trequest: IncomingRequest,\r\n\tenv: any,\r\n\tctx: ExecutionContext,\r\n\tmiddlewareCtx: MiddlewareContext\r\n) => Awaitable<Response>;\r\n\r\nconst __facade_middleware__: Middleware[] = [];\r\n\r\n// The register functions allow for the insertion of one or many middleware,\r\n// We register internal middleware first in the stack, but have no way of controlling\r\n// the order that addMiddleware is run in service workers so need an internal function.\r\nexport function __facade_register__(...args: (Middleware | Middleware[])[]) {\r\n\t__facade_middleware__.push(...args.flat());\r\n}\r\nexport function __facade_registerInternal__(\r\n\t...args: (Middleware | Middleware[])[]\r\n) {\r\n\t__facade_middleware__.unshift(...args.flat());\r\n}\r\n\r\nfunction __facade_invokeChain__(\r\n\trequest: IncomingRequest,\r\n\tenv: any,\r\n\tctx: ExecutionContext,\r\n\tdispatch: Dispatcher,\r\n\tmiddlewareChain: Middleware[]\r\n): Awaitable<Response> {\r\n\tconst [head, ...tail] = middlewareChain;\r\n\tconst middlewareCtx: MiddlewareContext = {\r\n\t\tdispatch,\r\n\t\tnext(newRequest, newEnv) {\r\n\t\t\treturn __facade_invokeChain__(newRequest, newEnv, ctx, dispatch, tail);\r\n\t\t},\r\n\t};\r\n\treturn head(request, env, ctx, middlewareCtx);\r\n}\r\n\r\nexport function __facade_invoke__(\r\n\trequest: IncomingRequest,\r\n\tenv: any,\r\n\tctx: ExecutionContext,\r\n\tdispatch: Dispatcher,\r\n\tfinalMiddleware: Middleware\r\n): Awaitable<Response> {\r\n\treturn __facade_invokeChain__(request, env, ctx, dispatch, [\r\n\t\t...__facade_middleware__,\r\n\t\tfinalMiddleware,\r\n\t]);\r\n}\r\n"],
  "mappings": "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CA,gBACA,QACA,eACA,iBACA,sBACA,QACA,OACA,QACA,OACA,kBACA,kBACA,OACA,QACA,SACA,UACA,QACA,YACA,gBACA,YACA,WACAC,SACA,SACA,MACA,UACA,SACA,SACA,SACA,QACA,WACA,QACA,SACA,SACA,QACA,WACA,QACA,YACA,YACA,SACA,cACA,UACA,eACA,WACA,eACA,iBACA,mBACA,oBACA,OACA,kBACA,WACA,4BACA,2BACA,eACA,aACA,cACA,iBACA,UACA,OACA,gBAEI,UA8GC;AAnOP,IAAAC,gBAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAAC;AAAA;AACA;AACA,IAAM,gBAAgB,WAAW,SAAS;AACnC,IAAM,mBAAmB,cAAc;AACvC,KAAM,EAAE,MAAM,UAAU,aAAa;AAAA,MAC1C;AAAA,IACF;AACA,IAAM,eAAe,IAAI,QAAa;AAAA,MACpC,KAAK,cAAc;AAAA,MACnB;AAAA,MACA;AAAA,IACF,CAAC;AACM,KAAM;AAAA,MACX;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA,QAAAH;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MA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AA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAC5D;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,EAAY;AAAA,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",
  "names": ["init_performance", "init_performance", "PerformanceMark", "init_performance", "init_performance", "init_performance", "init_performance", "clear", "count", "countReset", "createTask", "debug", "dir", "dirxml", "error", "group", "groupCollapsed", "groupEnd", "info", "log", "profile", "profileEnd", "table", "time", "timeEnd", "timeLog", "timeStamp", "trace", "warn", "init_console", "init_performance", "init_console", "init_performance", "hrtime", "init_performance", "init_performance", "dir", "x", "env", "count", "init_performance", "init_performance", "init_performance", "cwd", "hrtime", "assert", "init_process", "init_performance", "init_process", "init_performance", "init_performance", "a", "d", "t", "e", "n", "m", "r", "v", "i", "s", "u", "p", "S", "O", "b", "M", "f", "l", "$", "y", "g", "D", "o", "c", "h", "init_performance", "init_performance", "init_performance", "init_performance", "init_performance", "init_performance", "init_performance", "context", "init_performance", "init_performance", "init_performance", "init_performance", "key", "key2", "init_performance", "decoder", "url", "v", "a", "url", "key", "key", "raw", "text", "init_performance", "context", "v", "key", "v2", "text", "object", "init_performance", "init_performance", "p", "m", "clone", "app", "url", "env", "context", "init_performance", "init_performance", "init_performance", "a", "b", "context", "init_performance", "m", "key", "map", "a", "b", "p", "m", "init_performance", "init_performance", "init_performance", "init_performance", "init_performance", "Node", "m", "p", "key", "v", "a", "b", "Node", "Hono", "init_performance", "set", "key", "init_performance", "init_performance", "init_performance", "init_performance", "lt", "S", "vt", "or", "U", "ne", "on", "gt", "Xt", "_t", "dr", "kn", "Un", "init_performance", "is", "init_performance", "message", "config", "p", "init_performance", "init_performance", "init_performance", "init_performance", "init_performance", "init_performance", "table", "config", "init_performance", "init_performance", "init_performance", "init_performance", "init_performance", "init_performance", "config", "table", "init_performance", "init_performance", "table", "init_performance", "char", "value", "startFrom", "array", "config", "as", "table", "ref", "actions", "v", "a", "is", "table", "config", "init_performance", "sql", "init_performance", "init_performance", "version", "version", "otel", "rawTracer", "init_performance", "init_performance", "table", "is", "config", "p", "decoder", "encoder", "param", "sql", "raw", "placeholder", "name", "encoder", "SQL", "p", "is", "name", "table", "key", "is", "is", "config", "is", "init_performance", "result", "decoder", "is", "key", "table", "table", "is", "a", "b", "init_performance", "init_performance", "init_performance", "init_performance", "init_performance", "table", "bigint", "a", "b", "config", "init_performance", "table", "a", "b", "config", "init_performance", "table", "init_performance", "config", "table", "a", "b", "init_performance", "table", "init_performance", "table", "config", "a", "b", "init_performance", "init_performance", "table", "a", "b", "config", "init_performance", "table", "init_performance", "table", "init_performance", "table", "init_performance", "table", "a", "b", "config", "init_performance", "table", "config", "init_performance", "table", "config", "init_performance", "table", "a", "b", "config", "init_performance", "table", "init_performance", "table", "init_performance", "table", "config", "a", "b", "init_performance", "table", "x", "a", "b", "config", "init_performance", "init_performance", "hex", "x", "table", "a", "b", "config", "init_performance", "table", "config", "init_performance", "table", "init_performance", "table", "init_performance", "table", "init_performance", "config", "table", "a", "b", "init_performance", "table", "config", "time", "a", "b", "init_performance", "table", "config", "a", "b", "init_performance", "table", "init_performance", "config", "table", "a", "b", "init_performance", "config", "table", "a", "b", "init_performance", "config", "table", "v", "a", "b", "init_performance", "config", "table", "a", "b", "init_performance", "config", "table", "v", "a", "b", "bigint", "time", "name", "table", "init_performance", "it", "is", "table", "config", "init_performance", "config", "table", "init_performance", "init_performance", "init_performance", "key", "table", "init_performance", "message", "init_performance", "init_performance", "is", "gt", "v", "init_performance", "table", "config", "gt", "is", "key", "relations", "primaryKey", "table", "config", "is", "decoder", "init_performance", "config", "table", "set", "is", "select", "encoder", "sql", "key", "queryConfig", "joinOn", "field", "init_performance", "init_performance", "config", "is", "key", "table", "on", "it", "is", "as", "self", "on", "table", "is", "table", "init_performance", "table", "is", "config", "it", "init_performance", "init_performance", "table", "set", "is", "on", "key", "tableName", "init_performance", "init_performance", "table", "config", "init_performance", "sql", "self", "as", "on", "table", "config", "init_performance", "init_performance", "_key", "sql", "encoder", "b", "init_performance", "cache", "is", "sql", "config", "cache", "sql", "target", "p", "res", "config", "instance", "drizzle", "env", "url", "sql", "init_performance", "init_performance", "callback", "nextTick", "salt", "unknown", "hash", "string", "b", "off", "lr", "S", "key", "err", "crypto", "init_performance", "_default", "base64", "base64url", "bigint", "boolean", "_catch", "cidrv4", "cidrv6", "config", "core_exports", "cuid", "cuid2", "date", "decode", "decodeAsync", "e164", "email", "emoji", "encode", "encodeAsync", "_enum", "guid", "hash", "hex", "hostname", "ipv4", "ipv6", "json", "ksuid", "nanoid", "_null", "nullish", "number", "parse", "parseAsync", "safeDecode", "safeDecodeAsync", "safeEncode", "safeEncodeAsync", "safeParse", "safeParseAsync", "string", "ulid", "_undefined", "union", "uuid", "_void", "xid", "init_performance", "core_exports", "_emoji", "_null", "_undefined", "config", "version", "init_performance", "init_performance", "initializer", "config", "init_performance", "init_performance", "assert", "init_performance", "assert", "v", "array", "set", "object", "key", "a", "b", "Class", "x", "message", "config", "base64", "base64url", "hex", "error", "issue", "a", "b", "config", "init_performance", "init_performance", "bigint", "boolean", "date", "domain", "integer", "time", "uuid", "init_performance", "uuid", "version", "domain", "date", "time", "bigint", "integer", "boolean", "inst", "integer", "result", "init_performance", "x", "line", "init_performance", "version", "version", "checks", "checkResult", "canary", "result", "_", "v", "uuid", "url", "date", "time", "inst", "base64", "boolean", "bigint", "key", "r", "desc", "isObject", "allowsEval", "config", "p", "results", "map", "left", "right", "a", "b", "keyResult", "valueResult", "output", "x", "init_performance", "init_performance", "error", "parsedType", "issue", "init_performance", "error", "parsedType", "issue", "init_performance", "count", "error", "parsedType", "issue", "init_performance", "error", "parsedType", "issue", "init_performance", "error", "parsedType", "issue", "init_performance", "error", "parsedType", "issue", "init_performance", "error", "parsedType", "issue", "init_performance", "error", "issue", "init_performance", "parsedType", "error", "issue", "init_performance", "error", "parsedType", "issue", "init_performance", "error", "parsedType", "issue", "init_performance", "error", "parsedType", "issue", "init_performance", "error", "parsedType", "issue", "init_performance", "error", "parsedType", "issue", "init_performance", "error", "parsedType", "issue", "init_performance", "error", "parsedType", "issue", "init_performance", "error", "parsedType", "issue", "init_performance", "parsedType", "error", "issue", "init_performance", "error", "parsedType", "issue", "init_performance", "error", "parsedType", "issue", "init_performance", "parsedType", "error", "issue", "init_performance", "init_performance", "error", "parsedType", "issue", "init_performance", "error", "parsedType", "issue", "init_performance", "parsedType", "text", "number", "error", "issue", "init_performance", "error", "parsedType", "issue", "init_performance", "error", "parsedType", "issue", "init_performance", "error", "parsedType", "issue", "init_performance", "error", "parsedType", "issue", "init_performance", "error", "parsedType", "issue", "init_performance", "error", "parsedType", "issue", "init_performance", "error", "parsedType", "issue", "init_performance", "error", "parsedType", "issue", "init_performance", "count", "error", "parsedType", "issue", "init_performance", "error", "parsedType", "issue", "init_performance", "error", "parsedType", "issue", "init_performance", "error", "parsedType", "issue", "init_performance", "error", "parsedType", "issue", "init_performance", "parsedType", "error", "issue", "init_performance", "init_performance", "error", "parsedType", "issue", "init_performance", "error", "parsedType", "issue", "init_performance", "error", "parsedType", "issue", "init_performance", "error", "parsedType", "issue", "init_performance", "error", "parsedType", "issue", "init_performance", "error", "parsedType", "issue", "init_performance", "p", "init_performance", "Class", "_emoji", "_undefined", "_null", "Class", "v", "issue", "codec", "init_performance", "json", "key", "v", "x", "a", "b", "file", "m", "id", "schema", "params", "gen", "init_performance", "init_performance", "init_performance", "date", "datetime", "duration", "time", "init_performance", "datetime", "date", "time", "duration", "init_performance", "init_performance", "initializer", "issue", "issues", "parse", "parseAsync", "safeParse", "safeParseAsync", "encode", "decode", "encodeAsync", "decodeAsync", "safeEncode", "safeDecode", "safeEncodeAsync", "safeDecodeAsync", "def", "parse", "safeParse", "parseAsync", "safeParseAsync", "encode", "decode", "encodeAsync", "decodeAsync", "safeEncode", "safeDecode", "safeEncodeAsync", "safeDecodeAsync", "check", "union", "_default", "_catch", "_emoji", "datetime", "date", "time", "duration", "string", "email", "guid", "uuid", "emoji", "nanoid", "cuid", "cuid2", "ulid", "xid", "ksuid", "ipv4", "ipv6", "cidrv4", "cidrv6", "base64", "base64url", "e164", "hostname", "hex", "hash", "enc", "number", "boolean", "bigint", "_undefined", "_null", "_void", "date", "_enum", "union", "v", "issue", "output", "nullish", "_default", "_catch", "json", "union", "string", "number", "boolean", "_null", "init_performance", "map", "config", "ZodFirstPartyTypeKind", "bigint", "boolean", "date", "number", "string", "init_performance", "string", "number", "boolean", "bigint", "date", "config", "init_performance", "init_performance", "init_performance", "table", "init_performance", "init_performance", "env", "app", "json", "init_performance", "init_performance", "init_performance", "init_performance", "init_performance", "encodeBase64", "decodeBase64", "decode", "decodeBase64", "encode", "encodeBase64", "init_performance", "message", "message", "init_performance", "hash", "key", "init_performance", "init_performance", "key", "init_performance", "init_performance", "init_performance", "key", "init_performance", "init_performance", "init_performance", "init_performance", "init_performance", "key", "key", "cached", "hash", "decode", "init_performance", "key", "init_performance", "init_performance", "init_performance", "init_performance", "hash", "init_performance", "key", "key", "key", "decode", "key", "init_performance", "init_performance", "init_performance", "date", "init_performance", "jwt", "key", "init_performance", "init_performance", "init_performance", "key", "key", "encode", "key", "init_performance", "key", "init_performance", "auth", "eq", "Hono", "email", "exists", "hash", "crypto", "dayjs", "gt", "init_performance", "init_performance", "requireAuth", "userRoles", "Hono", "requireAuth", "email", "exists", "hash", "init_performance", "init_performance", "import_dayjs", "crypto", "init_performance", "init_performance", "env", "email", "eq2", "crypto", "dayjs", "Hono", "email", "init_performance", "Hono", "Hono", "init_performance", "env", "init_performance", "env", "error", "init_performance", "env", "env"]
}
